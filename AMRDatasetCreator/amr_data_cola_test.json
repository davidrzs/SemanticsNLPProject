[["# ::snt Bill whistled past the house.\n# ::tokens [\"Bill\", \"whistled\", \"past\", \"the\", \"house\", \".\"]\n# ::lemmas [\"Bill\", \"whistle\", \"past\", \"the\", \"house\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2 4-1.2.1\n(w / whistle-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bill\"~e.0))\n   :path (p2 / past~e.2\n             :op1 (h / house~e.4)))", [[0, 4], [5, 13], [14, 18], [19, 22], [23, 28], [28, 29]]], ["# ::snt The car honked its way down the road.\n# ::tokens [\"The\", \"car\", \"honked\", \"its\", \"way\", \"down\", \"the\", \"road\", \".\"]\n# ::lemmas [\"the\", \"car\", \"honk\", \"its\", \"way\", \"down\", \"the\", \"road\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2 5-1.2.1 7-1.2.1.1\n(h / honk-01~e.2\n   :ARG0 (c / car~e.1)\n   :path (w / way~e.4\n            :direction (d / down~e.5\n                          :op1 (r / road~e.7))))", [[0, 3], [4, 7], [8, 14], [15, 18], [19, 22], [23, 27], [28, 31], [32, 36], [36, 37]]], ["# ::snt Bill pushed Harry off the sofa.\n# ::tokens [\"Bill\", \"pushed\", \"Harry\", \"off\", \"the\", \"sofa\", \".\"]\n# ::lemmas [\"Bill\", \"push\", \"Harry\", \"off\", \"the\", \"sofa\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1 3-1.3 5-1.3.1\n(p / push-01~e.1\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Bill\"~e.0))\n   :ARG1 (p3 / person\n             :name (n2 / name\n                       :op1 \"Harry\"~e.2))\n   :ARG2 (o / off~e.3\n            :op1 (s / sofa~e.5)))", [[0, 4], [5, 11], [12, 17], [18, 21], [22, 25], [26, 30], [30, 31]]], ["# ::snt the kittens yawned awake and played.\n# ::tokens [\"the\", \"kittens\", \"yawned\", \"awake\", \"and\", \"played\", \".\"]\n# ::lemmas [\"the\", \"kitten\", \"yawn\", \"awake\", \"and\", \"play\", \".\"]\n# ::alignments 1-1.1.1 2-1.1 3-1.1.2 4-1 5-1.2\n(a / and~e.4\n   :op1 (y / yawn-01~e.2\n           :ARG0 (k / kitten~e.1)\n           :time (a2 / awake-03~e.3\n                     :ARG1 k))\n   :op2 (p / play-01~e.5\n           :ARG0 k))", [[0, 3], [4, 11], [12, 18], [19, 24], [25, 28], [29, 35], [35, 36]]], ["# ::snt I demand that the more John eats, the more he pay.\n# ::tokens [\"I\", \"demand\", \"that\", \"the\", \"more\", \"John\", \"eats\", \",\", \"the\", \"more\", \"he\", \"pay\", \".\"]\n# ::lemmas [\"i\", \"demand\", \"that\", \"the\", \"more\", \"John\", \"eat\", \",\", \"the\", \"more\", \"he\", \"pay\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2.1 5-1.2.1.1.1.1.1.1 6-1.2.1.1.1 9-1.2.2 11-1.2.2.1.1\n(d / demand-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (c / correlate-91\n            :ARG1 (m / more~e.4\n                     :ARG3-of (h / have-quant-91\n                                 :ARG1 (e / eat-01~e.6\n                                          :ARG0 (p / person\n                                                   :name (n / name\n                                                            :op1 \"John\"~e.5)))))\n            :ARG2 (m2 / more~e.9\n                      :ARG3-of (h2 / have-quant-91\n                                   :ARG1 (p2 / pay-01~e.11\n                                             :ARG0 p)))))", [[0, 1], [2, 8], [9, 13], [14, 17], [18, 22], [23, 27], [28, 32], [32, 33], [34, 37], [38, 42], [43, 45], [46, 49], [49, 50]]], ["# ::snt If John eats more, keep your mouth shut tighter, OK?\n# ::tokens [\"If\", \"John\", \"eats\", \"more\", \",\", \"keep\", \"your\", \"mouth\", \"shut\", \"tighter\", \",\", \"OK\", \"?\"]\n# ::lemmas [\"if\", \"John\", \"eat\", \"more\", \",\", \"keep\", \"your\", \"mouth\", \"shut\", \"tight\", \",\", \"ok\", \"?\"]\n# ::alignments 1-1.4.1.1.1 2-1.4 3-1.3.3.2 5-1 7-1.2.1 8-1.3 9-1.3.3.1\n(k / keep-01~e.5\n   :mode imperative\n   :ARG0 (y / you\n            :part (m / mouth~e.7))\n   :ARG1 (s / shut-01~e.8\n            :ARG0 y\n            :ARG1 m\n            :ARG1-of (h / have-degree-91\n                        :ARG2 (t / tight-05~e.9\n                                 :ARG1 s)\n                        :ARG3 (m2 / more~e.3)))\n   :condition (e / eat-01~e.2\n                 :ARG0 (p / person\n                          :name (n / name\n                                   :op1 \"John\"~e.1))\n                 :quant m2)\n   :ARG1-of (o / okay-04\n               :ARG2 y)\n   :ARG1-of (r / request-confirmation-91))", [[0, 2], [3, 7], [8, 12], [13, 17], [17, 18], [19, 23], [24, 28], [29, 34], [35, 39], [40, 47], [47, 48], [49, 51], [51, 52]]], ["# ::snt His expectations are always lower than mine are.\n# ::tokens [\"His\", \"expectations\", \"are\", \"always\", \"lower\", \"than\", \"mine\", \"are\", \".\"]\n# ::lemmas [\"his\", \"expectation\", \"be\", \"always\", \"low\", \"than\", \"mine\", \"be\", \".\"]\n# ::alignments 1-1.1 3-1.5 4-1.2\n(h / have-degree-91\n   :ARG1 (e / expect-01~e.1\n            :ARG0 (h2 / he))\n   :ARG2 (l / low-04~e.4\n            :ARG1 e)\n   :ARG3 (m / more)\n   :ARG4 (e2 / expect-01\n             :ARG0 (ii / i))\n   :time (a / always~e.3))", [[0, 3], [4, 16], [17, 20], [21, 27], [28, 33], [34, 38], [39, 43], [44, 47], [47, 48]]], ["# ::snt The sooner you call, the more carefully I will word the letter.\n# ::tokens [\"The\", \"sooner\", \"you\", \"call\", \",\", \"the\", \"more\", \"carefully\", \"I\", \"will\", \"word\", \"the\", \"letter\", \".\"]\n# ::lemmas [\"the\", \"soon\", \"you\", \"call\", \",\", \"the\", \"more\", \"carefully\", \"i\", \"will\", \"word\", \"the\", \"letter\", \".\"]\n# ::alignments 1-1.1.1.1.2 2-1.1.1.1.1 3-1.1.1.1 6-1.1 7-1.2.1.2 8-1.2.1.1.1 10-1.2.1.1 12-1.2.1.1.2\n(c / correlate-91\n   :ARG1 (m / more~e.6\n            :ARG3-of (h / have-degree-91\n                        :ARG1 (c2 / call-02~e.3\n                                  :ARG0 (y / you~e.2)\n                                  :time (s / soon~e.1))\n                        :ARG2 (l / late)))\n   :ARG2 (m2 / more\n             :ARG3-of (h2 / have-degree-91\n                          :ARG1 (w / word-01~e.10\n                                   :ARG0 (ii / i~e.8)\n                                   :ARG1 (l2 / letter~e.12))\n                          :ARG2 (c3 / care-04~e.7\n                                    :ARG0 ii\n                                    :ARG1 w))))", [[0, 3], [4, 10], [11, 14], [15, 19], [19, 20], [21, 24], [25, 29], [30, 39], [40, 41], [42, 46], [47, 51], [52, 55], [56, 62], [62, 63]]], ["# ::snt The more timid he feels, the more people he interviews without asking questions of.\n# ::tokens [\"The\", \"more\", \"timid\", \"he\", \"feels\", \",\", \"the\", \"more\", \"people\", \"he\", \"interviews\", \"without\", \"asking\", \"questions\", \"of\", \".\"]\n# ::lemmas [\"the\", \"more\", \"timid\", \"he\", \"feel\", \",\", \"the\", \"more\", \"people\", \"he\", \"interview\", \"without\", \"ask\", \"question\", \"of\", \".\"]\n# ::alignments 1-1.1 2-1.1.1.1 3-1.1.1.1.1 4-1.1.1.1.2 7-1.2 10-1.2.1.1.1 12-1.2.1.1.1.2 13-1.2.1.1.1.2.3\n(c / correlate-91\n   :ARG1 (m / more~e.1\n            :ARG3-of (h / have-quant-91\n                        :ARG1 (t / timid~e.2\n                                 :domain (h2 / he~e.3)\n                                 :ARG1-of (f / feel-01~e.4\n                                             :ARG0 h2))))\n   :ARG2 (m2 / more~e.7\n             :ARG3-of (h3 / have-quant-91\n                          :ARG1 (p / person\n                                   :ARG1-of (ii / interview-01~e.10\n                                                :ARG0 h2\n                                                :manner (a / ask-01~e.12\n                                                           :polarity -\n                                                           :ARG0 h2\n                                                           :ARG1 (q / question-01~e.13\n                                                                    :ARG2 h2)))))))", [[0, 3], [4, 8], [9, 14], [15, 17], [18, 23], [23, 24], [25, 28], [29, 33], [34, 40], [41, 43], [44, 54], [55, 62], [63, 69], [70, 79], [80, 82], [82, 83]]], ["# ::snt Once Janet left, Fred became a lot crazier.\n# ::tokens [\"Once\", \"Janet\", \"left\", \",\", \"Fred\", \"became\", \"a\", \"lot\", \"crazier\", \".\"]\n# ::lemmas [\"once\", \"Janet\", \"leave\", \",\", \"Fred\", \"become\", \"a\", \"lot\", \"crazy\", \".\"]\n# ::alignments 1-1.3.1.1.1 2-1.3 4-1.1.1.1 5-1 7-1.2.2 8-1.2\n(b / become-01~e.5\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Fred\"~e.4))\n   :ARG2 (c / crazy-03~e.8\n            :ARG1 p\n            :quant (l / lot~e.7))\n   :time (l2 / leave-11~e.2\n             :ARG0 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Janet\"~e.1))))", [[0, 4], [5, 10], [11, 15], [15, 16], [17, 21], [22, 28], [29, 30], [31, 34], [35, 42], [42, 43]]], ["# ::snt If you give every senator enough opportunity, he will succumb to corruption.\n# ::tokens [\"If\", \"you\", \"give\", \"every\", \"senator\", \"enough\", \"opportunity\", \",\", \"he\", \"will\", \"succumb\", \"to\", \"corruption\", \".\"]\n# ::lemmas [\"if\", \"you\", \"give\", \"every\", \"senator\", \"enough\", \"opportunity\", \",\", \"he\", \"will\", \"succumb\", \"to\", \"corruption\", \".\"]\n# ::alignments 1-1.3.1 2-1.3 3-1.1.2 4-1.1.1.1 5-1.3.2.1.1 6-1.3.2 10-1 12-1.2\n(s / succumb-01~e.10\n   :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                        :ARG2 (s2 / senator~e.4))\n            :mod (e / every~e.3))\n   :ARG1 (c / corrupt-01~e.12\n            :ARG1 p)\n   :condition (g / give-01~e.2\n                 :ARG0 (y / you~e.1)\n                 :ARG1 (o / opportunity~e.6\n                          :ARG1-of (h2 / have-quant-91\n                                       :ARG3 (e2 / enough~e.5)))\n                 :ARG2 p))", [[0, 2], [3, 6], [7, 11], [12, 17], [18, 25], [26, 32], [33, 44], [44, 45], [46, 48], [49, 53], [54, 61], [62, 64], [65, 75], [75, 76]]], ["# ::snt The more time that any senator spends with lobbyists, the more likely he is to succumb to corruption.\n# ::tokens [\"The\", \"more\", \"time\", \"that\", \"any\", \"senator\", \"spends\", \"with\", \"lobbyists\", \",\", \"the\", \"more\", \"likely\", \"he\", \"is\", \"to\", \"succumb\", \"to\", \"corruption\", \".\"]\n# ::lemmas [\"the\", \"more\", \"time\", \"that\", \"any\", \"senator\", \"spend\", \"with\", \"lobbyist\", \",\", \"the\", \"more\", \"likely\", \"he\", \"be\", \"to\", \"succumb\", \"to\", \"corruption\", \".\"]\n# ::alignments 1-1.1 2-1.1.1.1 4-1.1.1.1.1.1.2 5-1.1.1.1.1.1.1.1 6-1.1.1.1.1 8-1.1.1.1.1.2.1 11-1.2 12-1.2.1.2 16-1.2.1.1 18-1\n(c / correlate-91~e.18\n   :ARG1 (m / more~e.1\n            :ARG3-of (h / have-quant-91\n                        :ARG1 (t / time~e.2\n                                 :ARG3-of (s / spend-02~e.6\n                                             :ARG0 (p / person\n                                                      :ARG0-of (h2 / have-org-role-91\n                                                                   :ARG2 (s2 / senator~e.5))\n                                                      :mod (a / any~e.4))\n                                             :accompanier (p2 / person\n                                                              :ARG0-of (l / lobby-01~e.8))))))\n   :ARG2 (m2 / more~e.11\n             :ARG3-of (h3 / have-degree-91\n                          :ARG1 (s3 / succumb-01~e.16\n                                    :ARG0 p\n                                    :ARG1 (c2 / corrupt-01\n                                              :ARG1 p))\n                          :ARG2 (l2 / likely-01~e.12\n                                    :ARG1 s3))))", [[0, 3], [4, 8], [9, 13], [14, 18], [19, 22], [23, 30], [31, 37], [38, 42], [43, 52], [52, 53], [54, 57], [58, 62], [63, 69], [70, 72], [73, 75], [76, 78], [79, 86], [87, 89], [90, 100], [100, 101]]], ["# ::snt Which problem does the sooner you solve, the more easily you'll satisfy the folks up at corporate headquarters?\n# ::tokens [\"Which\", \"problem\", \"does\", \"the\", \"sooner\", \"you\", \"solve\", \",\", \"the\", \"more\", \"easily\", \"you\", \"'ll\", \"satisfy\", \"the\", \"folks\", \"up\", \"at\", \"corporate\", \"headquarters\", \"?\"]\n# ::lemmas [\"which\", \"problem\", \"do\", \"the\", \"soon\", \"you\", \"solve\", \",\", \"the\", \"more\", \"easily\", \"you\", \"will\", \"satisfy\", \"the\", \"folk\", \"up\", \"at\", \"corporate\", \"headquarters\", \"?\"]\n# ::alignments 1-1.1.1.1.2 4-1.1.1.1.3 5-1.1.1.1.1 6-1.1.1.1 9-1.1 13-1.2.1.1 15-1.2.1.1.2 18-1.2.1.1.2.1.1 19-1.2.1.1.2.1\n(c / correlate-91\n   :ARG1 (m / more~e.9\n            :ARG3-of (h / have-degree-91\n                        :ARG1 (s / solve-01~e.6\n                                 :ARG0 (y / you~e.5)\n                                 :ARG1 (p / problem~e.1\n                                          :mod (a / amr-unknown))\n                                 :time (s2 / soon~e.4\n                                           :ARG2-of (h2 / have-degree-91\n                                                        :ARG1 s\n                                                        :ARG3 (m2 / more))))))\n   :ARG2 (m3 / more\n             :ARG3-of (h3 / have-degree-91\n                          :ARG1 (s3 / satisfy-01~e.13\n                                    :ARG0 y\n                                    :ARG1 (f / folk~e.15\n                                             :location (h4 / headquarters~e.19\n                                                           :mod (c2 / corporate~e.18))))\n                          :ARG2 (e / easy-05\n                                   :ARG1 s3))))", [[0, 5], [6, 13], [14, 18], [19, 22], [23, 29], [30, 33], [34, 39], [39, 40], [41, 44], [45, 49], [50, 56], [57, 60], [60, 63], [64, 71], [72, 75], [76, 81], [82, 84], [85, 87], [88, 97], [98, 110], [110, 111]]], ["# ::snt Which problem do you think that the sooner you solve, the quicker you'll be able to tell the folks up at corporate headquarters to buzz off?\n# ::tokens [\"Which\", \"problem\", \"do\", \"you\", \"think\", \"that\", \"the\", \"sooner\", \"you\", \"solve\", \",\", \"the\", \"quicker\", \"you\", \"'ll\", \"be\", \"able\", \"to\", \"tell\", \"the\", \"folks\", \"up\", \"at\", \"corporate\", \"headquarters\", \"to\", \"buzz\", \"off\", \"?\"]\n# ::lemmas [\"which\", \"problem\", \"do\", \"you\", \"think\", \"that\", \"the\", \"soon\", \"you\", \"solve\", \",\", \"the\", \"quick\", \"you\", \"will\", \"be\", \"able\", \"to\", \"tell\", \"the\", \"folk\", \"up\", \"at\", \"corporate\", \"headquarter\", \"to\", \"buzz\", \"off\", \"?\"]\n# ::alignments 1-1.2.1.1.1.2 3-1.1 4-1 7-1.2.1.1.1.3 9-1.2.1.1.1 12-1.2.2.1.2 18-1.2.2.1.1.1 20-1.2.2.1.1.1.2.1 23-1.2.2.1.1.1.2.2.1 24-1.2.2.1.1.1.2.2 26-1.2.2.1.1.1.2\n(t / think-01~e.4\n   :ARG0 (y / you~e.3)\n   :ARG1 (c / correlate-91\n            :ARG1 (m / more\n                     :ARG3-of (h / have-degree-91\n                                 :ARG1 (s / solve-01~e.9\n                                          :ARG0 y\n                                          :ARG1 (p / problem~e.1\n                                                   :mod (a / amr-unknown))\n                                          :time (s2 / soon~e.7\n                                                    :ARG2-of (h2 / have-degree-91\n                                                                 :ARG1 s\n                                                                 :ARG3 (m2 / more))))))\n            :ARG2 (m3 / more\n                      :ARG3-of (h3 / have-degree-91\n                                   :ARG1 (p2 / possible-01\n                                             :ARG1 (t2 / tell-01~e.18\n                                                       :ARG0 y\n                                                       :ARG1 (b / buzz-off-03~e.26\n                                                                :ARG0 (f / folk~e.20)\n                                                                :location (h4 / headquarters~e.24\n                                                                              :mod (c2 / corporate~e.23)))\n                                                       :ARG2 f))\n                                   :ARG2 (q / quick-02~e.12\n                                            :ARG1 t2)))))", [[0, 5], [6, 13], [14, 16], [17, 20], [21, 26], [27, 31], [32, 35], [36, 42], [43, 46], [47, 52], [52, 53], [54, 57], [58, 65], [66, 69], [69, 72], [73, 75], [76, 80], [81, 83], [84, 88], [89, 92], [93, 98], [99, 101], [102, 104], [105, 114], [115, 127], [128, 130], [131, 135], [136, 139], [139, 140]]], ["# ::snt Louise is not happy, is she?\n# ::tokens [\"Louise\", \"is\", \"not\", \"happy\", \",\", \"is\", \"she\", \"?\"]\n# ::lemmas [\"Louise\", \"be\", \"not\", \"happy\", \",\", \"be\", \"she\", \"?\"]\n# ::alignments 0-1.2.1.1 2-1.1 3-1\n(h / happy-01~e.3\n   :polarity -~e.2\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Louise\"~e.0))\n   :ARG1-of (r / request-confirmation-91))", [[0, 6], [7, 9], [10, 13], [14, 19], [19, 20], [21, 23], [24, 27], [27, 28]]], ["# ::snt He can just not have been working.\n# ::tokens [\"He\", \"can\", \"just\", \"not\", \"have\", \"been\", \"working\", \".\"]\n# ::lemmas [\"he\", \"can\", \"just\", \"not\", \"have\", \"be\", \"work\", \".\"]\n# ::alignments 0-1.1.2 2-1.1.3 3-1.1.1 6-1.1\n(p / possible-01\n   :ARG1 (w / work-01~e.6\n            :polarity -~e.3\n            :ARG0 (h / he~e.0)\n            :mod (j / just~e.2)))", [[0, 2], [3, 6], [7, 11], [12, 15], [16, 20], [21, 25], [26, 33], [33, 34]]], ["# ::snt Which problem do you wonder whether John said Mary solved?\n# ::tokens [\"Which\", \"problem\", \"do\", \"you\", \"wonder\", \"whether\", \"John\", \"said\", \"Mary\", \"solved\", \"?\"]\n# ::lemmas [\"which\", \"problem\", \"do\", \"you\", \"wonder\", \"whether\", \"John\", \"say\", \"Mary\", \"solve\", \"?\"]\n# ::alignments 1-1.2.1.2 3-1.1 4-1 6-1.2.1.1.1.1 7-1.2.1.3 9-1.2.1\n(w / wonder-01~e.4\n   :ARG0 (y / you~e.3)\n   :ARG1 (t / truth-value\n            :polarity-of (s / solve-01~e.9\n                            :ARG0 (p / person\n                                     :name (n / name\n                                              :op1 \"John\"~e.6))\n                            :ARG1 (p2 / problem~e.1\n                                      :mod (a / amr-unknown))\n                            :ARG1-of (s2 / say-01~e.7\n                                         :ARG0 p))))", [[0, 5], [6, 13], [14, 16], [17, 20], [21, 27], [28, 35], [36, 40], [41, 45], [46, 50], [51, 57], [57, 58]]], ["# ::snt They could have left.\n# ::tokens [\"They\", \"could\", \"have\", \"left\", \".\"]\n# ::lemmas [\"they\", \"could\", \"have\", \"leave\", \".\"]\n# ::alignments 0-1.1.1 3-1.1\n(p / possible-01\n   :ARG1 (l / leave-11~e.3\n            :ARG0 (t / they~e.0)))", [[0, 4], [5, 10], [11, 15], [16, 20], [20, 21]]], ["# ::snt Have they could left?\n# ::tokens [\"Have\", \"they\", \"could\", \"left\", \"?\"]\n# ::lemmas [\"have\", \"they\", \"could\", \"leave\", \"?\"]\n# ::alignments 1-1.2.1 3-1.2\n(p / possible-01\n   :polarity (a / amr-unknown)\n   :ARG1 (l / leave-11~e.3\n            :ARG0 (t / they~e.1)))", [[0, 4], [5, 9], [10, 15], [16, 20], [20, 21]]], ["# ::snt John eats not chocolate.\n# ::tokens [\"John\", \"eats\", \"not\", \"chocolate\", \".\"]\n# ::lemmas [\"John\", \"eat\", \"not\", \"chocolate\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1 3-1.2\n(e / eat-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (c / chocolate~e.3\n            :polarity -~e.2))", [[0, 4], [5, 9], [10, 13], [14, 23], [23, 24]]], ["# ::snt Has John seen Mary?\n# ::tokens [\"Has\", \"John\", \"seen\", \"Mary\", \"?\"]\n# ::lemmas [\"have\", \"John\", \"see\", \"Mary\", \"?\"]\n# ::alignments 1-1.1.1.1 2-1 3-1.2.1.1\n(s / see-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.1))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Mary\"~e.3))\n   :polarity (a / amr-unknown))", [[0, 3], [4, 8], [9, 13], [14, 18], [18, 19]]], ["# ::snt Mickey looked it up.\n# ::tokens [\"Mickey\", \"looked\", \"it\", \"up\", \".\"]\n# ::lemmas [\"Mickey\", \"look\", \"it\", \"up\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2\n(l / look-up-05~e.1\n   :ARG0 (m / Mickey~e.0)\n   :ARG1 (ii / it~e.2))", [[0, 6], [7, 13], [14, 16], [17, 19], [19, 20]]], ["# ::snt Mickey looked up him and her.\n# ::tokens [\"Mickey\", \"looked\", \"up\", \"him\", \"and\", \"her\", \".\"]\n# ::lemmas [\"Mickey\", \"look\", \"up\", \"he\", \"and\", \"she\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1 4-1.2 5-1.2.2\n(l / look-up-05~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mickey\"~e.0))\n   :ARG1 (a / and~e.4\n            :op1 (h / he~e.3)\n            :op2 (s / she~e.5)))", [[0, 6], [7, 13], [14, 16], [17, 20], [21, 24], [25, 28], [28, 29]]], ["# ::snt He taught the children.\n# ::tokens [\"He\", \"taught\", \"the\", \"children\", \".\"]\n# ::lemmas [\"he\", \"teach\", \"the\", \"child\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2\n(t / teach-01~e.1\n   :ARG0 (h / he~e.0)\n   :ARG2 (c / child~e.3))", [[0, 2], [3, 9], [10, 13], [14, 22], [22, 23]]], ["# ::snt John proved to be a great linguist.\n# ::tokens [\"John\", \"proved\", \"to\", \"be\", \"a\", \"great\", \"linguist\", \".\"]\n# ::lemmas [\"John\", \"prove\", \"to\", \"be\", \"a\", \"great\", \"linguist\", \".\"]\n# ::alignments 0-1.1.2.1.1 1-1 5-1.1.1 6-1.1\n(p / prove-01~e.1\n   :ARG1 (l / linguist~e.6\n            :mod (g / great~e.5)\n            :domain (p2 / person\n                        :name (n / name\n                                 :op1 \"John\"~e.0))))", [[0, 4], [5, 11], [12, 14], [15, 17], [18, 19], [20, 25], [26, 34], [34, 35]]], ["# ::snt There is too likely to be a riot for there to be a serious discussion of the issues.\n# ::tokens [\"There\", \"is\", \"too\", \"likely\", \"to\", \"be\", \"a\", \"riot\", \"for\", \"there\", \"to\", \"be\", \"a\", \"serious\", \"discussion\", \"of\", \"the\", \"issues\", \".\"]\n# ::lemmas [\"there\", \"be\", \"too\", \"likely\", \"to\", \"be\", \"a\", \"riot\", \"for\", \"there\", \"to\", \"be\", \"a\", \"serious\", \"discussion\", \"of\", \"the\", \"issue\", \".\"]\n# ::alignments 2-1.2.2 3-1 7-1.1 13-1.2.3.2 14-1.2.3 17-1.2.3.1\n(l / likely-01~e.3\n   :ARG1 (r / riot-01~e.7)\n   :ARG2-of (h / have-degree-91\n               :ARG1 r\n               :ARG3 (t / too~e.2)\n               :ARG6 (d / discuss-01~e.14\n                        :ARG1 (ii / issue-02~e.17)\n                        :ARG1-of (s / serious-02~e.13))))", [[0, 5], [6, 8], [9, 12], [13, 19], [20, 22], [23, 25], [26, 27], [28, 32], [33, 36], [37, 42], [43, 45], [46, 48], [49, 50], [51, 58], [59, 69], [70, 72], [73, 76], [77, 83], [83, 84]]], ["# ::snt John is willing.\n# ::tokens [\"John\", \"is\", \"willing\", \".\"]\n# ::lemmas [\"John\", \"be\", \"willing\", \".\"]\n# ::alignments 0-1.1.1.1 2-1\n(w / will-02~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0)))", [[0, 4], [5, 7], [8, 15], [15, 16]]], ["# ::snt Bill seems to be obnoxious, but I don't think that Sam seems.\n# ::tokens [\"Bill\", \"seems\", \"to\", \"be\", \"obnoxious\", \",\", \"but\", \"I\", \"do\", \"n't\", \"think\", \"that\", \"Sam\", \"seems\", \".\"]\n# ::lemmas [\"Bill\", \"seem\", \"to\", \"be\", \"obnoxious\", \",\", \"but\", \"i\", \"do\", \"not\", \"think\", \"that\", \"Sam\", \"seem\", \".\"]\n# ::alignments 0-1.1.1.1.1.1 1-1.1 4-1.1.1 6-1 7-1.2.2 10-1.2 12-1.2.3.1.1.1 13-1.2.3\n(c / contrast-01~e.6\n   :ARG1 (s / seem-01~e.1\n            :ARG1 (o / obnoxious~e.4\n                     :domain (p / person\n                                :name (n / name\n                                         :op1 \"Bill\"~e.0))))\n   :ARG2 (t / think-01~e.10\n            :polarity -\n            :ARG0 (ii / i~e.7)\n            :ARG1 (s2 / seem-01~e.13\n                      :ARG1 (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Sam\"~e.12)))))", [[0, 4], [5, 10], [11, 13], [14, 16], [17, 26], [26, 27], [28, 31], [32, 33], [34, 36], [36, 39], [40, 45], [46, 50], [51, 54], [55, 60], [60, 61]]], ["# ::snt Bill seems to be obnoxious, but I don't think that Sam appears.\n# ::tokens [\"Bill\", \"seems\", \"to\", \"be\", \"obnoxious\", \",\", \"but\", \"I\", \"do\", \"n't\", \"think\", \"that\", \"Sam\", \"appears\", \".\"]\n# ::lemmas [\"Bill\", \"seem\", \"to\", \"be\", \"obnoxious\", \",\", \"but\", \"i\", \"do\", \"not\", \"think\", \"that\", \"Sam\", \"appear\", \".\"]\n# ::alignments 0-1.1.1.1.1.1 1-1.1 4-1.1.1 6-1 7-1.2.2 10-1.2 12-1.2.3.1.1.1 13-1.2.3\n(c / contrast-01~e.6\n   :ARG1 (s / seem-01~e.1\n            :ARG1 (o / obnoxious~e.4\n                     :domain (p / person\n                                :name (n / name\n                                         :op1 \"Bill\"~e.0))))\n   :ARG2 (t / think-01~e.10\n            :polarity -\n            :ARG0 (ii / i~e.7)\n            :ARG1 (a / appear-01~e.13\n                     :ARG1 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Sam\"~e.12)))))", [[0, 4], [5, 10], [11, 13], [14, 16], [17, 26], [26, 27], [28, 31], [32, 33], [34, 36], [36, 39], [40, 45], [46, 50], [51, 54], [55, 62], [62, 63]]], ["# ::snt I believe John with all my heart is a fine person.\n# ::tokens [\"I\", \"believe\", \"John\", \"with\", \"all\", \"my\", \"heart\", \"is\", \"a\", \"fine\", \"person\", \".\"]\n# ::lemmas [\"i\", \"believe\", \"John\", \"with\", \"all\", \"my\", \"heart\", \"be\", \"a\", \"fine\", \"person\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1.1 4-1.1.1.1 6-1.1.1 9-1.2.2 10-1.2\n(b / believe-01~e.1\n   :ARG0 (ii / i~e.0\n             :part (h / heart~e.6\n                      :mod (a / all~e.4)))\n   :ARG1 (p / person~e.10\n            :name (n / name\n                     :op1 \"John\"~e.2)\n            :ARG1-of (f / fine-04~e.9)))", [[0, 1], [2, 9], [10, 14], [15, 19], [20, 23], [24, 26], [27, 32], [33, 35], [36, 37], [38, 42], [43, 49], [49, 50]]], ["# ::snt We would hate John to win.\n# ::tokens [\"We\", \"would\", \"hate\", \"John\", \"to\", \"win\", \".\"]\n# ::lemmas [\"we\", \"would\", \"hate\", \"John\", \"to\", \"win\", \".\"]\n# ::alignments 0-1.1 2-1 3-1.2.1.1.1 5-1.2\n(h / hate-01~e.2\n   :ARG0 (w / we~e.0)\n   :ARG1 (w2 / win-01~e.5\n             :ARG0 (p / person\n                      :name (n / name\n                               :op1 \"John\"~e.3))))", [[0, 2], [3, 8], [9, 13], [14, 18], [19, 21], [22, 25], [25, 26]]], ["# ::snt I would want for John to win.\n# ::tokens [\"I\", \"would\", \"want\", \"for\", \"John\", \"to\", \"win\", \".\"]\n# ::lemmas [\"i\", \"would\", \"want\", \"for\", \"John\", \"to\", \"win\", \".\"]\n# ::alignments 0-1.1 2-1 4-1.2.1.1.1 6-1.2\n(w / want-01~e.2\n   :ARG0 (ii / i~e.0)\n   :ARG1 (w2 / win-01~e.6\n             :ARG0 (p / person\n                      :name (n / name\n                               :op1 \"John\"~e.4))))", [[0, 1], [2, 7], [8, 12], [13, 16], [17, 21], [22, 24], [25, 28], [28, 29]]], ["# ::snt The chair abuts the wall.\n# ::tokens [\"The\", \"chair\", \"abuts\", \"the\", \"wall\", \".\"]\n# ::lemmas [\"the\", \"chair\", \"abut\", \"the\", \"wall\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2\n(a / abut-01~e.2\n   :ARG0 (c / chair~e.1)\n   :ARG1 (w / wall~e.4))", [[0, 3], [4, 9], [10, 15], [16, 19], [20, 24], [24, 25]]], ["# ::snt The cup emptied of water.\n# ::tokens [\"The\", \"cup\", \"emptied\", \"of\", \"water\", \".\"]\n# ::lemmas [\"the\", \"cup\", \"empty\", \"of\", \"water\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2\n(e / empty-01~e.2\n   :ARG1 (c / cup~e.1)\n   :ARG2 (w / water~e.4))", [[0, 3], [4, 7], [8, 15], [16, 18], [19, 24], [24, 25]]], ["# ::snt the bottle drained empty of liquid.\n# ::tokens [\"the\", \"bottle\", \"drained\", \"empty\", \"of\", \"liquid\", \".\"]\n# ::lemmas [\"the\", \"bottle\", \"drain\", \"empty\", \"of\", \"liquid\", \".\"]\n# ::alignments 1-1.1 2-1 3-1.1.1 5-1.1.1.1\n(d / drain-01~e.2\n   :ARG1 (b / bottle~e.1\n            :ARG1-of (e / empty-02~e.3\n                        :ARG2 (l / liquid~e.5))))", [[0, 3], [4, 10], [11, 18], [19, 24], [25, 27], [28, 34], [34, 35]]], ["# ::snt The tub leaked water empty.\n# ::tokens [\"The\", \"tub\", \"leaked\", \"water\", \"empty\", \".\"]\n# ::lemmas [\"the\", \"tub\", \"leak\", \"water\", \"empty\", \".\"]\n# ::alignments 1-1.1 2-1 3-1.2 4-1.2.1\n(l / leak-01~e.2\n   :ARG0 (t / tub~e.1)\n   :ARG1 (w / water~e.3\n            :ARG1-of (e / empty-02~e.4)))", [[0, 3], [4, 7], [8, 14], [15, 20], [21, 26], [26, 27]]], ["# ::snt Spray the paint onto the whole wall completely.\n# ::tokens [\"Spray\", \"the\", \"paint\", \"onto\", \"the\", \"whole\", \"wall\", \"completely\", \".\"]\n# ::lemmas [\"spray\", \"the\", \"paint\", \"onto\", \"the\", \"whole\", \"wall\", \"completely\", \".\"]\n# ::alignments 0-1 2-1.3 5-1.4.1 6-1.4 7-1.5\n(s / spray-01~e.0\n   :mode imperative\n   :ARG0 (y / you)\n   :ARG1 (p / paint~e.2)\n   :ARG2 (w / wall~e.6\n            :mod (w2 / whole~e.5))\n   :ARG1-of (c / complete-02~e.7))", [[0, 5], [6, 9], [10, 15], [16, 20], [21, 24], [25, 30], [31, 35], [36, 46], [46, 47]]], ["# ::snt What John did to the whole wall was hit it.\n# ::tokens [\"What\", \"John\", \"did\", \"to\", \"the\", \"whole\", \"wall\", \"was\", \"hit\", \"it\", \".\"]\n# ::lemmas [\"what\", \"John\", \"do\", \"to\", \"the\", \"whole\", \"wall\", \"be\", \"hit\", \"it\", \".\"]\n# ::alignments 1-1.1.1.1.1 2-1.1 5-1.1.2.1 6-1.1.2 8-1.2\n(t / thing\n   :ARG1-of (d / do-02~e.2\n               :ARG0 (p / person\n                        :name (n / name\n                                 :op1 \"John\"~e.1))\n               :ARG2 (w / wall~e.6\n                        :mod (w2 / whole~e.5)))\n   :ARG1-of (h / hit-01~e.8\n               :ARG0 p\n               :ARG2 w))", [[0, 4], [5, 9], [10, 13], [14, 16], [17, 20], [21, 26], [27, 31], [32, 35], [36, 39], [40, 42], [42, 43]]], ["# ::snt Yes, too much so.\n# ::tokens [\"Yes\", \",\", \"too\", \"much\", \"so\", \".\"]\n# ::lemmas [\"yes\", \",\", \"too\", \"much\", \"so\", \".\"]\n# ::alignments 2-1.2 3-1.1\n(h / have-degree-91\n   :ARG2 (m / much~e.3)\n   :ARG3 (t / too~e.2))", [[0, 3], [3, 4], [5, 8], [9, 13], [14, 16], [16, 17]]], ["# ::snt I convinced John that it was late and Bill that it was early.\n# ::tokens [\"I\", \"convinced\", \"John\", \"that\", \"it\", \"was\", \"late\", \"and\", \"Bill\", \"that\", \"it\", \"was\", \"early\", \".\"]\n# ::lemmas [\"i\", \"convince\", \"John\", \"that\", \"it\", \"be\", \"late\", \"and\", \"Bill\", \"that\", \"it\", \"be\", \"early\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1.1.1 4-1.3.1 7-1.2 8-1.2.2.1.1 12-1.3\n(c / convince-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (a / and~e.7\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"John\"~e.2))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Bill\"~e.8)))\n   :ARG2 (e / early~e.12\n            :domain (ii2 / it~e.4)))", [[0, 1], [2, 11], [12, 16], [17, 21], [22, 24], [25, 28], [29, 33], [34, 37], [38, 42], [43, 47], [48, 50], [51, 54], [55, 60], [60, 61]]], ["# ::snt John is impressed as pompous.\n# ::tokens [\"John\", \"is\", \"impressed\", \"as\", \"pompous\", \".\"]\n# ::lemmas [\"John\", \"be\", \"impressed\", \"as\", \"pompous\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1 4-1.1\n(ii / impress-01~e.2\n    :ARG0 (p / pompous~e.4\n             :domain (p2 / person\n                         :name (n / name\n                                  :op1 \"John\"~e.0)))\n    :ARG1 p2)", [[0, 4], [5, 7], [8, 17], [18, 20], [21, 28], [28, 29]]], ["# ::snt The men were promised by Frank to leave.\n# ::tokens [\"The\", \"men\", \"were\", \"promised\", \"by\", \"Frank\", \"to\", \"leave\", \".\"]\n# ::lemmas [\"the\", \"man\", \"be\", \"promise\", \"by\", \"Frank\", \"to\", \"leave\", \".\"]\n# ::alignments 1-1.2 3-1 5-1.1.1.1 7-1.3\n(p / promise-01~e.3\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Frank\"~e.5))\n   :ARG1 (m / man~e.1)\n   :ARG2 (l / leave-11~e.7\n            :ARG0 m))", [[0, 3], [4, 7], [8, 12], [13, 21], [22, 24], [25, 30], [31, 33], [34, 39], [39, 40]]], ["# ::snt The idea struck the men all as nonsense.\n# ::tokens [\"The\", \"idea\", \"struck\", \"the\", \"men\", \"all\", \"as\", \"nonsense\", \".\"]\n# ::lemmas [\"the\", \"idea\", \"strike\", \"the\", \"man\", \"all\", \"as\", \"nonsense\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2 5-1.2.1 7-1.3\n(s / strike-04~e.2\n   :ARG0 (ii / idea~e.1)\n   :ARG1 (m / man~e.4\n            :mod (a / all~e.5))\n   :ARG2 (n / nonsense~e.7))", [[0, 3], [4, 8], [9, 15], [16, 19], [20, 23], [24, 27], [28, 30], [31, 39], [39, 40]]], ["# ::snt We proved Smith to the authorities to be the thief.\n# ::tokens [\"We\", \"proved\", \"Smith\", \"to\", \"the\", \"authorities\", \"to\", \"be\", \"the\", \"thief\", \".\"]\n# ::lemmas [\"we\", \"prove\", \"Smith\", \"to\", \"the\", \"authority\", \"to\", \"be\", \"the\", \"thief\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1.1.1 5-1.3\n(p / prove-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (p2 / person\n             :domain (p3 / person\n                         :name (n / name\n                                  :op1 \"Smith\"~e.2))\n             :ARG0-of (s / steal-01))\n   :ARG2 (a / authority~e.5))", [[0, 2], [3, 9], [10, 15], [16, 18], [19, 22], [23, 34], [35, 37], [38, 40], [41, 44], [45, 50], [50, 51]]], ["# ::snt Us love them.\n# ::tokens [\"Us\", \"love\", \"them\", \".\"]\n# ::lemmas [\"Us\", \"love\", \"they\", \".\"]\n# ::alignments 1-1 2-1.2\n(l / love-01~e.1\n   :ARG0 (w / we)\n   :ARG1 (t / they~e.2))", [[0, 2], [3, 7], [8, 12], [12, 13]]], ["# ::snt Mary reported him to have loved her.\n# ::tokens [\"Mary\", \"reported\", \"him\", \"to\", \"have\", \"loved\", \"her\", \".\"]\n# ::lemmas [\"Mary\", \"report\", \"he\", \"to\", \"have\", \"love\", \"she\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1 5-1.2\n(r / report-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mary\"~e.0))\n   :ARG1 (l / love-01~e.5\n            :ARG0 (h / he~e.2)\n            :ARG1 p))", [[0, 4], [5, 13], [14, 17], [18, 20], [21, 25], [26, 31], [32, 35], [35, 36]]], ["# ::snt I saw kissing Mary.\n# ::tokens [\"I\", \"saw\", \"kissing\", \"Mary\", \".\"]\n# ::lemmas [\"i\", \"see\", \"kiss\", \"Mary\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2 3-1.2.2.1.1\n(s / see-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (k / kiss-01~e.2\n            :ARG0 ii\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Mary\"~e.3))))", [[0, 1], [2, 5], [6, 13], [14, 18], [18, 19]]], ["# ::snt John wanted to leave the room happy and leave the room happy he did.\n# ::tokens [\"John\", \"wanted\", \"to\", \"leave\", \"the\", \"room\", \"happy\", \"and\", \"leave\", \"the\", \"room\", \"happy\", \"he\", \"did\", \".\"]\n# ::lemmas [\"John\", \"want\", \"to\", \"leave\", \"the\", \"room\", \"happy\", \"and\", \"leave\", \"the\", \"room\", \"happy\", \"he\", \"do\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1 5-1.2.1.2 6-1.2.1.3 7-1.2 8-1.2.2 11-1.2.2.2 13-1.3\n(w / want-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (a / and~e.7\n            :op1 (l / leave-02~e.3\n                    :ARG0 p\n                    :ARG1 (r / room~e.5)\n                    :ARG2 (h / happy-01~e.6\n                             :ARG1 r))\n            :op2 (l2 / leave-02~e.8\n                     :ARG0 p\n                     :ARG1 (h2 / happy-01~e.11\n                               :ARG1 r)))\n   :ARG1-of (d / do-02~e.13\n               :ARG0 p))", [[0, 4], [5, 11], [12, 14], [15, 20], [21, 24], [25, 29], [30, 35], [36, 39], [40, 45], [46, 49], [50, 54], [55, 60], [61, 63], [64, 67], [67, 68]]], ["# ::snt I only eat fish raw fresh.\n# ::tokens [\"I\", \"only\", \"eat\", \"fish\", \"raw\", \"fresh\", \".\"]\n# ::lemmas [\"i\", \"only\", \"eat\", \"fish\", \"raw\", \"fresh\", \".\"]\n# ::alignments 0-1.1 1-1.3 2-1 3-1.2 4-1.2.1.1 5-1.2.1\n(e / eat-01~e.2\n   :ARG0 (ii / i~e.0)\n   :ARG1 (f / fish~e.3\n            :ARG1-of (f2 / fresh-04~e.5\n                         :mod (r / raw~e.4)))\n   :mod (o / only~e.1))", [[0, 1], [2, 6], [7, 10], [11, 15], [16, 19], [20, 25], [25, 26]]], ["# ::snt I can't believe Holly won't eat cabbage.\n# ::tokens [\"I\", \"ca\", \"n't\", \"believe\", \"Holly\", \"wo\", \"n't\", \"eat\", \"cabbage\", \".\"]\n# ::lemmas [\"i\", \"can\", \"not\", \"believe\", \"Holly\", \"will\", \"not\", \"eat\", \"cabbage\", \".\"]\n# ::alignments 0-1.2.1 3-1.2 4-1.2.2.2.1.1 7-1.2.2 8-1.2.2.3\n(p / possible-01\n   :polarity -\n   :ARG1 (b / believe-01~e.3\n            :ARG0 (ii / i~e.0)\n            :ARG1 (e / eat-01~e.7\n                     :polarity -\n                     :ARG0 (p2 / person\n                               :name (n / name\n                                        :op1 \"Holly\"~e.4))\n                     :ARG1 (c / cabbage~e.8))))", [[0, 1], [2, 4], [4, 7], [8, 15], [16, 21], [22, 24], [24, 27], [28, 31], [32, 39], [39, 40]]], ["# ::snt You shouldn't play with rifles because it's dangerous to.\n# ::tokens [\"You\", \"should\", \"n't\", \"play\", \"with\", \"rifles\", \"because\", \"it\", \"'s\", \"dangerous\", \"to\", \".\"]\n# ::lemmas [\"you\", \"should\", \"not\", \"play\", \"with\", \"rifle\", \"because\", \"it\", \"be\", \"dangerous\", \"to\", \".\"]\n# ::alignments 0-1.1.2 3-1.1 5-1.1.3 6-1.2\n(r / recommend-01\n   :ARG1 (p / play-01~e.3\n            :polarity -\n            :ARG0 (y / you~e.0)\n            :ARG2 (r2 / rifle~e.5))\n   :ARG1-of (c / cause-01~e.6\n               :ARG0 (e / endanger-01\n                        :ARG0 p)))", [[0, 3], [4, 10], [10, 13], [14, 18], [19, 23], [24, 30], [31, 38], [39, 41], [41, 43], [44, 53], [54, 56], [56, 57]]], ["# ::snt Mary claimed that eat cabbage, Holly wouldn't.\n# ::tokens [\"Mary\", \"claimed\", \"that\", \"eat\", \"cabbage\", \",\", \"Holly\", \"would\", \"n't\", \".\"]\n# ::lemmas [\"Mary\", \"claim\", \"that\", \"eat\", \"cabbage\", \",\", \"Holly\", \"would\", \"not\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 3-1.1.2 4-1.1.2.1 6-1.2.2.1.1\n(c / contrast-01\n   :ARG1 (c2 / claim-01~e.1\n             :ARG0 (p / person\n                      :name (n / name\n                               :op1 \"Mary\"~e.0))\n             :ARG1 (e / eat-01~e.3\n                      :ARG1 (c3 / cabbage~e.4)))\n   :ARG2 (e2 / eat-01\n             :polarity -\n             :ARG0 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Holly\"~e.6))\n             :ARG1 c3))", [[0, 4], [5, 12], [13, 17], [18, 21], [22, 29], [29, 30], [31, 36], [37, 42], [42, 45], [45, 46]]], ["# ::snt I visited every town I had to visit.\n# ::tokens [\"I\", \"visited\", \"every\", \"town\", \"I\", \"had\", \"to\", \"visit\", \".\"]\n# ::lemmas [\"i\", \"visit\", \"every\", \"town\", \"i\", \"have\", \"to\", \"visit\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1 3-1.2 7-1.2.2\n(v / visit-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (t / town~e.3\n            :mod (e / every~e.2)\n            :ARG1-of (v2 / visit-01~e.7\n                         :ARG0 ii\n                         :ARG2-of (o / obligate-01\n                                     :ARG1 ii))))", [[0, 1], [2, 9], [10, 15], [16, 20], [21, 22], [23, 26], [27, 29], [30, 35], [35, 36]]], ["# ::snt Joe likes his bar, and Sally does too.\n# ::tokens [\"Joe\", \"likes\", \"his\", \"bar\", \",\", \"and\", \"Sally\", \"does\", \"too\", \".\"]\n# ::lemmas [\"Joe\", \"like\", \"his\", \"bar\", \",\", \"and\", \"Sally\", \"do\", \"too\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 3-1.1.2 5-1 6-1.2.1.1.1 8-1.2.3\n(a / and~e.5\n   :op1 (l / like-01~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Joe\"~e.0))\n           :ARG1 (b / bar~e.3\n                    :poss p))\n   :op2 (l2 / like-01\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Sally\"~e.6))\n            :ARG1 b\n            :mod (t / too~e.8)))", [[0, 3], [4, 9], [10, 13], [14, 17], [17, 18], [19, 22], [23, 28], [29, 33], [34, 37], [37, 38]]], ["# ::snt Dulles suspected everyone who Angleton did it.\n# ::tokens [\"Dulles\", \"suspected\", \"everyone\", \"who\", \"Angleton\", \"did\", \"it\", \".\"]\n# ::lemmas [\"Dulles\", \"suspect\", \"everyone\", \"who\", \"Angleton\", \"do\", \"it\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2 4-1.2.1.2.1.1 5-1.2.1 6-1.2.1.1\n(s / suspect-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dulles\"~e.0))\n   :ARG1 (e / everyone~e.2\n            :ARG0-of (d / do-02~e.5\n                        :ARG1 (ii / it~e.6)\n                        :ARG2 (p2 / person\n                                  :name (n2 / name\n                                            :op1 \"Angleton\"~e.4))))\n   :ARG2 e)", [[0, 6], [7, 16], [17, 25], [26, 29], [30, 38], [39, 42], [43, 45], [45, 46]]], ["# ::snt Dulles suspected everyone who Angleton did so.\n# ::tokens [\"Dulles\", \"suspected\", \"everyone\", \"who\", \"Angleton\", \"did\", \"so\", \".\"]\n# ::lemmas [\"Dulles\", \"suspect\", \"everyone\", \"who\", \"Angleton\", \"do\", \"so\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2 4-1.2.1.2.1.1 5-1.2.1 6-1.2.1.1\n(s / suspect-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dulles\"~e.0))\n   :ARG1 (e / everyone~e.2\n            :ARG0-of (d / do-02~e.5\n                        :ARG1 (s2 / so~e.6)\n                        :ARG2 (p2 / person\n                                  :name (n2 / name\n                                            :op1 \"Angleton\"~e.4))))\n   :ARG2 e)", [[0, 6], [7, 16], [17, 25], [26, 29], [30, 38], [39, 42], [43, 45], [45, 46]]], ["# ::snt Although Holly doesn't, Doc eats cabbage.\n# ::tokens [\"Although\", \"Holly\", \"does\", \"n't\", \",\", \"Doc\", \"eats\", \"cabbage\", \".\"]\n# ::lemmas [\"although\", \"Holly\", \"do\", \"not\", \",\", \"Doc\", \"eat\", \"cabbage\", \".\"]\n# ::alignments 1-1.3.2.1.1 2-1.3 5-1.1.1.1 6-1 7-1.2\n(e / eat-01~e.6\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Doc\"~e.5))\n   :ARG1 (c / cabbage~e.7)\n   :concession (d / do-02~e.2\n                  :polarity -\n                  :ARG0 (p2 / person\n                            :name (n2 / name\n                                      :op1 \"Holly\"~e.1))))", [[0, 8], [9, 14], [15, 19], [19, 22], [22, 23], [24, 27], [28, 32], [33, 40], [40, 41]]], ["# ::snt While Perry might switch the TV off, he won't on.\n# ::tokens [\"While\", \"Perry\", \"might\", \"switch\", \"the\", \"TV\", \"off\", \",\", \"he\", \"wo\", \"n't\", \"on\", \".\"]\n# ::lemmas [\"while\", \"Perry\", \"might\", \"switch\", \"the\", \"tv\", \"off\", \",\", \"he\", \"will\", \"not\", \"on\", \".\"]\n# ::alignments 1-1.1.2.1.1 3-1.2.1 11-1.1\n(h / have-concession-91\n   :ARG1 (o / on-01~e.11\n            :polarity -\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Perry\"~e.1)))\n   :ARG2 (p2 / possible-01\n             :ARG1 (s / switch-off-04~e.3\n                      :ARG0 p\n                      :ARG1 (t / television))))", [[0, 5], [6, 11], [12, 17], [18, 24], [25, 28], [29, 31], [32, 35], [35, 36], [37, 39], [40, 42], [42, 45], [46, 48], [48, 49]]], ["# ::snt This is the book of which Bill approves, and this is the one of which he can't do so.\n# ::tokens [\"This\", \"is\", \"the\", \"book\", \"of\", \"which\", \"Bill\", \"approves\", \",\", \"and\", \"this\", \"is\", \"the\", \"one\", \"of\", \"which\", \"he\", \"ca\", \"n't\", \"do\", \"so\", \".\"]\n# ::lemmas [\"this\", \"be\", \"the\", \"book\", \"of\", \"which\", \"Bill\", \"approve\", \",\", \"and\", \"this\", \"be\", \"the\", \"one\", \"of\", \"which\", \"he\", \"can\", \"not\", \"do\", \"so\", \".\"]\n# ::alignments 0-1.1.1 3-1.1 4-1.2.1.1 6-1.1.2.1.1.1 7-1.1.2 9-1 10-1.2.1 19-1.2.1.1.1.1 20-1.2.1.1.1.1.2\n(a / and~e.9\n   :op1 (b / book~e.3\n           :domain (t / this~e.0)\n           :ARG1-of (a2 / approve-01~e.7\n                        :ARG0 (p / person\n                                 :name (n / name\n                                          :op1 \"Bill\"~e.6))))\n   :op2 (b2 / book\n            :domain (t2 / this~e.10\n                        :ARG1-of (ii / include-91~e.4\n                                     :ARG2 (b3 / book\n                                               :ARG2-of (d / do-02~e.19\n                                                           :ARG0 p\n                                                           :ARG1 (s / so~e.20)\n                                                           :ARG1-of (p2 / possible-01\n                                                                        :polarity -)))))))", [[0, 4], [5, 7], [8, 11], [12, 16], [17, 19], [20, 25], [26, 30], [31, 39], [39, 40], [41, 44], [45, 49], [50, 52], [53, 56], [57, 60], [61, 63], [64, 69], [70, 72], [73, 75], [75, 78], [79, 81], [82, 84], [84, 85]]], ["# ::snt Wendy is eager to sail around the world and Bruce is eager to climb Kilimanjaro, but neither of them can because money is too tight.\n# ::tokens [\"Wendy\", \"is\", \"eager\", \"to\", \"sail\", \"around\", \"the\", \"world\", \"and\", \"Bruce\", \"is\", \"eager\", \"to\", \"climb\", \"Kilimanjaro\", \",\", \"but\", \"neither\", \"of\", \"them\", \"can\", \"because\", \"money\", \"is\", \"too\", \"tight\", \".\"]\n# ::lemmas [\"Wendy\", \"be\", \"eager\", \"to\", \"sail\", \"around\", \"the\", \"world\", \"and\", \"Bruce\", \"be\", \"eager\", \"to\", \"climb\", \"Kilimanjaro\", \",\", \"but\", \"neither\", \"of\", \"they\", \"can\", \"because\", \"money\", \"be\", \"too\", \"tight\", \".\"]\n# ::alignments 0-1.1.1.1.1.1 2-1.1.1 4-1.1.1.2 5-1.1.1.2.2 7-1.1.1.2.2.1 8-1.1 9-1.1.2.1.1.1 11-1.1.2 13-1.1.2.2 14-1.1.2.2.2.1.1 16-1 21-1.2 22-1.2.1.1 24-1.2.1.2.2 25-1.2.1\n(c / contrast-01~e.16\n   :ARG1 (a / and~e.8\n            :op1 (e / eager-01~e.2\n                    :ARG0 (p / person\n                             :name (n / name\n                                      :op1 \"Wendy\"~e.0))\n                    :ARG1 (s / sail-01~e.4\n                             :ARG0 p\n                             :path (a2 / around~e.5\n                                       :op1 (w / world~e.7))))\n            :op2 (e2 / eager-01~e.11\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Bruce\"~e.9))\n                     :ARG1 (c2 / climb-01~e.13\n                               :ARG0 p2\n                               :ARG1 (m / mountain\n                                        :name (n3 / name\n                                                  :op1 \"Kilimanjaro\"~e.14)))))\n   :ARG2 (c3 / cause-01~e.21\n             :ARG0 (t / tight-05~e.25\n                      :ARG1 (m2 / money~e.22)\n                      :ARG2-of (h / have-degree-91\n                                  :ARG1 m2\n                                  :ARG3 (t2 / too~e.24)))\n             :ARG1 (p3 / possible-01\n                       :polarity -\n                       :ARG1 (c4 / climb-01\n                                 :ARG0 a\n                                 :op1 p\n                                 :op2 p2)\n                       :ARG1 m)))", [[0, 5], [6, 8], [9, 14], [15, 17], [18, 22], [23, 29], [30, 33], [34, 39], [40, 43], [44, 49], [50, 52], [53, 58], [59, 61], [62, 67], [68, 79], [79, 80], [81, 84], [85, 92], [93, 95], [96, 100], [101, 104], [105, 112], [113, 118], [119, 121], [122, 125], [126, 131], [131, 132]]], ["# ::snt Mary runs not the marathon.\n# ::tokens [\"Mary\", \"runs\", \"not\", \"the\", \"marathon\", \".\"]\n# ::lemmas [\"Mary\", \"run\", \"not\", \"the\", \"marathon\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1 4-1.2\n(r / run-02~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mary\"~e.0))\n   :ARG1 (m / marathon~e.4\n            :polarity -~e.2))", [[0, 4], [5, 9], [10, 13], [14, 17], [18, 26], [26, 27]]], ["# ::snt The probable hostile German reaction is unfortunate.\n# ::tokens [\"The\", \"probable\", \"hostile\", \"German\", \"reaction\", \"is\", \"unfortunate\", \".\"]\n# ::lemmas [\"the\", \"probable\", \"hostile\", \"German\", \"reaction\", \"be\", \"unfortunate\", \".\"]\n# ::alignments 1-1.2.2.1 2-1.2.2 3-1.2.1.1.1 4-1.2 6-1\n(f / fortunate-01~e.6\n   :polarity -\n   :ARG2 (r / react-01~e.4\n            :ARG0 (c / country\n                     :name (n / name\n                              :op1 \"Germany\"~e.3))\n            :mod (h / hostile~e.2\n                    :mod (p / probable~e.1))))", [[0, 3], [4, 12], [13, 20], [21, 27], [28, 36], [37, 39], [40, 51], [51, 52]]], ["# ::snt What books does a critic think are readable?\n# ::tokens [\"What\", \"books\", \"does\", \"a\", \"critic\", \"think\", \"are\", \"readable\", \"?\"]\n# ::lemmas [\"what\", \"book\", \"do\", \"a\", \"critic\", \"think\", \"be\", \"readable\", \"?\"]\n# ::alignments 1-1.2 4-1.1.1 5-1 7-1.2.1\n(t / think-01~e.5\n   :ARG0 (p / person\n            :ARG0-of (c / criticize-01~e.4))\n   :ARG1 (b / book~e.1\n            :ARG1-of (r / read-01~e.7\n                        :ARG1-of (p2 / possible-01))\n            :mod (a / amr-unknown)))", [[0, 4], [5, 10], [11, 15], [16, 17], [18, 24], [25, 30], [31, 34], [35, 43], [43, 44]]], ["# ::snt Who reported that Max and which lady disappeared?\n# ::tokens [\"Who\", \"reported\", \"that\", \"Max\", \"and\", \"which\", \"lady\", \"disappeared\", \"?\"]\n# ::lemmas [\"who\", \"report\", \"that\", \"Max\", \"and\", \"which\", \"lady\", \"disappear\", \"?\"]\n# ::alignments 1-1 3-1.2.1.1.1.1 4-1.2.1 6-1.2.1.2 7-1.2\n(r / report-01~e.1\n   :ARG0 (a / amr-unknown)\n   :ARG1 (d / disappear-01~e.7\n            :ARG1 (a2 / and~e.4\n                      :op1 (p / person\n                              :name (n / name\n                                       :op1 \"Max\"~e.3))\n                      :op2 (l / lady~e.6\n                              :mod a))))", [[0, 3], [4, 12], [13, 17], [18, 21], [22, 25], [26, 31], [32, 36], [37, 48], [48, 49]]], ["# ::snt Everyone attended more than two seminars.\n# ::tokens [\"Everyone\", \"attended\", \"more\", \"than\", \"two\", \"seminars\", \".\"]\n# ::lemmas [\"everyone\", \"attend\", \"more\", \"than\", \"two\", \"seminar\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1 4-1.2.1.1 5-1.2\n(a / attend-01~e.1\n   :ARG0 (e / everyone~e.0)\n   :ARG1 (s / seminar~e.5\n            :quant (m / more-than~e.2\n                      :op1 2~e.4)))", [[0, 8], [9, 17], [18, 22], [23, 27], [28, 31], [32, 40], [40, 41]]], ["# ::snt Old pictures of themselves usually strike the children as amusing.\n# ::tokens [\"Old\", \"pictures\", \"of\", \"themselves\", \"usually\", \"strike\", \"the\", \"children\", \"as\", \"amusing\", \".\"]\n# ::lemmas [\"old\", \"picture\", \"of\", \"themselves\", \"usually\", \"strike\", \"the\", \"child\", \"as\", \"amusing\", \".\"]\n# ::alignments 0-1.1.2 1-1.1 4-1.4 5-1 7-1.2 9-1.3\n(s / strike-04~e.5\n   :ARG1 (p / picture~e.1\n            :topic (t / they)\n            :mod (o / old~e.0))\n   :ARG2 (c / child~e.7)\n   :ARG3 (a / amuse-01~e.9\n            :ARG0 p\n            :ARG1 c)\n   :mod (u / usual~e.4))", [[0, 3], [4, 12], [13, 15], [16, 26], [27, 34], [35, 41], [42, 45], [46, 54], [55, 57], [58, 65], [65, 66]]], ["# ::snt Images of themselves seem to have frightened the children.\n# ::tokens [\"Images\", \"of\", \"themselves\", \"seem\", \"to\", \"have\", \"frightened\", \"the\", \"children\", \".\"]\n# ::lemmas [\"image\", \"of\", \"themselves\", \"seem\", \"to\", \"have\", \"frighten\", \"the\", \"child\", \".\"]\n# ::alignments 0-1.1.1 3-1 6-1.1 8-1.1.2\n(s / seem-01~e.3\n   :ARG1 (f / frighten-01~e.6\n            :ARG0 (ii / image~e.0\n                      :topic (t / they))\n            :ARG1 (c / child~e.8)))", [[0, 6], [7, 9], [10, 20], [21, 25], [26, 28], [29, 33], [34, 44], [45, 48], [49, 57], [57, 58]]], ["# ::snt Lemons are always preferred to limes.\n# ::tokens [\"Lemons\", \"are\", \"always\", \"preferred\", \"to\", \"limes\", \".\"]\n# ::lemmas [\"lemon\", \"be\", \"always\", \"preferred\", \"to\", \"lime\", \".\"]\n# ::alignments 0-1.1 2-1.3 3-1 5-1.2\n(p / prefer-01~e.3\n   :ARG1 (l / lemon~e.0)\n   :ARG2 (l2 / limes~e.5)\n   :time (a / always~e.2))", [[0, 6], [7, 10], [11, 17], [18, 27], [28, 30], [31, 36], [36, 37]]], ["# ::snt A gun went off which I had cleaned.\n# ::tokens [\"A\", \"gun\", \"went\", \"off\", \"which\", \"I\", \"had\", \"cleaned\", \".\"]\n# ::lemmas [\"a\", \"gun\", \"go\", \"off\", \"which\", \"i\", \"have\", \"clean\", \".\"]\n# ::alignments 1-1.1 5-1.2.1 7-1.2\n(g / go-off-16\n   :ARG1 (g2 / gun~e.1)\n   :ARG2-of (c / clean-01~e.7\n               :ARG0 (ii / i~e.5)))", [[0, 1], [2, 5], [6, 10], [11, 14], [15, 20], [21, 22], [23, 26], [27, 34], [34, 35]]], ["# ::snt What did that Bill wore surprise everyone?\n# ::tokens [\"What\", \"did\", \"that\", \"Bill\", \"wore\", \"surprise\", \"everyone\", \"?\"]\n# ::lemmas [\"what\", \"do\", \"that\", \"Bill\", \"wear\", \"surprise\", \"everyone\", \"?\"]\n# ::alignments 3-1.1.1.1.1 4-1.1 5-1 6-1.2\n(s / surprise-01~e.5\n   :ARG0 (w / wear-01~e.4\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Bill\"~e.3))\n            :ARG1 (a / amr-unknown))\n   :ARG1 (e / everyone~e.6))", [[0, 4], [5, 8], [9, 13], [14, 18], [19, 23], [24, 32], [33, 41], [41, 42]]], ["# ::snt I know a boy who is mad at John.\n# ::tokens [\"I\", \"know\", \"a\", \"boy\", \"who\", \"is\", \"mad\", \"at\", \"John\", \".\"]\n# ::lemmas [\"i\", \"know\", \"a\", \"boy\", \"who\", \"be\", \"mad\", \"at\", \"John\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 6-1.2.1 8-1.2.1.1.1.1\n(k / know-02~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (b / boy~e.3\n            :ARG1-of (m / mad-04~e.6\n                        :ARG0 (p / person\n                                 :name (n / name\n                                          :op1 \"John\"~e.8)))))", [[0, 1], [2, 6], [7, 8], [9, 12], [13, 16], [17, 19], [20, 23], [24, 26], [27, 31], [31, 32]]], ["# ::snt He threw into the wastebasket the letter.\n# ::tokens [\"He\", \"threw\", \"into\", \"the\", \"wastebasket\", \"the\", \"letter\", \".\"]\n# ::lemmas [\"he\", \"throw\", \"into\", \"the\", \"wastebasket\", \"the\", \"letter\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.3 6-1.2\n(t / throw-01~e.1\n   :ARG0 (h / he~e.0)\n   :ARG1 (l / letter~e.6)\n   :ARG2 (w / wastebasket~e.4))", [[0, 2], [3, 8], [9, 13], [14, 17], [18, 29], [30, 33], [34, 40], [40, 41]]], ["# ::snt She asked whether it looked like rain a man who was near the window.\n# ::tokens [\"She\", \"asked\", \"whether\", \"it\", \"looked\", \"like\", \"rain\", \"a\", \"man\", \"who\", \"was\", \"near\", \"the\", \"window\", \".\"]\n# ::lemmas [\"she\", \"ask\", \"whether\", \"it\", \"look\", \"like\", \"rain\", \"a\", \"man\", \"who\", \"be\", \"near\", \"the\", \"window\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2.1 6-1.2.1.2 8-1.2.1.1 11-1.2.1.1.1 13-1.2.1.1.1.1\n(a / ask-01~e.1\n   :ARG0 (s / she~e.0)\n   :ARG1 (t / truth-value\n            :polarity-of (l / look-02~e.4\n                            :ARG0 (m / man~e.8\n                                     :ARG1-of (n / near-02~e.11\n                                                 :ARG2 (w / window~e.13)))\n                            :ARG1 (r / rain-01~e.6)))\n   :ARG2 m)", [[0, 3], [4, 9], [10, 17], [18, 20], [21, 27], [28, 32], [33, 37], [38, 39], [40, 43], [44, 47], [48, 51], [52, 56], [57, 60], [61, 67], [67, 68]]], ["# ::snt I know a man who John is taller than.\n# ::tokens [\"I\", \"know\", \"a\", \"man\", \"who\", \"John\", \"is\", \"taller\", \"than\", \".\"]\n# ::lemmas [\"i\", \"know\", \"a\", \"man\", \"who\", \"John\", \"be\", \"tall\", \"than\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 5-1.2.1.3.1.1 7-1.2.1.1\n(k / know-02~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (m / man~e.3\n            :ARG1-of (h / have-degree-91\n                        :ARG2 (t / tall~e.7)\n                        :ARG3 (m2 / more)\n                        :ARG4 (p / person\n                                 :name (n / name\n                                          :op1 \"John\"~e.5)))))", [[0, 1], [2, 6], [7, 8], [9, 12], [13, 16], [17, 21], [22, 24], [25, 31], [32, 36], [36, 37]]], ["# ::snt John is as tall as that man is.\n# ::tokens [\"John\", \"is\", \"as\", \"tall\", \"as\", \"that\", \"man\", \"is\", \".\"]\n# ::lemmas [\"John\", \"be\", \"as\", \"tall\", \"as\", \"that\", \"man\", \"be\", \".\"]\n# ::alignments 0-1.1.1.1 3-1.2 5-1.4.1 6-1.4\n(h / have-degree-91\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG2 (t / tall~e.3)\n   :ARG3 (e / equal)\n   :ARG4 (m / man~e.6\n            :mod (t2 / that~e.5)))", [[0, 4], [5, 7], [8, 10], [11, 15], [16, 18], [19, 23], [24, 27], [28, 30], [30, 31]]], ["# ::snt What I said was that she was lying.\n# ::tokens [\"What\", \"I\", \"said\", \"was\", \"that\", \"she\", \"was\", \"lying\", \".\"]\n# ::lemmas [\"what\", \"i\", \"say\", \"be\", \"that\", \"she\", \"be\", \"lie\", \".\"]\n# ::alignments 1-1.1 2-1 5-1.2.1 7-1.2\n(s / say-01~e.2\n   :ARG0 (ii / i~e.1)\n   :ARG1 (l / lie-08~e.7\n            :ARG0 (s2 / she~e.5)))", [[0, 4], [5, 6], [7, 11], [12, 15], [16, 20], [21, 24], [25, 28], [29, 34], [34, 35]]], ["# ::snt Jack is making the claim you won't need it.\n# ::tokens [\"Jack\", \"is\", \"making\", \"the\", \"claim\", \"you\", \"wo\", \"n't\", \"need\", \"it\", \".\"]\n# ::lemmas [\"Jack\", \"be\", \"make\", \"the\", \"claim\", \"you\", \"will\", \"not\", \"need\", \"it\", \".\"]\n# ::alignments 0-1.1.1.1 4-1 5-1.2.2 8-1.2 9-1.2.3\n(c / claim-01~e.4\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jack\"~e.0))\n   :ARG1 (n2 / need-01~e.8\n             :polarity -\n             :ARG0 (y / you~e.5)\n             :ARG1 (ii / it~e.9)))", [[0, 4], [5, 7], [8, 14], [15, 18], [19, 24], [25, 28], [29, 31], [31, 34], [35, 39], [40, 42], [42, 43]]], ["# ::snt John left, and he didn't even say goodbye.\n# ::tokens [\"John\", \"left\", \",\", \"and\", \"he\", \"did\", \"n't\", \"even\", \"say\", \"goodbye\", \".\"]\n# ::lemmas [\"John\", \"leave\", \",\", \"and\", \"he\", \"do\", \"not\", \"even\", \"say\", \"goodbye\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 3-1 7-1.2.4 8-1.2 9-1.2.3\n(a / and~e.3\n   :op1 (l / leave-11~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"John\"~e.0)))\n   :op2 (s / say-01~e.8\n           :polarity -\n           :ARG0 p\n           :ARG1 (g / goodbye~e.9)\n           :mod (e / even~e.7)))", [[0, 4], [5, 9], [9, 10], [11, 14], [15, 17], [18, 21], [21, 24], [25, 29], [30, 33], [34, 41], [41, 42]]], ["# ::snt I went to the movies and didn't pick up the shirts.\n# ::tokens [\"I\", \"went\", \"to\", \"the\", \"movies\", \"and\", \"did\", \"n't\", \"pick\", \"up\", \"the\", \"shirts\", \".\"]\n# ::lemmas [\"i\", \"go\", \"to\", \"the\", \"movie\", \"and\", \"do\", \"not\", \"pick\", \"up\", \"the\", \"shirt\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 4-1.1.2 5-1 8-1.2 11-1.2.3\n(a / and~e.5\n   :op1 (g / go-02~e.1\n           :ARG0 (ii / i~e.0)\n           :ARG4 (m / movie~e.4))\n   :op2 (p / pick-up-04~e.8\n           :polarity -\n           :ARG0 ii\n           :ARG1 (s / shirt~e.11)))", [[0, 1], [2, 6], [7, 9], [10, 13], [14, 20], [21, 24], [25, 28], [28, 31], [32, 36], [37, 39], [40, 43], [44, 50], [50, 51]]], ["# ::snt The boy works in a skyscraper and the girl works in a quonset hut.\n# ::tokens [\"The\", \"boy\", \"works\", \"in\", \"a\", \"skyscraper\", \"and\", \"the\", \"girl\", \"works\", \"in\", \"a\", \"quonset\", \"hut\", \".\"]\n# ::lemmas [\"the\", \"boy\", \"work\", \"in\", \"a\", \"skyscraper\", \"and\", \"the\", \"girl\", \"work\", \"in\", \"a\", \"quonset\", \"hut\", \".\"]\n# ::alignments 1-1.1.1 2-1.1 5-1.1.2 6-1 8-1.2.1 9-1.2 12-1.2.2.1 13-1.2.2\n(a / and~e.6\n   :op1 (w / work-01~e.2\n           :ARG0 (b / boy~e.1)\n           :location (s / skyscraper~e.5))\n   :op2 (w2 / work-01~e.9\n            :ARG0 (g / girl~e.8)\n            :location (h / hut~e.13\n                         :mod (q / quonset~e.12))))", [[0, 3], [4, 7], [8, 13], [14, 16], [17, 18], [19, 29], [30, 33], [34, 37], [38, 42], [43, 48], [49, 51], [52, 53], [54, 61], [62, 65], [65, 66]]], ["# ::snt That Peter showed up is a miracle and it is doubtful that he'll ever come again.\n# ::tokens [\"That\", \"Peter\", \"showed\", \"up\", \"is\", \"a\", \"miracle\", \"and\", \"it\", \"is\", \"doubtful\", \"that\", \"he\", \"'ll\", \"ever\", \"come\", \"again\", \".\"]\n# ::lemmas [\"that\", \"Peter\", \"show\", \"up\", \"be\", \"a\", \"miracle\", \"and\", \"it\", \"be\", \"doubtful\", \"that\", \"he\", \"will\", \"ever\", \"come\", \"again\", \".\"]\n# ::alignments 1-1.1.1.1.1.1 2-1.1.1 6-1.1 7-1 10-1.2 14-1.2.1.3 15-1.2.1 16-1.2.1.2\n(a / and~e.7\n   :op1 (m / miracle~e.6\n           :domain (s / show-up-02~e.2\n                      :ARG1 (p / person\n                               :name (n / name\n                                        :op1 \"Peter\"~e.1))))\n   :op2 (d / doubt-01~e.10\n           :ARG1 (c / come-01~e.15\n                    :ARG1 p\n                    :mod (a2 / again~e.16)\n                    :time (e / ever~e.14))))", [[0, 4], [5, 10], [11, 17], [18, 20], [21, 23], [24, 25], [26, 33], [34, 37], [38, 40], [41, 43], [44, 52], [53, 57], [58, 60], [60, 63], [64, 68], [69, 73], [74, 79], [79, 80]]], ["# ::snt I claimed it that Bob was a nut.\n# ::tokens [\"I\", \"claimed\", \"it\", \"that\", \"Bob\", \"was\", \"a\", \"nut\", \".\"]\n# ::lemmas [\"i\", \"claim\", \"it\", \"that\", \"Bob\", \"be\", \"a\", \"nut\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2.1.1.1 7-1.2\n(c / claim-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (n / nut~e.7\n            :domain (p / person\n                       :name (n2 / name\n                                 :op1 \"Bob\"~e.4))))", [[0, 1], [2, 9], [10, 12], [13, 17], [18, 21], [22, 25], [26, 27], [28, 31], [31, 32]]], ["# ::snt What exploded when and who was hurt?\n# ::tokens [\"What\", \"exploded\", \"when\", \"and\", \"who\", \"was\", \"hurt\", \"?\"]\n# ::lemmas [\"what\", \"explode\", \"when\", \"and\", \"who\", \"be\", \"hurt\", \"?\"]\n# ::alignments 1-1.1 3-1 6-1.2\n(a / and~e.3\n   :op1 (e / explode-01~e.1\n           :ARG1 (a2 / amr-unknown)\n           :time (b / blast-05\n                    :ARG1 (a3 / amr-unknown)))\n   :op2 (h / hurt-01~e.6\n           :ARG1 (a4 / amr-unknown)))", [[0, 4], [5, 13], [14, 18], [19, 22], [23, 26], [27, 30], [31, 35], [35, 36]]], ["# ::snt If you make yourself comfortable, I'll wash the dishes.\n# ::tokens [\"If\", \"you\", \"make\", \"yourself\", \"comfortable\", \",\", \"I\", \"'ll\", \"wash\", \"the\", \"dishes\", \".\"]\n# ::lemmas [\"if\", \"you\", \"make\", \"yourself\", \"comfortable\", \",\", \"i\", \"will\", \"wash\", \"the\", \"dish\", \".\"]\n# ::alignments 1-1.3.1 2-1.3 4-1.3.2 6-1.1 8-1 10-1.2\n(w / wash-01~e.8\n   :ARG0 (ii / i~e.6)\n   :ARG1 (d / dish~e.10)\n   :condition (m / make-02~e.2\n                 :ARG0 (y / you~e.1)\n                 :ARG1 (c / comfortable-02~e.4\n                          :ARG0 y\n                          :ARG1 y)))", [[0, 2], [3, 6], [7, 11], [12, 20], [21, 32], [32, 33], [34, 35], [35, 38], [39, 43], [44, 47], [48, 54], [54, 55]]], ["# ::snt My sister arrived at a time when no buses were running and my brother arrived at one too.\n# ::tokens [\"My\", \"sister\", \"arrived\", \"at\", \"a\", \"time\", \"when\", \"no\", \"buses\", \"were\", \"running\", \"and\", \"my\", \"brother\", \"arrived\", \"at\", \"one\", \"too\", \".\"]\n# ::lemmas [\"my\", \"sister\", \"arrive\", \"at\", \"a\", \"time\", \"when\", \"no\", \"bus\", \"be\", \"run\", \"and\", \"my\", \"brother\", \"arrive\", \"at\", \"one\", \"too\", \".\"]\n# ::alignments 1-1.1.1.2 2-1 5-1.2.r 7-1.2.1.1 8-1.2.1.2 10-1.2.1 11-1.2 14-1.2.2 16-1.2.2.2 17-1.2.2.3\n(a / arrive-01~e.2\n   :ARG1 (p / person\n            :ARG0-of (h / have-rel-role-91\n                        :ARG1 (ii / i)\n                        :ARG2 (s / sister~e.1)))\n   :time~e.5 (a2 / and~e.11\n                 :op1 (r / run-01~e.10\n                         :polarity -~e.7\n                         :ARG1 (b / bus~e.8))\n                 :op2 (a3 / arrive-01~e.14\n                          :ARG1 p\n                          :ARG4 (o / one~e.16)\n                          :mod (t / too~e.17))))", [[0, 2], [3, 9], [10, 17], [18, 20], [21, 22], [23, 27], [28, 32], [33, 35], [36, 41], [42, 46], [47, 54], [55, 58], [59, 61], [62, 69], [70, 77], [78, 80], [81, 84], [85, 88], [88, 89]]], ["# ::snt Mike talked to my friends about politics yesterday.\n# ::tokens [\"Mike\", \"talked\", \"to\", \"my\", \"friends\", \"about\", \"politics\", \"yesterday\", \".\"]\n# ::lemmas [\"Mike\", \"talk\", \"to\", \"my\", \"friend\", \"about\", \"politic\", \"yesterday\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.3.1.2 6-1.2 7-1.4\n(t / talk-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mike\"~e.0))\n   :ARG1 (p2 / politics~e.6)\n   :ARG2 (p3 / person\n             :ARG0-of (h / have-rel-role-91\n                         :ARG1 (ii / i)\n                         :ARG2 (f / friend~e.4)))\n   :time (y / yesterday~e.7))", [[0, 4], [5, 11], [12, 14], [15, 17], [18, 25], [26, 31], [32, 40], [41, 50], [50, 51]]], ["# ::snt Which hat do you believe she never wore?\n# ::tokens [\"Which\", \"hat\", \"do\", \"you\", \"believe\", \"she\", \"never\", \"wore\", \"?\"]\n# ::lemmas [\"which\", \"hat\", \"do\", \"you\", \"believe\", \"she\", \"never\", \"wear\", \"?\"]\n# ::alignments 1-1.2.3 3-1.1 4-1 5-1.2.2 7-1.2\n(b / believe-01~e.4\n   :ARG0 (y / you~e.3)\n   :ARG1 (w / wear-01~e.7\n            :polarity -\n            :ARG0 (s / she~e.5)\n            :ARG1 (h / hat~e.1\n                     :mod (a / amr-unknown))\n            :time (e / ever)))", [[0, 5], [6, 9], [10, 12], [13, 16], [17, 24], [25, 28], [29, 34], [35, 39], [39, 40]]], ["# ::snt The boy whose playing the piano loudly I disliked was a student.\n# ::tokens [\"The\", \"boy\", \"whose\", \"playing\", \"the\", \"piano\", \"loudly\", \"I\", \"disliked\", \"was\", \"a\", \"student\", \".\"]\n# ::lemmas [\"the\", \"boy\", \"whose\", \"play\", \"the\", \"piano\", \"loudly\", \"i\", \"dislike\", \"be\", \"a\", \"student\", \".\"]\n# ::alignments 1-1.2 3-1.2.1 5-1.2.1.1 6-1.2.1.2 7-1.1 8-1 11-1.3.1\n(d / dislike-01~e.8\n   :ARG0 (ii / i~e.7)\n   :ARG1 (b / boy~e.1\n            :ARG0-of (p / play-11~e.3\n                        :ARG2 (p2 / piano~e.5)\n                        :manner (l / loud~e.6)))\n   :ARG2 (p3 / person\n             :ARG0-of (s / study-01~e.11)))", [[0, 3], [4, 7], [8, 13], [14, 21], [22, 25], [26, 31], [32, 38], [39, 40], [41, 49], [50, 53], [54, 55], [56, 63], [63, 64]]], ["# ::snt Ivan figured it out that the bridge would hold.\n# ::tokens [\"Ivan\", \"figured\", \"it\", \"out\", \"that\", \"the\", \"bridge\", \"would\", \"hold\", \".\"]\n# ::lemmas [\"Ivan\", \"figure\", \"it\", \"out\", \"that\", \"the\", \"bridge\", \"would\", \"hold\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 6-1.2.1 8-1.2\n(f / figure-out-05~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Ivan\"~e.0))\n   :ARG1 (h / hold-01~e.8\n            :ARG1 (b / bridge~e.6)))", [[0, 4], [5, 12], [13, 15], [16, 19], [20, 24], [25, 28], [29, 35], [36, 41], [42, 46], [46, 47]]], ["# ::snt That it was obvious is not true that Bob was lying.\n# ::tokens [\"That\", \"it\", \"was\", \"obvious\", \"is\", \"not\", \"true\", \"that\", \"Bob\", \"was\", \"lying\", \".\"]\n# ::lemmas [\"that\", \"it\", \"be\", \"obvious\", \"be\", \"not\", \"true\", \"that\", \"Bob\", \"be\", \"lie\", \".\"]\n# ::alignments 3-1.2 5-1.1 6-1 8-1.2.1.1.1.1 10-1.2.1\n(t / true-01~e.6\n   :polarity -~e.5\n   :ARG1 (o / obvious-01~e.3\n            :ARG1 (l / lie-08~e.10\n                     :ARG0 (p / person\n                              :name (n / name\n                                       :op1 \"Bob\"~e.8)))))", [[0, 4], [5, 7], [8, 11], [12, 19], [20, 22], [23, 26], [27, 31], [32, 36], [37, 40], [41, 44], [45, 50], [50, 51]]], ["# ::snt It is possible that Sam didn't pick those packages up which are to be mailed tomorrow.\n# ::tokens [\"It\", \"is\", \"possible\", \"that\", \"Sam\", \"did\", \"n't\", \"pick\", \"those\", \"packages\", \"up\", \"which\", \"are\", \"to\", \"be\", \"mailed\", \"tomorrow\", \".\"]\n# ::lemmas [\"it\", \"be\", \"possible\", \"that\", \"Sam\", \"do\", \"not\", \"pick\", \"those\", \"package\", \"up\", \"which\", \"be\", \"to\", \"be\", \"mail\", \"tomorrow\", \".\"]\n# ::alignments 2-1 3-1.1.3.1 4-1.1.2.1.1 7-1.1 9-1.1.3 15-1.1.3.2 16-1.1.3.2.1\n(p / possible-01~e.2\n   :ARG1 (p2 / pick-up-04~e.7\n             :polarity -\n             :ARG0 (p3 / person\n                       :name (n / name\n                                :op1 \"Sam\"~e.4))\n             :ARG1 (p4 / package~e.9\n                       :mod (t / that~e.3)\n                       :ARG1-of (m / mail-01~e.15\n                                   :time (t2 / tomorrow~e.16)))))", [[0, 2], [3, 5], [6, 14], [15, 19], [20, 23], [24, 27], [27, 30], [31, 35], [36, 41], [42, 50], [51, 53], [54, 59], [60, 63], [64, 66], [67, 69], [70, 76], [77, 85], [85, 86]]], ["# ::snt I promised that he would be there around midnight.\n# ::tokens [\"I\", \"promised\", \"that\", \"he\", \"would\", \"be\", \"there\", \"around\", \"midnight\", \".\"]\n# ::lemmas [\"i\", \"promise\", \"that\", \"he\", \"would\", \"be\", \"there\", \"around\", \"midnight\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1 6-1.2.2 7-1.2.3 8-1.2.3.1\n(p / promise-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG2 (b / be-located-at-91\n            :ARG1 (h / he~e.3)\n            :ARG2 (t / there~e.6)\n            :time (a / around~e.7\n                     :op1 (m / midnight~e.8))))", [[0, 1], [2, 10], [11, 15], [16, 18], [19, 24], [25, 27], [28, 33], [34, 40], [41, 49], [49, 50]]], ["# ::snt It is proud of him that I have never been.\n# ::tokens [\"It\", \"is\", \"proud\", \"of\", \"him\", \"that\", \"I\", \"have\", \"never\", \"been\", \".\"]\n# ::lemmas [\"it\", \"be\", \"proud\", \"of\", \"he\", \"that\", \"i\", \"have\", \"never\", \"be\", \".\"]\n# ::alignments 4-1.2 6-1.1\n(p / pride-01\n   :ARG0 (ii / i~e.6)\n   :ARG1 (h / he~e.4)\n   :ARG1-of (r / resemble-01\n               :ARG2 (p2 / pride-01\n                         :polarity -\n                         :ARG0 ii\n                         :ARG1 h\n                         :time (e / ever))))", [[0, 2], [3, 5], [6, 11], [12, 14], [15, 18], [19, 23], [24, 25], [26, 30], [31, 36], [37, 41], [41, 42]]], ["# ::snt It is beans that I don't think you'll be able to convince me Harry has ever tasted in his life.\n# ::tokens [\"It\", \"is\", \"beans\", \"that\", \"I\", \"do\", \"n't\", \"think\", \"you\", \"'ll\", \"be\", \"able\", \"to\", \"convince\", \"me\", \"Harry\", \"has\", \"ever\", \"tasted\", \"in\", \"his\", \"life\", \".\"]\n# ::lemmas [\"it\", \"be\", \"bean\", \"that\", \"i\", \"do\", \"not\", \"think\", \"you\", \"will\", \"be\", \"able\", \"to\", \"convince\", \"i\", \"Harry\", \"have\", \"ever\", \"taste\", \"in\", \"his\", \"life\", \".\"]\n# ::alignments 4-1.2 7-1 8-1.3.1.1 13-1.3.1 15-1.3.1.3.1.1.1.1 17-1.3.1.3.1.2 18-1.3.1.3.1\n(t / think-01~e.7\n   :polarity -\n   :ARG0 (ii / i~e.4)\n   :ARG1 (p / possible-01\n            :ARG1 (c / convince-01~e.13\n                     :ARG0 (y / you~e.8)\n                     :ARG1 ii\n                     :ARG2 (t2 / thing\n                               :ARG1-of (t3 / taste-01~e.18\n                                            :ARG0 (p2 / person\n                                                      :name (n / name\n                                                               :op1 \"Harry\"~e.15))\n                                            :time (e / ever~e.17)\n                                            :time (l / live-01\n                                                     :ARG0 p2))))))", [[0, 2], [3, 5], [6, 11], [12, 16], [17, 18], [19, 21], [21, 24], [25, 30], [31, 34], [34, 37], [38, 40], [41, 45], [46, 48], [49, 57], [58, 60], [61, 66], [67, 70], [71, 75], [76, 82], [83, 85], [86, 89], [90, 94], [94, 95]]], ["# ::snt That Sam sometimes didn't sleep must have pleased anybody.\n# ::tokens [\"That\", \"Sam\", \"sometimes\", \"did\", \"n't\", \"sleep\", \"must\", \"have\", \"pleased\", \"anybody\", \".\"]\n# ::lemmas [\"that\", \"Sam\", \"sometimes\", \"do\", \"not\", \"sleep\", \"must\", \"have\", \"please\", \"anybody\", \".\"]\n# ::alignments 1-1.1.1.2.1.1 2-1.1.1.3 5-1.1.1 8-1.1 9-1.1.2\n(o / obligate-01\n   :ARG2 (p / please-01~e.8\n            :ARG0 (s / sleep-01~e.5\n                     :polarity -\n                     :ARG0 (p2 / person\n                               :name (n / name\n                                        :op1 \"Sam\"~e.1))\n                     :frequency (s2 / sometimes~e.2))\n            :ARG1 (a / anybody~e.9)))", [[0, 4], [5, 8], [9, 18], [19, 22], [22, 25], [26, 31], [32, 36], [37, 41], [42, 49], [50, 57], [57, 58]]], ["# ::snt John scratched his arm and so did Mary.\n# ::tokens [\"John\", \"scratched\", \"his\", \"arm\", \"and\", \"so\", \"did\", \"Mary\", \".\"]\n# ::lemmas [\"John\", \"scratch\", \"his\", \"arm\", \"and\", \"so\", \"do\", \"Mary\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 3-1.1.1.2 4-1 7-1.2.1.1.1\n(a / and~e.4\n   :op1 (s / scratch-02~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"John\"~e.0)\n                    :part (a2 / arm~e.3))\n           :ARG1 a2)\n   :op2 (s2 / scratch-02\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Mary\"~e.7))\n            :ARG1 a2))", [[0, 4], [5, 14], [15, 18], [19, 22], [23, 26], [27, 29], [30, 33], [34, 38], [38, 39]]], ["# ::snt Harry believes it, although no one else believes that Sally is innocent.\n# ::tokens [\"Harry\", \"believes\", \"it\", \",\", \"although\", \"no\", \"one\", \"else\", \"believes\", \"that\", \"Sally\", \"is\", \"innocent\", \".\"]\n# ::lemmas [\"Harry\", \"believe\", \"it\", \",\", \"although\", \"no\", \"one\", \"else\", \"believe\", \"that\", \"Sally\", \"be\", \"innocent\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 2-1.1.2 7-1.2.1.1 8-1.2 10-1.2.2.1.1.1 12-1.2.2\n(h / have-concession-91\n   :ARG1 (b / believe-01~e.1\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Harry\"~e.0))\n            :ARG1 (ii / it~e.2))\n   :ARG2 (b2 / believe-01~e.8\n             :ARG0 (n2 / no-one\n                       :mod (e / else~e.7))\n             :ARG1 (ii2 / innocent-01~e.12\n                        :ARG1 (p2 / person\n                                  :name (n3 / name\n                                            :op1 \"Sally\"~e.10)))))", [[0, 5], [6, 14], [15, 17], [17, 18], [19, 27], [28, 30], [31, 34], [35, 39], [40, 48], [49, 53], [54, 59], [60, 62], [63, 71], [71, 72]]], ["# ::snt Webster did it after Henry had touched a sword.\n# ::tokens [\"Webster\", \"did\", \"it\", \"after\", \"Henry\", \"had\", \"touched\", \"a\", \"sword\", \".\"]\n# ::lemmas [\"Webster\", \"do\", \"it\", \"after\", \"Henry\", \"have\", \"touch\", \"a\", \"sword\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2 3-1.3 4-1.3.1.1.1.1 6-1.3.1 8-1.3.1.2\n(d / do-02~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Webster\"~e.0))\n   :ARG1 (ii / it~e.2)\n   :time (a / after~e.3\n            :op1 (t / touch-01~e.6\n                    :ARG0 (p2 / person\n                              :name (n2 / name\n                                        :op1 \"Henry\"~e.4))\n                    :ARG1 (s / sword~e.8))))", [[0, 7], [8, 11], [12, 14], [15, 20], [21, 26], [27, 30], [31, 38], [39, 40], [41, 46], [46, 47]]], ["# ::snt Webster did so after Henry had touched a sword.\n# ::tokens [\"Webster\", \"did\", \"so\", \"after\", \"Henry\", \"had\", \"touched\", \"a\", \"sword\", \".\"]\n# ::lemmas [\"Webster\", \"do\", \"so\", \"after\", \"Henry\", \"have\", \"touch\", \"a\", \"sword\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2 3-1.3 4-1.3.1.1.1.1 6-1.3.1 8-1.3.1.2\n(d / do-02~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Webster\"~e.0))\n   :ARG1 (s / so~e.2)\n   :time (a / after~e.3\n            :op1 (t / touch-01~e.6\n                    :ARG0 (p2 / person\n                              :name (n2 / name\n                                        :op1 \"Henry\"~e.4))\n                    :ARG1 (s2 / sword~e.8))))", [[0, 7], [8, 11], [12, 14], [15, 20], [21, 26], [27, 30], [31, 38], [39, 40], [41, 46], [46, 47]]], ["# ::snt These shoes won't fit into the trunk they're next to.\n# ::tokens [\"These\", \"shoes\", \"wo\", \"n't\", \"fit\", \"into\", \"the\", \"trunk\", \"they\", \"'re\", \"next\", \"to\", \".\"]\n# ::lemmas [\"these\", \"shoe\", \"will\", \"not\", \"fit\", \"into\", \"the\", \"trunk\", \"they\", \"be\", \"next\", \"to\", \".\"]\n# ::alignments 1-1.2 4-1 7-1.3 8-1.3.1\n(f / fit-06~e.4\n   :polarity -\n   :ARG1 (s / shoe~e.1\n            :mod (t / this))\n   :ARG2 (t2 / trunk~e.7\n             :location-of (t3 / they~e.8)))", [[0, 5], [6, 11], [12, 14], [14, 17], [18, 21], [22, 26], [27, 30], [31, 36], [37, 41], [41, 44], [45, 49], [50, 52], [52, 53]]], ["# ::snt How brave I know a boy who is!\n# ::tokens [\"How\", \"brave\", \"I\", \"know\", \"a\", \"boy\", \"who\", \"is\", \"!\"]\n# ::lemmas [\"how\", \"brave\", \"i\", \"know\", \"a\", \"boy\", \"who\", \"be\", \"!\"]\n# ::alignments 1-1.2.1 2-1.1 3-1 5-1.2\n(k / know-02~e.3\n   :ARG0 (ii / i~e.2)\n   :ARG1 (b / boy~e.5\n            :ARG0-of (b2 / brave-02~e.1\n                         :degree (s / so))))", [[0, 3], [4, 9], [10, 11], [12, 16], [17, 18], [19, 22], [23, 26], [27, 29], [29, 30]]], ["# ::snt How brave that Tom is must be believed!\n# ::tokens [\"How\", \"brave\", \"that\", \"Tom\", \"is\", \"must\", \"be\", \"believed\", \"!\"]\n# ::lemmas [\"how\", \"brave\", \"that\", \"Tom\", \"be\", \"must\", \"be\", \"believe\", \"!\"]\n# ::alignments 1-1.1.1 3-1.1.1.1.1.1 7-1.1\n(o / obligate-01\n   :ARG2 (b / believe-01~e.7\n            :ARG1 (b2 / brave-02~e.1\n                      :ARG0 (p / person\n                               :name (n / name\n                                        :op1 \"Tom\"~e.3))\n                      :degree (s / so))))", [[0, 3], [4, 9], [10, 14], [15, 18], [19, 21], [22, 26], [27, 29], [30, 38], [38, 39]]], ["# ::snt Fluffy is sick, which surprises me.\n# ::tokens [\"Fluffy\", \"is\", \"sick\", \",\", \"which\", \"surprises\", \"me\", \".\"]\n# ::lemmas [\"Fluffy\", \"be\", \"sick\", \",\", \"which\", \"surprise\", \"i\", \".\"]\n# ::alignments 0-1.1.1.1 2-1 5-1.2 6-1.2.1\n(s / sick-05~e.2\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Fluffy\"~e.0))\n   :ARG0-of (s2 / surprise-01~e.5\n                :ARG1 (ii / i~e.6)))", [[0, 6], [7, 9], [10, 14], [14, 15], [16, 21], [22, 31], [32, 34], [34, 35]]], ["# ::snt This hat that he was wearing is certain.\n# ::tokens [\"This\", \"hat\", \"that\", \"he\", \"was\", \"wearing\", \"is\", \"certain\", \".\"]\n# ::lemmas [\"this\", \"hat\", \"that\", \"he\", \"be\", \"wear\", \"be\", \"certain\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 3-1.1.2.1 5-1.1.2 7-1\n(c / certain~e.7\n   :domain (h / hat~e.1\n              :mod (t / this~e.0)\n              :ARG1-of (w / wear-01~e.5\n                          :ARG0 (h2 / he~e.3))))", [[0, 4], [5, 8], [9, 13], [14, 16], [17, 20], [21, 28], [29, 31], [32, 39], [39, 40]]], ["# ::snt He's the happiest that any of my friends could estimate anybody would expect you to believe that I've ever seen him.\n# ::tokens [\"He\", \"'s\", \"the\", \"happiest\", \"that\", \"any\", \"of\", \"my\", \"friends\", \"could\", \"estimate\", \"anybody\", \"would\", \"expect\", \"you\", \"to\", \"believe\", \"that\", \"I\", \"'ve\", \"ever\", \"seen\", \"him\", \".\"]\n# ::lemmas [\"he\", \"be\", \"the\", \"happy\", \"that\", \"any\", \"of\", \"my\", \"friend\", \"could\", \"estimate\", \"anybody\", \"would\", \"expect\", \"you\", \"to\", \"believe\", \"that\", \"i\", \"'ve\", \"ever\", \"see\", \"he\", \".\"]\n# ::alignments 0-1.1 3-1.2 5-1.4.1.1.2 8-1.4.1.1.1.2 10-1.4.1 11-1.4.2.1 13-1.4.2 14-1.4.2.2.1 16-1.4.2.2 18-1.4.1.1.1.1 20-1.4.2.2.2.3 21-1.4.2.2.2\n(h / have-degree-91\n   :ARG1 (h2 / he~e.0)\n   :ARG2 (h3 / happy-01~e.3\n             :ARG1 h2)\n   :ARG3 (m / most)\n   :ARG5 (t / thing\n            :ARG1-of (e / estimate-01~e.10\n                        :ARG0 (p / person\n                                 :ARG0-of (h4 / have-rel-role-91\n                                              :ARG1 (ii / i~e.18)\n                                              :ARG2 (f / friend~e.8))\n                                 :mod (a / any~e.5))\n                        :ARG1-of (p2 / possible-01))\n            :ARG1-of (e2 / expect-01~e.13\n                         :ARG0 (a2 / anybody~e.11)\n                         :ARG2 (b / believe-01~e.16\n                                  :ARG0 (y / you~e.14)\n                                  :ARG1 (s / see-01~e.21\n                                           :ARG0 ii\n                                           :ARG1 h2\n                                           :time (e3 / ever~e.20))))))", [[0, 2], [2, 4], [5, 8], [9, 17], [18, 22], [23, 26], [27, 29], [30, 32], [33, 40], [41, 46], [47, 55], [56, 63], [64, 69], [70, 76], [77, 80], [81, 83], [84, 91], [92, 96], [97, 98], [98, 101], [102, 106], [107, 111], [112, 115], [115, 116]]], ["# ::snt Joan plays a wonderful old guitar from Spain and sings folk songs.\n# ::tokens [\"Joan\", \"plays\", \"a\", \"wonderful\", \"old\", \"guitar\", \"from\", \"Spain\", \"and\", \"sings\", \"folk\", \"songs\", \".\"]\n# ::lemmas [\"Joan\", \"play\", \"a\", \"wonderful\", \"old\", \"guitar\", \"from\", \"Spain\", \"and\", \"sing\", \"folk\", \"song\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 3-1.1.2.1 4-1.1.2.2 5-1.1.2 7-1.1.2.3.1.1 8-1 9-1.2 10-1.2.2.1 11-1.2.2\n(a / and~e.8\n   :op1 (p / play-11~e.1\n           :ARG0 (p2 / person\n                     :name (n / name\n                              :op1 \"Joan\"~e.0))\n           :ARG1 (g / guitar~e.5\n                    :ARG1-of (w / wonderful-03~e.3)\n                    :mod (o / old~e.4)\n                    :source (c / country\n                               :name (n2 / name\n                                         :op1 \"Spain\"~e.7))))\n   :op2 (s / sing-01~e.9\n           :ARG0 p2\n           :ARG1 (s2 / song~e.11\n                     :mod (f / folk~e.10))))", [[0, 4], [5, 10], [11, 12], [13, 22], [23, 26], [27, 33], [34, 38], [39, 44], [45, 48], [49, 54], [55, 59], [60, 65], [65, 66]]], ["# ::snt The younger woman might have been tall and blond, and the older one definitely was blond.\n# ::tokens [\"The\", \"younger\", \"woman\", \"might\", \"have\", \"been\", \"tall\", \"and\", \"blond\", \",\", \"and\", \"the\", \"older\", \"one\", \"definitely\", \"was\", \"blond\", \".\"]\n# ::lemmas [\"the\", \"young\", \"woman\", \"might\", \"have\", \"be\", \"tall\", \"and\", \"blond\", \",\", \"and\", \"the\", \"old\", \"one\", \"definitely\", \"be\", \"blond\", \".\"]\n# ::alignments 1-1.1.1.1.1.1.1 2-1.1.1.1.1 4-1.1.1.1.1.1 6-1.1.1.1 7-1 8-1.1.1.2 10-1.1.1 12-1.1.1.2.1.1.1 14-1.3 16-1.2\n(a / and~e.7\n   :op1 (p / possible-01\n           :ARG1 (a2 / and~e.10\n                     :op1 (t / tall~e.6\n                             :domain (w / woman~e.2\n                                        :ARG1-of (h / have-degree-91~e.4\n                                                    :ARG2 (y / young~e.1)\n                                                    :ARG3 (m / more))))\n                     :op2 (b / blonde~e.8\n                             :domain (w2 / woman\n                                         :ARG1-of (h2 / have-degree-91\n                                                      :ARG2 (o / old~e.12)\n                                                      :ARG3 (m2 / more))))))\n   :op2 (b2 / blonde~e.16\n            :domain (w3 / woman\n                        :ARG1-of (h3 / have-degree-91\n                                     :ARG2 o)\n                        :ARG3 (m3 / more)))\n   :mod (d / definite~e.14))", [[0, 3], [4, 11], [12, 17], [18, 23], [24, 28], [29, 33], [34, 38], [39, 42], [43, 48], [48, 49], [50, 53], [54, 57], [58, 63], [64, 67], [68, 78], [79, 82], [83, 88], [88, 89]]], ["# ::snt They said that Tom had gone home, and he had gone home.\n# ::tokens [\"They\", \"said\", \"that\", \"Tom\", \"had\", \"gone\", \"home\", \",\", \"and\", \"he\", \"had\", \"gone\", \"home\", \".\"]\n# ::lemmas [\"they\", \"say\", \"that\", \"Tom\", \"have\", \"go\", \"home\", \",\", \"and\", \"he\", \"have\", \"go\", \"home\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1.1.1.1 5-1.2.1 6-1.2.1.2 8-1.2 11-1.2.2\n(s / say-01~e.1\n   :ARG0 (t / they~e.0)\n   :ARG1 (a / and~e.8\n            :op1 (g / go-02~e.5\n                    :ARG0 (p / person\n                             :name (n / name\n                                      :op1 \"Tom\"~e.3))\n                    :ARG4 (h / home~e.6))\n            :op2 (g2 / go-02~e.11\n                     :ARG0 p\n                     :ARG4 h)))", [[0, 4], [5, 9], [10, 14], [15, 18], [19, 22], [23, 27], [28, 32], [32, 33], [34, 37], [38, 40], [41, 44], [45, 49], [50, 54], [54, 55]]], ["# ::snt They said that Tom would pay up and he did pay up.\n# ::tokens [\"They\", \"said\", \"that\", \"Tom\", \"would\", \"pay\", \"up\", \"and\", \"he\", \"did\", \"pay\", \"up\", \".\"]\n# ::lemmas [\"they\", \"say\", \"that\", \"Tom\", \"would\", \"pay\", \"up\", \"and\", \"he\", \"do\", \"pay\", \"up\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1.1.1.1 7-1.2\n(s / say-01~e.1\n   :ARG0 (t / they~e.0)\n   :ARG1 (a / and~e.7\n            :op1 (p / pay-up-02\n                    :ARG0 (p2 / person\n                              :name (n / name\n                                       :op1 \"Tom\"~e.3)))\n            :op2 p))", [[0, 4], [5, 9], [10, 14], [15, 18], [19, 24], [25, 28], [29, 31], [32, 35], [36, 38], [39, 42], [43, 46], [47, 49], [49, 50]]], ["# ::snt Handsome though it is likely that Dick will be, I'm still going to marry Herman.\n# ::tokens [\"Handsome\", \"though\", \"it\", \"is\", \"likely\", \"that\", \"Dick\", \"will\", \"be\", \",\", \"I\", \"'m\", \"still\", \"going\", \"to\", \"marry\", \"Herman\", \".\"]\n# ::lemmas [\"handsome\", \"though\", \"it\", \"be\", \"likely\", \"that\", \"Dick\", \"will\", \"be\", \",\", \"i\", \"be\", \"still\", \"go\", \"to\", \"marry\", \"Herman\", \".\"]\n# ::alignments 4-1.2 6-1.2.2.1.1 10-1.1.1 12-1.1.3 15-1.1 16-1.1.2.1.1\n(h / have-concession-91\n   :ARG1 (m / marry-01~e.15\n            :ARG1 (ii / i~e.10)\n            :ARG2 (p / person\n                     :name (n / name\n                              :op1 \"Herman\"~e.16))\n            :mod (s / still~e.12))\n   :ARG2 (l / likely-01~e.4\n            :ARG1 l\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Dick\"~e.6))))", [[0, 8], [9, 15], [16, 18], [19, 21], [22, 28], [29, 33], [34, 38], [39, 43], [44, 46], [46, 47], [48, 49], [49, 51], [52, 57], [58, 63], [64, 66], [67, 72], [73, 79], [79, 80]]], ["# ::snt I have to grade some papers.\n# ::tokens [\"I\", \"have\", \"to\", \"grade\", \"some\", \"papers\", \".\"]\n# ::lemmas [\"i\", \"have\", \"to\", \"grade\", \"some\", \"paper\", \".\"]\n# ::alignments 0-1.1.1 3-1.1 4-1.1.2.1 5-1.1.2\n(o / obligate-01\n   :ARG2 (g / grade-01~e.3\n            :ARG0 (ii / i~e.0)\n            :ARG1 (p / paper~e.5\n                     :quant (s / some~e.4))))", [[0, 1], [2, 6], [7, 9], [10, 15], [16, 20], [21, 27], [27, 28]]], ["# ::snt The socks are ready for you to put them on.\n# ::tokens [\"The\", \"socks\", \"are\", \"ready\", \"for\", \"you\", \"to\", \"put\", \"them\", \"on\", \".\"]\n# ::lemmas [\"the\", \"sock\", \"be\", \"ready\", \"for\", \"you\", \"to\", \"put\", \"they\", \"on\", \".\"]\n# ::alignments 1-1.1 3-1 5-1.2.1\n(r / ready-02~e.3\n   :ARG1 (s / sock~e.1)\n   :ARG2 (p / put-on-08\n            :ARG0 (y / you~e.5)\n            :ARG1 s))", [[0, 3], [4, 9], [10, 13], [14, 19], [20, 23], [24, 27], [28, 30], [31, 34], [35, 39], [40, 42], [42, 43]]], ["# ::snt It is difficult to play sonatas on this violin.\n# ::tokens [\"It\", \"is\", \"difficult\", \"to\", \"play\", \"sonatas\", \"on\", \"this\", \"violin\", \".\"]\n# ::lemmas [\"it\", \"be\", \"difficult\", \"to\", \"play\", \"sonata\", \"on\", \"this\", \"violin\", \".\"]\n# ::alignments 2-1 4-1.1 5-1.1.1 7-1.1.2.1 8-1.1.2\n(d / difficult~e.2\n   :domain (p / play-11~e.4\n              :ARG1 (s / sonatas~e.5)\n              :ARG2 (v / violin~e.8\n                       :mod (t / this~e.7))))", [[0, 2], [3, 5], [6, 15], [16, 18], [19, 23], [24, 31], [32, 34], [35, 39], [40, 46], [46, 47]]], ["# ::snt That my father, he's lived here all his life is well known to those cops.\n# ::tokens [\"That\", \"my\", \"father\", \",\", \"he\", \"'s\", \"lived\", \"here\", \"all\", \"his\", \"life\", \"is\", \"well\", \"known\", \"to\", \"those\", \"cops\", \".\"]\n# ::lemmas [\"that\", \"my\", \"father\", \",\", \"he\", \"be\", \"live\", \"here\", \"all\", \"his\", \"life\", \"be\", \"well\", \"known\", \"to\", \"those\", \"cop\", \".\"]\n# ::alignments 0-1.1.1 2-1.2.1.2 6-1.2.2 7-1.2.2.1 8-1.2.2.2.2 10-1.2.2.2 12-1.3 13-1 16-1.1\n(k / know-01~e.13\n   :ARG0 (c / cop~e.16\n            :mod (t / that~e.0))\n   :ARG1 (p / person\n            :ARG0-of (h / have-rel-role-91\n                        :ARG1 (ii / i)\n                        :ARG2 (f / father~e.2))\n            :ARG0-of (l / live-01~e.6\n                        :location (h2 / here~e.7)\n                        :duration (l2 / life~e.10\n                                      :poss p\n                                      :mod (a / all~e.8))))\n   :manner (w / well~e.12))", [[0, 4], [5, 7], [8, 14], [14, 15], [16, 18], [18, 20], [21, 26], [27, 31], [32, 35], [36, 39], [40, 44], [45, 47], [48, 52], [53, 58], [59, 61], [62, 67], [68, 72], [72, 73]]], ["# ::snt The cops spoke to the janitor about that robbery yesterday.\n# ::tokens [\"The\", \"cops\", \"spoke\", \"to\", \"the\", \"janitor\", \"about\", \"that\", \"robbery\", \"yesterday\", \".\"]\n# ::lemmas [\"the\", \"cop\", \"speak\", \"to\", \"the\", \"janitor\", \"about\", \"that\", \"robbery\", \"yesterday\", \".\"]\n# ::alignments 1-1.1 2-1 5-1.3 7-1.2.1 9-1.4\n(s / speak-01~e.2\n   :ARG0 (c / cop~e.1)\n   :ARG1 (r / rob-01\n            :mod (t / that~e.7))\n   :ARG2 (j / janitor~e.5)\n   :time (y / yesterday~e.9))", [[0, 3], [4, 8], [9, 14], [15, 17], [18, 21], [22, 29], [30, 35], [36, 40], [41, 48], [49, 58], [58, 59]]], ["# ::snt We'll go together, we.\n# ::tokens [\"We\", \"'ll\", \"go\", \"together\", \",\", \"we\", \".\"]\n# ::lemmas [\"we\", \"will\", \"go\", \"together\", \",\", \"we\", \".\"]\n# ::alignments 0-1.1 2-1 3-1.2\n(g / go-02~e.2\n   :ARG0 (w / we~e.0)\n   :manner (t / together~e.3))", [[0, 2], [2, 5], [6, 8], [9, 17], [17, 18], [19, 21], [21, 22]]], ["# ::snt Jack will have the hole in his pocket.\n# ::tokens [\"Jack\", \"will\", \"have\", \"the\", \"hole\", \"in\", \"his\", \"pocket\", \".\"]\n# ::lemmas [\"Jack\", \"will\", \"have\", \"the\", \"hole\", \"in\", \"his\", \"pocket\", \".\"]\n# ::alignments 0-1.1.1.1 2-1 4-1.2 7-1.2.1\n(h / have-03~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jack\"~e.0))\n   :ARG1 (h2 / hole~e.4\n             :location (p2 / pocket~e.7\n                           :poss p)))", [[0, 4], [5, 9], [10, 14], [15, 18], [19, 23], [24, 26], [27, 30], [31, 37], [37, 38]]], ["# ::snt The window has seven holes in the door and it.\n# ::tokens [\"The\", \"window\", \"has\", \"seven\", \"holes\", \"in\", \"the\", \"door\", \"and\", \"it\", \".\"]\n# ::lemmas [\"the\", \"window\", \"have\", \"seven\", \"hole\", \"in\", \"the\", \"door\", \"and\", \"it\", \".\"]\n# ::alignments 1-1.1 2-1 3-1.2.1 4-1.2 7-1.2.2.1 8-1.2.2 9-1.2.2.2\n(h / have-03~e.2\n   :ARG0 (w / window~e.1)\n   :ARG1 (h2 / hole~e.4\n             :quant 7~e.3\n             :location (a / and~e.8\n                          :op1 (d / door~e.7)\n                          :op2 (ii / it~e.9))))", [[0, 3], [4, 10], [11, 14], [15, 20], [21, 26], [27, 29], [30, 33], [34, 38], [39, 42], [43, 45], [45, 46]]], ["# ::snt There's a hole in the tarpaulin which that stone is holding down.\n# ::tokens [\"There\", \"'s\", \"a\", \"hole\", \"in\", \"the\", \"tarpaulin\", \"which\", \"that\", \"stone\", \"is\", \"holding\", \"down\", \".\"]\n# ::lemmas [\"there\", \"be\", \"a\", \"hole\", \"in\", \"the\", \"tarpaulin\", \"which\", \"that\", \"stone\", \"be\", \"hold\", \"down\", \".\"]\n# ::alignments 3-1 6-1.1 8-1.2.1.1 9-1.2.1 11-1.2\n(h / hole~e.3\n   :location (t / tarpaulin~e.6)\n   :ARG0-of (h2 / hold-down-05~e.11\n                :ARG1 (s / stone~e.9\n                         :mod (t2 / that~e.8))))", [[0, 5], [5, 7], [8, 9], [10, 14], [15, 17], [18, 21], [22, 31], [32, 37], [38, 42], [43, 48], [49, 51], [52, 59], [60, 64], [64, 65]]], ["# ::snt I would prefer there to be no talking.\n# ::tokens [\"I\", \"would\", \"prefer\", \"there\", \"to\", \"be\", \"no\", \"talking\", \".\"]\n# ::lemmas [\"i\", \"would\", \"prefer\", \"there\", \"to\", \"be\", \"no\", \"talking\", \".\"]\n# ::alignments 0-1.1 2-1 6-1.2.1 7-1.2\n(p / prefer-01~e.2\n   :ARG0 (ii / i~e.0)\n   :ARG1 (t / talk-01~e.7\n            :polarity -~e.6))", [[0, 1], [2, 7], [8, 14], [15, 20], [21, 23], [24, 26], [27, 29], [30, 37], [37, 38]]], ["# ::snt I ate the ice cream and some cake.\n# ::tokens [\"I\", \"ate\", \"the\", \"ice\", \"cream\", \"and\", \"some\", \"cake\", \".\"]\n# ::lemmas [\"i\", \"eat\", \"the\", \"ice\", \"cream\", \"and\", \"some\", \"cake\", \".\"]\n# ::alignments 0-1.1 1-1 5-1.2 6-1.2.2.1 7-1.2.2\n(e / eat-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (a / and~e.5\n            :op1 (ii2 / ice-cream)\n            :op2 (c / cake~e.7\n                    :quant (s / some~e.6))))", [[0, 1], [2, 5], [6, 9], [10, 13], [14, 19], [20, 23], [24, 28], [29, 33], [33, 34]]], ["# ::snt I didn't realize that it had rained and any crops had been destroyed.\n# ::tokens [\"I\", \"did\", \"n't\", \"realize\", \"that\", \"it\", \"had\", \"rained\", \"and\", \"any\", \"crops\", \"had\", \"been\", \"destroyed\", \".\"]\n# ::lemmas [\"i\", \"do\", \"not\", \"realize\", \"that\", \"it\", \"have\", \"rain\", \"and\", \"any\", \"crop\", \"have\", \"be\", \"destroy\", \".\"]\n# ::alignments 0-1.2 3-1 7-1.3.1 8-1.3 9-1.3.2.1.1 10-1.3.2.1 13-1.3.2\n(r / realize-01~e.3\n   :polarity -\n   :ARG0 (ii / i~e.0)\n   :ARG1 (a / and~e.8\n            :op1 (r2 / rain-01~e.7)\n            :op2 (d / destroy-01~e.13\n                    :ARG1 (c / crop~e.10\n                             :mod (a2 / any~e.9)))))", [[0, 1], [2, 5], [5, 8], [9, 16], [17, 21], [22, 24], [25, 28], [29, 35], [36, 39], [40, 43], [44, 49], [50, 53], [54, 58], [59, 68], [68, 69]]], ["# ::snt The writers of none of the reports knew the answer, and neither did the writers of any of the chronicles.\n# ::tokens [\"The\", \"writers\", \"of\", \"none\", \"of\", \"the\", \"reports\", \"knew\", \"the\", \"answer\", \",\", \"and\", \"neither\", \"did\", \"the\", \"writers\", \"of\", \"any\", \"of\", \"the\", \"chronicles\", \".\"]\n# ::lemmas [\"the\", \"writer\", \"of\", \"none\", \"of\", \"the\", \"report\", \"know\", \"the\", \"answer\", \",\", \"and\", \"neither\", \"do\", \"the\", \"writer\", \"of\", \"any\", \"of\", \"the\", \"chronicle\", \".\"]\n# ::alignments 1-1.1.1.1 3-1.1.1.1.1.1 6-1.1.1.1.1 7-1.1 9-1.1.2 11-1 15-1.2.2.1 17-1.2.2.1.1.1 20-1.2.2.1.1\n(a / and~e.11\n   :op1 (k / know-01~e.7\n           :ARG0 (p / person\n                    :ARG0-of (w / write-01~e.1\n                                :ARG1 (r / report-01~e.6\n                                         :mod (n / none~e.3))))\n           :ARG1 (a2 / answer-01~e.9))\n   :op2 (k2 / know-01\n            :polarity -\n            :ARG0 (p2 / person\n                      :ARG0-of (w2 / write-01~e.15\n                                   :ARG1 (c / chronicle~e.20\n                                            :mod (a3 / any~e.17)))\n                      :ARG1 a2)))", [[0, 3], [4, 11], [12, 14], [15, 19], [20, 22], [23, 26], [27, 34], [35, 39], [40, 43], [44, 50], [50, 51], [52, 55], [56, 63], [64, 67], [68, 71], [72, 79], [80, 82], [83, 86], [87, 89], [90, 93], [94, 104], [104, 105]]], ["# ::snt I didn't give Jack Ed's picture of anybody.\n# ::tokens [\"I\", \"did\", \"n't\", \"give\", \"Jack\", \"Ed\", \"'s\", \"picture\", \"of\", \"anybody\", \".\"]\n# ::lemmas [\"i\", \"do\", \"not\", \"give\", \"Jack\", \"Ed\", \"'s\", \"picture\", \"of\", \"anybody\", \".\"]\n# ::alignments 0-1.2 3-1 4-1.3.1.1.1 5-1.3.1.1.2 7-1.3 9-1.3.2\n(g / give-01~e.3\n   :polarity -\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / picture-01~e.7\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Jack\"~e.4\n                               :op2 \"Ed\"~e.5))\n            :ARG1 (a / anybody~e.9)))", [[0, 1], [2, 5], [5, 8], [9, 13], [14, 18], [19, 21], [21, 23], [24, 31], [32, 34], [35, 42], [42, 43]]], ["# ::snt That anybody ever left at all is odd.\n# ::tokens [\"That\", \"anybody\", \"ever\", \"left\", \"at\", \"all\", \"is\", \"odd\", \".\"]\n# ::lemmas [\"that\", \"anybody\", \"ever\", \"leave\", \"at\", \"all\", \"be\", \"odd\", \".\"]\n# ::alignments 0-1.1 1-1.1.1.1 2-1.1.1.3 3-1.1.1 7-1\n(o / odd~e.7\n   :domain (t / that~e.0\n              :ARG1-of (l / leave-11~e.3\n                          :ARG0 (a / anybody~e.1)\n                          :mod (a2 / at-all)\n                          :time (e / ever~e.2))))", [[0, 4], [5, 12], [13, 17], [18, 22], [23, 25], [26, 29], [30, 32], [33, 36], [36, 37]]], ["# ::snt I sent the package to Maria.\n# ::tokens [\"I\", \"sent\", \"the\", \"package\", \"to\", \"Maria\", \".\"]\n# ::lemmas [\"i\", \"send\", \"the\", \"package\", \"to\", \"Maria\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 5-1.3.1.1\n(s / send-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / package~e.3)\n   :ARG2 (p2 / person\n             :name (n / name\n                      :op1 \"Maria\"~e.5)))", [[0, 1], [2, 6], [7, 10], [11, 18], [19, 21], [22, 27], [27, 28]]], ["# ::snt Fred offered the ball behind Molly.\n# ::tokens [\"Fred\", \"offered\", \"the\", \"ball\", \"behind\", \"Molly\", \".\"]\n# ::lemmas [\"Fred\", \"offer\", \"the\", \"ball\", \"behind\", \"Molly\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 4-1.3 5-1.3.1.1.1\n(o / offer-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fred\"~e.0))\n   :ARG1 (b / ball~e.3)\n   :location (b2 / behind~e.4\n                 :op1 (p2 / person\n                          :name (n2 / name\n                                    :op1 \"Molly\"~e.5))))", [[0, 4], [5, 12], [13, 16], [17, 21], [22, 28], [29, 34], [34, 35]]], ["# ::snt Cultural commissioner Megan Smith said that the five `` soundscape '' pieces would `` give a festive air to Park Square, they're fun and interesting ''.\n# ::tokens [\"Cultural\", \"commissioner\", \"Megan\", \"Smith\", \"said\", \"that\", \"the\", \"five\", \"`\", \"`\", \"soundscape\", \"''\", \"pieces\", \"would\", \"`\", \"`\", \"give\", \"a\", \"festive\", \"air\", \"to\", \"Park\", \"Square\", \",\", \"they\", \"'re\", \"fun\", \"and\", \"interesting\", \"''\", \".\"]\n# ::lemmas [\"cultural\", \"commissioner\", \"Megan\", \"Smith\", \"say\", \"that\", \"the\", \"five\", \"`\", \"`\", \"soundscape\", \"''\", \"piece\", \"would\", \"`\", \"`\", \"give\", \"a\", \"festive\", \"air\", \"to\", \"Park\", \"Square\", \",\", \"they\", \"be\", \"fun\", \"and\", \"interesting\", \"''\", \".\"]\n# ::alignments 0-1.1.2.1.1 1-1.1.2.1 2-1.1.1.1 3-1.1.1.2 4-1 7-1.2.1.1.1 10-1.2.1.1.2 12-1.2.1.1 16-1.2.1 18-1.2.1.2.1 19-1.2.1.2 21-1.2.1.3.1.1 22-1.2.1.3 26-1.2.2.1 27-1.2 28-1.2.2.2\n(s / say-01~e.4\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Megan\"~e.2\n                     :op2 \"Smith\"~e.3)\n            :ARG0-of (h / have-org-role-91\n                        :ARG2 (c / commissioner~e.1\n                                 :topic (c2 / culture~e.0))))\n   :ARG1 (a / and~e.27\n            :op1 (g / give-01~e.16\n                    :ARG0 (p2 / piece~e.12\n                              :quant 5~e.7\n                              :mod (s2 / soundscape~e.10))\n                    :ARG1 (a2 / air~e.19\n                              :mod (f / festival~e.18\n                                      :name (n2 / name\n                                                :op1 \"Christmas\")))\n                    :ARG2 (s3 / square~e.22\n                              :name (n3 / name\n                                        :op1 \"Park\"~e.21\n                                        :op2 \"Square\")))\n            :op2 (a3 / and\n                     :op1 (f2 / fun-01~e.26\n                              :ARG1 p2)\n                     :op2 (ii / interest-01~e.28\n                              :ARG1 p2))))", [[0, 8], [9, 21], [22, 27], [28, 33], [34, 38], [39, 43], [44, 47], [48, 52], [53, 54], [54, 55], [56, 66], [67, 69], [70, 76], [77, 82], [83, 84], [84, 85], [86, 90], [91, 92], [93, 100], [101, 104], [105, 107], [108, 112], [113, 119], [119, 120], [121, 125], [125, 128], [129, 132], [133, 136], [137, 148], [149, 151], [151, 152]]], ["# ::snt Lewis sent a bicycle to Sam, but it never arrived.\n# ::tokens [\"Lewis\", \"sent\", \"a\", \"bicycle\", \"to\", \"Sam\", \",\", \"but\", \"it\", \"never\", \"arrived\", \".\"]\n# ::lemmas [\"Lewis\", \"send\", \"a\", \"bicycle\", \"to\", \"Sam\", \",\", \"but\", \"it\", \"never\", \"arrive\", \".\"]\n# ::alignments 0-1.2.1.1.1 1-1.2 3-1.1.2 5-1.2.3.1.1 10-1.1\n(h / have-concession-91\n   :ARG1 (a / arrive-01~e.10\n            :polarity -\n            :ARG1 (b / bicycle~e.3)\n            :time (e / ever))\n   :ARG2 (s / send-01~e.1\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Lewis\"~e.0))\n            :ARG1 b\n            :ARG2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Sam\"~e.5))))", [[0, 5], [6, 10], [11, 12], [13, 20], [21, 23], [24, 27], [27, 28], [29, 32], [33, 35], [36, 41], [42, 49], [49, 50]]], ["# ::snt Lewis shipped a bicycle to Sam, but it never arrived.\n# ::tokens [\"Lewis\", \"shipped\", \"a\", \"bicycle\", \"to\", \"Sam\", \",\", \"but\", \"it\", \"never\", \"arrived\", \".\"]\n# ::lemmas [\"Lewis\", \"ship\", \"a\", \"bicycle\", \"to\", \"Sam\", \",\", \"but\", \"it\", \"never\", \"arrive\", \".\"]\n# ::alignments 0-1.2.1.1.1 1-1.2 3-1.1.2 5-1.2.3.1.1 10-1.1\n(h / have-concession-91\n   :ARG1 (a / arrive-01~e.10\n            :polarity -\n            :ARG1 (b / bicycle~e.3)\n            :time (e / ever))\n   :ARG2 (s / ship-01~e.1\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Lewis\"~e.0))\n            :ARG1 b\n            :ARG2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Sam\"~e.5))))", [[0, 5], [6, 13], [14, 15], [16, 23], [24, 26], [27, 30], [30, 31], [32, 35], [36, 38], [39, 44], [45, 52], [52, 53]]], ["# ::snt Robin arrived halfway at the station.\n# ::tokens [\"Robin\", \"arrived\", \"halfway\", \"at\", \"the\", \"station\", \".\"]\n# ::lemmas [\"Robin\", \"arrive\", \"halfway\", \"at\", \"the\", \"station\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.3 5-1.2\n(a / arrive-01~e.1\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Robin\"~e.0))\n   :ARG4 (s / station~e.5)\n   :extent (h / halfway~e.2))", [[0, 5], [6, 13], [14, 21], [22, 24], [25, 28], [29, 36], [36, 37]]], ["# ::snt You could give a headache to a Tylenol.\n# ::tokens [\"You\", \"could\", \"give\", \"a\", \"headache\", \"to\", \"a\", \"Tylenol\", \".\"]\n# ::lemmas [\"you\", \"could\", \"give\", \"a\", \"headache\", \"to\", \"a\", \"Tylenol\", \".\"]\n# ::alignments 0-1.1.1 2-1.1 4-1.1.2 7-1.1.3.1.1\n(p / possible-01\n   :ARG1 (g / give-01~e.2\n            :ARG0 (y / you~e.0)\n            :ARG1 (h / headache~e.4)\n            :ARG2 (p2 / product\n                      :name (n / name\n                               :op1 \"Tylenol\"~e.7))))", [[0, 3], [4, 9], [10, 14], [15, 16], [17, 25], [26, 28], [29, 30], [31, 38], [38, 39]]], ["# ::snt Gina filled the pitcher with lemonade.\n# ::tokens [\"Gina\", \"filled\", \"the\", \"pitcher\", \"with\", \"lemonade\", \".\"]\n# ::lemmas [\"Gina\", \"fill\", \"the\", \"pitcher\", \"with\", \"lemonade\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 5-1.3\n(f / fill-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Gina\"~e.0))\n   :ARG1 (p2 / pitcher~e.3)\n   :ARG2 (l / lemonade~e.5))", [[0, 4], [5, 11], [12, 15], [16, 23], [24, 28], [29, 37], [37, 38]]], ["# ::snt This metal won't pound.\n# ::tokens [\"This\", \"metal\", \"wo\", \"n't\", \"pound\", \".\"]\n# ::lemmas [\"this\", \"metal\", \"will\", \"not\", \"pound\", \".\"]\n# ::alignments 0-1.2.1 1-1.2 4-1\n(p / pound-01~e.4\n   :polarity -\n   :ARG0 (m / metal~e.1\n            :mod (t / this~e.0)))", [[0, 4], [5, 10], [11, 13], [13, 16], [17, 22], [22, 23]]], ["# ::snt A dove appeared from the magician's sleeve.\n# ::tokens [\"A\", \"dove\", \"appeared\", \"from\", \"the\", \"magician\", \"'s\", \"sleeve\", \".\"]\n# ::lemmas [\"a\", \"dove\", \"appear\", \"from\", \"the\", \"magician\", \"'s\", \"sleeve\", \".\"]\n# ::alignments 1-1.1 2-1 5-1.2.1 7-1.2\n(a / appear-01~e.2\n   :ARG1 (d / dove~e.1)\n   :location (s / sleeve~e.7\n                :part-of (m / magician~e.5)))", [[0, 1], [2, 6], [7, 15], [16, 20], [21, 24], [25, 33], [33, 35], [36, 42], [42, 43]]], ["# ::snt Mike ate the cake.\n# ::tokens [\"Mike\", \"ate\", \"the\", \"cake\", \".\"]\n# ::lemmas [\"Mike\", \"eat\", \"the\", \"cake\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2\n(e / eat-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mike\"~e.0))\n   :ARG1 (c / cake~e.3))", [[0, 4], [5, 8], [9, 12], [13, 17], [17, 18]]], ["# ::snt Mike ate.\n# ::tokens [\"Mike\", \"ate\", \".\"]\n# ::lemmas [\"Mike\", \"eat\", \".\"]\n# ::alignments 0-1.1.1.1 1-1\n(e / eat-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mike\"~e.0)))", [[0, 4], [5, 8], [8, 9]]], ["# ::snt This pen doesn't write.\n# ::tokens [\"This\", \"pen\", \"does\", \"n't\", \"write\", \".\"]\n# ::lemmas [\"this\", \"pen\", \"do\", \"not\", \"write\", \".\"]\n# ::alignments 0-1.2.1 1-1.2 4-1\n(w / write-01~e.4\n   :polarity -\n   :ARG0 (p / pen~e.1\n            :mod (t / this~e.0)))", [[0, 4], [5, 8], [9, 13], [13, 16], [17, 22], [22, 23]]], ["# ::snt Faustina. sprayed at the lilies.\n# ::tokens [\"Faustina\", \".\", \"sprayed\", \"at\", \"the\", \"lilies\", \".\"]\n# ::lemmas [\"Faustina\", \".\", \"spray\", \"at\", \"the\", \"lily\", \".\"]\n# ::alignments 0-1.1.1.1 2-1.2 5-1.2.1\n(m / multi-sentence\n   :snt1 (c / city\n            :name (n / name\n                     :op1 \"Faustina\"~e.0))\n   :snt2 (s / spray-01~e.2\n            :ARG2 (l / lily~e.5)))", [[0, 8], [8, 9], [10, 17], [18, 20], [21, 24], [25, 31], [31, 32]]], ["# ::snt The architect selected the couple a house.\n# ::tokens [\"The\", \"architect\", \"selected\", \"the\", \"couple\", \"a\", \"house\", \".\"]\n# ::lemmas [\"the\", \"architect\", \"select\", \"the\", \"couple\", \"a\", \"house\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.3 6-1.2\n(s / select-01~e.2\n   :ARG0 (a / architect~e.1)\n   :ARG1 (h / house~e.6)\n   :ARG4 (c / couple~e.4))", [[0, 3], [4, 13], [14, 22], [23, 26], [27, 33], [34, 35], [36, 41], [41, 42]]], ["# ::snt The square is seething with people.\n# ::tokens [\"The\", \"square\", \"is\", \"seething\", \"with\", \"people\", \".\"]\n# ::lemmas [\"the\", \"square\", \"be\", \"seethe\", \"with\", \"people\", \".\"]\n# ::alignments 1-1.2 3-1\n(s / seethe-01~e.3\n   :ARG0 (p / person)\n   :ARG1 (s2 / square~e.1))", [[0, 3], [4, 10], [11, 13], [14, 22], [23, 27], [28, 34], [34, 35]]], ["# ::snt I whipped a froth from the eggs.\n# ::tokens [\"I\", \"whipped\", \"a\", \"froth\", \"from\", \"the\", \"eggs\", \".\"]\n# ::lemmas [\"i\", \"whip\", \"a\", \"froth\", \"from\", \"the\", \"egg\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 6-1.3\n(w / whip-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (f / froth~e.3)\n   :source (e / egg~e.6))", [[0, 1], [2, 9], [10, 11], [12, 17], [18, 22], [23, 26], [27, 31], [31, 32]]], ["# ::snt The twig broke off the branch.\n# ::tokens [\"The\", \"twig\", \"broke\", \"off\", \"the\", \"branch\", \".\"]\n# ::lemmas [\"the\", \"twig\", \"break\", \"off\", \"the\", \"branch\", \".\"]\n# ::alignments 1-1.1 2-1 5-1.2\n(b / break-01~e.2\n   :ARG0 (t / twig~e.1)\n   :ARG1 (b2 / branch~e.5))", [[0, 3], [4, 8], [9, 14], [15, 18], [19, 22], [23, 29], [29, 30]]], ["# ::snt Brian threw the stick against the fence.\n# ::tokens [\"Brian\", \"threw\", \"the\", \"stick\", \"against\", \"the\", \"fence\", \".\"]\n# ::lemmas [\"Brian\", \"throw\", \"the\", \"stick\", \"against\", \"the\", \"fence\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 4-1.3 6-1.3.1\n(t / throw-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Brian\"~e.0))\n   :ARG1 (s / stick~e.3)\n   :ARG2 (a / against~e.4\n            :op1 (f / fence~e.6)))", [[0, 5], [6, 11], [12, 15], [16, 21], [22, 29], [30, 33], [34, 39], [39, 40]]], ["# ::snt The hammer broke the window.\n# ::tokens [\"The\", \"hammer\", \"broke\", \"the\", \"window\", \".\"]\n# ::lemmas [\"the\", \"hammer\", \"break\", \"the\", \"window\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2\n(b / break-01~e.2\n   :ARG0 (h / hammer~e.1)\n   :ARG1 (w / window~e.4))", [[0, 3], [4, 10], [11, 16], [17, 20], [21, 27], [27, 28]]], ["# ::snt Doug ate the ice cream with a spoon.\n# ::tokens [\"Doug\", \"ate\", \"the\", \"ice\", \"cream\", \"with\", \"a\", \"spoon\", \".\"]\n# ::lemmas [\"Doug\", \"eat\", \"the\", \"ice\", \"cream\", \"with\", \"a\", \"spoon\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 7-1.3\n(e / eat-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Doug\"~e.0))\n   :ARG1 (ii / ice-cream)\n   :instrument (s / spoon~e.7))", [[0, 4], [5, 8], [9, 12], [13, 16], [17, 22], [23, 27], [28, 29], [30, 35], [35, 36]]], ["# ::snt His innocence was established by the letter.\n# ::tokens [\"His\", \"innocence\", \"was\", \"established\", \"by\", \"the\", \"letter\", \".\"]\n# ::lemmas [\"his\", \"innocence\", \"be\", \"establish\", \"by\", \"the\", \"letter\", \".\"]\n# ::alignments 1-1.2 3-1 6-1.1\n(e / establish-01~e.3\n   :ARG0 (l / letter~e.6)\n   :ARG1 (ii / innocent-01~e.1\n             :ARG1 (h / he)))", [[0, 3], [4, 13], [14, 17], [18, 29], [30, 32], [33, 36], [37, 43], [43, 44]]], ["# ::snt David constructed a house from those new bricks.\n# ::tokens [\"David\", \"constructed\", \"a\", \"house\", \"from\", \"those\", \"new\", \"bricks\", \".\"]\n# ::lemmas [\"David\", \"construct\", \"a\", \"house\", \"from\", \"those\", \"new\", \"brick\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 6-1.3.1 7-1.3\n(c / construct-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"~e.0))\n   :ARG1 (h / house~e.3)\n   :ARG2 (b / brick~e.7\n            :ARG1-of (n2 / new-01~e.6)\n            :mod (t / that)))", [[0, 5], [6, 17], [18, 19], [20, 25], [26, 30], [31, 36], [37, 40], [41, 47], [47, 48]]], ["# ::snt I bought a ticket for $5.\n# ::tokens [\"I\", \"bought\", \"a\", \"ticket\", \"for\", \"$\", \"5\", \".\"]\n# ::lemmas [\"i\", \"buy\", \"a\", \"ticket\", \"for\", \"$\", \"5\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 6-1.2.1.1.1\n(b / buy-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (t / ticket~e.3\n            :ARG1-of (c / cost-01\n                        :ARG2 (m / monetary-quantity\n                                 :quant 5~e.6\n                                 :unit (d / dollar)))))", [[0, 1], [2, 8], [9, 10], [11, 17], [18, 21], [22, 23], [23, 24], [24, 25]]], ["# ::snt This meat cuts itself.\n# ::tokens [\"This\", \"meat\", \"cuts\", \"itself\", \".\"]\n# ::lemmas [\"this\", \"meat\", \"cut\", \"itself\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1\n(c / cut-02~e.2\n   :ARG0 (m / meat~e.1\n            :mod (t / this~e.0)\n            :ARG1-of c))", [[0, 4], [5, 9], [10, 14], [15, 21], [21, 22]]], ["# ::snt This book just buys itself.\n# ::tokens [\"This\", \"book\", \"just\", \"buys\", \"itself\", \".\"]\n# ::lemmas [\"this\", \"book\", \"just\", \"buy\", \"itself\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1.2 3-1\n(b / buy-01~e.3\n   :ARG0 (b2 / book~e.1\n             :mod (t / this~e.0)\n             :ARG3-of b)\n   :mod (j / just~e.2))", [[0, 4], [5, 9], [10, 14], [15, 19], [20, 26], [26, 27]]], ["# ::snt An old woman lives in the woods.\n# ::tokens [\"An\", \"old\", \"woman\", \"lives\", \"in\", \"the\", \"woods\", \".\"]\n# ::lemmas [\"an\", \"old\", \"woman\", \"live\", \"in\", \"the\", \"wood\", \".\"]\n# ::alignments 1-1.1.1 2-1.1 3-1 6-1.2\n(l / live-01~e.3\n   :ARG0 (w / woman~e.2\n            :mod (o / old~e.1))\n   :location (w2 / woods~e.6))", [[0, 2], [3, 6], [7, 12], [13, 18], [19, 21], [22, 25], [26, 31], [31, 32]]], ["# ::snt Onto the table jumped a cat.\n# ::tokens [\"Onto\", \"the\", \"table\", \"jumped\", \"a\", \"cat\", \".\"]\n# ::lemmas [\"onto\", \"the\", \"table\", \"jump\", \"a\", \"cat\", \".\"]\n# ::alignments 0-1.3 2-1.1.1 3-1 5-1.2\n(j / jump-03~e.3\n   :ARG0 (p / person\n            :location (t / table~e.2))\n   :ARG1 (c / cat~e.5)\n   :direction (o / onto~e.0))", [[0, 4], [5, 8], [9, 14], [15, 21], [22, 23], [24, 27], [27, 28]]], ["# ::snt The men were able to mine more gold from the abandoned mine.\n# ::tokens [\"The\", \"men\", \"were\", \"able\", \"to\", \"mine\", \"more\", \"gold\", \"from\", \"the\", \"abandoned\", \"mine\", \".\"]\n# ::lemmas [\"the\", \"man\", \"be\", \"able\", \"to\", \"mine\", \"more\", \"gold\", \"from\", \"the\", \"abandon\", \"mine\", \".\"]\n# ::alignments 1-1.1.1 5-1.1 6-1.1.2.1 7-1.1.2 10-1.1.3.1 11-1.1.3\n(p / possible-01\n   :ARG1 (m / mine-01~e.5\n            :ARG0 (m2 / man~e.1)\n            :ARG1 (g / gold~e.7\n                     :mod (m3 / more~e.6))\n            :source (m4 / mine~e.11\n                        :ARG1-of (a / abandon-01~e.10))))", [[0, 3], [4, 7], [8, 12], [13, 17], [18, 20], [21, 25], [26, 30], [31, 35], [36, 40], [41, 44], [45, 54], [55, 59], [59, 60]]], ["# ::snt She talked her way out of the class.\n# ::tokens [\"She\", \"talked\", \"her\", \"way\", \"out\", \"of\", \"the\", \"class\", \".\"]\n# ::lemmas [\"she\", \"talk\", \"her\", \"way\", \"out\", \"of\", \"the\", \"class\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 7-1.2.2.1\n(t / talk-01~e.1\n   :ARG0 (s / she~e.0)\n   :ARG1 (w / way~e.3\n            :poss s\n            :direction (o / out-of\n                          :op1 (c / class~e.7))))", [[0, 3], [4, 10], [11, 14], [15, 18], [19, 22], [23, 25], [26, 29], [30, 35], [35, 36]]], ["# ::snt This list includes my name on it.\n# ::tokens [\"This\", \"list\", \"includes\", \"my\", \"name\", \"on\", \"it\", \".\"]\n# ::lemmas [\"this\", \"list\", \"include\", \"my\", \"name\", \"on\", \"it\", \".\"]\n# ::alignments 0-1.2.2 1-1.2.1 2-1 4-1.1\n(ii / include-01~e.2\n    :ARG1 (n / name~e.4\n             :poss (ii2 / i))\n    :ARG2 (t / thing\n             :ARG2-of (l / list-01~e.1)\n             :mod (t2 / this~e.0)))", [[0, 4], [5, 9], [10, 18], [19, 21], [22, 26], [27, 29], [30, 32], [32, 33]]], ["# ::snt I put the books.\n# ::tokens [\"I\", \"put\", \"the\", \"books\", \".\"]\n# ::lemmas [\"i\", \"put\", \"the\", \"book\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2\n(p / put-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (b / book~e.3))", [[0, 1], [2, 5], [6, 9], [10, 15], [15, 16]]], ["# ::snt I funneled the mixture from the bottle.\n# ::tokens [\"I\", \"funneled\", \"the\", \"mixture\", \"from\", \"the\", \"bottle\", \".\"]\n# ::lemmas [\"i\", \"funnel\", \"the\", \"mixture\", \"from\", \"the\", \"bottle\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 6-1.3\n(f / funnel-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (m / mixture~e.3)\n   :ARG2 (b / bottle~e.6))", [[0, 1], [2, 10], [11, 14], [15, 22], [23, 27], [28, 31], [32, 38], [38, 39]]], ["# ::snt I lifted him the books.\n# ::tokens [\"I\", \"lifted\", \"him\", \"the\", \"books\", \".\"]\n# ::lemmas [\"i\", \"lift\", \"he\", \"the\", \"book\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.3 4-1.2\n(l / lift-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (b / book~e.4)\n   :ARG4 (h / he~e.2))", [[0, 1], [2, 8], [9, 12], [13, 16], [17, 22], [22, 23]]], ["# ::snt I lifted the paperback book onto the table.\n# ::tokens [\"I\", \"lifted\", \"the\", \"paperback\", \"book\", \"onto\", \"the\", \"table\", \".\"]\n# ::lemmas [\"i\", \"lift\", \"the\", \"paperback\", \"book\", \"onto\", \"the\", \"table\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1 4-1.2 7-1.3\n(l / lift-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (b / book~e.4\n            :mod (p / paperback~e.3))\n   :ARG4 (t / table~e.7))", [[0, 1], [2, 8], [9, 12], [13, 22], [23, 27], [28, 32], [33, 36], [37, 42], [42, 43]]], ["# ::snt The king banished the army of the general.\n# ::tokens [\"The\", \"king\", \"banished\", \"the\", \"army\", \"of\", \"the\", \"general\", \".\"]\n# ::lemmas [\"the\", \"king\", \"banish\", \"the\", \"army\", \"of\", \"the\", \"general\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2 7-1.2.1.1.1\n(b / banish-01~e.2\n   :ARG0 (k / king~e.1)\n   :ARG1 (a / army~e.4\n            :consist-of (p / person\n                           :ARG0-of (h / have-org-role-91\n                                       :ARG2 (g / general~e.7)))))", [[0, 3], [4, 8], [9, 17], [18, 21], [22, 26], [27, 29], [30, 33], [34, 41], [41, 42]]], ["# ::snt Doug cleared dishes from the table.\n# ::tokens [\"Doug\", \"cleared\", \"dishes\", \"from\", \"the\", \"table\", \".\"]\n# ::lemmas [\"Doug\", \"clear\", \"dish\", \"from\", \"the\", \"table\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.3 5-1.2\n(c / clear-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Doug\"~e.0))\n   :ARG1 (t / table~e.5)\n   :ARG2 (d / dish~e.2))", [[0, 4], [5, 12], [13, 19], [20, 24], [25, 28], [29, 34], [34, 35]]], ["# ::snt Doug cleared the table of dishes.\n# ::tokens [\"Doug\", \"cleared\", \"the\", \"table\", \"of\", \"dishes\", \".\"]\n# ::lemmas [\"Doug\", \"clear\", \"the\", \"table\", \"of\", \"dish\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 5-1.2.1\n(c / clear-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Doug\"~e.0))\n   :ARG1 (t / table~e.3\n            :consist-of (d / dish~e.5)))", [[0, 4], [5, 12], [13, 16], [17, 22], [23, 25], [26, 32], [32, 33]]], ["# ::snt Brian was wiping behind the stove.\n# ::tokens [\"Brian\", \"was\", \"wiping\", \"behind\", \"the\", \"stove\", \".\"]\n# ::lemmas [\"Brian\", \"be\", \"wipe\", \"behind\", \"the\", \"stove\", \".\"]\n# ::alignments 0-1.1.1.1 2-1 3-1.2 5-1.2.1\n(w / wipe-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Brian\"~e.0))\n   :location (b / behind~e.3\n                :op1 (s / stove~e.5)))", [[0, 5], [6, 9], [10, 16], [17, 23], [24, 27], [28, 33], [33, 34]]], ["# ::snt The cook scrubbed the fish.\n# ::tokens [\"The\", \"cook\", \"scrubbed\", \"the\", \"fish\", \".\"]\n# ::lemmas [\"the\", \"cook\", \"scrub\", \"the\", \"fish\", \".\"]\n# ::alignments 1-1.1.1 2-1 4-1.2\n(s / scrub-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (c / cook-01~e.1))\n   :ARG1 (f / fish~e.4))", [[0, 3], [4, 8], [9, 17], [18, 21], [22, 26], [26, 27]]], ["# ::snt Amanda carried at the package.\n# ::tokens [\"Amanda\", \"carried\", \"at\", \"the\", \"package\", \".\"]\n# ::lemmas [\"Amanda\", \"carry\", \"at\", \"the\", \"package\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.2\n(c / carry-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Amanda\"~e.0))\n   :location (p2 / package~e.4))", [[0, 6], [7, 14], [15, 17], [18, 21], [22, 29], [29, 30]]], ["# ::snt Packages carry easily.\n# ::tokens [\"Packages\", \"carry\", \"easily\", \".\"]\n# ::lemmas [\"package\", \"carry\", \"easily\", \".\"]\n# ::alignments 0-1.1 1-1\n(c / carry-01~e.1\n   :ARG0 (p / pack~e.0)\n   :ARG1-of (e / easy-05))", [[0, 8], [9, 14], [15, 21], [21, 22]]], ["# ::snt Our paycheck contributed to her.\n# ::tokens [\"Our\", \"paycheck\", \"contributed\", \"to\", \"her\", \".\"]\n# ::lemmas [\"our\", \"paycheck\", \"contribute\", \"to\", \"she\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2\n(c / contribute-01~e.2\n   :ARG0 (p / paycheck~e.1\n            :poss (w / we))\n   :ARG2 (s / she~e.4))", [[0, 3], [4, 12], [13, 24], [25, 27], [28, 31], [31, 32]]], ["# ::snt Carmen obtained a spare part for Mary.\n# ::tokens [\"Carmen\", \"obtained\", \"a\", \"spare\", \"part\", \"for\", \"Mary\", \".\"]\n# ::lemmas [\"carman\", \"obtain\", \"a\", \"spare\", \"part\", \"for\", \"Mary\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1 4-1.2 6-1.3.1.1\n(o / obtain-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carmen\"~e.0))\n   :ARG1 (p2 / part~e.4\n             :ARG1-of (s / spare-02~e.3))\n   :ARG4 (p3 / person\n             :name (n2 / name\n                       :op1 \"Mary\"~e.6)))", [[0, 6], [7, 15], [16, 17], [18, 23], [24, 28], [29, 32], [33, 37], [37, 38]]], ["# ::snt She held the rail.\n# ::tokens [\"She\", \"held\", \"the\", \"rail\", \".\"]\n# ::lemmas [\"she\", \"hold\", \"the\", \"rail\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2\n(h / hold-01~e.1\n   :ARG0 (s / she~e.0)\n   :ARG1 (r / rail~e.3))", [[0, 3], [4, 8], [9, 12], [13, 17], [17, 18]]], ["# ::snt Steve tossed Anna the ball.\n# ::tokens [\"Steve\", \"tossed\", \"Anna\", \"the\", \"ball\", \".\"]\n# ::lemmas [\"Steve\", \"toss\", \"Anna\", \"the\", \"ball\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.3.1.1 4-1.2\n(t / toss-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Steve\"~e.0))\n   :ARG1 (b / ball~e.4)\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Anna\"~e.2)))", [[0, 5], [6, 12], [13, 17], [18, 21], [22, 26], [26, 27]]], ["# ::snt Paula hit the stick through the fence.\n# ::tokens [\"Paula\", \"hit\", \"the\", \"stick\", \"through\", \"the\", \"fence\", \".\"]\n# ::lemmas [\"Paula\", \"hit\", \"the\", \"stick\", \"through\", \"the\", \"fence\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 6-1.3\n(h / hit-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Paula\"~e.0))\n   :ARG1 (s / stick~e.3)\n   :path (f / fence~e.6))", [[0, 5], [6, 9], [10, 13], [14, 19], [20, 27], [28, 31], [32, 37], [37, 38]]], ["# ::snt Paula hit one stick against another.\n# ::tokens [\"Paula\", \"hit\", \"one\", \"stick\", \"against\", \"another\", \".\"]\n# ::lemmas [\"Paula\", \"hit\", \"one\", \"stick\", \"against\", \"another\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1 3-1.2 5-1.3.1\n(h / hit-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Paula\"~e.0))\n   :ARG1 (s / stick~e.3\n            :mod (o / one~e.2))\n   :ARG2 (s2 / stick\n             :mod (a / another~e.5)))", [[0, 5], [6, 9], [10, 13], [14, 19], [20, 27], [28, 35], [35, 36]]], ["# ::snt Paula spanked at the naughty child.\n# ::tokens [\"Paula\", \"spanked\", \"at\", \"the\", \"naughty\", \"child\", \".\"]\n# ::lemmas [\"Paula\", \"spank\", \"at\", \"the\", \"naughty\", \"child\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.2.1 5-1.2\n(s / spank-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Paula\"~e.0))\n   :ARG1 (c / child~e.5\n            :mod (n2 / naughty~e.4)))", [[0, 5], [6, 13], [14, 16], [17, 20], [21, 28], [29, 34], [34, 35]]], ["# ::snt Alison poked the needle against the cloth.\n# ::tokens [\"Alison\", \"poked\", \"the\", \"needle\", \"against\", \"the\", \"cloth\", \".\"]\n# ::lemmas [\"Alison\", \"poke\", \"the\", \"needle\", \"against\", \"the\", \"cloth\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 6-1.3\n(p / poke-01~e.1\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Alison\"~e.0))\n   :ARG1 (n2 / needle~e.3)\n   :ARG2 (c / cloth~e.6))", [[0, 6], [7, 12], [13, 16], [17, 23], [24, 31], [32, 35], [36, 41], [41, 42]]], ["# ::snt Alison poked at the cloth.\n# ::tokens [\"Alison\", \"poked\", \"at\", \"the\", \"cloth\", \".\"]\n# ::lemmas [\"Alison\", \"poke\", \"at\", \"the\", \"cloth\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.2\n(p / poke-01~e.1\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Alison\"~e.0))\n   :ARG1 (c / cloth~e.4))", [[0, 6], [7, 12], [13, 15], [16, 19], [20, 25], [25, 26]]], ["# ::snt Herman whipped the sugar into the cream.\n# ::tokens [\"Herman\", \"whipped\", \"the\", \"sugar\", \"into\", \"the\", \"cream\", \".\"]\n# ::lemmas [\"Herman\", \"whip\", \"the\", \"sugar\", \"into\", \"the\", \"cream\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 6-1.3\n(w / whip-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herman\"~e.0))\n   :ARG1 (s / sugar~e.3)\n   :destination (c / cream~e.6))", [[0, 6], [7, 14], [15, 18], [19, 24], [25, 29], [30, 33], [34, 39], [39, 40]]], ["# ::snt Herman whipped the sugar and the cream together.\n# ::tokens [\"Herman\", \"whipped\", \"the\", \"sugar\", \"and\", \"the\", \"cream\", \"together\", \".\"]\n# ::lemmas [\"Herman\", \"whip\", \"the\", \"sugar\", \"and\", \"the\", \"cream\", \"together\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1 4-1.2 6-1.2.2 7-1.3\n(w / whip-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herman\"~e.0))\n   :ARG1 (a / and~e.4\n            :op1 (s / sugar~e.3)\n            :op2 (c / cream~e.6))\n   :manner (t / together~e.7))", [[0, 6], [7, 14], [15, 18], [19, 24], [25, 28], [29, 32], [33, 38], [39, 47], [47, 48]]], ["# ::snt Linda taped the picture on the wall.\n# ::tokens [\"Linda\", \"taped\", \"the\", \"picture\", \"on\", \"the\", \"wall\", \".\"]\n# ::lemmas [\"Linda\", \"tape\", \"the\", \"picture\", \"on\", \"the\", \"wall\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 6-1.3\n(t / tape-01~e.1\n   :ARG0 (l / Linda~e.0)\n   :ARG1 (p / picture~e.3)\n   :ARG2 (w / wall~e.6))", [[0, 5], [6, 11], [12, 15], [16, 23], [24, 26], [27, 30], [31, 35], [35, 36]]], ["# ::snt Smith inscribed his name on the ring.\n# ::tokens [\"Smith\", \"inscribed\", \"his\", \"name\", \"on\", \"the\", \"ring\", \".\"]\n# ::lemmas [\"Smith\", \"inscribe\", \"his\", \"name\", \"on\", \"the\", \"ring\", \".\"]\n# ::alignments 0-1.1.1.1 3-1.1.1.r 6-1.3\n(p / place-01\n   :ARG0 (p2 / person\n             :name~e.3 (n / name\n                          :op1 \"Smith\"~e.0\n                          :ARG1-of p))\n   :poss p2\n   :ARG2 (r / ring~e.6))", [[0, 5], [6, 15], [16, 19], [20, 24], [25, 27], [28, 31], [32, 36], [36, 37]]], ["# ::snt The jeweller printed the name.\n# ::tokens [\"The\", \"jeweller\", \"printed\", \"the\", \"name\", \".\"]\n# ::lemmas [\"the\", \"jeweller\", \"print\", \"the\", \"name\", \".\"]\n# ::alignments 1-1.1.1.1 2-1 4-1.2\n(p / print-out-02~e.2\n   :ARG0 (p2 / person\n             :ARG0-of (s / sell-01\n                         :ARG1 (j / jeweller~e.1)))\n   :ARG1 (n / name~e.4))", [[0, 3], [4, 12], [13, 20], [21, 24], [25, 29], [29, 30]]], ["# ::snt Martha carves toys.\n# ::tokens [\"Martha\", \"carves\", \"toys\", \".\"]\n# ::lemmas [\"Martha\", \"carve\", \"toy\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2\n(c / carves-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Martha\"~e.0))\n   :ARG1 (t / toy~e.2))", [[0, 6], [7, 13], [14, 18], [18, 19]]], ["# ::snt A sandwich fixed.\n# ::tokens [\"A\", \"sandwich\", \"fixed\", \".\"]\n# ::lemmas [\"a\", \"sandwich\", \"fix\", \".\"]\n# ::alignments 1-1.1 2-1\n(f / fix-02~e.2\n   :ARG1 (s / sandwich~e.1))", [[0, 1], [2, 10], [11, 16], [16, 17]]], ["# ::snt David constructed a house for me.\n# ::tokens [\"David\", \"constructed\", \"a\", \"house\", \"for\", \"me\", \".\"]\n# ::lemmas [\"David\", \"construct\", \"a\", \"house\", \"for\", \"i\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 5-1.3\n(c / construct-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"David\"~e.0))\n   :ARG1 (h / house~e.3)\n   :beneficiary (ii / i~e.5))", [[0, 5], [6, 17], [18, 19], [20, 25], [26, 29], [30, 32], [32, 33]]], ["# ::snt The press conjectured Smith as the appointee.\n# ::tokens [\"The\", \"press\", \"conjectured\", \"Smith\", \"as\", \"the\", \"appointee\", \".\"]\n# ::lemmas [\"the\", \"press\", \"conjecture\", \"Smith\", \"as\", \"the\", \"appointee\", \".\"]\n# ::alignments 1-1.1 2-1 3-1.2.1.1.1 6-1.2\n(c / conjecture-01~e.2\n   :ARG0 (p / press~e.1)\n   :ARG1 (a / appoint-01~e.6\n            :ARG1 (p2 / person\n                      :name (n / name\n                               :op1 \"Smith\"~e.3))))", [[0, 3], [4, 9], [10, 21], [22, 27], [28, 30], [31, 34], [35, 44], [44, 45]]], ["# ::snt I spotted the runaway cat.\n# ::tokens [\"I\", \"spotted\", \"the\", \"runaway\", \"cat\", \".\"]\n# ::lemmas [\"i\", \"spot\", \"the\", \"runaway\", \"cat\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1 4-1.2\n(s / spot-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (c / cat~e.4\n            :ARG0-of (r / runaway-01~e.3)))", [[0, 1], [2, 9], [10, 13], [14, 21], [22, 25], [25, 26]]], ["# ::snt That pea soup tasted delicious.\n# ::tokens [\"That\", \"pea\", \"soup\", \"tasted\", \"delicious\", \".\"]\n# ::lemmas [\"that\", \"pea\", \"soup\", \"taste\", \"delicious\", \".\"]\n# ::alignments 0-1.1.2 1-1.1.1 2-1.1 3-1 4-1.2\n(t / taste-02~e.3\n   :ARG1 (s / soup~e.2\n            :mod (p / pea~e.1)\n            :mod (t2 / that~e.0))\n   :ARG2 (d / delicious~e.4))", [[0, 4], [5, 8], [9, 13], [14, 20], [21, 30], [30, 31]]], ["# ::snt They praised them volunteers.\n# ::tokens [\"They\", \"praised\", \"them\", \"volunteers\", \".\"]\n# ::lemmas [\"they\", \"praise\", \"they\", \"volunteer\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1.1 3-1.2.1\n(p / praise-01~e.1\n   :ARG0 (t / they~e.0)\n   :ARG1 (p2 / person\n             :ARG0-of (v / volunteer-01~e.3\n                         :ARG1 (t2 / they~e.2))))", [[0, 4], [5, 12], [13, 17], [18, 28], [28, 29]]], ["# ::snt I hunted for game in the woods.\n# ::tokens [\"I\", \"hunted\", \"for\", \"game\", \"in\", \"the\", \"woods\", \".\"]\n# ::lemmas [\"i\", \"hunt\", \"for\", \"game\", \"in\", \"the\", \"wood\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 6-1.3\n(h / hunt-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (g / game~e.3)\n   :location (w / woods~e.6))", [[0, 1], [2, 8], [9, 12], [13, 17], [18, 20], [21, 24], [25, 30], [30, 31]]], ["# ::snt Brenda met with Molly.\n# ::tokens [\"Brenda\", \"met\", \"with\", \"Molly\", \".\"]\n# ::lemmas [\"Brenda\", \"meet\", \"with\", \"Molly\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1.1\n(m / meet-03~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Brenda\"~e.0))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Molly\"~e.3)))", [[0, 6], [7, 10], [11, 15], [16, 21], [21, 22]]], ["# ::snt Susan whispered about the party.\n# ::tokens [\"Susan\", \"whispered\", \"about\", \"the\", \"party\", \".\"]\n# ::lemmas [\"Susan\", \"whisper\", \"about\", \"the\", \"party\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.2\n(w / whisper-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Susan\"~e.0))\n   :ARG1 (p2 / party~e.4))", [[0, 5], [6, 15], [16, 21], [22, 25], [26, 31], [31, 32]]], ["# ::snt Heather cabled to Sara.\n# ::tokens [\"Heather\", \"cabled\", \"to\", \"Sara\", \".\"]\n# ::lemmas [\"Heather\", \"cable\", \"to\", \"Sara\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1.1\n(c / cabled-02~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Heather\"~e.0))\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Sara\"~e.3)))", [[0, 7], [8, 14], [15, 17], [18, 22], [22, 23]]], ["# ::snt Ellen conferred to Helen about the problem.\n# ::tokens [\"Ellen\", \"conferred\", \"to\", \"Helen\", \"about\", \"the\", \"problem\", \".\"]\n# ::lemmas [\"Ellen\", \"confer\", \"to\", \"Helen\", \"about\", \"the\", \"problem\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.3.1.1 6-1.2\n(c / confer-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Ellen\"~e.0))\n   :ARG1 (p2 / problem~e.6)\n   :ARG2 (p3 / person\n             :name (n2 / name\n                       :op1 \"Helen\"~e.3)))", [[0, 5], [6, 15], [16, 18], [19, 24], [25, 30], [31, 34], [35, 42], [42, 43]]], ["# ::snt Ellen said a few words to Helen.\n# ::tokens [\"Ellen\", \"said\", \"a\", \"few\", \"words\", \"to\", \"Helen\", \".\"]\n# ::lemmas [\"Ellen\", \"say\", \"a\", \"few\", \"word\", \"to\", \"Helen\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1 4-1.2 6-1.3.1.1\n(s / say-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Ellen\"~e.0))\n   :ARG1 (w / word~e.4\n            :quant (f / few~e.3))\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Helen\"~e.6)))", [[0, 5], [6, 10], [11, 12], [13, 16], [17, 22], [23, 25], [26, 31], [31, 32]]], ["# ::snt Ellen said Helen something.\n# ::tokens [\"Ellen\", \"said\", \"Helen\", \"something\", \".\"]\n# ::lemmas [\"Ellen\", \"say\", \"Helen\", \"something\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.3.1.1 3-1.2\n(s / say-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Ellen\"~e.0))\n   :ARG1 (s2 / something~e.3)\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Helen\"~e.2)))", [[0, 5], [6, 10], [11, 16], [17, 26], [26, 27]]], ["# ::snt Ellen warned about the traffic jam.\n# ::tokens [\"Ellen\", \"warned\", \"about\", \"the\", \"traffic\", \"jam\", \".\"]\n# ::lemmas [\"Ellen\", \"warn\", \"about\", \"the\", \"traffic\", \"jam\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.2.1 5-1.2\n(w / warn-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Ellen\"~e.0))\n   :ARG1 (j / jam-01~e.5\n            :ARG1 (t / traffic~e.4)))", [[0, 5], [6, 12], [13, 18], [19, 22], [23, 30], [31, 34], [34, 35]]], ["# ::snt The fork ate the peach.\n# ::tokens [\"The\", \"fork\", \"ate\", \"the\", \"peach\", \".\"]\n# ::lemmas [\"the\", \"fork\", \"eat\", \"the\", \"peach\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2\n(e / eat-01~e.2\n   :ARG0 (f / fork~e.1)\n   :ARG1 (p / peach~e.4))", [[0, 3], [4, 8], [9, 12], [13, 16], [17, 22], [22, 23]]], ["# ::snt Paul breathed on Mary.\n# ::tokens [\"Paul\", \"breathed\", \"on\", \"Mary\", \".\"]\n# ::lemmas [\"Paul\", \"breathe\", \"on\", \"Mary\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1.1\n(b / breathe-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Paul\"~e.0))\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Mary\"~e.3)))", [[0, 4], [5, 13], [14, 16], [17, 21], [21, 22]]], ["# ::snt She laughed in embarrassment.\n# ::tokens [\"She\", \"laughed\", \"in\", \"embarrassment\", \".\"]\n# ::lemmas [\"she\", \"laugh\", \"in\", \"embarrassment\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2\n(l / laugh-01~e.1\n   :ARG0 (s / she~e.0)\n   :manner (e / embarrass-01~e.3\n              :ARG1 s))", [[0, 3], [4, 11], [12, 14], [15, 28], [28, 29]]], ["# ::snt Marlene dressed.\n# ::tokens [\"Marlene\", \"dressed\", \".\"]\n# ::lemmas [\"Marlene\", \"dress\", \".\"]\n# ::alignments 0-1.1.1.1 1-1\n(d / dress-01~e.1\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Marlene\"~e.0)))", [[0, 7], [8, 15], [15, 16]]], ["# ::snt Sheila groomed the horse.\n# ::tokens [\"Sheila\", \"groomed\", \"the\", \"horse\", \".\"]\n# ::lemmas [\"Sheila\", \"groom\", \"the\", \"horse\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2\n(g / groom-03~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sheila\"~e.0))\n   :ARG1 (h / horse~e.3))", [[0, 6], [7, 14], [15, 18], [19, 24], [24, 25]]], ["# ::snt The horse groomed.\n# ::tokens [\"The\", \"horse\", \"groomed\", \".\"]\n# ::lemmas [\"the\", \"horse\", \"groom\", \".\"]\n# ::alignments 1-1.1 2-1\n(g / groom-02~e.2\n   :ARG1 (h / horse~e.1))", [[0, 3], [4, 9], [10, 17], [17, 18]]], ["# ::snt Snow White poisoned.\n# ::tokens [\"Snow\", \"White\", \"poisoned\", \".\"]\n# ::lemmas [\"Snow\", \"White\", \"poison\", \".\"]\n# ::alignments 0-1.1.1.1 1-1.1.1.2 2-1\n(p / poison-01~e.2\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Snow\"~e.0\n                      :op2 \"White\"~e.1)))", [[0, 4], [5, 10], [11, 19], [19, 20]]], ["# ::snt The director flashed the lights.\n# ::tokens [\"The\", \"director\", \"flashed\", \"the\", \"lights\", \".\"]\n# ::lemmas [\"the\", \"director\", \"flash\", \"the\", \"light\", \".\"]\n# ::alignments 1-1.1.1.1 2-1 4-1.2\n(f / flash-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                        :ARG2 (d / director~e.1)))\n   :ARG1 (l / light~e.4))", [[0, 3], [4, 12], [13, 20], [21, 24], [25, 31], [31, 32]]], ["# ::snt Water gushed through the streets.\n# ::tokens [\"Water\", \"gushed\", \"through\", \"the\", \"streets\", \".\"]\n# ::lemmas [\"water\", \"gush\", \"through\", \"the\", \"street\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2\n(g / gush-01~e.1\n   :ARG1 (w / water~e.0)\n   :path (s / street~e.4))", [[0, 5], [6, 12], [13, 20], [21, 24], [25, 32], [32, 33]]], ["# ::snt Over the fire bubbled a fragrant stew.\n# ::tokens [\"Over\", \"the\", \"fire\", \"bubbled\", \"a\", \"fragrant\", \"stew\", \".\"]\n# ::lemmas [\"over\", \"the\", \"fire\", \"bubble\", \"a\", \"fragrant\", \"stew\", \".\"]\n# ::alignments 0-1.2 2-1.2.1 5-1.1.1 6-1.1\n(p / pour-01\n   :ARG1 (s / stew~e.6\n            :mod (f / fragrant~e.5))\n   :location (o / over~e.0\n                :op1 (f2 / fire~e.2)))", [[0, 4], [5, 8], [9, 13], [14, 21], [22, 23], [24, 32], [33, 37], [37, 38]]], ["# ::snt Tony bent the rod.\n# ::tokens [\"Tony\", \"bent\", \"the\", \"rod\", \".\"]\n# ::lemmas [\"Tony\", \"bend\", \"the\", \"rod\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2\n(b / bend-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tony\"~e.0))\n   :ARG1 (r / rod~e.3))", [[0, 4], [5, 9], [10, 13], [14, 17], [17, 18]]], ["# ::snt Jennifer baked the potatoes.\n# ::tokens [\"Jennifer\", \"baked\", \"the\", \"potatoes\", \".\"]\n# ::lemmas [\"Jennifer\", \"bake\", \"the\", \"potato\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2\n(b / bake-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jennifer\"~e.0))\n   :ARG1 (p2 / potato~e.3))", [[0, 8], [9, 14], [15, 18], [19, 27], [27, 28]]], ["# ::snt Oil soared in price.\n# ::tokens [\"Oil\", \"soared\", \"in\", \"price\", \".\"]\n# ::lemmas [\"oil\", \"soar\", \"in\", \"price\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2\n(s / soar-01~e.1\n   :ARG1 (o / oil~e.0)\n   :ARG2 (p / price-01~e.3\n            :ARG1 o))", [[0, 3], [4, 10], [11, 13], [14, 19], [19, 20]]], ["# ::snt Cornelia lodged in the new boarding house.\n# ::tokens [\"Cornelia\", \"lodged\", \"in\", \"the\", \"new\", \"boarding\", \"house\", \".\"]\n# ::lemmas [\"Cornelia\", \"lodge\", \"in\", \"the\", \"new\", \"boarding\", \"house\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.3.2 5-1.3.1 6-1.3\n(l / lodge-03~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Cornelia\"~e.0))\n   :ARG1 p\n   :location (h / house~e.6\n                :mod (b / board-03~e.5)\n                :ARG1-of (n2 / new-01~e.4)))", [[0, 8], [9, 15], [16, 18], [19, 22], [23, 26], [27, 35], [36, 41], [41, 42]]], ["# ::snt Unicorns don't exist on the Earth.\n# ::tokens [\"Unicorns\", \"do\", \"n't\", \"exist\", \"on\", \"the\", \"Earth\", \".\"]\n# ::lemmas [\"unicorn\", \"do\", \"not\", \"exist\", \"on\", \"the\", \"Earth\", \".\"]\n# ::alignments 0-1.2 3-1 6-1.3.1.1\n(e / exist-01~e.3\n   :polarity -\n   :ARG1 (u / unicorn~e.0)\n   :location (p / planet\n                :name (n / name\n                         :op1 \"Earth\"~e.6)))", [[0, 8], [9, 11], [11, 14], [15, 20], [21, 23], [24, 27], [28, 33], [33, 34]]], ["# ::snt A solution to this problem exists.\n# ::tokens [\"A\", \"solution\", \"to\", \"this\", \"problem\", \"exists\", \".\"]\n# ::lemmas [\"a\", \"solution\", \"to\", \"this\", \"problem\", \"exist\", \".\"]\n# ::alignments 3-1.1.1 4-1.1\n(s / solve-01\n   :ARG1 (p / problem~e.4\n            :mod (t / this~e.3)))", [[0, 1], [2, 10], [11, 13], [14, 18], [19, 26], [27, 33], [33, 34]]], ["# ::snt An old woman languished in the forest.\n# ::tokens [\"An\", \"old\", \"woman\", \"languished\", \"in\", \"the\", \"forest\", \".\"]\n# ::lemmas [\"an\", \"old\", \"woman\", \"languish\", \"in\", \"the\", \"forest\", \".\"]\n# ::alignments 1-1.1.1 2-1.1 3-1 6-1.2\n(l / languish-01~e.3\n   :ARG1 (w / woman~e.2\n            :mod (o / old~e.1))\n   :location (f / forest~e.6))", [[0, 2], [3, 6], [7, 12], [13, 23], [24, 26], [27, 30], [31, 37], [37, 38]]], ["# ::snt I had to bulge the bag.\n# ::tokens [\"I\", \"had\", \"to\", \"bulge\", \"the\", \"bag\", \".\"]\n# ::lemmas [\"i\", \"have\", \"to\", \"bulge\", \"the\", \"bag\", \".\"]\n# ::alignments 0-1.1.1 3-1.1 5-1.1.2\n(o / obligate-01\n   :ARG2 (b / bulge-01~e.3\n            :ARG0 (ii / i~e.0)\n            :ARG1 (b2 / bag~e.5)))", [[0, 1], [2, 5], [6, 8], [9, 14], [15, 18], [19, 22], [22, 23]]], ["# ::snt A rushing stream ran through the valley.\n# ::tokens [\"A\", \"rushing\", \"stream\", \"ran\", \"through\", \"the\", \"valley\", \".\"]\n# ::lemmas [\"a\", \"rush\", \"stream\", \"run\", \"through\", \"the\", \"valley\", \".\"]\n# ::alignments 1-1.1.1 2-1.1 3-1 6-1.2\n(r / run-04~e.3\n   :ARG0 (s / stream~e.2\n            :ARG0-of (r2 / rush-01~e.1))\n   :ARG1 (v / valley~e.6))", [[0, 1], [2, 9], [10, 16], [17, 20], [21, 28], [29, 32], [33, 39], [39, 40]]], ["# ::snt The dealer valued the book at $200.\n# ::tokens [\"The\", \"dealer\", \"valued\", \"the\", \"book\", \"at\", \"$\", \"200\", \".\"]\n# ::lemmas [\"the\", \"dealer\", \"value\", \"the\", \"book\", \"at\", \"$\", \"200\", \".\"]\n# ::alignments 1-1.1.1 2-1 4-1.2 7-1.3.1\n(v / value-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (d / deal-01~e.1))\n   :ARG1 (b / book~e.4)\n   :ARG2 (m / monetary-quantity\n            :quant 200~e.7\n            :unit (d2 / dollar)))", [[0, 3], [4, 10], [11, 17], [18, 21], [22, 26], [27, 29], [30, 31], [31, 34], [34, 35]]], ["# ::snt Kim lives in the house Lee sold to her.\n# ::tokens [\"Kim\", \"lives\", \"in\", \"the\", \"house\", \"Lee\", \"sold\", \"to\", \"her\", \".\"]\n# ::lemmas [\"Kim\", \"live\", \"in\", \"the\", \"house\", \"Lee\", \"sell\", \"to\", \"she\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.2 5-1.2.1.1.1.1 6-1.2.1\n(l / live-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kim\"~e.0))\n   :location (h / house~e.4\n                :ARG1-of (s / sell-01~e.6\n                            :ARG0 (p2 / person\n                                      :name (n2 / name\n                                                :op1 \"Lee\"~e.5))\n                            :ARG2 p)))", [[0, 3], [4, 9], [10, 12], [13, 16], [17, 22], [23, 26], [27, 31], [32, 34], [35, 38], [38, 39]]], ["# ::snt The professor was hoping for a strong evidence.\n# ::tokens [\"The\", \"professor\", \"was\", \"hoping\", \"for\", \"a\", \"strong\", \"evidence\", \".\"]\n# ::lemmas [\"the\", \"professor\", \"be\", \"hope\", \"for\", \"a\", \"strong\", \"evidence\", \".\"]\n# ::alignments 1-1.1 3-1 6-1.2.1 7-1.2\n(h / hope-01~e.3\n   :ARG0 (p / professor~e.1)\n   :ARG1 (e / evidence-01~e.7\n            :ARG1-of (s / strong-02~e.6)))", [[0, 3], [4, 13], [14, 17], [18, 24], [25, 28], [29, 30], [31, 37], [38, 46], [46, 47]]], ["# ::snt The room contains many armchairs.\n# ::tokens [\"The\", \"room\", \"contains\", \"many\", \"armchairs\", \".\"]\n# ::lemmas [\"the\", \"room\", \"contain\", \"many\", \"armchair\", \".\"]\n# ::alignments 1-1.1 2-1 3-1.2.1 4-1.2\n(c / contain-01~e.2\n   :ARG0 (r / room~e.1)\n   :ARG1 (a / armchair~e.4\n            :quant (m / many~e.3)))", [[0, 3], [4, 8], [9, 17], [18, 22], [23, 32], [32, 33]]], ["# ::snt the box contains few tools.\n# ::tokens [\"the\", \"box\", \"contains\", \"few\", \"tools\", \".\"]\n# ::lemmas [\"the\", \"box\", \"contain\", \"few\", \"tool\", \".\"]\n# ::alignments 1-1.1 2-1 3-1.2.1 4-1.2\n(c / contain-01~e.2\n   :ARG0 (b / box~e.1)\n   :ARG1 (t / tool~e.4\n            :quant (f / few~e.3)))", [[0, 3], [4, 7], [8, 16], [17, 20], [21, 26], [26, 27]]], ["# ::snt The mayor gave John some good cakes.\n# ::tokens [\"The\", \"mayor\", \"gave\", \"John\", \"some\", \"good\", \"cakes\", \".\"]\n# ::lemmas [\"the\", \"mayor\", \"give\", \"John\", \"some\", \"good\", \"cake\", \".\"]\n# ::alignments 1-1.1.1.1 2-1 3-1.3.1.1 4-1.2.2 5-1.2.1 6-1.2\n(g / give-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                        :ARG2 (m / mayor~e.1)))\n   :ARG1 (c / cake~e.6\n            :ARG1-of (g2 / good-02~e.5)\n            :quant (s / some~e.4))\n   :ARG2 (p2 / person\n             :name (n / name\n                      :op1 \"John\"~e.3)))", [[0, 3], [4, 9], [10, 14], [15, 19], [20, 24], [25, 29], [30, 35], [35, 36]]], ["# ::snt Wash myself.\n# ::tokens [\"Wash\", \"myself\", \".\"]\n# ::lemmas [\"wash\", \"myself\", \".\"]\n# ::alignments 0-1\n(w / wash-01~e.0\n   :mode imperative\n   :ARG0 (y / you)\n   :ARG1 y)", [[0, 4], [5, 11], [11, 12]]], ["# ::snt If the weather is lovely today then we will go out.\n# ::tokens [\"If\", \"the\", \"weather\", \"is\", \"lovely\", \"today\", \"then\", \"we\", \"will\", \"go\", \"out\", \".\"]\n# ::lemmas [\"if\", \"the\", \"weather\", \"be\", \"lovely\", \"today\", \"then\", \"we\", \"will\", \"go\", \"out\", \".\"]\n# ::alignments 2-1.2.1 4-1.2 5-1.2.2 7-1.1\n(g / go-out-17\n   :ARG0 (w / we~e.7)\n   :condition (l / lovely~e.4\n                 :domain (w2 / weather~e.2)\n                 :time (t / today~e.5)))", [[0, 2], [3, 6], [7, 14], [15, 17], [18, 24], [25, 30], [31, 35], [36, 38], [39, 43], [44, 46], [47, 50], [50, 51]]], ["# ::snt They read the big book.\n# ::tokens [\"They\", \"read\", \"the\", \"big\", \"book\", \".\"]\n# ::lemmas [\"they\", \"read\", \"the\", \"big\", \"book\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1 4-1.2\n(r / read-01~e.1\n   :ARG0 (t / they~e.0)\n   :ARG1 (b / book~e.4\n            :mod (b2 / big~e.3)))", [[0, 4], [5, 9], [10, 13], [14, 17], [18, 22], [22, 23]]], ["# ::snt He treats John very under.\n# ::tokens [\"He\", \"treats\", \"John\", \"very\", \"under\", \".\"]\n# ::lemmas [\"he\", \"treat\", \"John\", \"very\", \"under\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1.1 3-1.3.1 4-1.3\n(t / treat-01~e.1\n   :ARG0 (h / he~e.0)\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.2))\n   :ARG2 (u / under~e.4\n            :degree (v / very~e.3)))", [[0, 2], [3, 9], [10, 14], [15, 19], [20, 25], [25, 26]]], ["# ::snt He walked right on the wall.\n# ::tokens [\"He\", \"walked\", \"right\", \"on\", \"the\", \"wall\", \".\"]\n# ::lemmas [\"he\", \"walk\", \"right\", \"on\", \"the\", \"wall\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1 5-1.2\n(w / walk-01~e.1\n   :ARG0 (h / he~e.0)\n   :ARG2 (w2 / wall~e.5\n             :mod (r / right~e.2)))", [[0, 2], [3, 9], [10, 15], [16, 18], [19, 22], [23, 27], [27, 28]]], ["# ::snt He walked right very.\n# ::tokens [\"He\", \"walked\", \"right\", \"very\", \".\"]\n# ::lemmas [\"he\", \"walk\", \"right\", \"very\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2 3-1.3\n(w / walk-01~e.1\n   :ARG0 (h / he~e.0)\n   :ARG1-of (r / right-04~e.2)\n   :degree (v / very~e.3))", [[0, 2], [3, 9], [10, 15], [16, 20], [20, 21]]], ["# ::snt John thinks Bill is honest.\n# ::tokens [\"John\", \"thinks\", \"Bill\", \"is\", \"honest\", \".\"]\n# ::lemmas [\"John\", \"think\", \"Bill\", \"be\", \"honest\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1.1 4-1.2\n(t / think-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (h / honest-01~e.4\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Bill\"~e.2))))", [[0, 4], [5, 11], [12, 16], [17, 19], [20, 26], [26, 27]]], ["# ::snt I am anxious you to study English grammar hard.\n# ::tokens [\"I\", \"am\", \"anxious\", \"you\", \"to\", \"study\", \"English\", \"grammar\", \"hard\", \".\"]\n# ::lemmas [\"i\", \"be\", \"anxious\", \"you\", \"to\", \"study\", \"English\", \"grammar\", \"hard\", \".\"]\n# ::alignments 0-1.1 2-1 3-1.2.1 5-1.2 6-1.2.2.1.1.1 7-1.2.2 8-1.2.3\n(a / anxious~e.2\n   :domain (ii / i~e.0)\n   :topic (s / study-01~e.5\n             :ARG0 (y / you~e.3)\n             :ARG1 (g / grammar~e.7\n                      :mod (l / language\n                              :name (n / name\n                                       :op1 \"English\"~e.6)))\n             :ARG1-of (h / hard-02~e.8)))", [[0, 1], [2, 4], [5, 12], [13, 16], [17, 19], [20, 25], [26, 33], [34, 41], [42, 46], [46, 47]]], ["# ::snt She thought it was likely that everyone would fit into the car.\n# ::tokens [\"She\", \"thought\", \"it\", \"was\", \"likely\", \"that\", \"everyone\", \"would\", \"fit\", \"into\", \"the\", \"car\", \".\"]\n# ::lemmas [\"she\", \"think\", \"it\", \"be\", \"likely\", \"that\", \"everyone\", \"would\", \"fit\", \"into\", \"the\", \"car\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2 6-1.2.1.1 8-1.2.1 11-1.2.1.2\n(t / think-01~e.1\n   :ARG0 (s / she~e.0)\n   :ARG1 (l / likely-01~e.4\n            :ARG1 (f / fit-06~e.8\n                     :ARG1 (e / everyone~e.6)\n                     :ARG2 (c / car~e.11))))", [[0, 3], [4, 11], [12, 14], [15, 18], [19, 25], [26, 30], [31, 39], [40, 45], [46, 49], [50, 54], [55, 58], [59, 62], [62, 63]]], ["# ::snt The two boys looked up the word.\n# ::tokens [\"The\", \"two\", \"boys\", \"looked\", \"up\", \"the\", \"word\", \".\"]\n# ::lemmas [\"the\", \"two\", \"boy\", \"look\", \"up\", \"the\", \"word\", \".\"]\n# ::alignments 1-1.1.1 2-1.1 3-1 6-1.2\n(l / look-up-05~e.3\n   :ARG0 (b / boy~e.2\n            :quant 2~e.1)\n   :ARG1 (w / word~e.6))", [[0, 3], [4, 7], [8, 12], [13, 19], [20, 22], [23, 26], [27, 31], [31, 32]]], ["# ::snt The happy student played the piano.\n# ::tokens [\"The\", \"happy\", \"student\", \"played\", \"the\", \"piano\", \".\"]\n# ::lemmas [\"the\", \"happy\", \"student\", \"play\", \"the\", \"piano\", \".\"]\n# ::alignments 1-1.1.2 2-1.1.1 3-1 5-1.2\n(p / play-11~e.3\n   :ARG0 (p2 / person\n             :ARG0-of (s / study-01~e.2)\n             :ARG1-of (h / happy-01~e.1))\n   :ARG2 (p3 / piano~e.5))", [[0, 3], [4, 9], [10, 17], [18, 24], [25, 28], [29, 34], [34, 35]]], ["# ::snt I like chocolate cakes and pies.\n# ::tokens [\"I\", \"like\", \"chocolate\", \"cakes\", \"and\", \"pies\", \".\"]\n# ::lemmas [\"i\", \"like\", \"chocolate\", \"cake\", \"and\", \"pie\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1.1 3-1.2.1 4-1.2 5-1.2.2\n(l / like-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (a / and~e.4\n            :op1 (c / cake~e.3\n                    :mod (c2 / chocolate~e.2))\n            :op2 (p / pie~e.5\n                    :mod c2)))", [[0, 1], [2, 6], [7, 16], [17, 22], [23, 26], [27, 31], [31, 32]]], ["# ::snt It was in the park that the policeman met several young students last night.\n# ::tokens [\"It\", \"was\", \"in\", \"the\", \"park\", \"that\", \"the\", \"policeman\", \"met\", \"several\", \"young\", \"students\", \"last\", \"night\", \".\"]\n# ::lemmas [\"it\", \"be\", \"in\", \"the\", \"park\", \"that\", \"the\", \"policeman\", \"meet\", \"several\", \"young\", \"student\", \"last\", \"night\", \".\"]\n# ::alignments 4-1.3 7-1.1 8-1 9-1.2.2 10-1.2.1 11-1.2.3 13-1.4.1\n(m / meet-02~e.8\n   :ARG0 (p / policeman~e.7)\n   :ARG1 (p2 / person\n             :mod (y / young~e.10)\n             :quant (s / several~e.9)\n             :ARG0-of (s2 / study-01~e.11))\n   :location (p3 / park~e.4)\n   :time (d / date-entity\n            :dayperiod (n / night~e.13)\n            :mod (y2 / yesterday)))", [[0, 2], [3, 6], [7, 9], [10, 13], [14, 18], [19, 23], [24, 27], [28, 37], [38, 41], [42, 49], [50, 55], [56, 64], [65, 69], [70, 75], [75, 76]]], ["# ::snt She was poor but quite happy.\n# ::tokens [\"She\", \"was\", \"poor\", \"but\", \"quite\", \"happy\", \".\"]\n# ::lemmas [\"she\", \"be\", \"poor\", \"but\", \"quite\", \"happy\", \".\"]\n# ::alignments 0-1.1.1 2-1.1 3-1 4-1.2.2 5-1.2\n(c / contrast-01~e.3\n   :ARG1 (p / poor~e.2\n            :domain (s / she~e.0))\n   :ARG2 (h / happy-01~e.5\n            :ARG1 s\n            :degree (q / quite~e.4)))", [[0, 3], [4, 7], [8, 12], [13, 16], [17, 22], [23, 28], [28, 29]]], ["# ::snt The teacher met his students in the class.\n# ::tokens [\"The\", \"teacher\", \"met\", \"his\", \"students\", \"in\", \"the\", \"class\", \".\"]\n# ::lemmas [\"the\", \"teacher\", \"meet\", \"his\", \"student\", \"in\", \"the\", \"class\", \".\"]\n# ::alignments 1-1.1.1 2-1 4-1.2.1 7-1.2.2\n(m / meet-02~e.2\n   :ARG0 (p / person\n            :ARG0-of (t / teach-01~e.1))\n   :ARG1 (p2 / person\n             :ARG0-of (s / study-01~e.4\n                         :ARG2 p)\n             :location (c / class~e.7)))", [[0, 3], [4, 11], [12, 15], [16, 19], [20, 28], [29, 31], [32, 35], [36, 41], [41, 42]]], ["# ::snt I am anxious that you to arrive on time.\n# ::tokens [\"I\", \"am\", \"anxious\", \"that\", \"you\", \"to\", \"arrive\", \"on\", \"time\", \".\"]\n# ::lemmas [\"i\", \"be\", \"anxious\", \"that\", \"you\", \"to\", \"arrive\", \"on\", \"time\", \".\"]\n# ::alignments 0-1.1 2-1 4-1.2.1 6-1.2\n(a / anxious~e.2\n   :domain (ii / i~e.0)\n   :topic (a2 / arrive-01~e.6\n              :ARG1 (y / you~e.4)\n              :manner (o / on-time)))", [[0, 1], [2, 4], [5, 12], [13, 17], [18, 21], [22, 24], [25, 31], [32, 34], [35, 39], [39, 40]]], ["# ::snt She turned down the side street.\n# ::tokens [\"She\", \"turned\", \"down\", \"the\", \"side\", \"street\", \".\"]\n# ::lemmas [\"she\", \"turn\", \"down\", \"the\", \"side\", \"street\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.3 4-1.2.1 5-1.2\n(t / turn-01~e.1\n   :ARG0 (s / she~e.0)\n   :ARG1 (s2 / street~e.5\n             :mod (s3 / side~e.4))\n   :direction (d / down~e.2))", [[0, 3], [4, 10], [11, 15], [16, 19], [20, 24], [25, 31], [31, 32]]], ["# ::snt A nuclear explosion would wipe out plant life and out animal life.\n# ::tokens [\"A\", \"nuclear\", \"explosion\", \"would\", \"wipe\", \"out\", \"plant\", \"life\", \"and\", \"out\", \"animal\", \"life\", \".\"]\n# ::lemmas [\"a\", \"nuclear\", \"explosion\", \"would\", \"wipe\", \"out\", \"plant\", \"life\", \"and\", \"out\", \"animal\", \"life\", \".\"]\n# ::alignments 1-1.1.1 2-1.1 4-1 6-1.2.1.1 7-1.2.1 8-1.2 10-1.2.2.1 11-1.2.2\n(w / wipe-out-02~e.4\n   :ARG0 (e / explode-01~e.2\n            :mod (n / nucleus~e.1))\n   :ARG1 (a / and~e.8\n            :op1 (l / life~e.7\n                    :poss (p / plant~e.6))\n            :op2 (l2 / life~e.11\n                     :poss (a2 / animal~e.10))))", [[0, 1], [2, 9], [10, 19], [20, 25], [26, 30], [31, 34], [35, 40], [41, 45], [46, 49], [50, 53], [54, 60], [61, 65], [65, 66]]], ["# ::snt He ran down the road and down the President.\n# ::tokens [\"He\", \"ran\", \"down\", \"the\", \"road\", \"and\", \"down\", \"the\", \"President\", \".\"]\n# ::lemmas [\"he\", \"run\", \"down\", \"the\", \"road\", \"and\", \"down\", \"the\", \"President\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.2 4-1.2.1 5-1.2 8-1.2.2.1.1.1\n(r / run-02~e.1\n   :ARG0 (h / he~e.0)\n   :path (a / and~e.5\n            :op1 (r2 / road~e.4)\n            :op2 (d / down~e.2\n                    :op1 (p / person\n                            :ARG0-of (h2 / have-org-role-91\n                                         :ARG2 (p2 / president~e.8))))))", [[0, 2], [3, 6], [7, 11], [12, 15], [16, 20], [21, 24], [25, 29], [30, 33], [34, 43], [43, 44]]], ["# ::snt My brother wears a green overcoat.\n# ::tokens [\"My\", \"brother\", \"wears\", \"a\", \"green\", \"overcoat\", \".\"]\n# ::lemmas [\"my\", \"brother\", \"wear\", \"a\", \"green\", \"overcoat\", \".\"]\n# ::alignments 1-1.1.1.2 2-1 4-1.2.1 5-1.2\n(w / wear-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (h / have-rel-role-91\n                        :ARG1 (ii / i)\n                        :ARG2 (b / brother~e.1)))\n   :ARG1 (o / overcoat~e.5\n            :ARG1-of (g / green-02~e.4)))", [[0, 2], [3, 10], [11, 16], [17, 18], [19, 24], [25, 33], [33, 34]]], ["# ::snt That silly fool broke the teapot.\n# ::tokens [\"That\", \"silly\", \"fool\", \"broke\", \"the\", \"teapot\", \".\"]\n# ::lemmas [\"that\", \"silly\", \"fool\", \"break\", \"the\", \"teapot\", \".\"]\n# ::alignments 0-1.1.2 1-1.1.1 2-1.1 3-1 5-1.2\n(b / break-18~e.3\n   :ARG0 (f / fool~e.2\n            :mod (s / silly~e.1)\n            :mod (t / that~e.0))\n   :ARG1 (t2 / teapot~e.5))", [[0, 4], [5, 10], [11, 15], [16, 21], [22, 25], [26, 32], [32, 33]]], ["# ::snt I threw the puppy the ball.\n# ::tokens [\"I\", \"threw\", \"the\", \"puppy\", \"the\", \"ball\", \".\"]\n# ::lemmas [\"i\", \"throw\", \"the\", \"puppy\", \"the\", \"ball\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.3 5-1.2\n(t / throw-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (b / ball~e.5)\n   :ARG2 (p / puppy~e.3))", [[0, 1], [2, 7], [8, 11], [12, 17], [18, 21], [22, 26], [26, 27]]], ["# ::snt John made Kim a great doctor.\n# ::tokens [\"John\", \"made\", \"Kim\", \"a\", \"great\", \"doctor\", \".\"]\n# ::lemmas [\"John\", \"make\", \"Kim\", \"a\", \"great\", \"doctor\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.2.1.1 4-1.2.1 5-1.2\n(m / make-02~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (d / doctor~e.5\n            :mod (g / great~e.4)\n            :domain (p2 / person\n                        :name (n2 / name\n                                  :op1 \"Kim\"~e.2))))", [[0, 4], [5, 9], [10, 13], [14, 15], [16, 21], [22, 28], [28, 29]]], ["# ::snt John has been at Stanford for four years.\n# ::tokens [\"John\", \"has\", \"been\", \"at\", \"Stanford\", \"for\", \"four\", \"years\", \".\"]\n# ::lemmas [\"John\", \"have\", \"be\", \"at\", \"Stanford\", \"for\", \"four\", \"years\", \".\"]\n# ::alignments 0-1.1.1.1 4-1.2.1.1 6-1.3.1 7-1.3.2\n(b / be-located-at-91\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG2 (u / university\n            :name (n2 / name\n                      :op1 \"Stanford\"~e.4))\n   :duration (t / temporal-quantity\n                :quant 4~e.6\n                :unit (y / year~e.7)))", [[0, 4], [5, 8], [9, 13], [14, 16], [17, 25], [26, 29], [30, 34], [35, 40], [40, 41]]], ["# ::snt The student heard a strange sound.\n# ::tokens [\"The\", \"student\", \"heard\", \"a\", \"strange\", \"sound\", \".\"]\n# ::lemmas [\"the\", \"student\", \"hear\", \"a\", \"strange\", \"sound\", \".\"]\n# ::alignments 1-1.1.1 2-1 4-1.2.1 5-1.2\n(h / hear-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (s / study-01~e.1))\n   :ARG1 (s2 / sound-01~e.5\n             :mod (s3 / strange~e.4)))", [[0, 3], [4, 11], [12, 17], [18, 19], [20, 27], [28, 33], [33, 34]]], ["# ::snt John made a doll for his son.\n# ::tokens [\"John\", \"made\", \"a\", \"doll\", \"for\", \"his\", \"son\", \".\"]\n# ::lemmas [\"John\", \"make\", \"a\", \"doll\", \"for\", \"his\", \"son\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 6-1.3.1.2\n(m / make-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (d / doll~e.3)\n   :ARG4 (p2 / person\n             :ARG0-of (h / have-rel-role-91\n                         :ARG1 p\n                         :ARG2 (s / son~e.6))))", [[0, 4], [5, 9], [10, 11], [12, 16], [17, 20], [21, 24], [25, 28], [28, 29]]], ["# ::snt All of his conversation was reported to me.\n# ::tokens [\"All\", \"of\", \"his\", \"conversation\", \"was\", \"reported\", \"to\", \"me\", \".\"]\n# ::lemmas [\"all\", \"of\", \"his\", \"conversation\", \"be\", \"report\", \"to\", \"i\", \".\"]\n# ::alignments 0-1.1.2 3-1.1 5-1 7-1.2\n(r / report-01~e.5\n   :ARG1 (c / converse-01~e.3\n            :ARG0 (h / he)\n            :mod (a / all~e.0))\n   :ARG2 (ii / i~e.7))", [[0, 3], [4, 6], [7, 10], [11, 23], [24, 27], [28, 36], [37, 39], [40, 42], [42, 43]]], ["# ::snt This is the place to go to.\n# ::tokens [\"This\", \"is\", \"the\", \"place\", \"to\", \"go\", \"to\", \".\"]\n# ::lemmas [\"this\", \"be\", \"the\", \"place\", \"to\", \"go\", \"to\", \".\"]\n# ::alignments 0-1.2 3-1 5-1.1\n(p / place~e.3\n   :ARG4-of (g / go-02~e.5\n               :ARG0 (y / you))\n   :domain (t / this~e.0))", [[0, 4], [5, 7], [8, 11], [12, 17], [18, 20], [21, 23], [24, 26], [26, 27]]], ["# ::snt We need to finish the project this week.\n# ::tokens [\"We\", \"need\", \"to\", \"finish\", \"the\", \"project\", \"this\", \"week\", \".\"]\n# ::lemmas [\"we\", \"need\", \"to\", \"finish\", \"the\", \"project\", \"this\", \"week\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 5-1.2.2 6-1.2.3.1 7-1.2.3\n(n / need-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (f / finish-01~e.3\n            :ARG0 w\n            :ARG1 (p / project~e.5)\n            :time (w2 / week~e.7\n                      :mod (t / this~e.6))))", [[0, 2], [3, 7], [8, 10], [11, 17], [18, 21], [22, 29], [30, 34], [35, 39], [39, 40]]], ["# ::snt The gang robbed her of her necklace.\n# ::tokens [\"The\", \"gang\", \"robbed\", \"her\", \"of\", \"her\", \"necklace\", \".\"]\n# ::lemmas [\"the\", \"gang\", \"rob\", \"she\", \"of\", \"her\", \"necklace\", \".\"]\n# ::alignments 1-1.1 2-1 3-1.2 6-1.2.1\n(r / rob-01~e.2\n   :ARG0 (g / gang~e.1)\n   :ARG1 (s / she~e.3\n            :part (n / necklace~e.6))\n   :ARG2 n)", [[0, 3], [4, 8], [9, 15], [16, 19], [20, 22], [23, 26], [27, 35], [35, 36]]], ["# ::snt They helped us edit the script.\n# ::tokens [\"They\", \"helped\", \"us\", \"edit\", \"the\", \"script\", \".\"]\n# ::lemmas [\"they\", \"help\", \"we\", \"edit\", \"the\", \"script\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1 3-1.2 5-1.2.2\n(h / help-01~e.1\n   :ARG0 (t / they~e.0)\n   :ARG1 (e / edit-01~e.3\n            :ARG0 (w / we~e.2)\n            :ARG1 (s / script~e.5))\n   :ARG2 w)", [[0, 4], [5, 11], [12, 14], [15, 19], [20, 23], [24, 30], [30, 31]]], ["# ::snt John smelled the freshly baked bread.\n# ::tokens [\"John\", \"smelled\", \"the\", \"freshly\", \"baked\", \"bread\", \".\"]\n# ::lemmas [\"John\", \"smell\", \"the\", \"freshly\", \"bake\", \"bread\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1.1 4-1.2.1 5-1.2\n(s / smell-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (b / bread~e.5\n            :ARG1-of (b2 / bake-01~e.4\n                         :ARG1-of (f / fresh-04~e.3))))", [[0, 4], [5, 12], [13, 16], [17, 24], [25, 30], [31, 36], [36, 37]]], ["# ::snt Kim camps on the hill.\n# ::tokens [\"Kim\", \"camps\", \"on\", \"the\", \"hill\", \".\"]\n# ::lemmas [\"Kim\", \"camp\", \"on\", \"the\", \"hill\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.2\n(c / camp-02~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kim\"~e.0))\n   :location (h / hill~e.4))", [[0, 3], [4, 9], [10, 12], [13, 16], [17, 21], [21, 22]]], ["# ::snt The parents bought the children non-fiction novels.\n# ::tokens [\"The\", \"parents\", \"bought\", \"the\", \"children\", \"non\", \"-\", \"fiction\", \"novels\", \".\"]\n# ::lemmas [\"the\", \"parent\", \"buy\", \"the\", \"child\", \"non\", \"-\", \"fiction\", \"novel\", \".\"]\n# ::alignments 1-1.1.1.1 2-1 4-1.3 6-1.2.1.1 7-1.2.1 8-1.2\n(b / buy-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (h / have-rel-role-91\n                        :ARG2 (p2 / parent~e.1)))\n   :ARG1 (n / novel~e.8\n            :mod (f / fiction~e.7\n                    :polarity -~e.6))\n   :ARG4 (c / child~e.4))", [[0, 3], [4, 11], [12, 18], [19, 22], [23, 31], [32, 35], [35, 36], [36, 43], [44, 50], [50, 51]]], ["# ::snt The parents bought non-fiction novels for the children.\n# ::tokens [\"The\", \"parents\", \"bought\", \"non\", \"-\", \"fiction\", \"novels\", \"for\", \"the\", \"children\", \".\"]\n# ::lemmas [\"the\", \"parent\", \"buy\", \"non\", \"-\", \"fiction\", \"novel\", \"for\", \"the\", \"child\", \".\"]\n# ::alignments 1-1.1.1.1 2-1 4-1.2.1.1 5-1.2.1 6-1.2 9-1.3.1.1\n(b / buy-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (h / have-rel-role-91\n                        :ARG2 (p2 / parent~e.1)))\n   :ARG1 (n / novel~e.6\n            :mod (f / fiction~e.5\n                    :polarity -~e.4))\n   :ARG4 (p3 / person\n             :ARG0-of (h2 / have-rel-role-91\n                          :ARG2 (c / child~e.9))))", [[0, 3], [4, 11], [12, 18], [19, 22], [22, 23], [23, 30], [31, 37], [38, 41], [42, 45], [46, 54], [54, 55]]], ["# ::snt John carried her on his back.\n# ::tokens [\"John\", \"carried\", \"her\", \"on\", \"his\", \"back\", \".\"]\n# ::lemmas [\"John\", \"carry\", \"she\", \"on\", \"his\", \"back\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2 5-1.1.2\n(c / carry-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0)\n            :part (b / back~e.5))\n   :ARG1 (s / she~e.2)\n   :location b)", [[0, 4], [5, 12], [13, 16], [17, 19], [20, 23], [24, 28], [28, 29]]], ["# ::snt They write to her.\n# ::tokens [\"They\", \"write\", \"to\", \"her\", \".\"]\n# ::lemmas [\"they\", \"write\", \"to\", \"she\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2\n(w / write-01~e.1\n   :ARG0 (t / they~e.0)\n   :ARG2 (s / she~e.3))", [[0, 4], [5, 10], [11, 13], [14, 17], [17, 18]]], ["# ::snt We caught them eating the bananas.\n# ::tokens [\"We\", \"caught\", \"them\", \"eating\", \"the\", \"bananas\", \".\"]\n# ::lemmas [\"we\", \"catch\", \"they\", \"eat\", \"the\", \"banana\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1 3-1.2 5-1.2.2\n(c / catch-02~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (e / eat-01~e.3\n            :ARG0 (t / they~e.2)\n            :ARG1 (b / banana~e.5)))", [[0, 2], [3, 9], [10, 14], [15, 21], [22, 25], [26, 33], [33, 34]]], ["# ::snt We are content for the cleaners to return the drapes next week.\n# ::tokens [\"We\", \"are\", \"content\", \"for\", \"the\", \"cleaners\", \"to\", \"return\", \"the\", \"drapes\", \"next\", \"week\", \".\"]\n# ::lemmas [\"we\", \"be\", \"content\", \"for\", \"the\", \"cleaner\", \"to\", \"return\", \"the\", \"drape\", \"next\", \"week\", \".\"]\n# ::alignments 0-1.2 2-1 5-1.1.1.1 7-1.1 9-1.1.2 10-1.1.3.1 11-1.1.3\n(c / content-02~e.2\n   :ARG0 (r / return-02~e.7\n            :ARG0 (p / person\n                     :ARG0-of (c2 / clean-01~e.5))\n            :ARG1 (d / drapes~e.9)\n            :time (w / week~e.11\n                     :mod (n / next~e.10)))\n   :ARG1 (w2 / we~e.0))", [[0, 2], [3, 6], [7, 14], [15, 18], [19, 22], [23, 31], [32, 34], [35, 41], [42, 45], [46, 52], [53, 57], [58, 62], [62, 63]]], ["# ::snt The soldiers must enforce Bill to make the baby be quiet.\n# ::tokens [\"The\", \"soldiers\", \"must\", \"enforce\", \"Bill\", \"to\", \"make\", \"the\", \"baby\", \"be\", \"quiet\", \".\"]\n# ::lemmas [\"the\", \"soldier\", \"must\", \"enforce\", \"Bill\", \"to\", \"make\", \"the\", \"baby\", \"be\", \"quiet\", \".\"]\n# ::alignments 1-1.1.1 3-1.1 4-1.1.2.1.1 6-1.1.3 8-1.1.3.2.1 10-1.1.3.2\n(o / obligate-01\n   :ARG2 (e / enforce-01~e.3\n            :ARG0 (s / soldier~e.1)\n            :ARG1 (l / law\n                     :name (n / name\n                              :op1 \"Bill\"~e.4))\n            :purpose (m / make-02~e.6\n                        :ARG0 s\n                        :ARG1 (q / quiet-04~e.10\n                                 :ARG1 (b / baby~e.8)))))", [[0, 3], [4, 12], [13, 17], [18, 25], [26, 30], [31, 33], [34, 38], [39, 42], [43, 47], [48, 50], [51, 56], [56, 57]]], ["# ::snt Rice is available in most countries.\n# ::tokens [\"Rice\", \"is\", \"available\", \"in\", \"most\", \"countries\", \".\"]\n# ::lemmas [\"Rice\", \"be\", \"available\", \"in\", \"most\", \"country\", \".\"]\n# ::alignments 0-1.1 2-1 4-1.2.1 5-1.2\n(a / available-02~e.2\n   :ARG2 (r / rice~e.0)\n   :location (c / country~e.5\n                :quant (m / most~e.4)))", [[0, 4], [5, 7], [8, 17], [18, 20], [21, 25], [26, 35], [35, 36]]], ["# ::snt In preparation for the return fixture this team have trained more efficiently than they had in recent months.\n# ::tokens [\"In\", \"preparation\", \"for\", \"the\", \"return\", \"fixture\", \"this\", \"team\", \"have\", \"trained\", \"more\", \"efficiently\", \"than\", \"they\", \"had\", \"in\", \"recent\", \"months\", \".\"]\n# ::lemmas [\"in\", \"preparation\", \"for\", \"the\", \"return\", \"fixture\", \"this\", \"team\", \"have\", \"train\", \"more\", \"efficiently\", \"than\", \"they\", \"have\", \"in\", \"recent\", \"months\", \".\"]\n# ::alignments 1-1.2 4-1.2.2.1 5-1.2.2 6-1.1.1 7-1.1 8-1.3 9-1 10-1.3.2 11-1.3.1 16-1.3.3.2.1 17-1.3.3.2\n(t / train-01~e.9\n   :ARG0 (t2 / team~e.7\n             :mod (t3 / this~e.6))\n   :purpose (p / prepare-02~e.1\n               :ARG1 t2\n               :ARG2 (f / fixture~e.5\n                        :ARG1-of (r / return-01~e.4)))\n   :ARG1-of (h / have-degree-91~e.8\n               :ARG2 (e / efficient-01~e.11\n                        :ARG1 t)\n               :ARG3 (m / more~e.10)\n               :ARG4 (t4 / train-01\n                         :ARG0 t2\n                         :time (m2 / month~e.17\n                                   :mod (r2 / recent~e.16)))))", [[0, 2], [3, 14], [15, 18], [19, 22], [23, 29], [30, 37], [38, 42], [43, 47], [48, 52], [53, 60], [61, 65], [66, 77], [78, 82], [83, 87], [88, 91], [92, 94], [95, 101], [102, 108], [108, 109]]], ["# ::snt Each of John's boat has been repainted.\n# ::tokens [\"Each\", \"of\", \"John\", \"'s\", \"boat\", \"has\", \"been\", \"repainted\", \".\"]\n# ::lemmas [\"each\", \"of\", \"John\", \"'s\", \"boat\", \"have\", \"be\", \"repaint\", \".\"]\n# ::alignments 0-1.1.1 2-1.1.2.1.1 4-1.1 7-1\n(r / repaint-01~e.7\n   :ARG1 (b / boat~e.4\n            :mod (e / each~e.0)\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"John\"~e.2))))", [[0, 4], [5, 7], [8, 12], [12, 14], [15, 19], [20, 23], [24, 28], [29, 38], [38, 39]]], ["# ::snt Many of the record contained evidence of wrongdoing.\n# ::tokens [\"Many\", \"of\", \"the\", \"record\", \"contained\", \"evidence\", \"of\", \"wrongdoing\", \".\"]\n# ::lemmas [\"many\", \"of\", \"the\", \"record\", \"contain\", \"evidence\", \"of\", \"wrongdoing\", \".\"]\n# ::alignments 0-1.1.2 3-1.1.1 4-1 5-1.2.1 7-1.2.1.1.1.1\n(c / contain-01~e.4\n   :ARG0 (t / thing\n            :ARG1-of (r / record-01~e.3)\n            :quant (m / many~e.0))\n   :ARG1 (t2 / thing\n             :ARG0-of (e / evidence-01~e.5\n                         :ARG1 (t3 / thing\n                                   :ARG1-of (d / do-02\n                                               :ARG1-of (w / wrong-02~e.7))))))", [[0, 4], [5, 7], [8, 11], [12, 18], [19, 28], [29, 37], [38, 40], [41, 51], [51, 52]]], ["# ::snt He is alive.\n# ::tokens [\"He\", \"is\", \"alive\", \".\"]\n# ::lemmas [\"he\", \"be\", \"alive\", \".\"]\n# ::alignments 0-1.1\n(l / live-01\n   :ARG0 (h / he~e.0))", [[0, 2], [3, 5], [6, 11], [11, 12]]], ["# ::snt The committee were unanimous in their decision.\n# ::tokens [\"The\", \"committee\", \"were\", \"unanimous\", \"in\", \"their\", \"decision\", \".\"]\n# ::lemmas [\"the\", \"committee\", \"be\", \"unanimous\", \"in\", \"their\", \"decision\", \".\"]\n# ::alignments 1-1.1 3-1 6-1.2\n(u / unanimous~e.3\n   :domain (c / committee~e.1)\n   :topic (d / decide-01~e.6\n             :ARG0 c))", [[0, 3], [4, 13], [14, 18], [19, 28], [29, 31], [32, 37], [38, 46], [46, 47]]], ["# ::snt A variety of styles has been in vogue for the last year.\n# ::tokens [\"A\", \"variety\", \"of\", \"styles\", \"has\", \"been\", \"in\", \"vogue\", \"for\", \"the\", \"last\", \"year\", \".\"]\n# ::lemmas [\"a\", \"variety\", \"of\", \"style\", \"have\", \"be\", \"in\", \"vogue\", \"for\", \"the\", \"last\", \"year\", \".\"]\n# ::alignments 1-1.1.1 3-1.1 7-1 10-1.2.1 11-1.2\n(v / vogue~e.7\n   :domain (s / style~e.3\n              :mod (v2 / variety~e.1))\n   :time (y / year~e.11\n            :mod (l / last~e.10)))", [[0, 1], [2, 9], [10, 12], [13, 19], [20, 23], [24, 28], [29, 31], [32, 37], [38, 41], [42, 45], [46, 50], [51, 55], [55, 56]]], ["# ::snt Both workers will wear carnations.\n# ::tokens [\"Both\", \"workers\", \"will\", \"wear\", \"carnations\", \".\"]\n# ::lemmas [\"both\", \"worker\", \"will\", \"wear\", \"carnation\", \".\"]\n# ::alignments 0-1.1.2 1-1.1.1 3-1 4-1.2\n(w / wear-01~e.3\n   :ARG0 (p / person\n            :ARG0-of (w2 / work-01~e.1)\n            :mod (b / both~e.0))\n   :ARG1 (c / Carnival~e.4))", [[0, 4], [5, 12], [13, 17], [18, 22], [23, 33], [33, 34]]], ["# ::snt Few of the doctors approve of our remedy.\n# ::tokens [\"Few\", \"of\", \"the\", \"doctors\", \"approve\", \"of\", \"our\", \"remedy\", \".\"]\n# ::lemmas [\"few\", \"of\", \"the\", \"doctor\", \"approve\", \"of\", \"our\", \"remedy\", \".\"]\n# ::alignments 0-1.1.1 3-1.1 4-1 7-1.2\n(a / approve-01~e.4\n   :ARG0 (d / doctor~e.3\n            :quant (f / few~e.0))\n   :ARG1 (r / remedy-01~e.7\n            :ARG0 (w / we)))", [[0, 3], [4, 6], [7, 10], [11, 18], [19, 26], [27, 29], [30, 33], [34, 40], [40, 41]]], ["# ::snt You washed me.\n# ::tokens [\"You\", \"washed\", \"me\", \".\"]\n# ::lemmas [\"you\", \"wash\", \"i\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2\n(w / wash-01~e.1\n   :ARG0 (y / you~e.0)\n   :ARG1 (ii / i~e.2))", [[0, 3], [4, 10], [11, 13], [13, 14]]], ["# ::snt Sally wishes that everyone would praise her.\n# ::tokens [\"Sally\", \"wishes\", \"that\", \"everyone\", \"would\", \"praise\", \"her\", \".\"]\n# ::lemmas [\"Sally\", \"wish\", \"that\", \"everyone\", \"would\", \"praise\", \"she\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1 5-1.2\n(w / wish-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sally\"~e.0))\n   :ARG1 (p2 / praise-01~e.5\n             :ARG0 (e / everyone~e.3)\n             :ARG1 p))", [[0, 5], [6, 12], [13, 17], [18, 26], [27, 32], [33, 39], [40, 43], [43, 44]]], ["# ::snt John is likely to be a letter in the mailbox.\n# ::tokens [\"John\", \"is\", \"likely\", \"to\", \"be\", \"a\", \"letter\", \"in\", \"the\", \"mailbox\", \".\"]\n# ::lemmas [\"John\", \"be\", \"likely\", \"to\", \"be\", \"a\", \"letter\", \"in\", \"the\", \"mailbox\", \".\"]\n# ::alignments 0-1.1.2.1.1 2-1 6-1.1 9-1.1.1\n(l / likely-01~e.2\n   :ARG1 (l2 / letter~e.6\n             :location (m / mailbox~e.9)\n             :domain (p / person\n                        :name (n / name\n                                 :op1 \"John\"~e.0))))", [[0, 4], [5, 7], [8, 14], [15, 17], [18, 20], [21, 22], [23, 29], [30, 32], [33, 36], [37, 44], [44, 45]]], ["# ::snt The color red is his favorite color.\n# ::tokens [\"The\", \"color\", \"red\", \"is\", \"his\", \"favorite\", \"color\", \".\"]\n# ::lemmas [\"the\", \"color\", \"red\", \"be\", \"his\", \"favorite\", \"color\", \".\"]\n# ::alignments 1-1 2-1.2.1 5-1.1 6-1.2\n(c / color~e.1\n   :ARG1-of (f / favor-01~e.5\n               :ARG0 (h / he))\n   :domain (c2 / color~e.6\n               :ARG1-of (r / red-02~e.2)))", [[0, 3], [4, 9], [10, 13], [14, 16], [17, 20], [21, 29], [30, 35], [35, 36]]], ["# ::snt Pat was persuaded to be examined by the dentist.\n# ::tokens [\"Pat\", \"was\", \"persuaded\", \"to\", \"be\", \"examined\", \"by\", \"the\", \"dentist\", \".\"]\n# ::lemmas [\"Pat\", \"be\", \"persuade\", \"to\", \"be\", \"examine\", \"by\", \"the\", \"dentist\", \".\"]\n# ::alignments 0-1.1.1.1 2-1 5-1.2 8-1.2.1\n(p / persuade-01~e.2\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Pat\"~e.0))\n   :ARG2 (e / examine-01~e.5\n            :ARG0 (d / dentist~e.8)\n            :ARG1 p2))", [[0, 3], [4, 7], [8, 17], [18, 20], [21, 23], [24, 32], [33, 35], [36, 39], [40, 47], [47, 48]]], ["# ::snt There seem to be no student absent.\n# ::tokens [\"There\", \"seem\", \"to\", \"be\", \"no\", \"student\", \"absent\", \".\"]\n# ::lemmas [\"there\", \"seem\", \"to\", \"be\", \"no\", \"student\", \"absent\", \".\"]\n# ::alignments 1-1 4-1.1.1 5-1.1.2.1 6-1.1\n(s / seem-01~e.1\n   :ARG1 (a / absent-01~e.6\n            :polarity -~e.4\n            :ARG1 (p / person\n                     :ARG0-of (s2 / study-01~e.5))))", [[0, 5], [6, 10], [11, 13], [14, 16], [17, 19], [20, 27], [28, 34], [34, 35]]], ["# ::snt Kevin urged Anne to be loyal to herself.\n# ::tokens [\"Kevin\", \"urged\", \"Anne\", \"to\", \"be\", \"loyal\", \"to\", \"herself\", \".\"]\n# ::lemmas [\"Kevin\", \"urge\", \"Anne\", \"to\", \"be\", \"loyal\", \"to\", \"herself\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1 5-1.3\n(u / urge-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kevin\"~e.0))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Anne\"~e.2))\n   :ARG2 (l / loyal-01~e.5\n            :ARG1 p2\n            :ARG2 p2))", [[0, 5], [6, 11], [12, 16], [17, 19], [20, 22], [23, 28], [29, 31], [32, 39], [39, 40]]], ["# ::snt John drank water and Bill wine.\n# ::tokens [\"John\", \"drank\", \"water\", \"and\", \"Bill\", \"wine\", \".\"]\n# ::lemmas [\"John\", \"drink\", \"water\", \"and\", \"Bill\", \"wine\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 2-1.1.2 3-1 4-1.2.1.1.1 5-1.2\n(a / and~e.3\n   :op1 (d / drink-01~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"John\"~e.0))\n           :ARG1 (w / water~e.2))\n   :op2 (w2 / wine-01~e.5\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Bill\"~e.4))))", [[0, 4], [5, 10], [11, 16], [17, 20], [21, 25], [26, 30], [30, 31]]], ["# ::snt He must have been being interrogated by the police at that very moment.\n# ::tokens [\"He\", \"must\", \"have\", \"been\", \"being\", \"interrogated\", \"by\", \"the\", \"police\", \"at\", \"that\", \"very\", \"moment\", \".\"]\n# ::lemmas [\"he\", \"must\", \"have\", \"be\", \"be\", \"interrogate\", \"by\", \"the\", \"police\", \"at\", \"that\", \"very\", \"moment\", \".\"]\n# ::alignments 0-1.1.2 5-1.1 8-1.1.1 10-1.1.3.2 11-1.1.3.1 12-1.1.3\n(ii / infer-01\n    :ARG1 (ii2 / interrogate-01~e.5\n               :ARG0 (p / police~e.8)\n               :ARG1 (h / he~e.0)\n               :time (m / moment~e.12\n                        :mod (v / very~e.11)\n                        :mod (t / that~e.10))))", [[0, 2], [3, 7], [8, 12], [13, 17], [18, 23], [24, 36], [37, 39], [40, 43], [44, 50], [51, 53], [54, 58], [59, 63], [64, 70], [70, 71]]], ["# ::snt John will kicking the ball.\n# ::tokens [\"John\", \"will\", \"kicking\", \"the\", \"ball\", \".\"]\n# ::lemmas [\"John\", \"will\", \"kick\", \"the\", \"ball\", \".\"]\n# ::alignments 0-1.1.1.1 2-1 4-1.2\n(k / kick-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (b / ball~e.4))", [[0, 4], [5, 9], [10, 17], [18, 21], [22, 26], [26, 27]]], ["# ::snt John is in the school.\n# ::tokens [\"John\", \"is\", \"in\", \"the\", \"school\", \".\"]\n# ::lemmas [\"John\", \"be\", \"in\", \"the\", \"school\", \".\"]\n# ::alignments 0-1.1.1.1 4-1\n(s / school~e.4\n   :location-of (p / person\n                   :name (n / name\n                            :op1 \"John\"~e.0)))", [[0, 4], [5, 7], [8, 10], [11, 14], [15, 21], [21, 22]]], ["# ::snt The child became never crazy.\n# ::tokens [\"The\", \"child\", \"became\", \"never\", \"crazy\", \".\"]\n# ::lemmas [\"the\", \"child\", \"become\", \"never\", \"crazy\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2\n(b / become-01~e.2\n   :ARG1 (c / child~e.1)\n   :ARG2 (c2 / crazy-03~e.4\n             :polarity -\n             :ARG1 c\n             :time (e / ever)))", [[0, 3], [4, 9], [10, 16], [17, 22], [23, 28], [28, 29]]], ["# ::snt Are you a student?\n# ::tokens [\"Are\", \"you\", \"a\", \"student\", \"?\"]\n# ::lemmas [\"be\", \"you\", \"a\", \"student\", \"?\"]\n# ::alignments 1-1.3 3-1.2\n(p / person\n   :polarity (a / amr-unknown)\n   :ARG0-of (s / study-01~e.3)\n   :domain (y / you~e.1))", [[0, 3], [4, 7], [8, 9], [10, 17], [17, 18]]], ["# ::snt Jane likes these apples even more than Mary does.\n# ::tokens [\"Jane\", \"likes\", \"these\", \"apples\", \"even\", \"more\", \"than\", \"Mary\", \"does\", \".\"]\n# ::lemmas [\"Jane\", \"like\", \"these\", \"apple\", \"even\", \"more\", \"than\", \"Mary\", \"do\", \".\"]\n# ::alignments 0-1.1.1.1 1-1.2 3-1.2.2 4-1.3.1 5-1.3 7-1.4.1.1.1\n(h / have-degree-91\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Jane\"~e.0))\n   :ARG2 (l / like-01~e.1\n            :ARG0 p\n            :ARG1 (a / apple~e.3\n                     :mod (t / this)))\n   :ARG3 (m / more~e.5\n            :mod (e / even~e.4))\n   :ARG4 (l2 / like-01\n             :ARG0 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Mary\"~e.7))\n             :ARG1 a))", [[0, 4], [5, 10], [11, 16], [17, 23], [24, 28], [29, 33], [34, 38], [39, 43], [44, 48], [48, 49]]], ["# ::snt I found myself needing sleep.\n# ::tokens [\"I\", \"found\", \"myself\", \"needing\", \"sleep\", \".\"]\n# ::lemmas [\"i\", \"find\", \"myself\", \"need\", \"sleep\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 4-1.2.2\n(f / find-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (n / need-01~e.3\n            :ARG0 ii\n            :ARG1 (s / sleep-01~e.4\n                     :ARG0 ii)))", [[0, 1], [2, 7], [8, 14], [15, 22], [23, 28], [28, 29]]], ["# ::snt I found myself should needing sleep.\n# ::tokens [\"I\", \"found\", \"myself\", \"should\", \"needing\", \"sleep\", \".\"]\n# ::lemmas [\"i\", \"find\", \"myself\", \"should\", \"need\", \"sleep\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2.1 5-1.2.1.2\n(f / find-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (r / recommend-01\n            :ARG1 (n / need-01~e.4\n                     :ARG0 ii\n                     :ARG1 (s / sleep-01~e.5\n                              :ARG0 ii))))", [[0, 1], [2, 7], [8, 14], [15, 21], [22, 29], [30, 35], [35, 36]]], ["# ::snt John does leave.\n# ::tokens [\"John\", \"does\", \"leave\", \".\"]\n# ::lemmas [\"John\", \"do\", \"leave\", \".\"]\n# ::alignments 0-1.1.1.1 2-1\n(l / leave-11~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0)))", [[0, 4], [5, 9], [10, 15], [15, 16]]], ["# ::snt John did not come.\n# ::tokens [\"John\", \"did\", \"not\", \"come\", \".\"]\n# ::lemmas [\"John\", \"do\", \"not\", \"come\", \".\"]\n# ::alignments 0-1.2.1.1 2-1.1 3-1\n(c / come-01~e.3\n   :polarity -~e.2\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0)))", [[0, 4], [5, 8], [9, 12], [13, 17], [17, 18]]], ["# ::snt Lee never left.\n# ::tokens [\"Lee\", \"never\", \"left\", \".\"]\n# ::lemmas [\"Lee\", \"never\", \"leave\", \".\"]\n# ::alignments 0-1.2.1.1 2-1\n(l / leave-11~e.2\n   :polarity -\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lee\"~e.0))\n   :time (e / ever))", [[0, 3], [4, 9], [10, 14], [14, 15]]], ["# ::snt Had they been here now, we wouldn't have this problem.\n# ::tokens [\"Had\", \"they\", \"been\", \"here\", \"now\", \",\", \"we\", \"would\", \"n't\", \"have\", \"this\", \"problem\", \".\"]\n# ::lemmas [\"have\", \"they\", \"be\", \"here\", \"now\", \",\", \"we\", \"would\", \"not\", \"have\", \"this\", \"problem\", \".\"]\n# ::alignments 0-1 1-1.2.1 3-1.2.2 4-1.2.3 6-1.1.2 9-1.1 10-1.1.3.1 11-1.1.3\n(h / have-condition-91~e.0\n   :ARG1 (h2 / have-03~e.9\n             :polarity -\n             :ARG0 (w / we~e.6)\n             :ARG1 (p / problem~e.11\n                      :mod (t / this~e.10)))\n   :ARG2 (b / be-located-at-91\n            :ARG1 (t2 / they~e.1)\n            :ARG2 (h3 / here~e.3)\n            :time (n / now~e.4)))", [[0, 3], [4, 8], [9, 13], [14, 18], [19, 22], [22, 23], [24, 26], [27, 32], [32, 35], [36, 40], [41, 45], [46, 53], [53, 54]]], ["# ::snt They'll be leaving.\n# ::tokens [\"They\", \"'ll\", \"be\", \"leaving\", \".\"]\n# ::lemmas [\"they\", \"will\", \"be\", \"leave\", \".\"]\n# ::alignments 0-1.1 3-1\n(l / leave-11~e.3\n   :ARG0 (t / they~e.0))", [[0, 4], [4, 7], [8, 10], [11, 18], [18, 19]]], ["# ::snt Kim got arrested by the CIA, and Sandy got, also.\n# ::tokens [\"Kim\", \"got\", \"arrested\", \"by\", \"the\", \"CIA\", \",\", \"and\", \"Sandy\", \"got\", \",\", \"also\", \".\"]\n# ::lemmas [\"Kim\", \"got\", \"arrest\", \"by\", \"the\", \"CIA\", \",\", \"and\", \"Sandy\", \"get\", \",\", \"also\", \".\"]\n# ::alignments 0-1.1.2.1.1 2-1.1 5-1.1.1.1.1 7-1 8-1.2.2.1.1 11-1.2.3\n(a / and~e.7\n   :op1 (a2 / arrest-01~e.2\n            :ARG0 (g / government-organization\n                     :name (n / name\n                              :op1 \"CIA\"~e.5))\n            :ARG1 (p / person\n                     :name (n2 / name\n                               :op1 \"Kim\"~e.0)))\n   :op2 (a3 / arrest-01\n            :ARG0 g\n            :ARG1 (p2 / person\n                      :name (n3 / name\n                                :op1 \"Sandy\"~e.8))\n            :mod (a4 / also~e.11)))", [[0, 3], [4, 7], [8, 16], [17, 19], [20, 23], [24, 27], [27, 28], [29, 32], [33, 38], [39, 42], [42, 43], [44, 48], [48, 49]]], ["# ::snt You better not leave it here.\n# ::tokens [\"You\", \"better\", \"not\", \"leave\", \"it\", \"here\", \".\"]\n# ::lemmas [\"you\", \"well\", \"not\", \"leave\", \"it\", \"here\", \".\"]\n# ::alignments 0-1.1.2 2-1.1.1 3-1.1 4-1.1.3 5-1.1.4\n(r / recommend-01\n   :ARG1 (l / leave-11~e.3\n            :polarity -~e.2\n            :ARG0 (y / you~e.0)\n            :ARG1 (ii / it~e.4)\n            :location (h / here~e.5))\n   :ARG2 y)", [[0, 3], [4, 10], [11, 14], [15, 20], [21, 23], [24, 28], [28, 29]]], ["# ::snt The roof is leak.\n# ::tokens [\"The\", \"roof\", \"is\", \"leak\", \".\"]\n# ::lemmas [\"the\", \"roof\", \"be\", \"leak\", \".\"]\n# ::alignments 1-1.1 3-1\n(l / leak-01~e.3\n   :ARG1 (r / roof~e.1))", [[0, 3], [4, 8], [9, 11], [12, 16], [16, 17]]], ["# ::snt Anyone isn't sleeping in my bed.\n# ::tokens [\"Anyone\", \"is\", \"n't\", \"sleeping\", \"in\", \"my\", \"bed\", \".\"]\n# ::lemmas [\"anyone\", \"be\", \"not\", \"sleep\", \"in\", \"my\", \"bed\", \".\"]\n# ::alignments 0-1.2 3-1 6-1.3\n(s / sleep-01~e.3\n   :polarity -\n   :ARG0 (a / anyone~e.0)\n   :location (b / bed~e.6\n                :poss (ii / i)))", [[0, 6], [7, 9], [9, 12], [13, 21], [22, 24], [25, 27], [28, 31], [31, 32]]], ["# ::snt That he is a fool is believed by no one.\n# ::tokens [\"That\", \"he\", \"is\", \"a\", \"fool\", \"is\", \"believed\", \"by\", \"no\", \"one\", \".\"]\n# ::lemmas [\"that\", \"he\", \"be\", \"a\", \"fool\", \"be\", \"believe\", \"by\", \"no\", \"one\", \".\"]\n# ::alignments 1-1.2.1 4-1.2 6-1\n(b / believe-01~e.6\n   :ARG0 (n / no-one)\n   :ARG1 (f / fool~e.4\n            :domain (h / he~e.1)))", [[0, 4], [5, 7], [8, 10], [11, 12], [13, 17], [18, 20], [21, 29], [30, 32], [33, 35], [36, 39], [39, 40]]], ["# ::snt John will have been driving the car.\n# ::tokens [\"John\", \"will\", \"have\", \"been\", \"driving\", \"the\", \"car\", \".\"]\n# ::lemmas [\"John\", \"will\", \"have\", \"be\", \"drive\", \"the\", \"car\", \".\"]\n# ::alignments 0-1.1.1.1 4-1 6-1.2\n(d / drive-01~e.4\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (c / car~e.6))", [[0, 4], [5, 9], [10, 14], [15, 19], [20, 27], [28, 31], [32, 35], [35, 36]]], ["# ::snt TV puts ideas into children's heads.\n# ::tokens [\"TV\", \"puts\", \"ideas\", \"into\", \"children\", \"'s\", \"heads\", \".\"]\n# ::lemmas [\"tv\", \"put\", \"idea\", \"into\", \"child\", \"'s\", \"head\", \".\"]\n# ::alignments 1-1 2-1.2 4-1.3.1 6-1.3\n(p / put-01~e.1\n   :ARG0 (t / television)\n   :ARG1 (ii / idea~e.2)\n   :ARG2 (h / head~e.6\n            :part-of (c / child~e.4)))", [[0, 2], [3, 7], [8, 13], [14, 18], [19, 27], [27, 29], [30, 35], [35, 36]]], ["# ::snt Ideas are put into children's heads.\n# ::tokens [\"Ideas\", \"are\", \"put\", \"into\", \"children\", \"'s\", \"heads\", \".\"]\n# ::lemmas [\"idea\", \"be\", \"put\", \"into\", \"child\", \"'s\", \"head\", \".\"]\n# ::alignments 0-1.1 2-1 4-1.2.1 6-1.2\n(p / put-01~e.2\n   :ARG1 (ii / idea~e.0)\n   :ARG2 (h / head~e.6\n            :part-of (c / child~e.4)))", [[0, 5], [6, 9], [10, 13], [14, 18], [19, 27], [27, 29], [30, 35], [35, 36]]], ["# ::snt The coat does not fit you.\n# ::tokens [\"The\", \"coat\", \"does\", \"not\", \"fit\", \"you\", \".\"]\n# ::lemmas [\"the\", \"coat\", \"do\", \"not\", \"fit\", \"you\", \".\"]\n# ::alignments 1-1.2 3-1.1 4-1 5-1.3\n(f / fit-06~e.4\n   :polarity -~e.3\n   :ARG1 (c / coat~e.1)\n   :ARG2 (y / you~e.5))", [[0, 3], [4, 8], [9, 13], [14, 17], [18, 21], [22, 25], [25, 26]]], ["# ::snt The plan was approved of by my mother.\n# ::tokens [\"The\", \"plan\", \"was\", \"approved\", \"of\", \"by\", \"my\", \"mother\", \".\"]\n# ::lemmas [\"the\", \"plan\", \"be\", \"approve\", \"of\", \"by\", \"my\", \"mother\", \".\"]\n# ::alignments 1-1.2 3-1 7-1.1.1.2\n(a / approve-01~e.3\n   :ARG0 (p / person\n            :ARG0-of (h / have-rel-role-91\n                        :ARG1 (ii / i)\n                        :ARG2 (m / mother~e.7)))\n   :ARG1 (p2 / plan~e.1))", [[0, 3], [4, 8], [9, 12], [13, 21], [22, 24], [25, 27], [28, 30], [31, 37], [37, 38]]], ["# ::snt Boston was flown to.\n# ::tokens [\"Boston\", \"was\", \"flown\", \"to\", \".\"]\n# ::lemmas [\"Boston\", \"be\", \"fly\", \"to\", \".\"]\n# ::alignments 0-1.1.1.1 2-1\n(f / fly-01~e.2\n   :destination (c / city\n                   :name (n / name\n                            :op1 \"Boston\"~e.0)))", [[0, 6], [7, 10], [11, 16], [17, 19], [19, 20]]], ["# ::snt Heart disease is considered the leading cause of death in the United States.\n# ::tokens [\"Heart\", \"disease\", \"is\", \"considered\", \"the\", \"leading\", \"cause\", \"of\", \"death\", \"in\", \"the\", \"United\", \"States\", \".\"]\n# ::lemmas [\"heart\", \"disease\", \"be\", \"consider\", \"the\", \"leading\", \"cause\", \"of\", \"death\", \"in\", \"the\", \"United\", \"States\", \".\"]\n# ::alignments 0-1.1.1.1 1-1.1.1 3-1 5-1.1.3 6-1.1 11-1.2.1.1 12-1.2.1.2\n(c / consider-01~e.3\n   :ARG1 (c2 / cause-01~e.6\n             :ARG0 (d / disease~e.1\n                      :mod (h / heart~e.0))\n             :ARG1 (d2 / die-01)\n             :ARG2-of (l / lead-01~e.5))\n   :location (c3 / country\n                 :name (n / name\n                          :op1 \"United\"~e.11\n                          :op2 \"States\"~e.12)))", [[0, 5], [6, 13], [14, 16], [17, 27], [28, 31], [32, 39], [40, 45], [46, 48], [49, 54], [55, 57], [58, 61], [62, 68], [69, 75], [75, 76]]], ["# ::snt There was believed to have been a riot in the kitchen.\n# ::tokens [\"There\", \"was\", \"believed\", \"to\", \"have\", \"been\", \"a\", \"riot\", \"in\", \"the\", \"kitchen\", \".\"]\n# ::lemmas [\"there\", \"be\", \"believe\", \"to\", \"have\", \"be\", \"a\", \"riot\", \"in\", \"the\", \"kitchen\", \".\"]\n# ::alignments 2-1 7-1.1 10-1.1.1\n(b / believe-01~e.2\n   :ARG1 (r / riot-01~e.7\n            :location (k / kitchen~e.10)))", [[0, 5], [6, 9], [10, 18], [19, 21], [22, 26], [27, 31], [32, 33], [34, 38], [39, 41], [42, 45], [46, 53], [53, 54]]], ["# ::snt That we should call the police was suggested by her son.\n# ::tokens [\"That\", \"we\", \"should\", \"call\", \"the\", \"police\", \"was\", \"suggested\", \"by\", \"her\", \"son\", \".\"]\n# ::lemmas [\"that\", \"we\", \"should\", \"call\", \"the\", \"police\", \"be\", \"suggest\", \"by\", \"her\", \"son\", \".\"]\n# ::alignments 1-1.2.1.1 3-1.2.1 5-1.2.1.2 7-1 10-1.1.1.2\n(s / suggest-01~e.7\n   :ARG0 (p / person\n            :ARG0-of (h / have-rel-role-91\n                        :ARG1 (s2 / she)\n                        :ARG2 (s3 / son~e.10)))\n   :ARG1 (r / recommend-01\n            :ARG1 (c / call-02~e.3\n                     :ARG0 (w / we~e.1)\n                     :ARG1 (p2 / police~e.5))\n            :ARG2 w))", [[0, 4], [5, 7], [8, 14], [15, 19], [20, 23], [24, 30], [31, 34], [35, 44], [45, 47], [48, 51], [52, 55], [55, 56]]], ["# ::snt It was suggested by her son that we should call the police.\n# ::tokens [\"It\", \"was\", \"suggested\", \"by\", \"her\", \"son\", \"that\", \"we\", \"should\", \"call\", \"the\", \"police\", \".\"]\n# ::lemmas [\"it\", \"be\", \"suggest\", \"by\", \"her\", \"son\", \"that\", \"we\", \"should\", \"call\", \"the\", \"police\", \".\"]\n# ::alignments 2-1 5-1.1.1.2 7-1.2.1.1 9-1.2.1 11-1.2.1.2\n(s / suggest-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (h / have-rel-role-91\n                        :ARG1 (s2 / she)\n                        :ARG2 (s3 / son~e.5)))\n   :ARG1 (r / recommend-01\n            :ARG1 (c / call-02~e.9\n                     :ARG0 (w / we~e.7)\n                     :ARG1 (p2 / police~e.11))\n            :ARG2 w))", [[0, 2], [3, 6], [7, 16], [17, 19], [20, 23], [24, 27], [28, 32], [33, 35], [36, 42], [43, 47], [48, 51], [52, 58], [58, 59]]], ["# ::snt The plaza was come into by many people.\n# ::tokens [\"The\", \"plaza\", \"was\", \"come\", \"into\", \"by\", \"many\", \"people\", \".\"]\n# ::lemmas [\"the\", \"plaza\", \"be\", \"come\", \"into\", \"by\", \"many\", \"people\", \".\"]\n# ::alignments 1-1.2 3-1 6-1.1.1\n(c / come-01~e.3\n   :ARG1 (p / person\n            :quant (m / many~e.6))\n   :ARG4 (p2 / plaza~e.1))", [[0, 3], [4, 9], [10, 13], [14, 18], [19, 23], [24, 26], [27, 31], [32, 38], [38, 39]]], ["# ::snt The king got feared by everyone.\n# ::tokens [\"The\", \"king\", \"got\", \"feared\", \"by\", \"everyone\", \".\"]\n# ::lemmas [\"the\", \"king\", \"got\", \"fear\", \"by\", \"everyone\", \".\"]\n# ::alignments 1-1.2 3-1 5-1.1\n(f / fear-01~e.3\n   :ARG0 (e / everyone~e.5)\n   :ARG1 (k / king~e.1))", [[0, 3], [4, 8], [9, 12], [13, 19], [20, 22], [23, 31], [31, 32]]], ["# ::snt John is clever.\n# ::tokens [\"John\", \"is\", \"clever\", \".\"]\n# ::lemmas [\"John\", \"be\", \"clever\", \".\"]\n# ::alignments 0-1.1.1.1 2-1\n(c / clever-01~e.2\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0)))", [[0, 4], [5, 7], [8, 14], [14, 15]]], ["# ::snt Who called the police?\n# ::tokens [\"Who\", \"called\", \"the\", \"police\", \"?\"]\n# ::lemmas [\"who\", \"call\", \"the\", \"police\", \"?\"]\n# ::alignments 1-1 3-1.2\n(c / call-02~e.1\n   :ARG0 (a / amr-unknown)\n   :ARG1 (p / police~e.3))", [[0, 3], [4, 10], [11, 14], [15, 21], [21, 22]]], ["# ::snt How frequently did Hobbs see Rhodes?\n# ::tokens [\"How\", \"frequently\", \"did\", \"Hobbs\", \"see\", \"Rhodes\", \"?\"]\n# ::lemmas [\"how\", \"frequently\", \"do\", \"Hobbs\", \"see\", \"rhode\", \"?\"]\n# ::alignments 1-1.3 3-1.1.1.1 4-1 5-1.2.1.1\n(s / see-01~e.4\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Hobbs\"~e.3))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Rhodes\"~e.5))\n   :ARG1-of (f / frequent-02~e.1\n               :degree (a / amr-unknown)))", [[0, 3], [4, 14], [15, 18], [19, 24], [25, 28], [29, 35], [35, 36]]], ["# ::snt Who do you think Mary said Tom saw?\n# ::tokens [\"Who\", \"do\", \"you\", \"think\", \"Mary\", \"said\", \"Tom\", \"saw\", \"?\"]\n# ::lemmas [\"who\", \"do\", \"you\", \"think\", \"Mary\", \"say\", \"Tom\", \"see\", \"?\"]\n# ::alignments 2-1.1 3-1 4-1.2.1.1.1.1 5-1.2.1.2 7-1.2.1\n(t / think-01~e.3\n   :ARG0 (y / you~e.2)\n   :ARG1 (a / amr-unknown\n            :ARG1-of (s / see-01~e.7\n                        :ARG0 (p / person\n                                 :name (n / name\n                                          :op1 \"Mary\"~e.4))\n                        :ARG1-of (s2 / say-01~e.5\n                                     :ARG0 p))))", [[0, 3], [4, 6], [7, 10], [11, 16], [17, 21], [22, 26], [27, 30], [31, 34], [34, 35]]], ["# ::snt That he will help you, you can rely on.\n# ::tokens [\"That\", \"he\", \"will\", \"help\", \"you\", \",\", \"you\", \"can\", \"rely\", \"on\", \".\"]\n# ::lemmas [\"that\", \"he\", \"will\", \"help\", \"you\", \",\", \"you\", \"can\", \"rely\", \"on\", \".\"]\n# ::alignments 1-1.1.2.1 3-1.1.2 4-1.1.1 8-1.1\n(p / possible-01\n   :ARG1 (r / rely-01~e.8\n            :ARG0 (y / you~e.4)\n            :ARG1 (h / help-01~e.3\n                     :ARG0 (h2 / he~e.1)\n                     :ARG1 y)))", [[0, 4], [5, 7], [8, 12], [13, 17], [18, 21], [21, 22], [23, 26], [27, 30], [31, 35], [36, 38], [38, 39]]], ["# ::snt This theory captures that arrows don't stop in midair.\n# ::tokens [\"This\", \"theory\", \"captures\", \"that\", \"arrows\", \"do\", \"n't\", \"stop\", \"in\", \"midair\", \".\"]\n# ::lemmas [\"this\", \"theory\", \"capture\", \"that\", \"arrow\", \"do\", \"not\", \"stop\", \"in\", \"midair\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1 4-1.2.2 7-1.2 9-1.2.3\n(c / capture-01~e.2\n   :ARG0 (t / theory~e.1\n            :mod (t2 / this~e.0))\n   :ARG1 (s / stop-01~e.7\n            :polarity -\n            :ARG1 (a / arrow~e.4)\n            :location (m / midair~e.9)))", [[0, 4], [5, 11], [12, 20], [21, 25], [26, 32], [33, 35], [35, 38], [39, 43], [44, 46], [47, 53], [53, 54]]], ["# ::snt Who did you compare and?\n# ::tokens [\"Who\", \"did\", \"you\", \"compare\", \"and\", \"?\"]\n# ::lemmas [\"who\", \"do\", \"you\", \"compare\", \"and\", \"?\"]\n# ::alignments 2-1.1.1 3-1.1 4-1\n(a / and~e.4\n   :op1 (c / compare-01~e.3\n           :ARG0 (y / you~e.2)\n           :ARG1 (a2 / amr-unknown))\n   :op2 (a3 / amr-unknown))", [[0, 3], [4, 7], [8, 11], [12, 19], [20, 23], [23, 24]]], ["# ::snt Karen asked where him to vote for.\n# ::tokens [\"Karen\", \"asked\", \"where\", \"him\", \"to\", \"vote\", \"for\", \".\"]\n# ::lemmas [\"Karen\", \"ask\", \"where\", \"he\", \"to\", \"vote\", \"for\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1.1 5-1.2.1\n(a / ask-02~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Karen\"~e.0))\n   :ARG1 (t / thing\n            :ARG2-of (v / vote-01~e.5\n                        :ARG0 (h / he~e.3)))\n   :ARG2 h)", [[0, 5], [6, 11], [12, 17], [18, 21], [22, 24], [25, 29], [30, 33], [33, 34]]], ["# ::snt Whose did she buy book?\n# ::tokens [\"Whose\", \"did\", \"she\", \"buy\", \"book\", \"?\"]\n# ::lemmas [\"whose\", \"do\", \"she\", \"buy\", \"book\", \"?\"]\n# ::alignments 2-1.1 3-1 4-1.2\n(b / buy-01~e.3\n   :ARG0 (s / she~e.2)\n   :ARG1 (b2 / book~e.4)\n   :ARG4 (a / amr-unknown))", [[0, 5], [6, 9], [10, 13], [14, 17], [18, 22], [22, 23]]], ["# ::snt Which rebel leader did you hear rumors that the CIA assassinated?\n# ::tokens [\"Which\", \"rebel\", \"leader\", \"did\", \"you\", \"hear\", \"rumors\", \"that\", \"the\", \"CIA\", \"assassinated\", \"?\"]\n# ::lemmas [\"which\", \"rebel\", \"leader\", \"do\", \"you\", \"hear\", \"rumor\", \"that\", \"the\", \"CIA\", \"assassinate\", \"?\"]\n# ::alignments 1-1.3.1.1 2-1.3.1 4-1.1 5-1 6-1.2 9-1.2.1.1.1.1 10-1.2.1\n(h / hear-01~e.5\n   :ARG0 (y / you~e.4)\n   :ARG1 (r / rumor-01~e.6\n            :ARG1 (a / assassinate-01~e.10\n                     :ARG0 (g / government-organization\n                              :name (n / name\n                                       :op1 \"CIA\"~e.9))))\n   :ARG2 (a2 / amr-unknown\n             :ARG0-of (l / lead-02~e.2\n                         :ARG1 (r2 / rebel~e.1))))", [[0, 5], [6, 11], [12, 18], [19, 22], [23, 26], [27, 31], [32, 38], [39, 43], [44, 47], [48, 51], [52, 64], [64, 65]]], ["# ::snt This is the very book that we need to talk about.\n# ::tokens [\"This\", \"is\", \"the\", \"very\", \"book\", \"that\", \"we\", \"need\", \"to\", \"talk\", \"about\", \".\"]\n# ::lemmas [\"this\", \"be\", \"the\", \"very\", \"book\", \"that\", \"we\", \"need\", \"to\", \"talk\", \"about\", \".\"]\n# ::alignments 0-1.2 3-1.1 4-1 6-1.3.1 7-1.3.2 9-1.3\n(b / book~e.4\n   :mod (v / very~e.3)\n   :domain (t / this~e.0)\n   :ARG1-of (t2 / talk-01~e.9\n                :ARG0 (w / we~e.6)\n                :ARG1-of (n / need-01~e.7\n                            :ARG0 w)))", [[0, 4], [5, 7], [8, 11], [12, 16], [17, 21], [22, 26], [27, 29], [30, 34], [35, 37], [38, 42], [43, 48], [48, 49]]], ["# ::snt What did Herb like fruit punch and?\n# ::tokens [\"What\", \"did\", \"Herb\", \"like\", \"fruit\", \"punch\", \"and\", \"?\"]\n# ::lemmas [\"what\", \"do\", \"Herb\", \"like\", \"fruit\", \"punch\", \"and\", \"?\"]\n# ::alignments 2-1.1.1.1 3-1 4-1.2.1.1 5-1.2.1 6-1.2\n(l / like-01~e.3\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herb\"~e.2))\n   :ARG1 (a / and~e.6\n            :op1 (p2 / punch~e.5\n                     :source (f / fruit~e.4))\n            :op2 (a2 / amr-unknown)))", [[0, 4], [5, 8], [9, 13], [14, 18], [19, 24], [25, 30], [31, 34], [34, 35]]], ["# ::snt Kim is easy to please Tom.\n# ::tokens [\"Kim\", \"is\", \"easy\", \"to\", \"please\", \"Tom\", \".\"]\n# ::lemmas [\"Kim\", \"be\", \"easy\", \"to\", \"please\", \"Tom\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1 4-1.1 5-1.1.2.1.1\n(e / easy-05~e.2\n   :ARG1 (p / please-01~e.4\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Kim\"~e.0))\n            :ARG1 (p3 / person\n                      :name (n2 / name\n                                :op1 \"Tom\"~e.5))))", [[0, 3], [4, 6], [7, 11], [12, 14], [15, 21], [22, 25], [25, 26]]], ["# ::snt Fido's barking annoys me.\n# ::tokens [\"Fido\", \"'s\", \"barking\", \"annoys\", \"me\", \".\"]\n# ::lemmas [\"Fido\", \"'s\", \"bark\", \"annoy\", \"i\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1 3-1 4-1.2\n(a / annoy-01~e.3\n   :ARG0 (b / bark-01~e.2\n            :ARG0 (a2 / animal\n                      :name (n / name\n                               :op1 \"Fido\"~e.0)))\n   :ARG1 (ii / i~e.4))", [[0, 4], [4, 6], [7, 14], [15, 21], [22, 24], [24, 25]]], ["# ::snt It is fond of Bill that John seems to be.\n# ::tokens [\"It\", \"is\", \"fond\", \"of\", \"Bill\", \"that\", \"John\", \"seems\", \"to\", \"be\", \".\"]\n# ::lemmas [\"it\", \"be\", \"fond\", \"of\", \"Bill\", \"that\", \"John\", \"seem\", \"to\", \"be\", \".\"]\n# ::alignments 4-1.2.1.1 6-1.1.1.1 7-1.3\n(l / like-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.6))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Bill\"~e.4))\n   :ARG1-of (s / seem-01~e.7))", [[0, 2], [3, 5], [6, 10], [11, 13], [14, 18], [19, 23], [24, 28], [29, 34], [35, 37], [38, 40], [40, 41]]], ["# ::snt What you do is wear it like that.\n# ::tokens [\"What\", \"you\", \"do\", \"is\", \"wear\", \"it\", \"like\", \"that\", \".\"]\n# ::lemmas [\"what\", \"you\", \"do\", \"be\", \"wear\", \"it\", \"like\", \"that\", \".\"]\n# ::alignments 1-1.1 4-1 5-1.2 7-1.3.1.1\n(w / wear-01~e.4\n   :ARG0 (y / you~e.1)\n   :ARG1 (ii / it~e.5)\n   :manner (t / thing\n              :ARG1-of (r / resemble-01\n                          :ARG2 (t2 / that~e.7))))", [[0, 4], [5, 8], [9, 11], [12, 14], [15, 19], [20, 22], [23, 27], [28, 32], [32, 33]]], ["# ::snt That is what they're trying to do.\n# ::tokens [\"That\", \"is\", \"what\", \"they\", \"'re\", \"trying\", \"to\", \"do\", \".\"]\n# ::lemmas [\"that\", \"be\", \"what\", \"they\", \"be\", \"try\", \"to\", \"do\", \".\"]\n# ::alignments 0-1.2.2 3-1.1 5-1 7-1.2\n(t / try-01~e.5\n   :ARG0 (t2 / they~e.3)\n   :ARG1 (d / do-02~e.7\n            :ARG0 t2\n            :ARG1 (t3 / that~e.0)))", [[0, 4], [5, 7], [8, 12], [13, 17], [17, 20], [21, 27], [28, 30], [31, 33], [33, 34]]], ["# ::snt That was which I decided to buy.\n# ::tokens [\"That\", \"was\", \"which\", \"I\", \"decided\", \"to\", \"buy\", \".\"]\n# ::lemmas [\"that\", \"be\", \"which\", \"i\", \"decide\", \"to\", \"buy\", \".\"]\n# ::alignments 0-1.2.2 3-1.1 4-1 6-1.2\n(d / decide-01~e.4\n   :ARG0 (ii / i~e.3)\n   :ARG1 (b / buy-01~e.6\n            :ARG0 ii\n            :ARG1 (t / that~e.0)))", [[0, 4], [5, 8], [9, 14], [15, 16], [17, 24], [25, 27], [28, 31], [31, 32]]], ["# ::snt It was an explosion, what you heard.\n# ::tokens [\"It\", \"was\", \"an\", \"explosion\", \",\", \"what\", \"you\", \"heard\", \".\"]\n# ::lemmas [\"it\", \"be\", \"an\", \"explosion\", \",\", \"what\", \"you\", \"hear\", \".\"]\n# ::alignments 0-1.1 3-1 6-1.2.1 7-1.2\n(e / explode-01~e.3\n   :domain (ii / it~e.0)\n   :ARG1-of (h / hear-01~e.7\n               :ARG0 (y / you~e.6)))", [[0, 2], [3, 6], [7, 9], [10, 19], [19, 20], [21, 25], [26, 29], [30, 35], [35, 36]]], ["# ::snt Lee bought which car Kim wanted to sell to him.\n# ::tokens [\"Lee\", \"bought\", \"which\", \"car\", \"Kim\", \"wanted\", \"to\", \"sell\", \"to\", \"him\", \".\"]\n# ::lemmas [\"Lee\", \"buy\", \"which\", \"car\", \"Kim\", \"want\", \"to\", \"sell\", \"to\", \"he\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 4-1.2.1.1.1.1 5-1.2.1.2 7-1.2.1\n(b / buy-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lee\"~e.0))\n   :ARG1 (c / car~e.3\n            :ARG1-of (s / sell-01~e.7\n                        :ARG0 (p2 / person\n                                  :name (n2 / name\n                                            :op1 \"Kim\"~e.4))\n                        :ARG1-of (w / want-01~e.5\n                                    :ARG0 p2))))", [[0, 3], [4, 10], [11, 16], [17, 20], [21, 24], [25, 31], [32, 34], [35, 39], [40, 42], [43, 46], [46, 47]]], ["# ::snt It was only gradually that I came to realize how stupid I was.\n# ::tokens [\"It\", \"was\", \"only\", \"gradually\", \"that\", \"I\", \"came\", \"to\", \"realize\", \"how\", \"stupid\", \"I\", \"was\", \".\"]\n# ::lemmas [\"it\", \"be\", \"only\", \"gradually\", \"that\", \"i\", \"come\", \"to\", \"realize\", \"how\", \"stupid\", \"i\", \"be\", \".\"]\n# ::alignments 2-1.3.1 3-1.3 5-1.1 6-1 8-1.2 10-1.2.2\n(c / come-04~e.6\n   :ARG1 (ii / i~e.5)\n   :ARG2 (r / realize-01~e.8\n            :ARG0 ii\n            :ARG1 (s / stupid~e.10\n                     :domain ii\n                     :degree (s2 / so)))\n   :manner (g / gradual~e.3\n              :mod (o / only~e.2)))", [[0, 2], [3, 6], [7, 11], [12, 21], [22, 26], [27, 28], [29, 33], [34, 36], [37, 44], [45, 48], [49, 55], [56, 57], [58, 61], [61, 62]]], ["# ::snt It is John that we are looking for.\n# ::tokens [\"It\", \"is\", \"John\", \"that\", \"we\", \"are\", \"looking\", \"for\", \".\"]\n# ::lemmas [\"it\", \"be\", \"John\", \"that\", \"we\", \"be\", \"look\", \"for\", \".\"]\n# ::alignments 2-1.1.1 4-1.2.1 6-1.2\n(p / person\n   :name (n / name\n            :op1 \"John\"~e.2)\n   :ARG1-of (l / look-01~e.6\n               :ARG0 (w / we~e.4)))", [[0, 2], [3, 5], [6, 10], [11, 15], [16, 18], [19, 22], [23, 30], [31, 34], [34, 35]]], ["# ::snt This problem will be difficult for the students to solve.\n# ::tokens [\"This\", \"problem\", \"will\", \"be\", \"difficult\", \"for\", \"the\", \"students\", \"to\", \"solve\", \".\"]\n# ::lemmas [\"this\", \"problem\", \"will\", \"be\", \"difficult\", \"for\", \"the\", \"student\", \"to\", \"solve\", \".\"]\n# ::alignments 0-1.1.2.1 1-1.1.2 4-1 7-1.1.1.1 9-1.1\n(d / difficult~e.4\n   :domain (s / solve-01~e.9\n              :ARG0 (p / person\n                       :ARG0-of (s2 / study-01~e.7))\n              :ARG1 (p2 / problem~e.1\n                        :mod (t / this~e.0))))", [[0, 4], [5, 12], [13, 17], [18, 20], [21, 30], [31, 34], [35, 38], [39, 47], [48, 50], [51, 56], [56, 57]]], ["# ::snt This toy isn't easy to try to hand to the baby.\n# ::tokens [\"This\", \"toy\", \"is\", \"n't\", \"easy\", \"to\", \"try\", \"to\", \"hand\", \"to\", \"the\", \"baby\", \".\"]\n# ::lemmas [\"this\", \"toy\", \"be\", \"not\", \"easy\", \"to\", \"try\", \"to\", \"hand\", \"to\", \"the\", \"baby\", \".\"]\n# ::alignments 0-1.2.1.1.1 1-1.2.1.1 4-1 6-1.2 8-1.2.1 11-1.2.1.2\n(e / easy-05~e.4\n   :polarity -\n   :ARG1 (t / try-01~e.6\n            :ARG1 (h / hand-01~e.8\n                     :ARG1 (t2 / toy~e.1\n                               :mod (t3 / this~e.0))\n                     :ARG2 (b / baby~e.11))))", [[0, 4], [5, 8], [9, 11], [11, 14], [15, 19], [20, 22], [23, 26], [27, 29], [30, 34], [35, 37], [38, 41], [42, 46], [46, 47]]], ["# ::snt Almost some lawyer could answer that question.\n# ::tokens [\"Almost\", \"some\", \"lawyer\", \"could\", \"answer\", \"that\", \"question\", \".\"]\n# ::lemmas [\"almost\", \"some\", \"lawyer\", \"could\", \"answer\", \"that\", \"question\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1.1.1 2-1.1.1 4-1.1 5-1.1.2.2 6-1.1.2.1\n(p / possible-01\n   :ARG1 (a / answer-01~e.4\n            :ARG0 (l / lawyer~e.2\n                     :mod (s / some~e.1\n                             :mod (a2 / almost~e.0)))\n            :ARG1 (t / thing\n                     :ARG1-of (q / question-01~e.6)\n                     :mod (t2 / that~e.5))))", [[0, 6], [7, 11], [12, 18], [19, 24], [25, 31], [32, 36], [37, 45], [45, 46]]], ["# ::snt A large dog gives live birth.\n# ::tokens [\"A\", \"large\", \"dog\", \"gives\", \"live\", \"birth\", \".\"]\n# ::lemmas [\"a\", \"large\", \"dog\", \"give\", \"live\", \"birth\", \".\"]\n# ::alignments 1-1.1.1 2-1.1 4-1.2\n(b / bear-02\n   :ARG0 (d / dog~e.2\n            :mod (l / large~e.1))\n   :manner (l2 / live-01~e.4))", [[0, 1], [2, 7], [8, 11], [12, 17], [18, 22], [23, 28], [28, 29]]], ["# ::snt Is there something I can do for you?\n# ::tokens [\"Is\", \"there\", \"something\", \"I\", \"can\", \"do\", \"for\", \"you\", \"?\"]\n# ::lemmas [\"be\", \"there\", \"something\", \"i\", \"can\", \"do\", \"for\", \"you\", \"?\"]\n# ::alignments 2-1.1.2 3-1.1.1 5-1.1 7-1.1.3\n(p / possible-01\n   :ARG1 (d / do-02~e.5\n            :ARG0 (ii / i~e.3)\n            :ARG1 (s / something~e.2)\n            :ARG2 (y / you~e.7))\n   :polarity (a / amr-unknown))", [[0, 2], [3, 8], [9, 18], [19, 20], [21, 24], [25, 27], [28, 31], [32, 35], [35, 36]]], ["# ::snt I expected that we would not have any potatoes.\n# ::tokens [\"I\", \"expected\", \"that\", \"we\", \"would\", \"not\", \"have\", \"any\", \"potatoes\", \".\"]\n# ::lemmas [\"i\", \"expect\", \"that\", \"we\", \"would\", \"not\", \"have\", \"any\", \"potato\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.2 5-1.2.1 6-1.2 7-1.2.3.1 8-1.2.3\n(e / expect-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (h / have-03~e.6\n            :polarity -~e.5\n            :ARG0 (w / we~e.3)\n            :ARG1 (p / potato~e.8\n                     :quant (a / any~e.7))))", [[0, 1], [2, 10], [11, 15], [16, 18], [19, 24], [25, 28], [29, 33], [34, 37], [38, 46], [46, 47]]], ["# ::snt All but at most three boys saw anything.\n# ::tokens [\"All\", \"but\", \"at\", \"most\", \"three\", \"boys\", \"saw\", \"anything\", \".\"]\n# ::lemmas [\"all\", \"but\", \"at\", \"most\", \"three\", \"boy\", \"see\", \"anything\", \".\"]\n# ::alignments 0-1.1.2 4-1.1.1 5-1.1 6-1 7-1.2\n(s / see-01~e.6\n   :ARG0 (b / boy~e.5\n            :quant 3~e.4\n            :mod (a / all~e.0)\n            :mod (a2 / at-most))\n   :ARG1 (a3 / anything~e.7))", [[0, 3], [4, 7], [8, 10], [11, 15], [16, 21], [22, 26], [27, 30], [31, 39], [39, 40]]], ["# ::snt I'm surprised he bought a Honda.\n# ::tokens [\"I\", \"'m\", \"surprised\", \"he\", \"bought\", \"a\", \"Honda\", \".\"]\n# ::lemmas [\"i\", \"be\", \"surprised\", \"he\", \"buy\", \"a\", \"Honda\", \".\"]\n# ::alignments 0-1.2 2-1 3-1.1.1 4-1.1 6-1.1.2.1.1\n(s / surprise-01~e.2\n   :ARG0 (b / buy-01~e.4\n            :ARG0 (h / he~e.3)\n            :ARG1 (c / car-make\n                     :name (n / name\n                              :op1 \"Honda\"~e.6)))\n   :ARG1 (ii / i~e.0))", [[0, 1], [1, 3], [4, 13], [14, 16], [17, 23], [24, 25], [26, 31], [31, 32]]], ["# ::snt Take any apple.\n# ::tokens [\"Take\", \"any\", \"apple\", \".\"]\n# ::lemmas [\"take\", \"any\", \"apple\", \".\"]\n# ::alignments 0-1 1-1.3.1 2-1.3\n(t / take-01~e.0\n   :mode imperative\n   :ARG0 (y / you)\n   :ARG1 (a / apple~e.2\n            :mod (a2 / any~e.1)))", [[0, 4], [5, 8], [9, 14], [14, 15]]], ["# ::snt The men all would have been working.\n# ::tokens [\"The\", \"men\", \"all\", \"would\", \"have\", \"been\", \"working\", \".\"]\n# ::lemmas [\"the\", \"man\", \"all\", \"would\", \"have\", \"be\", \"work\", \".\"]\n# ::alignments 1-1.1 2-1.1.1 6-1\n(w / work-01~e.6\n   :ARG0 (m / man~e.1\n            :mod (a / all~e.2)))", [[0, 3], [4, 7], [8, 11], [12, 17], [18, 22], [23, 27], [28, 35], [35, 36]]], ["# ::snt The men would all have been working.\n# ::tokens [\"The\", \"men\", \"would\", \"all\", \"have\", \"been\", \"working\", \".\"]\n# ::lemmas [\"the\", \"man\", \"would\", \"all\", \"have\", \"be\", \"work\", \".\"]\n# ::alignments 1-1.1 3-1.1.1 6-1\n(w / work-01~e.6\n   :ARG0 (m / man~e.1\n            :mod (a / all~e.3)))", [[0, 3], [4, 7], [8, 13], [14, 17], [18, 22], [23, 27], [28, 35], [35, 36]]], ["# ::snt All the men would not have been working.\n# ::tokens [\"All\", \"the\", \"men\", \"would\", \"not\", \"have\", \"been\", \"working\", \".\"]\n# ::lemmas [\"all\", \"the\", \"man\", \"would\", \"not\", \"have\", \"be\", \"work\", \".\"]\n# ::alignments 0-1.2.1 2-1.2 4-1.1 7-1\n(w / work-01~e.7\n   :polarity -~e.4\n   :ARG0 (m / man~e.2\n            :mod (a / all~e.0)))", [[0, 3], [4, 7], [8, 11], [12, 17], [18, 21], [22, 26], [27, 31], [32, 39], [39, 40]]], ["# ::snt They said that they would all work on that, and all work on that they did.\n# ::tokens [\"They\", \"said\", \"that\", \"they\", \"would\", \"all\", \"work\", \"on\", \"that\", \",\", \"and\", \"all\", \"work\", \"on\", \"that\", \"they\", \"did\", \".\"]\n# ::lemmas [\"they\", \"say\", \"that\", \"they\", \"would\", \"all\", \"work\", \"on\", \"that\", \",\", \"and\", \"all\", \"work\", \"on\", \"that\", \"they\", \"do\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1.2 5-1.1.1 6-1.2.1 10-1.2 12-1.2.2\n(s / say-01~e.1\n   :ARG0 (t / they~e.0\n            :mod (a / all~e.5))\n   :ARG1 (a2 / and~e.10\n             :op1 (w / work-01~e.6\n                     :ARG0 t\n                     :ARG1 (t2 / that~e.2))\n             :op2 (w2 / work-01~e.12\n                      :ARG0 t\n                      :ARG1 t2)))", [[0, 4], [5, 9], [10, 14], [15, 19], [20, 25], [26, 29], [30, 34], [35, 37], [38, 42], [42, 43], [44, 47], [48, 51], [52, 56], [57, 59], [60, 64], [65, 69], [70, 73], [73, 74]]], ["# ::snt They said that they would all work on that, and work on that they did all.\n# ::tokens [\"They\", \"said\", \"that\", \"they\", \"would\", \"all\", \"work\", \"on\", \"that\", \",\", \"and\", \"work\", \"on\", \"that\", \"they\", \"did\", \"all\", \".\"]\n# ::lemmas [\"they\", \"say\", \"that\", \"they\", \"would\", \"all\", \"work\", \"on\", \"that\", \",\", \"and\", \"work\", \"on\", \"that\", \"they\", \"do\", \"all\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1.2 5-1.1.1 6-1.2.1 10-1.2 11-1.2.2 15-1.2.3\n(s / say-01~e.1\n   :ARG0 (t / they~e.0\n            :mod (a / all~e.5))\n   :ARG1 (a2 / and~e.10\n             :op1 (w / work-01~e.6\n                     :ARG0 t\n                     :ARG1 (t2 / that~e.2))\n             :op2 (w2 / work-01~e.11\n                      :ARG0 t\n                      :ARG1 t2)\n             :ARG1-of (d / do-02~e.15\n                         :ARG0 t)))", [[0, 4], [5, 9], [10, 14], [15, 19], [20, 25], [26, 29], [30, 34], [35, 37], [38, 42], [42, 43], [44, 47], [48, 52], [53, 55], [56, 60], [61, 65], [66, 69], [70, 73], [73, 74]]], ["# ::snt How difficult to study for the exam it was!\n# ::tokens [\"How\", \"difficult\", \"to\", \"study\", \"for\", \"the\", \"exam\", \"it\", \"was\", \"!\"]\n# ::lemmas [\"how\", \"difficult\", \"to\", \"study\", \"for\", \"the\", \"exam\", \"it\", \"be\", \"!\"]\n# ::alignments 1-1 3-1.2 6-1.2.2 7-1.2.1\n(d / difficult~e.1\n   :degree (s / so)\n   :domain (s2 / study-01~e.3\n               :ARG1 (ii / it~e.7)\n               :purpose (e / exam~e.6)))", [[0, 3], [4, 13], [14, 16], [17, 22], [23, 26], [27, 30], [31, 35], [36, 38], [39, 42], [42, 43]]], ["# ::snt You gave the book to whom?\n# ::tokens [\"You\", \"gave\", \"the\", \"book\", \"to\", \"whom\", \"?\"]\n# ::lemmas [\"you\", \"give\", \"the\", \"book\", \"to\", \"whom\", \"?\"]\n# ::alignments 0-1.1 1-1 3-1.2\n(g / give-01~e.1\n   :ARG0 (y / you~e.0)\n   :ARG1 (b / book~e.3)\n   :ARG2 (a / amr-unknown))", [[0, 3], [4, 8], [9, 12], [13, 17], [18, 20], [21, 25], [25, 26]]], ["# ::snt Max, I really like him.\n# ::tokens [\"Max\", \",\", \"I\", \"really\", \"like\", \"him\", \".\"]\n# ::lemmas [\"Max\", \",\", \"i\", \"really\", \"like\", \"he\", \".\"]\n# ::alignments 0-1.1.2.1.1 2-1.1.1 3-1.1.3 4-1.1\n(s / say-01\n   :ARG1 (l / like-01~e.4\n            :ARG0 (ii / i~e.2)\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Max\"~e.0))\n            :degree (r / really~e.3))\n   :ARG2 p)", [[0, 3], [3, 4], [5, 6], [7, 13], [14, 18], [19, 22], [22, 23]]], ["# ::snt I am angrier today than I was yesterday.\n# ::tokens [\"I\", \"am\", \"angrier\", \"today\", \"than\", \"I\", \"was\", \"yesterday\", \".\"]\n# ::lemmas [\"i\", \"be\", \"angrier\", \"today\", \"than\", \"i\", \"be\", \"yesterday\", \".\"]\n# ::alignments 0-1.1 2-1.2 3-1.2.1 7-1.4.1\n(h / have-degree-91\n   :ARG1 (ii / i~e.0)\n   :ARG2 (a / angry~e.2\n            :time (t / today~e.3))\n   :ARG3 (m / more)\n   :ARG4 (a2 / angry\n             :time (y / yesterday~e.7)\n             :domain ii))", [[0, 1], [2, 4], [5, 12], [13, 18], [19, 23], [24, 25], [26, 29], [30, 39], [39, 40]]], ["# ::snt I've thought about enough for twelve to think about.\n# ::tokens [\"I\", \"'ve\", \"thought\", \"about\", \"enough\", \"for\", \"twelve\", \"to\", \"think\", \"about\", \".\"]\n# ::lemmas [\"i\", \"'ve\", \"think\", \"about\", \"enough\", \"for\", \"twelve\", \"to\", \"think\", \"about\", \".\"]\n# ::alignments 0-1.1 2-1 4-1.2.1 6-1.2.2.2.1 8-1.2.2\n(t / think-01~e.2\n   :ARG0 (ii / i~e.0)\n   :ARG1-of (h / have-quant-91\n               :ARG3 (e / enough~e.4)\n               :ARG6 (t2 / think-01~e.8\n                         :ARG0 ii\n                         :ARG1 (t3 / thing\n                                   :quant 12~e.6))))", [[0, 1], [1, 4], [5, 12], [13, 18], [19, 25], [26, 29], [30, 36], [37, 39], [40, 45], [46, 51], [51, 52]]], ["# ::snt John eats more than he pays for.\n# ::tokens [\"John\", \"eats\", \"more\", \"than\", \"he\", \"pays\", \"for\", \".\"]\n# ::lemmas [\"John\", \"eat\", \"more\", \"than\", \"he\", \"pay\", \"for\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1 5-1.2.2.2\n(e / eat-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1-of (h / have-quant-91\n               :ARG3 (m / more~e.2)\n               :ARG4 (e2 / eat-01\n                         :ARG0 p\n                         :ARG1-of (p2 / pay-01~e.5\n                                      :ARG0 p))))", [[0, 4], [5, 9], [10, 14], [15, 19], [20, 22], [23, 27], [28, 31], [31, 32]]], ["# ::snt He gave me more marbles than I wanted.\n# ::tokens [\"He\", \"gave\", \"me\", \"more\", \"marbles\", \"than\", \"I\", \"wanted\", \".\"]\n# ::lemmas [\"he\", \"give\", \"i\", \"more\", \"marble\", \"than\", \"i\", \"want\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1.2.1.1 3-1.2.1.1 4-1.2 7-1.2.1.2.1\n(g / give-01~e.1\n   :ARG0 (h / he~e.0)\n   :ARG1 (m / marbles~e.4\n            :ARG1-of (h2 / have-quant-91\n                         :ARG3 (m2 / more~e.3)\n                         :ARG4 (m3 / marbles\n                                   :ARG1-of (w / want-01~e.7\n                                               :ARG0 (ii / i~e.2)))))\n   :ARG2 ii)", [[0, 2], [3, 7], [8, 10], [11, 15], [16, 23], [24, 28], [29, 30], [31, 37], [37, 38]]], ["# ::snt She has problems enough as it is.\n# ::tokens [\"She\", \"has\", \"problems\", \"enough\", \"as\", \"it\", \"is\", \".\"]\n# ::lemmas [\"she\", \"have\", \"problem\", \"enough\", \"as\", \"it\", \"be\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2 3-1.2.1.1\n(h / have-03~e.1\n   :ARG0 (s / she~e.0)\n   :ARG1 (p / problem~e.2\n            :ARG1-of (h2 / have-quant-91\n                         :ARG3 (e / enough~e.3))))", [[0, 3], [4, 7], [8, 16], [17, 23], [24, 26], [27, 29], [30, 32], [32, 33]]], ["# ::snt I'm more of a man than you are, my dear.\n# ::tokens [\"I\", \"'m\", \"more\", \"of\", \"a\", \"man\", \"than\", \"you\", \"are\", \",\", \"my\", \"dear\", \".\"]\n# ::lemmas [\"i\", \"be\", \"more\", \"of\", \"a\", \"man\", \"than\", \"you\", \"be\", \",\", \"my\", \"dear\", \".\"]\n# ::alignments 0-1.1.1 2-1.1.3 5-1.1.2 7-1.1.4 11-1.2\n(s / say-01\n   :ARG1 (h / have-degree-91\n            :ARG1 (ii / i~e.0)\n            :ARG2 (m / man~e.5)\n            :ARG3 (m2 / more~e.2)\n            :ARG4 (y / you~e.7))\n   :ARG2 (d / dear~e.11\n            :poss ii))", [[0, 1], [1, 3], [4, 8], [9, 11], [12, 13], [14, 17], [18, 22], [23, 26], [27, 30], [30, 31], [32, 34], [35, 39], [39, 40]]], ["# ::snt As much has happened in the last week as has happened all year.\n# ::tokens [\"As\", \"much\", \"has\", \"happened\", \"in\", \"the\", \"last\", \"week\", \"as\", \"has\", \"happened\", \"all\", \"year\", \".\"]\n# ::lemmas [\"as\", \"much\", \"have\", \"happen\", \"in\", \"the\", \"last\", \"week\", \"as\", \"have\", \"happen\", \"all\", \"year\", \".\"]\n# ::alignments 1-1.1.1 6-1.1.2.1 7-1.1.2 11-1.2.1.1 12-1.2.1\n(r / resemble-01\n   :ARG1 (e / event\n            :quant (m / much~e.1)\n            :time (w / week~e.7\n                     :mod (l / last~e.6)))\n   :ARG2 (e2 / event\n             :time (y / year~e.12\n                      :mod (a / all~e.11))))", [[0, 2], [3, 7], [8, 11], [12, 20], [21, 23], [24, 27], [28, 32], [33, 37], [38, 40], [41, 44], [45, 53], [54, 57], [58, 62], [62, 63]]], ["# ::snt He offers so much that we feel he is over qualified.\n# ::tokens [\"He\", \"offers\", \"so\", \"much\", \"that\", \"we\", \"feel\", \"he\", \"is\", \"over\", \"qualified\", \".\"]\n# ::lemmas [\"he\", \"offer\", \"so\", \"much\", \"that\", \"we\", \"feel\", \"he\", \"be\", \"over\", \"qualified\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.2 3-1.2.1 5-1.2.3.1 6-1.2.3 9-1.2.3.2.2 10-1.2.3.2\n(o / offer-01~e.1\n   :ARG0 (h / he~e.0)\n   :ARG1-of (h2 / have-quant-91\n                :ARG2 (m / much~e.3)\n                :ARG3 (s / so~e.2)\n                :ARG6 (f / feel-02~e.6\n                         :ARG0 (w / we~e.5)\n                         :ARG1 (q / qualify-02~e.10\n                                  :ARG1 h\n                                  :degree (o2 / over~e.9)))))", [[0, 2], [3, 9], [10, 12], [13, 17], [18, 22], [23, 25], [26, 30], [31, 33], [34, 36], [37, 41], [42, 51], [51, 52]]], ["# ::snt Tom wasn't any more reliable than a grasshopper.\n# ::tokens [\"Tom\", \"was\", \"n't\", \"any\", \"more\", \"reliable\", \"than\", \"a\", \"grasshopper\", \".\"]\n# ::lemmas [\"Tom\", \"be\", \"not\", \"any\", \"more\", \"reliable\", \"than\", \"a\", \"grasshopper\", \".\"]\n# ::alignments 0-1.1.1.1 3-1.3.2 4-1.3 8-1.4\n(h / have-degree-91\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Tom\"~e.0))\n   :ARG2 (r / rely-01\n            :ARG1 p)\n   :ARG3 (m / more~e.4\n            :polarity -\n            :mod (a / any~e.3))\n   :ARG4 (g / grasshopper~e.8))", [[0, 3], [4, 7], [7, 10], [11, 14], [15, 19], [20, 28], [29, 33], [34, 35], [36, 47], [47, 48]]], ["# ::snt No more reliable a man could be found.\n# ::tokens [\"No\", \"more\", \"reliable\", \"a\", \"man\", \"could\", \"be\", \"found\", \".\"]\n# ::lemmas [\"no\", \"more\", \"reliable\", \"a\", \"man\", \"could\", \"be\", \"find\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1.1.1.3 4-1.1.1 7-1.1\n(p / possible-01\n   :ARG1 (f / find-01~e.7\n            :ARG1 (m / man~e.4\n                     :ARG1-of (h / have-degree-91\n                                 :polarity -~e.0\n                                 :ARG2 (r / rely-01\n                                          :ARG1 m)\n                                 :ARG3 (m2 / more~e.1)))))", [[0, 2], [3, 7], [8, 16], [17, 18], [19, 22], [23, 28], [29, 31], [32, 37], [37, 38]]], ["# ::snt You've given me most helpful advice.\n# ::tokens [\"You\", \"'ve\", \"given\", \"me\", \"most\", \"helpful\", \"advice\", \".\"]\n# ::lemmas [\"you\", \"'ve\", \"give\", \"i\", \"most\", \"helpful\", \"advice\", \".\"]\n# ::alignments 0-1.1 3-1.2 4-1.3.2 5-1.3.1 6-1\n(a / advise-01~e.6\n   :ARG0 (y / you~e.0)\n   :ARG1 (ii / i~e.3)\n   :ARG1-of (h / have-degree-91\n               :ARG2 (h2 / helpful-04~e.5\n                         :ARG0 a)\n               :ARG3 (m / most~e.4)))", [[0, 3], [3, 6], [7, 12], [13, 15], [16, 20], [21, 28], [29, 35], [35, 36]]], ["# ::snt Sally will give me more helpful advice than destructive criticism.\n# ::tokens [\"Sally\", \"will\", \"give\", \"me\", \"more\", \"helpful\", \"advice\", \"than\", \"destructive\", \"criticism\", \".\"]\n# ::lemmas [\"Sally\", \"will\", \"give\", \"i\", \"more\", \"helpful\", \"advice\", \"than\", \"destructive\", \"criticism\", \".\"]\n# ::alignments 0-1.1.1.1 3-1.2 4-1.3.2 5-1.3.1 6-1 8-1.3.3.1 9-1.3.3\n(a / advise-01~e.6\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sally\"~e.0))\n   :ARG1 (ii / i~e.3)\n   :ARG1-of (h / have-degree-91\n               :ARG2 (h2 / helpful-04~e.5\n                         :ARG0 a)\n               :ARG3 (m / more~e.4)\n               :ARG4 (c / criticize-01~e.9\n                        :ARG0-of (d / destroy-01~e.8))))", [[0, 5], [6, 10], [11, 15], [16, 18], [19, 23], [24, 31], [32, 38], [39, 43], [44, 55], [56, 65], [65, 66]]], ["# ::snt I've never seen a man who is taller than my father.\n# ::tokens [\"I\", \"'ve\", \"never\", \"seen\", \"a\", \"man\", \"who\", \"is\", \"taller\", \"than\", \"my\", \"father\", \".\"]\n# ::lemmas [\"i\", \"'ve\", \"never\", \"see\", \"a\", \"man\", \"who\", \"be\", \"tall\", \"than\", \"my\", \"father\", \".\"]\n# ::alignments 0-1.2 3-1 5-1.3 8-1.3.1.1 11-1.3.1.3.1.2\n(s / see-01~e.3\n   :polarity -\n   :ARG0 (ii / i~e.0)\n   :ARG1 (m / man~e.5\n            :ARG1-of (h / have-degree-91\n                        :ARG2 (t / tall~e.8)\n                        :ARG3 (m2 / more)\n                        :ARG4 (p / person\n                                 :ARG0-of (h2 / have-rel-role-91\n                                              :ARG1 ii\n                                              :ARG2 (f / father~e.11)))))\n   :time (e / ever))", [[0, 1], [1, 4], [5, 10], [11, 15], [16, 17], [18, 21], [22, 25], [26, 28], [29, 35], [36, 40], [41, 43], [44, 50], [50, 51]]], ["# ::snt John is more than six feet tall.\n# ::tokens [\"John\", \"is\", \"more\", \"than\", \"six\", \"feet\", \"tall\", \".\"]\n# ::lemmas [\"John\", \"be\", \"more\", \"than\", \"six\", \"feet\", \"tall\", \".\"]\n# ::alignments 0-1.2.1.1 2-1.1 4-1.1.1.1 6-1\n(t / tall~e.6\n   :quant (m / more-than~e.2\n             :op1 (d / distance-quantity\n                     :quant 6~e.4\n                     :unit (f / foot)))\n   :domain (p / person\n              :name (n / name\n                       :op1 \"John\"~e.0)))", [[0, 4], [5, 7], [8, 12], [13, 17], [18, 21], [22, 26], [27, 31], [31, 32]]], ["# ::snt John is more than Bill tall.\n# ::tokens [\"John\", \"is\", \"more\", \"than\", \"Bill\", \"tall\", \".\"]\n# ::lemmas [\"John\", \"be\", \"more\", \"than\", \"Bill\", \"tall\", \".\"]\n# ::alignments 0-1.1.1.1 2-1.3 4-1.4.1.1 5-1.2\n(h / have-degree-91\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG2 (t / tall~e.5)\n   :ARG3 (m / more~e.2)\n   :ARG4 (p2 / person\n             :name (n2 / name\n                       :op1 \"Bill\"~e.4)))", [[0, 4], [5, 7], [8, 12], [13, 17], [18, 22], [23, 27], [27, 28]]], ["# ::snt John said he's six feet tall.\n# ::tokens [\"John\", \"said\", \"he\", \"'s\", \"six\", \"feet\", \"tall\", \".\"]\n# ::lemmas [\"John\", \"say\", \"he\", \"be\", \"six\", \"feet\", \"tall\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.2.1.1 6-1.2\n(s / say-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (t / tall~e.6\n            :quant (d / distance-quantity\n                      :quant 6~e.4\n                      :unit (f / foot))\n            :domain p))", [[0, 4], [5, 9], [10, 12], [12, 14], [15, 18], [19, 23], [24, 28], [28, 29]]], ["# ::snt I gave yourself the bucket of ice cream.\n# ::tokens [\"I\", \"gave\", \"yourself\", \"the\", \"bucket\", \"of\", \"ice\", \"cream\", \".\"]\n# ::lemmas [\"i\", \"give\", \"yourself\", \"the\", \"bucket\", \"of\", \"ice\", \"cream\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2 6-1.2.1.1\n(g / give-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (b / bucket~e.4\n            :ARG0-of (c / contain-01\n                        :ARG1 (ii2 / ice~e.6)))\n   :ARG2 (y / you))", [[0, 1], [2, 6], [7, 15], [16, 19], [20, 26], [27, 29], [30, 33], [34, 39], [39, 40]]], ["# ::snt Who do you think bought the bread machine?\n# ::tokens [\"Who\", \"do\", \"you\", \"think\", \"bought\", \"the\", \"bread\", \"machine\", \"?\"]\n# ::lemmas [\"who\", \"do\", \"you\", \"think\", \"buy\", \"the\", \"bread\", \"machine\", \"?\"]\n# ::alignments 2-1.1 3-1 4-1.2 6-1.2.2.1 7-1.2.2\n(t / think-01~e.3\n   :ARG0 (y / you~e.2)\n   :ARG1 (b / buy-01~e.4\n            :ARG0 (a / amr-unknown)\n            :ARG1 (m / machine~e.7\n                     :purpose (b2 / bread~e.6))))", [[0, 3], [4, 6], [7, 10], [11, 16], [17, 23], [24, 27], [28, 33], [34, 41], [41, 42]]], ["# ::snt Who did Bill say Frank claimed that Mary seems to have been likely to have kissed?\n# ::tokens [\"Who\", \"did\", \"Bill\", \"say\", \"Frank\", \"claimed\", \"that\", \"Mary\", \"seems\", \"to\", \"have\", \"been\", \"likely\", \"to\", \"have\", \"kissed\", \"?\"]\n# ::lemmas [\"who\", \"do\", \"Bill\", \"say\", \"Frank\", \"claim\", \"that\", \"Mary\", \"seem\", \"to\", \"have\", \"be\", \"likely\", \"to\", \"have\", \"kiss\", \"?\"]\n# ::alignments 2-1.1.1.1 3-1 4-1.2.1.1.1 5-1.2 7-1.2.2.1.1.1.1.1 8-1.2.2 12-1.2.2.1 15-1.2.2.1.1\n(s / say-01~e.3\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bill\"~e.2))\n   :ARG1 (c / claim-01~e.5\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Frank\"~e.4))\n            :ARG1 (s2 / seem-01~e.8\n                      :ARG1 (l / likely-01~e.12\n                               :ARG1 (k / kiss-01~e.15\n                                        :ARG0 (p3 / person\n                                                  :name (n3 / name\n                                                            :op1 \"Mary\"~e.7))))))\n   :polarity (a / amr-unknown))", [[0, 3], [4, 7], [8, 12], [13, 16], [17, 22], [23, 30], [31, 35], [36, 40], [41, 46], [47, 49], [50, 54], [55, 59], [60, 66], [67, 69], [70, 74], [75, 81], [81, 82]]], ["# ::snt Dave, Dan, and Alina left.\n# ::tokens [\"Dave\", \",\", \"Dan\", \",\", \"and\", \"Alina\", \"left\", \".\"]\n# ::lemmas [\"Dave\", \",\", \"Dan\", \",\", \"and\", \"Alina\", \"leave\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1.2.1.1 4-1.1 5-1.1.3.1.1 6-1\n(l / leave-11~e.6\n   :ARG0 (a / and~e.4\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Dave\"~e.0))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Dan\"~e.2))\n            :op3 (p3 / person\n                     :name (n3 / name\n                               :op1 \"Alina\"~e.5))))", [[0, 4], [4, 5], [6, 9], [9, 10], [11, 14], [15, 20], [21, 25], [25, 26]]], ["# ::snt Everyone should be able to defend themselves.\n# ::tokens [\"Everyone\", \"should\", \"be\", \"able\", \"to\", \"defend\", \"themselves\", \".\"]\n# ::lemmas [\"everyone\", \"should\", \"be\", \"able\", \"to\", \"defend\", \"themselves\", \".\"]\n# ::alignments 0-1.1.1.1 5-1.1.1\n(r / recommend-01\n   :ARG1 (p / possible-01\n            :ARG1 (d / defend-01~e.5\n                     :ARG0 (e / everyone~e.0)\n                     :ARG1 e)))", [[0, 8], [9, 15], [16, 18], [19, 23], [24, 26], [27, 33], [34, 44], [44, 45]]], ["# ::snt The student met to discuss the project.\n# ::tokens [\"The\", \"student\", \"met\", \"to\", \"discuss\", \"the\", \"project\", \".\"]\n# ::lemmas [\"the\", \"student\", \"meet\", \"to\", \"discuss\", \"the\", \"project\", \".\"]\n# ::alignments 1-1.1.1 2-1 4-1.2 6-1.2.2\n(m / meet-03~e.2\n   :ARG0 (p / person\n            :ARG0-of (s / study-01~e.1))\n   :purpose (d / discuss-01~e.4\n               :ARG0 p\n               :ARG1 (p2 / project~e.6)))", [[0, 3], [4, 11], [12, 15], [16, 18], [19, 26], [27, 30], [31, 38], [38, 39]]], ["# ::snt John kissed the Blarney stone.\n# ::tokens [\"John\", \"kissed\", \"the\", \"Blarney\", \"stone\", \".\"]\n# ::lemmas [\"John\", \"kiss\", \"the\", \"Blarney\", \"stone\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1.1 4-1.2\n(k / kiss-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (s / stone~e.4\n            :name (n2 / name\n                      :op1 \"Blarney\"~e.3)))", [[0, 4], [5, 11], [12, 15], [16, 23], [24, 29], [29, 30]]], ["# ::snt I spared the trouble to him.\n# ::tokens [\"I\", \"spared\", \"the\", \"trouble\", \"to\", \"him\", \".\"]\n# ::lemmas [\"i\", \"spare\", \"the\", \"trouble\", \"to\", \"he\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 5-1.2.1\n(s / spare-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (t / trouble-05~e.3\n            :ARG1 (h / he~e.5))\n   :ARG2 h)", [[0, 1], [2, 8], [9, 12], [13, 20], [21, 23], [24, 27], [27, 28]]], ["# ::snt Susan bought her mother some flowers.\n# ::tokens [\"Susan\", \"bought\", \"her\", \"mother\", \"some\", \"flowers\", \".\"]\n# ::lemmas [\"Susan\", \"buy\", \"her\", \"mother\", \"some\", \"flower\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.3.1.2 4-1.2.1 5-1.2\n(b / buy-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Susan\"~e.0))\n   :ARG1 (f / flower~e.5\n            :quant (s / some~e.4))\n   :ARG4 (p2 / person\n             :ARG0-of (h / have-rel-role-91\n                         :ARG1 p\n                         :ARG2 (m / mother~e.3))))", [[0, 5], [6, 12], [13, 16], [17, 23], [24, 28], [29, 36], [36, 37]]], ["# ::snt The student loved his syntax assignments.\n# ::tokens [\"The\", \"student\", \"loved\", \"his\", \"syntax\", \"assignments\", \".\"]\n# ::lemmas [\"the\", \"student\", \"love\", \"his\", \"syntax\", \"assignment\", \".\"]\n# ::alignments 1-1.1.1 2-1 4-1.2.2 5-1.2\n(l / love-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (s / study-01~e.1))\n   :ARG1 (a / assign-01~e.5\n            :ARG2 p\n            :mod (s2 / syntax~e.4)))", [[0, 3], [4, 11], [12, 17], [18, 21], [22, 28], [29, 40], [40, 41]]], ["# ::snt The student hated his morphology professor.\n# ::tokens [\"The\", \"student\", \"hated\", \"his\", \"morphology\", \"professor\", \".\"]\n# ::lemmas [\"the\", \"student\", \"hate\", \"his\", \"morphology\", \"professor\", \".\"]\n# ::alignments 1-1.1.1 2-1 4-1.2.1.2.1 5-1.2.1.2\n(h / hate-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (s / study-01~e.1))\n   :ARG1 (p2 / person\n             :ARG0-of (h2 / have-org-role-91\n                          :ARG1 p\n                          :ARG2 (p3 / professor~e.5\n                                    :topic (m / morphology~e.4)))))", [[0, 3], [4, 11], [12, 17], [18, 21], [22, 32], [33, 42], [42, 43]]], ["# ::snt I like big bowls of beans.\n# ::tokens [\"I\", \"like\", \"big\", \"bowls\", \"of\", \"beans\", \".\"]\n# ::lemmas [\"i\", \"like\", \"big\", \"bowl\", \"of\", \"bean\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1 3-1.2 5-1.2.2\n(l / like-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (b / bowl~e.3\n            :mod (b2 / big~e.2)\n            :consist-of (b3 / bean~e.5)))", [[0, 1], [2, 6], [7, 10], [11, 16], [17, 19], [20, 25], [25, 26]]], ["# ::snt Shannon kissed the kitten quietly.\n# ::tokens [\"Shannon\", \"kissed\", \"the\", \"kitten\", \"quietly\", \".\"]\n# ::lemmas [\"Shannon\", \"kiss\", \"the\", \"kitten\", \"quietly\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 4-1.3\n(k / kiss-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Shannon\"~e.0))\n   :ARG1 (k2 / kitten~e.3)\n   :ARG1-of (q / quiet-04~e.4))", [[0, 7], [8, 14], [15, 18], [19, 25], [26, 33], [33, 34]]], ["# ::snt The kitten was licked.\n# ::tokens [\"The\", \"kitten\", \"was\", \"licked\", \".\"]\n# ::lemmas [\"the\", \"kitten\", \"be\", \"lick\", \".\"]\n# ::alignments 1-1.1 3-1\n(l / lick-01~e.3\n   :ARG1 (k / kitten~e.1))", [[0, 3], [4, 10], [11, 14], [15, 21], [21, 22]]], ["# ::snt John said that he played basketball.\n# ::tokens [\"John\", \"said\", \"that\", \"he\", \"played\", \"basketball\", \".\"]\n# ::lemmas [\"John\", \"say\", \"that\", \"he\", \"play\", \"basketball\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.2 5-1.2.2\n(s / say-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (p2 / play-01~e.4\n             :ARG0 p\n             :ARG1 (b / basketball~e.5)))", [[0, 4], [5, 9], [10, 14], [15, 17], [18, 24], [25, 35], [35, 36]]], ["# ::snt I have no money on me.\n# ::tokens [\"I\", \"have\", \"no\", \"money\", \"on\", \"me\", \".\"]\n# ::lemmas [\"i\", \"have\", \"no\", \"money\", \"on\", \"i\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1 3-1.2\n(h / have-03~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (m / money~e.3\n            :polarity -~e.2\n            :prep-on ii))", [[0, 1], [2, 6], [7, 9], [10, 15], [16, 18], [19, 21], [21, 22]]], ["# ::snt the book of poems of fiction with a red cover takes a very long time to read.\n# ::tokens [\"the\", \"book\", \"of\", \"poems\", \"of\", \"fiction\", \"with\", \"a\", \"red\", \"cover\", \"takes\", \"a\", \"very\", \"long\", \"time\", \"to\", \"read\", \".\"]\n# ::lemmas [\"the\", \"book\", \"of\", \"poem\", \"of\", \"fiction\", \"with\", \"a\", \"red\", \"cover\", \"take\", \"a\", \"very\", \"long\", \"time\", \"to\", \"read\", \".\"]\n# ::alignments 1-1.1.1 5-1.1.1.1.1 8-1.1.1.2.1.1 9-1.1.1.2.1 10-1 12-1.2.1.1 13-1.2.1 14-1.2 16-1.1\n(t / take-10~e.10\n   :ARG0 (r / read-01~e.16\n            :ARG1 (b / book~e.1\n                     :topic (p / poetry\n                               :mod (f / fiction~e.5))\n                     :ARG0-of (h / have-03\n                                 :ARG1 (c / cover~e.9\n                                          :ARG1-of (r2 / red-02~e.8)))))\n   :ARG1 (t2 / time~e.14\n             :ARG1-of (l / long-03~e.13\n                         :degree (v / very~e.12))))", [[0, 3], [4, 8], [9, 11], [12, 17], [18, 20], [21, 28], [29, 33], [34, 35], [36, 39], [40, 45], [46, 51], [52, 53], [54, 58], [59, 63], [64, 68], [69, 71], [72, 76], [76, 77]]], ["# ::snt Andy frequently eats sushi with his boss.\n# ::tokens [\"Andy\", \"frequently\", \"eats\", \"sushi\", \"with\", \"his\", \"boss\", \".\"]\n# ::lemmas [\"Andy\", \"frequently\", \"eat\", \"sushi\", \"with\", \"his\", \"boss\", \".\"]\n# ::alignments 0-1.1.1.1 1-1.4 2-1 3-1.2 6-1.3.1.2\n(e / eat-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Andy\"~e.0))\n   :ARG1 (s / sushi~e.3)\n   :accompanier (p2 / person\n                    :ARG0-of (h / have-rel-role-91\n                                :ARG1 p\n                                :ARG2 (b / boss~e.6)))\n   :ARG1-of (f / frequent-02~e.1))", [[0, 4], [5, 15], [16, 20], [21, 26], [27, 31], [32, 35], [36, 40], [40, 41]]], ["# ::snt Heidi said that John loves peanut butter.\n# ::tokens [\"Heidi\", \"said\", \"that\", \"John\", \"loves\", \"peanut\", \"butter\", \".\"]\n# ::lemmas [\"Heidi\", \"say\", \"that\", \"John\", \"love\", \"peanut\", \"butter\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1.1.1 4-1.2 5-1.2.2.1 6-1.2.2\n(s / say-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Heidi\"~e.0))\n   :ARG1 (l / love-01~e.4\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"John\"~e.3))\n            :ARG1 (b / butter~e.6\n                     :mod (p3 / peanut~e.5))))", [[0, 5], [6, 10], [11, 15], [16, 20], [21, 26], [27, 33], [34, 40], [40, 41]]], ["# ::snt I know he eats asparagus.\n# ::tokens [\"I\", \"know\", \"he\", \"eats\", \"asparagus\", \".\"]\n# ::lemmas [\"i\", \"know\", \"he\", \"eat\", \"asparagus\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1 3-1.2 4-1.2.2\n(k / know-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (e / eat-01~e.3\n            :ARG0 (h / he~e.2)\n            :ARG1 (a / asparagus~e.4)))", [[0, 1], [2, 6], [7, 9], [10, 14], [15, 24], [24, 25]]], ["# ::snt Stalin may think that Roosevelt is a fool.\n# ::tokens [\"Stalin\", \"may\", \"think\", \"that\", \"Roosevelt\", \"is\", \"a\", \"fool\", \".\"]\n# ::lemmas [\"Stalin\", \"may\", \"think\", \"that\", \"Roosevelt\", \"be\", \"a\", \"fool\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1 4-1.1.2.1.1.1 7-1.1.2\n(p / possible-01\n   :ARG1 (t / think-01~e.2\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Stalin\"~e.0))\n            :ARG1 (f / fool~e.7\n                     :domain (p3 / person\n                                 :name (n2 / name\n                                           :op1 \"Roosevelt\"~e.4)))))", [[0, 6], [7, 10], [11, 16], [17, 21], [22, 31], [32, 34], [35, 36], [37, 41], [41, 42]]], ["# ::snt We're all at school.\n# ::tokens [\"We\", \"'re\", \"all\", \"at\", \"school\", \".\"]\n# ::lemmas [\"we\", \"be\", \"all\", \"at\", \"school\", \".\"]\n# ::alignments 0-1.1 2-1.1.1 4-1.2\n(b / be-located-at-91\n   :ARG1 (w / we~e.0\n            :mod (a / all~e.2))\n   :ARG2 (s / school~e.4))", [[0, 2], [2, 5], [6, 9], [10, 12], [13, 19], [19, 20]]], ["# ::snt I love it.\n# ::tokens [\"I\", \"love\", \"it\", \".\"]\n# ::lemmas [\"i\", \"love\", \"it\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2\n(l / love-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (ii2 / it~e.2))", [[0, 1], [2, 6], [7, 9], [9, 10]]], ["# ::snt George thinks that Julia cooked some beef waffles for him.\n# ::tokens [\"George\", \"thinks\", \"that\", \"Julia\", \"cooked\", \"some\", \"beef\", \"waffles\", \"for\", \"him\", \".\"]\n# ::lemmas [\"George\", \"think\", \"that\", \"Julia\", \"cook\", \"some\", \"beef\", \"waffle\", \"for\", \"he\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1.1.1 4-1.2 5-1.2.2.2 6-1.2.2.1 7-1.2.2\n(t / think-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"George\"~e.0))\n   :ARG1 (c / cook-01~e.4\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Julia\"~e.3))\n            :ARG1 (w / waffle~e.7\n                     :mod (b / beef~e.6)\n                     :quant (s / some~e.5))\n            :beneficiary p))", [[0, 6], [7, 13], [14, 18], [19, 24], [25, 31], [32, 36], [37, 41], [42, 49], [50, 53], [54, 57], [57, 58]]], ["# ::snt Gwen saw a fire truck.\n# ::tokens [\"Gwen\", \"saw\", \"a\", \"fire\", \"truck\", \".\"]\n# ::lemmas [\"Gwen\", \"see\", \"a\", \"fire\", \"truck\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1 4-1.2\n(s / see-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Gwen\"~e.0))\n   :ARG1 (t / truck~e.4\n            :mod (f / fire~e.3)))", [[0, 4], [5, 8], [9, 10], [11, 15], [16, 21], [21, 22]]], ["# ::snt It is sunny in the dining room.\n# ::tokens [\"It\", \"is\", \"sunny\", \"in\", \"the\", \"dining\", \"room\", \".\"]\n# ::lemmas [\"it\", \"be\", \"sunny\", \"in\", \"the\", \"dining\", \"room\", \".\"]\n# ::alignments 2-1 6-1.1\n(s / sunny~e.2\n   :location (r / room~e.6\n                :location-of (d / dine-01)))", [[0, 2], [3, 5], [6, 11], [12, 14], [15, 18], [19, 25], [26, 30], [30, 31]]], ["# ::snt I think John to like his beer.\n# ::tokens [\"I\", \"think\", \"John\", \"to\", \"like\", \"his\", \"beer\", \".\"]\n# ::lemmas [\"i\", \"think\", \"John\", \"to\", \"like\", \"his\", \"beer\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1.1.1 4-1.2 6-1.2.2\n(t / think-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (l / like-01~e.4\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"John\"~e.2))\n            :ARG1 (b / beer~e.6\n                     :poss p)))", [[0, 1], [2, 7], [8, 12], [13, 15], [16, 20], [21, 24], [25, 29], [29, 30]]], ["# ::snt Calvin did a back flip.\n# ::tokens [\"Calvin\", \"did\", \"a\", \"back\", \"flip\", \".\"]\n# ::lemmas [\"Calvin\", \"do\", \"a\", \"back\", \"flip\", \".\"]\n# ::alignments 0-1.1.1.1 3-1.2 4-1\n(f / flip-01~e.4\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Calvin\"~e.0))\n   :manner (b / back~e.3))", [[0, 6], [7, 10], [11, 12], [13, 17], [18, 22], [22, 23]]], ["# ::snt Spot plays not with his mouse.\n# ::tokens [\"Spot\", \"plays\", \"not\", \"with\", \"his\", \"mouse\", \".\"]\n# ::lemmas [\"spot\", \"play\", \"not\", \"with\", \"his\", \"mouse\", \".\"]\n# ::alignments 0-1.2.1.1 1-1 2-1.1 5-1.3\n(p / play-01~e.1\n   :polarity -~e.2\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Spot\"~e.0))\n   :ARG2 (m / mouse~e.5\n            :poss p2))", [[0, 4], [5, 10], [11, 14], [15, 19], [20, 23], [24, 29], [29, 30]]], ["# ::snt The cake was been eaten.\n# ::tokens [\"The\", \"cake\", \"was\", \"been\", \"eaten\", \".\"]\n# ::lemmas [\"the\", \"cake\", \"be\", \"be\", \"eat\", \".\"]\n# ::alignments 1-1.1 4-1\n(e / eat-01~e.4\n   :ARG1 (c / cake~e.1))", [[0, 3], [4, 8], [9, 12], [13, 17], [18, 23], [23, 24]]], ["# ::snt Reggie chased the ball.\n# ::tokens [\"Reggie\", \"chased\", \"the\", \"ball\", \".\"]\n# ::lemmas [\"Reggie\", \"chase\", \"the\", \"ball\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2\n(c / chase-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Reggie\"~e.0))\n   :ARG1 (b / ball~e.3))", [[0, 6], [7, 13], [14, 17], [18, 22], [22, 23]]], ["# ::snt Has Fiona eaten sauteed candy canes?\n# ::tokens [\"Has\", \"Fiona\", \"eaten\", \"sauteed\", \"candy\", \"canes\", \"?\"]\n# ::lemmas [\"have\", \"Fiona\", \"eat\", \"sauteed\", \"candy\", \"cane\", \"?\"]\n# ::alignments 1-1.1.1.1 2-1 3-1.2.2 4-1.2.1\n(e / eat-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fiona\"~e.1))\n   :ARG1 (c / can\n            :mod (c2 / candy~e.4)\n            :ARG1-of (s / saute-01~e.3))\n   :polarity (a / amr-unknown))", [[0, 3], [4, 9], [10, 15], [16, 23], [24, 29], [30, 35], [35, 36]]], ["# ::snt John said that Heidi was obsessed with broccoli.\n# ::tokens [\"John\", \"said\", \"that\", \"Heidi\", \"was\", \"obsessed\", \"with\", \"broccoli\", \".\"]\n# ::lemmas [\"John\", \"say\", \"that\", \"Heidi\", \"be\", \"obsess\", \"with\", \"broccoli\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1.1.1 5-1.2 7-1.2.2\n(s / say-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (o / obsess-01~e.5\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Heidi\"~e.3))\n            :ARG1 (b / broccoli~e.7)))", [[0, 4], [5, 9], [10, 14], [15, 20], [21, 24], [25, 33], [34, 38], [39, 47], [47, 48]]], ["# ::snt The boat was sunk by the torpedo.\n# ::tokens [\"The\", \"boat\", \"was\", \"sunk\", \"by\", \"the\", \"torpedo\", \".\"]\n# ::lemmas [\"the\", \"boat\", \"be\", \"sink\", \"by\", \"the\", \"torpedo\", \".\"]\n# ::alignments 1-1.2 3-1 6-1.1\n(s / sink-01~e.3\n   :ARG0 (t / torpedo~e.6)\n   :ARG1 (b / boat~e.1))", [[0, 3], [4, 8], [9, 12], [13, 17], [18, 20], [21, 24], [25, 32], [32, 33]]], ["# ::snt The boat was sunk by the captain.\n# ::tokens [\"The\", \"boat\", \"was\", \"sunk\", \"by\", \"the\", \"captain\", \".\"]\n# ::lemmas [\"the\", \"boat\", \"be\", \"sink\", \"by\", \"the\", \"captain\", \".\"]\n# ::alignments 1-1.2 3-1 6-1.1.1\n(s / sink-01~e.3\n   :ARG0 (p / person\n            :ARG0-of (c / captain-01~e.6))\n   :ARG1 (b / boat~e.1))", [[0, 3], [4, 8], [9, 12], [13, 17], [18, 20], [21, 24], [25, 32], [32, 33]]], ["# ::snt I asked what Beth bought at the supermarket.\n# ::tokens [\"I\", \"asked\", \"what\", \"Beth\", \"bought\", \"at\", \"the\", \"supermarket\", \".\"]\n# ::lemmas [\"i\", \"ask\", \"what\", \"Beth\", \"buy\", \"at\", \"the\", \"supermarket\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1.1.1.1 4-1.2.1 7-1.2.1.2\n(a / ask-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (t / thing\n            :ARG1-of (b / buy-01~e.4\n                        :ARG0 (p / person\n                                 :name (n / name\n                                          :op1 \"Beth\"~e.3))\n                        :ARG2 (s / supermarket~e.7))))", [[0, 1], [2, 7], [8, 12], [13, 17], [18, 24], [25, 27], [28, 31], [32, 43], [43, 44]]], ["# ::snt Carolyn sent Heidi a package.\n# ::tokens [\"Carolyn\", \"sent\", \"Heidi\", \"a\", \"package\", \".\"]\n# ::lemmas [\"Carolyn\", \"send\", \"Heidi\", \"a\", \"package\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.3.1.1 4-1.2\n(s / send-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carolyn\"~e.0))\n   :ARG1 (p2 / package~e.4)\n   :ARG2 (p3 / person\n             :name (n2 / name\n                       :op1 \"Heidi\"~e.2)))", [[0, 7], [8, 12], [13, 18], [19, 20], [21, 28], [28, 29]]], ["# ::snt Peter placed the letter in the envelope.\n# ::tokens [\"Peter\", \"placed\", \"the\", \"letter\", \"in\", \"the\", \"envelope\", \".\"]\n# ::lemmas [\"Peter\", \"place\", \"the\", \"letter\", \"in\", \"the\", \"envelope\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 6-1.3\n(p / place-01~e.1\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Peter\"~e.0))\n   :ARG1 (l / letter~e.3)\n   :ARG2 (e / envelope~e.6))", [[0, 5], [6, 12], [13, 16], [17, 23], [24, 26], [27, 30], [31, 39], [39, 40]]], ["# ::snt There was a man arriving at the station when I pulled up.\n# ::tokens [\"There\", \"was\", \"a\", \"man\", \"arriving\", \"at\", \"the\", \"station\", \"when\", \"I\", \"pulled\", \"up\", \".\"]\n# ::lemmas [\"there\", \"be\", \"a\", \"man\", \"arrive\", \"at\", \"the\", \"station\", \"when\", \"i\", \"pull\", \"up\", \".\"]\n# ::alignments 3-1.1 4-1 7-1.2 9-1.3.1 10-1.3\n(a / arrive-01~e.4\n   :ARG1 (m / man~e.3)\n   :ARG4 (s / station~e.7)\n   :time (p / pull-01~e.10\n            :ARG0 (ii / i~e.9)\n            :ARG1 ii))", [[0, 5], [6, 9], [10, 11], [12, 15], [16, 24], [25, 27], [28, 31], [32, 39], [40, 44], [45, 46], [47, 53], [54, 56], [56, 57]]], ["# ::snt It is reluctant that Jean will dance.\n# ::tokens [\"It\", \"is\", \"reluctant\", \"that\", \"Jean\", \"will\", \"dance\", \".\"]\n# ::lemmas [\"it\", \"be\", \"reluctant\", \"that\", \"Jean\", \"will\", \"dance\", \".\"]\n# ::alignments 2-1 4-1.1.1.1.1 6-1.1\n(r / reluctant-01~e.2\n   :ARG1 (d / dance-01~e.6\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Jean\"~e.4))))", [[0, 2], [3, 5], [6, 15], [16, 20], [21, 25], [26, 30], [31, 36], [36, 37]]], ["# ::snt I want cookies.\n# ::tokens [\"I\", \"want\", \"cookies\", \".\"]\n# ::lemmas [\"i\", \"want\", \"cookie\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2\n(w / want-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (c / cookie~e.2))", [[0, 1], [2, 6], [7, 14], [14, 15]]], ["# ::snt She made Jerry out to be famous.\n# ::tokens [\"She\", \"made\", \"Jerry\", \"out\", \"to\", \"be\", \"famous\", \".\"]\n# ::lemmas [\"she\", \"make\", \"Jerry\", \"out\", \"to\", \"be\", \"famous\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1.1\n(m / make-out-23~e.1\n   :ARG0 (s / she~e.0)\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Jerry\"~e.2))\n   :ARG2 (f / fame-01\n            :ARG1 p))", [[0, 3], [4, 8], [9, 14], [15, 18], [19, 21], [22, 24], [25, 31], [31, 32]]], ["# ::snt I know which guys you've dated.\n# ::tokens [\"I\", \"know\", \"which\", \"guys\", \"you\", \"'ve\", \"dated\", \".\"]\n# ::lemmas [\"i\", \"know\", \"which\", \"guy\", \"you\", \"'ve\", \"date\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 4-1.2.1.1 6-1.2.1\n(k / know-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (g / guy~e.3\n            :ARG1-of (d / date-02~e.6\n                        :ARG0 (y / you~e.4))))", [[0, 1], [2, 6], [7, 12], [13, 17], [18, 21], [21, 24], [25, 30], [30, 31]]], ["# ::snt The lawyer can't prove Paul innocent but he can prove Della innocent.\n# ::tokens [\"The\", \"lawyer\", \"ca\", \"n't\", \"prove\", \"Paul\", \"innocent\", \"but\", \"he\", \"can\", \"prove\", \"Della\", \"innocent\", \".\"]\n# ::lemmas [\"the\", \"lawyer\", \"can\", \"not\", \"prove\", \"Paul\", \"innocent\", \"but\", \"he\", \"can\", \"prove\", \"Della\", \"innocent\", \".\"]\n# ::alignments 1-1.1.2.1 4-1.1.2 5-1.1.2.2.1.1.1 6-1.1.2.2 7-1 10-1.2.1 11-1.2.1.2.1.1.1 12-1.2.1.2\n(c / contrast-01~e.7\n   :ARG1 (p / possible-01\n            :polarity -\n            :ARG1 (p2 / prove-01~e.4\n                      :ARG0 (l / lawyer~e.1)\n                      :ARG1 (ii / innocent-01~e.6\n                                :ARG1 (p3 / person\n                                          :name (n / name\n                                                   :op1 \"Paul\"~e.5)))))\n   :ARG2 (p4 / possible-01\n             :ARG1 (p5 / prove-01~e.10\n                       :ARG0 l\n                       :ARG1 (ii2 / innocent-01~e.12\n                                  :ARG1 (p6 / person\n                                            :name (n2 / name\n                                                      :op1 \"Della\"~e.11))))))", [[0, 3], [4, 10], [11, 13], [13, 16], [17, 22], [23, 27], [28, 36], [37, 40], [41, 43], [44, 47], [48, 53], [54, 59], [60, 68], [68, 69]]], ["# ::snt John didn't talk to any woman.\n# ::tokens [\"John\", \"did\", \"n't\", \"talk\", \"to\", \"any\", \"woman\", \".\"]\n# ::lemmas [\"John\", \"do\", \"not\", \"talk\", \"to\", \"any\", \"woman\", \".\"]\n# ::alignments 0-1.2.1.1 3-1 5-1.3.1 6-1.3\n(t / talk-01~e.3\n   :polarity -\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG2 (w / woman~e.6\n            :mod (a / any~e.5)))", [[0, 4], [5, 8], [8, 11], [12, 16], [17, 19], [20, 23], [24, 29], [29, 30]]], ["# ::snt A doctor will tell you that.\n# ::tokens [\"A\", \"doctor\", \"will\", \"tell\", \"you\", \"that\", \".\"]\n# ::lemmas [\"a\", \"doctor\", \"will\", \"tell\", \"you\", \"that\", \".\"]\n# ::alignments 1-1.1 3-1 4-1.3 5-1.2\n(t / tell-01~e.3\n   :ARG0 (d / doctor~e.1)\n   :ARG1 (t2 / that~e.5)\n   :ARG2 (y / you~e.4))", [[0, 1], [2, 8], [9, 13], [14, 18], [19, 22], [23, 27], [27, 28]]], ["# ::snt You may pick a flower.\n# ::tokens [\"You\", \"may\", \"pick\", \"a\", \"flower\", \".\"]\n# ::lemmas [\"you\", \"may\", \"pick\", \"a\", \"flower\", \".\"]\n# ::alignments 0-1.1.1 2-1.1 4-1.1.2\n(p / permit-01\n   :ARG1 (p2 / pick-01~e.2\n             :ARG0 (y / you~e.0)\n             :ARG1 (f / flower~e.4)))", [[0, 3], [4, 7], [8, 12], [13, 14], [15, 21], [21, 22]]], ["# ::snt John talked to women who came up to him.\n# ::tokens [\"John\", \"talked\", \"to\", \"women\", \"who\", \"came\", \"up\", \"to\", \"him\", \".\"]\n# ::lemmas [\"John\", \"talk\", \"to\", \"woman\", \"who\", \"come\", \"up\", \"to\", \"he\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 5-1.2.1\n(t / talk-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG2 (w / woman~e.3\n            :ARG1-of (c / come-up-13~e.5\n                        :direction p)))", [[0, 4], [5, 11], [12, 14], [15, 20], [21, 24], [25, 29], [30, 32], [33, 35], [36, 39], [39, 40]]], ["# ::snt Any student in Mary's class is working on negative polarity.\n# ::tokens [\"Any\", \"student\", \"in\", \"Mary\", \"'s\", \"class\", \"is\", \"working\", \"on\", \"negative\", \"polarity\", \".\"]\n# ::lemmas [\"any\", \"student\", \"in\", \"Mary\", \"'s\", \"class\", \"be\", \"work\", \"on\", \"negative\", \"polarity\", \".\"]\n# ::alignments 0-1.1.2 1-1.1.1 3-1.1.3.1.1.1 5-1.1.3 7-1 9-1.2.1\n(w / work-01~e.7\n   :ARG0 (p / person\n            :ARG0-of (s / study-01~e.1)\n            :mod (a / any~e.0)\n            :part-of (c / class~e.5\n                        :poss (p2 / person\n                                  :name (n / name\n                                           :op1 \"Mary\"~e.3))))\n   :ARG1 (p3 / politics\n             :ARG0-of (n2 / negative-02~e.9)))", [[0, 3], [4, 11], [12, 14], [15, 19], [19, 21], [22, 27], [28, 30], [31, 38], [39, 41], [42, 50], [51, 59], [59, 60]]], ["# ::snt Which student would any professor support?\n# ::tokens [\"Which\", \"student\", \"would\", \"any\", \"professor\", \"support\", \"?\"]\n# ::lemmas [\"which\", \"student\", \"would\", \"any\", \"professor\", \"support\", \"?\"]\n# ::alignments 1-1.2.1.1.1 3-1.1.1 4-1.1 5-1\n(s / support-01~e.5\n   :ARG0 (p / professor~e.4\n            :mod (a / any~e.3))\n   :ARG1 (a2 / amr-unknown\n             :ARG1-of (ii / include-91\n                          :ARG2 (p2 / person\n                                    :ARG0-of (s2 / study-01~e.1)))))", [[0, 5], [6, 13], [14, 19], [20, 23], [24, 33], [34, 41], [41, 42]]], ["# ::snt If anyone can solve this problem, Bill can.\n# ::tokens [\"If\", \"anyone\", \"can\", \"solve\", \"this\", \"problem\", \",\", \"Bill\", \"can\", \".\"]\n# ::lemmas [\"if\", \"anyone\", \"can\", \"solve\", \"this\", \"problem\", \",\", \"Bill\", \"can\", \".\"]\n# ::alignments 1-1.2.1.1 3-1.1 4-1.1.2.1 5-1.1.2 7-1.1.1.1.1\n(p / possible-01\n   :ARG1 (s / solve-01~e.3\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Bill\"~e.7))\n            :ARG1 (p3 / problem~e.5\n                      :mod (t / this~e.4)))\n   :condition (p4 / possible-01\n                  :ARG1 (s2 / solve-01\n                            :ARG0 (a / anyone~e.1)\n                            :ARG1 p3)))", [[0, 2], [3, 9], [10, 13], [14, 19], [20, 24], [25, 32], [32, 33], [34, 38], [39, 42], [42, 43]]], ["# ::snt Which man drove the car?\n# ::tokens [\"Which\", \"man\", \"drove\", \"the\", \"car\", \"?\"]\n# ::lemmas [\"which\", \"man\", \"drive\", \"the\", \"car\", \"?\"]\n# ::alignments 1-1.1 2-1 4-1.2\n(d / drive-01~e.2\n   :ARG0 (m / man~e.1\n            :mod (a / amr-unknown))\n   :ARG1 (c / car~e.4))", [[0, 5], [6, 9], [10, 15], [16, 19], [20, 23], [23, 24]]], ["# ::snt The table, that I put Kim on surprised Kim.\n# ::tokens [\"The\", \"table\", \",\", \"that\", \"I\", \"put\", \"Kim\", \"on\", \"surprised\", \"Kim\", \".\"]\n# ::lemmas [\"the\", \"table\", \",\", \"that\", \"i\", \"put\", \"Kim\", \"on\", \"surprised\", \"Kim\", \".\"]\n# ::alignments 1-1.1 4-1.1.1.1 5-1.1.1 6-1.1.1.2.1.1 8-1\n(s / surprise-01~e.8\n   :ARG0 (t / table~e.1\n            :ARG2-of (p / put-01~e.5\n                        :ARG0 (ii / i~e.4)\n                        :ARG1 (p2 / person\n                                  :name (n / name\n                                           :op1 \"Kim\"~e.6))))\n   :ARG1 p2)", [[0, 3], [4, 9], [9, 10], [11, 15], [16, 17], [18, 21], [22, 25], [26, 28], [29, 38], [39, 42], [42, 43]]], ["# ::snt I know a man who Mary likes and hopes will win.\n# ::tokens [\"I\", \"know\", \"a\", \"man\", \"who\", \"Mary\", \"likes\", \"and\", \"hopes\", \"will\", \"win\", \".\"]\n# ::lemmas [\"i\", \"know\", \"a\", \"man\", \"who\", \"Mary\", \"like\", \"and\", \"hope\", \"will\", \"win\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 5-1.2.1.1.1.1.1 6-1.2.1.1 8-1.2.1.2 10-1.2.1\n(k / know-02~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (m / man~e.3\n            :ARG0-of (w / win-01~e.10\n                        :ARG1-of (l / like-01~e.6\n                                    :ARG0 (p / person\n                                             :name (n / name\n                                                      :op1 \"Mary\"~e.5)))\n                        :ARG1-of (h / hope-01~e.8\n                                    :ARG0 p))))", [[0, 1], [2, 6], [7, 8], [9, 12], [13, 16], [17, 21], [22, 27], [28, 31], [32, 37], [38, 42], [43, 46], [46, 47]]], ["# ::snt I wonder who saw Bill and liked Mary.\n# ::tokens [\"I\", \"wonder\", \"who\", \"saw\", \"Bill\", \"and\", \"liked\", \"Mary\", \".\"]\n# ::lemmas [\"i\", \"wonder\", \"who\", \"see\", \"Bill\", \"and\", \"like\", \"Mary\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1.1 4-1.2.1.1.1.1.1 5-1.2 6-1.2.2.1 7-1.2.2.1.1.1.1\n(w / wonder-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (a / and~e.5\n            :op1 (p / person\n                    :ARG0-of (s / see-01~e.3\n                                :ARG1 (p2 / person\n                                          :name (n / name\n                                                   :op1 \"Bill\"~e.4))))\n            :op2 (p3 / person\n                     :ARG0-of (l / like-01~e.6\n                                 :ARG1 (p4 / person\n                                           :name (n2 / name\n                                                     :op1 \"Mary\"~e.7))))))", [[0, 1], [2, 8], [9, 12], [13, 16], [17, 21], [22, 25], [26, 31], [32, 36], [36, 37]]], ["# ::snt John asked who and what bought.\n# ::tokens [\"John\", \"asked\", \"who\", \"and\", \"what\", \"bought\", \".\"]\n# ::lemmas [\"John\", \"ask\", \"who\", \"and\", \"what\", \"buy\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 5-1.2.1.1\n(a / ask-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (a2 / and~e.3\n             :op1 (p2 / person\n                      :ARG1-of (b / buy-01~e.5))\n             :op2 (t / thing\n                     :ARG1-of (b2 / buy-01))))", [[0, 4], [5, 10], [11, 14], [15, 18], [19, 23], [24, 30], [30, 31]]], ["# ::snt Tony used to be and George still is very suspicious.\n# ::tokens [\"Tony\", \"used\", \"to\", \"be\", \"and\", \"George\", \"still\", \"is\", \"very\", \"suspicious\", \".\"]\n# ::lemmas [\"Tony\", \"use\", \"to\", \"be\", \"and\", \"George\", \"still\", \"be\", \"very\", \"suspicious\", \".\"]\n# ::alignments 0-1.1.1.1 1-1.1.2 4-1 5-1.2.1.1.1 6-1.2.3 8-1.2.2 9-1.2\n(a / and~e.4\n   :op1 (p / person\n           :name (n / name\n                    :op1 \"Tony\"~e.0)\n           :time (u / use-03~e.1))\n   :op2 (s / suspicious-03~e.9\n           :ARG0 (p2 / person\n                     :name (n2 / name\n                               :op1 \"George\"~e.5))\n           :degree (v / very~e.8)\n           :time (s2 / still~e.6)))", [[0, 4], [5, 9], [10, 12], [13, 15], [16, 19], [20, 26], [27, 32], [33, 35], [36, 40], [41, 51], [51, 52]]], ["# ::snt The White Rabbit vanished.\n# ::tokens [\"The\", \"White\", \"Rabbit\", \"vanished\", \".\"]\n# ::lemmas [\"the\", \"White\", \"Rabbit\", \"vanish\", \".\"]\n# ::alignments 1-1.1.1.1 2-1.1.1.2 3-1\n(v / vanish-01~e.3\n   :ARG1 (a / animal\n            :name (n / name\n                     :op1 \"White\"~e.1\n                     :op2 \"Rabbit\"~e.2)))", [[0, 3], [4, 9], [10, 16], [17, 25], [25, 26]]], ["# ::snt The mouse jumped out the cheese box.\n# ::tokens [\"The\", \"mouse\", \"jumped\", \"out\", \"the\", \"cheese\", \"box\", \".\"]\n# ::lemmas [\"the\", \"mouse\", \"jump\", \"out\", \"the\", \"cheese\", \"box\", \".\"]\n# ::alignments 1-1.1 2-1 5-1.2.1.1 6-1.2.1\n(j / jump-03~e.2\n   :ARG0 (m / mouse~e.1)\n   :direction (o / out-of\n                 :op1 (b / box~e.6\n                         :mod (c / cheese~e.5))))", [[0, 3], [4, 9], [10, 16], [17, 20], [21, 24], [25, 31], [32, 35], [35, 36]]], ["# ::snt Frank Churchill gave Jane Fairfax a piano.\n# ::tokens [\"Frank\", \"Churchill\", \"gave\", \"Jane\", \"Fairfax\", \"a\", \"piano\", \".\"]\n# ::lemmas [\"Frank\", \"Churchill\", \"give\", \"Jane\", \"Fairfax\", \"a\", \"piano\", \".\"]\n# ::alignments 0-1.1.1.1 1-1.1.1.2 2-1 3-1.3.1.1 4-1.3.1.2 6-1.2\n(g / give-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Frank\"~e.0\n                     :op2 \"Churchill\"~e.1))\n   :ARG1 (p2 / piano~e.6)\n   :ARG2 (p3 / person\n             :name (n2 / name\n                       :op1 \"Jane\"~e.3\n                       :op2 \"Fairfax\"~e.4)))", [[0, 5], [6, 15], [16, 20], [21, 25], [26, 33], [34, 35], [36, 41], [41, 42]]], ["# ::snt The dog blamed us for her stay at the vet's.\n# ::tokens [\"The\", \"dog\", \"blamed\", \"us\", \"for\", \"her\", \"stay\", \"at\", \"the\", \"vet\", \"'s\", \".\"]\n# ::lemmas [\"the\", \"dog\", \"blame\", \"we\", \"for\", \"her\", \"stay\", \"at\", \"the\", \"vet\", \"'s\", \".\"]\n# ::alignments 1-1.1 2-1 3-1.2 6-1.3 9-1.3.2\n(b / blame-01~e.2\n   :ARG0 (d / dog~e.1)\n   :ARG1 (w / we~e.3)\n   :ARG2 (s / stay-01~e.6\n            :ARG1 d\n            :ARG3 (v / vet~e.9)))", [[0, 3], [4, 7], [8, 14], [15, 17], [18, 21], [22, 25], [26, 30], [31, 33], [34, 37], [38, 41], [41, 43], [43, 44]]], ["# ::snt The lecturer was sitting at her desk.\n# ::tokens [\"The\", \"lecturer\", \"was\", \"sitting\", \"at\", \"her\", \"desk\", \".\"]\n# ::lemmas [\"the\", \"lecturer\", \"be\", \"sit\", \"at\", \"her\", \"desk\", \".\"]\n# ::alignments 1-1.1 3-1 6-1.2\n(s / sit-01~e.3\n   :ARG1 (l / lecturer~e.1)\n   :ARG2 (d / desk~e.6\n            :poss (s2 / she)))", [[0, 3], [4, 12], [13, 16], [17, 24], [25, 27], [28, 31], [32, 36], [36, 37]]], ["# ::snt Captain Jones married Louisa Hayter and Captain Wentworth married Anne Elliott.\n# ::tokens [\"Captain\", \"Jones\", \"married\", \"Louisa\", \"Hayter\", \"and\", \"Captain\", \"Wentworth\", \"married\", \"Anne\", \"Elliott\", \".\"]\n# ::lemmas [\"Captain\", \"Jones\", \"marry\", \"Louisa\", \"Hayter\", \"and\", \"Captain\", \"Wentworth\", \"marry\", \"Anne\", \"Elliott\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1.1.1.2 2-1.1 3-1.1.2.1.1 4-1.1.2.1.2 5-1 6-1.2.1.1.1 7-1.2.1.1.2 8-1.2 9-1.2.2.1.1 10-1.2.2.1.2\n(a / and~e.5\n   :op1 (m / marry-01~e.2\n           :ARG1 (p / person\n                    :name (n / name\n                             :op1 \"Captain\"~e.0\n                             :op2 \"Jones\"~e.1))\n           :ARG2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Louisa\"~e.3\n                               :op2 \"Hayter\"~e.4)))\n   :op2 (m2 / marry-01~e.8\n            :ARG1 (p3 / person\n                      :name (n3 / name\n                                :op1 \"Captain\"~e.6\n                                :op2 \"Wentworth\"~e.7))\n            :ARG2 (p4 / person\n                      :name (n4 / name\n                                :op1 \"Anne\"~e.9\n                                :op2 \"Elliot\"~e.10))))", [[0, 7], [8, 13], [14, 21], [22, 28], [29, 35], [36, 39], [40, 47], [48, 57], [58, 65], [66, 70], [71, 78], [78, 79]]], ["# ::snt There was a plan that we would visit Glasgow today but the weather is terrible.\n# ::tokens [\"There\", \"was\", \"a\", \"plan\", \"that\", \"we\", \"would\", \"visit\", \"Glasgow\", \"today\", \"but\", \"the\", \"weather\", \"is\", \"terrible\", \".\"]\n# ::lemmas [\"there\", \"be\", \"a\", \"plan\", \"that\", \"we\", \"would\", \"visit\", \"Glasgow\", \"today\", \"but\", \"the\", \"weather\", \"be\", \"terrible\", \".\"]\n# ::alignments 3-1 5-1.1.1 7-1.1 8-1.1.2.1.1 9-1.1.3 12-1.1.4.1 14-1.1.4\n(p / plan-01~e.3\n   :ARG1 (v / visit-01~e.7\n            :ARG0 (w / we~e.5)\n            :ARG1 (c / city\n                     :name (n / name\n                              :op1 \"Glasgow\"~e.8))\n            :time (t / today~e.9)\n            :concession-of (t2 / terrible-01~e.14\n                               :ARG1 (w2 / weather~e.12))))", [[0, 5], [6, 9], [10, 11], [12, 16], [17, 21], [22, 24], [25, 30], [31, 36], [37, 44], [45, 50], [51, 54], [55, 58], [59, 66], [67, 69], [70, 78], [78, 79]]], ["# ::snt When we sell the house, we'll probably leave most of the furniture.\n# ::tokens [\"When\", \"we\", \"sell\", \"the\", \"house\", \",\", \"we\", \"'ll\", \"probably\", \"leave\", \"most\", \"of\", \"the\", \"furniture\", \".\"]\n# ::lemmas [\"when\", \"we\", \"sell\", \"the\", \"house\", \",\", \"we\", \"will\", \"probably\", \"leave\", \"most\", \"of\", \"the\", \"furniture\", \".\"]\n# ::alignments 1-1.1 2-1.4 4-1.4.2 8-1.3 9-1 10-1.2.1 13-1.2\n(l / leave-15~e.9\n   :ARG0 (w / we~e.1)\n   :ARG1 (f / furniture~e.13\n            :mod (m / most~e.10))\n   :mod (p / probable~e.8)\n   :time (s / sell-01~e.2\n            :ARG0 w\n            :ARG1 (h / house~e.4)))", [[0, 4], [5, 7], [8, 12], [13, 16], [17, 22], [22, 23], [24, 26], [26, 29], [30, 38], [39, 44], [45, 49], [50, 52], [53, 56], [57, 66], [66, 67]]], ["# ::snt In came Aunt Norris.\n# ::tokens [\"In\", \"came\", \"Aunt\", \"Norris\", \".\"]\n# ::lemmas [\"in\", \"come\", \"Aunt\", \"Norris\", \".\"]\n# ::alignments 1-1 2-1.1.1.1 3-1.1.1.2\n(c / come-01~e.1\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Aunt\"~e.2\n                     :op2 \"Norris\"~e.3)))", [[0, 2], [3, 7], [8, 12], [13, 19], [19, 20]]], ["# ::snt Mrs Bennet being taking the others upstairs, Mr Bingley gave a sigh of relief.\n# ::tokens [\"Mrs\", \"Bennet\", \"being\", \"taking\", \"the\", \"others\", \"upstairs\", \",\", \"Mr\", \"Bingley\", \"gave\", \"a\", \"sigh\", \"of\", \"relief\", \".\"]\n# ::lemmas [\"Mrs\", \"Bennet\", \"be\", \"take\", \"the\", \"other\", \"upstairs\", \",\", \"Mr\", \"Bingley\", \"give\", \"a\", \"sigh\", \"of\", \"relief\", \".\"]\n# ::alignments 0-1.2.1.1.1.1 1-1.2.1.1.1.2 3-1.2.1 5-1.2.1.2 6-1.2.1.3 8-1.1.1.1 9-1.1.1.2 12-1 14-1.2\n(s / sigh-01~e.12\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mr\"~e.8\n                     :op2 \"Bingley\"~e.9))\n   :ARG1 (r / relieve-01~e.14\n            :ARG0 (t / take-01~e.3\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Mrs\"~e.0\n                                         :op2 \"Bennet\"~e.1))\n                     :ARG1 (o / other~e.5)\n                     :ARG3 (u / upstairs~e.6))))", [[0, 3], [4, 10], [11, 16], [17, 23], [24, 27], [28, 34], [35, 43], [43, 44], [45, 47], [48, 55], [56, 60], [61, 62], [63, 67], [68, 70], [71, 77], [77, 78]]], ["# ::snt Susan intends to reach Kashgar.\n# ::tokens [\"Susan\", \"intends\", \"to\", \"reach\", \"Kashgar\", \".\"]\n# ::lemmas [\"Susan\", \"intend\", \"to\", \"reach\", \"Kashgar\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 4-1.2.2.1.1\n(ii / intend-01~e.1\n    :ARG0 (p / person\n             :name (n / name\n                      :op1 \"Susan\"~e.0))\n    :ARG1 (r / reach-01~e.3\n             :ARG0 p\n             :ARG1 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Kashgar\"~e.4))))", [[0, 5], [6, 13], [14, 16], [17, 22], [23, 30], [30, 31]]], ["# ::snt How is a girl to be chatted to if she does not go out?\n# ::tokens [\"How\", \"is\", \"a\", \"girl\", \"to\", \"be\", \"chatted\", \"to\", \"if\", \"she\", \"does\", \"not\", \"go\", \"out\", \"?\"]\n# ::lemmas [\"how\", \"be\", \"a\", \"girl\", \"to\", \"be\", \"chat\", \"to\", \"if\", \"she\", \"do\", \"not\", \"go\", \"out\", \"?\"]\n# ::alignments 3-1.1.1 6-1.1 11-1.3.1\n(h / have-manner-91\n   :ARG1 (c / chat-01~e.6\n            :ARG2 (g / girl~e.3))\n   :ARG2 (a / amr-unknown)\n   :condition (g2 / go-out-17\n                  :polarity -~e.11\n                  :ARG0 g))", [[0, 3], [4, 6], [7, 8], [9, 13], [14, 16], [17, 19], [20, 27], [28, 30], [31, 33], [34, 37], [38, 42], [43, 46], [47, 49], [50, 53], [53, 54]]], ["# ::snt The Government sent an envoy to China.\n# ::tokens [\"The\", \"Government\", \"sent\", \"an\", \"envoy\", \"to\", \"China\", \".\"]\n# ::lemmas [\"the\", \"Government\", \"send\", \"an\", \"envoy\", \"to\", \"China\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2 6-1.3.1.1\n(s / send-01~e.2\n   :ARG0 (g / government-organization~e.1\n            :ARG0-of (g2 / govern-01))\n   :ARG1 (e / envoy~e.4)\n   :ARG2 (c / country\n            :name (n / name\n                     :op1 \"China\"~e.6)))", [[0, 3], [4, 14], [15, 19], [20, 22], [23, 28], [29, 31], [32, 37], [37, 38]]], ["# ::snt Monica hit Martina the ball.\n# ::tokens [\"Monica\", \"hit\", \"Martina\", \"the\", \"ball\", \".\"]\n# ::lemmas [\"Monica\", \"hit\", \"Martina\", \"the\", \"ball\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1 4-1.3\n(h / hit-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Monica\"~e.0))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Martina\"~e.2))\n   :ARG2 (b / ball~e.4))", [[0, 6], [7, 10], [11, 18], [19, 22], [23, 27], [27, 28]]], ["# ::snt To her eldest son she left the Flemish tapestries.\n# ::tokens [\"To\", \"her\", \"eldest\", \"son\", \"she\", \"left\", \"the\", \"Flemish\", \"tapestries\", \".\"]\n# ::lemmas [\"to\", \"her\", \"eld\", \"son\", \"she\", \"leave\", \"the\", \"Flemish\", \"tapestry\", \".\"]\n# ::alignments 3-1.3.1.2 4-1.1 5-1 7-1.2.1.1.1 8-1.2\n(l / leave-15~e.5\n   :ARG0 (s / she~e.4)\n   :ARG1 (t / tapestry~e.8\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Flemish\"~e.7)))\n   :ARG2 (p / person\n            :ARG0-of (h / have-rel-role-91\n                        :ARG1 s\n                        :ARG2 (s2 / son~e.3))\n            :ARG1-of (h2 / have-degree-91\n                         :ARG2 (o / old)\n                         :ARG3 (m / most))))", [[0, 2], [3, 6], [7, 13], [14, 17], [18, 21], [22, 26], [27, 30], [31, 38], [39, 49], [49, 50]]], ["# ::snt Golfer has a pretty powerful swing.\n# ::tokens [\"Golfer\", \"has\", \"a\", \"pretty\", \"powerful\", \"swing\", \".\"]\n# ::lemmas [\"Golfer\", \"have\", \"a\", \"pretty\", \"powerful\", \"swing\", \".\"]\n# ::alignments 0-1.1.1.1 3-1.2.1 4-1.2 5-1\n(s / swing-01~e.5\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Golfer\"~e.0))\n   :ARG1-of (p2 / powerful-02~e.4\n                :degree (p3 / pretty~e.3)))", [[0, 6], [7, 10], [11, 12], [13, 19], [20, 28], [29, 34], [34, 35]]], ["# ::snt What happened?\n# ::tokens [\"What\", \"happened\", \"?\"]\n# ::lemmas [\"what\", \"happen\", \"?\"]\n# ::alignments\n(e / event\n   :polarity (a / amr-unknown))", [[0, 4], [5, 13], [13, 14]]], ["# ::snt The machine is crushing the wrecked car.\n# ::tokens [\"The\", \"machine\", \"is\", \"crushing\", \"the\", \"wrecked\", \"car\", \".\"]\n# ::lemmas [\"the\", \"machine\", \"be\", \"crush\", \"the\", \"wrecked\", \"car\", \".\"]\n# ::alignments 1-1.1 3-1 5-1.2.1 6-1.2\n(c / crush-01~e.3\n   :ARG0 (m / machine~e.1)\n   :ARG1 (c2 / car~e.6\n             :ARG1-of (w / wreck-01~e.5)))", [[0, 3], [4, 11], [12, 14], [15, 23], [24, 27], [28, 35], [36, 39], [39, 40]]], ["# ::snt The flood swept away whole villages.\n# ::tokens [\"The\", \"flood\", \"swept\", \"away\", \"whole\", \"villages\", \".\"]\n# ::lemmas [\"the\", \"flood\", \"sweep\", \"away\", \"whole\", \"village\", \".\"]\n# ::alignments 1-1.1 2-1 3-1.3 4-1.2.1 5-1.2\n(s / sweep-01~e.2\n   :ARG0 (f / flood-01~e.1)\n   :ARG1 (v / village~e.5\n            :mod (w / whole~e.4))\n   :ARG2 (a / away~e.3))", [[0, 3], [4, 9], [10, 15], [16, 20], [21, 26], [27, 35], [35, 36]]], ["# ::snt The gardener planted the garden with roses.\n# ::tokens [\"The\", \"gardener\", \"planted\", \"the\", \"garden\", \"with\", \"roses\", \".\"]\n# ::lemmas [\"the\", \"gardener\", \"plant\", \"the\", \"garden\", \"with\", \"rose\", \".\"]\n# ::alignments 1-1.2 2-1 4-1.1.1 6-1.2.1\n(p / plant-01~e.2\n   :ARG0 (p2 / person\n             :ARG0-of (g / garden-01~e.4))\n   :ARG1 (g2 / garden~e.1\n             :ARG2 (r / rose~e.6)))", [[0, 3], [4, 12], [13, 20], [21, 24], [25, 31], [32, 36], [37, 42], [42, 43]]], ["# ::snt What happened was they were very cold.\n# ::tokens [\"What\", \"happened\", \"was\", \"they\", \"were\", \"very\", \"cold\", \".\"]\n# ::lemmas [\"what\", \"happen\", \"be\", \"they\", \"be\", \"very\", \"cold\", \".\"]\n# ::alignments 3-1.1.1 5-1.1.2 6-1.1\n(e / event\n   :mod (c / cold-01~e.6\n           :ARG1 (t / they~e.3)\n           :degree (v / very~e.5)))", [[0, 4], [5, 13], [14, 17], [18, 22], [23, 27], [28, 32], [33, 37], [37, 38]]], ["# ::snt The snow has blocked the track.\n# ::tokens [\"The\", \"snow\", \"has\", \"blocked\", \"the\", \"track\", \".\"]\n# ::lemmas [\"the\", \"snow\", \"have\", \"block\", \"the\", \"track\", \".\"]\n# ::alignments 1-1.1 3-1 5-1.2\n(b / block-01~e.3\n   :ARG0 (s / snow~e.1)\n   :ARG1 (t / track~e.5))", [[0, 3], [4, 8], [9, 12], [13, 20], [21, 24], [25, 30], [30, 31]]], ["# ::snt I have written up my thesis.\n# ::tokens [\"I\", \"have\", \"written\", \"up\", \"my\", \"thesis\", \".\"]\n# ::lemmas [\"i\", \"have\", \"write\", \"up\", \"my\", \"thesis\", \".\"]\n# ::alignments 0-1.1 2-1 5-1.2\n(w / write-up-03~e.2\n   :ARG0 (ii / i~e.0)\n   :ARG1 (t / thesis~e.5\n            :poss ii))", [[0, 1], [2, 6], [7, 14], [15, 17], [18, 20], [21, 27], [27, 28]]], ["# ::snt The scene that I wrote was in Chicago.\n# ::tokens [\"The\", \"scene\", \"that\", \"I\", \"wrote\", \"was\", \"in\", \"Chicago\", \".\"]\n# ::lemmas [\"the\", \"scene\", \"that\", \"i\", \"write\", \"be\", \"in\", \"Chicago\", \".\"]\n# ::alignments 1-1 3-1.1.1 4-1.1 7-1.2.1.1\n(s / scene~e.1\n   :ARG1-of (w / write-01~e.4\n               :ARG0 (ii / i~e.3))\n   :location (c / city\n                :name (n / name\n                         :op1 \"Chicago\"~e.7)))", [[0, 3], [4, 9], [10, 14], [15, 16], [17, 22], [23, 26], [27, 29], [30, 37], [37, 38]]], ["# ::snt Kim alienated cats and to beat his dog.\n# ::tokens [\"Kim\", \"alienated\", \"cats\", \"and\", \"to\", \"beat\", \"his\", \"dog\", \".\"]\n# ::lemmas [\"Kim\", \"alienate\", \"cat\", \"and\", \"to\", \"beat\", \"his\", \"dog\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 2-1.1.2 3-1 5-1.2 7-1.2.2\n(a / and~e.3\n   :op1 (a2 / alienate-01~e.1\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Kim\"~e.0))\n            :ARG1 (c / cat~e.2))\n   :op2 (b / beat-01~e.5\n           :ARG0 p\n           :ARG1 (d / dog~e.7\n                    :poss p)))", [[0, 3], [4, 13], [14, 18], [19, 22], [23, 25], [26, 30], [31, 34], [35, 38], [38, 39]]], ["# ::snt Going and buying whiskey is not the solution to your problem.\n# ::tokens [\"Going\", \"and\", \"buying\", \"whiskey\", \"is\", \"not\", \"the\", \"solution\", \"to\", \"your\", \"problem\", \".\"]\n# ::lemmas [\"go\", \"and\", \"buy\", \"whiskey\", \"be\", \"not\", \"the\", \"solution\", \"to\", \"your\", \"problem\", \".\"]\n# ::alignments 0-1.2.1 1-1.2 2-1.2.2 3-1.2.2.2 5-1.1 10-1.3\n(s / solve-01\n   :polarity -~e.5\n   :ARG0 (a / and~e.1\n            :op1 (g / go-02~e.0\n                    :ARG0 (y / you))\n            :op2 (b / buy-01~e.2\n                    :ARG0 y\n                    :ARG1 (w / whiskey~e.3)))\n   :ARG1 (p / problem~e.10\n            :poss y))", [[0, 5], [6, 9], [10, 16], [17, 24], [25, 27], [28, 31], [32, 35], [36, 44], [45, 47], [48, 52], [53, 60], [60, 61]]], ["# ::snt Peter talked to his boss on Tuesday, and Betsy to her super on Wednesday.\n# ::tokens [\"Peter\", \"talked\", \"to\", \"his\", \"boss\", \"on\", \"Tuesday\", \",\", \"and\", \"Betsy\", \"to\", \"her\", \"super\", \"on\", \"Wednesday\", \".\"]\n# ::lemmas [\"Peter\", \"talk\", \"to\", \"his\", \"boss\", \"on\", \"Tuesday\", \",\", \"and\", \"Betsy\", \"to\", \"her\", \"super\", \"on\", \"Wednesday\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 4-1.1.2.1.2 6-1.1.3.1 8-1 9-1.2.1.1.1 12-1.2.2 14-1.2.3.1\n(a / and~e.8\n   :op1 (t / talk-01~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Peter\"~e.0))\n           :ARG2 (p2 / person\n                     :ARG0-of (h / have-rel-role-91\n                                 :ARG1 p\n                                 :ARG2 (b / boss~e.4)))\n           :time (d / date-entity\n                    :weekday (t2 / tuesday~e.6)))\n   :op2 (t3 / talk-01\n            :ARG0 (p3 / person\n                      :name (n2 / name\n                                :op1 \"Betsy\"~e.9))\n            :ARG2 (s / super~e.12)\n            :time (d2 / date-entity\n                      :weekday (w / wednesday~e.14))))", [[0, 5], [6, 12], [13, 15], [16, 19], [20, 24], [25, 27], [28, 35], [35, 36], [37, 40], [41, 46], [47, 49], [50, 53], [54, 59], [60, 62], [63, 72], [72, 73]]], ["# ::snt Kim likes Sandy, and Lee Leslie.\n# ::tokens [\"Kim\", \"likes\", \"Sandy\", \",\", \"and\", \"Lee\", \"Leslie\", \".\"]\n# ::lemmas [\"Kim\", \"like\", \"Sandy\", \",\", \"and\", \"Lee\", \"Leslie\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1.1 4-1.2 5-1.2.2.1.1 6-1.2.2.1.2\n(l / like-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kim\"~e.0))\n   :ARG1 (a / and~e.4\n            :op1 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Sandy\"~e.2))\n            :op2 (p3 / person\n                     :name (n3 / name\n                               :op1 \"Lee\"~e.5\n                               :op2 \"Leslie\"~e.6))))", [[0, 3], [4, 9], [10, 15], [15, 16], [17, 20], [21, 24], [25, 31], [31, 32]]], ["# ::snt This girl there will put a picture of Bill on your desk before tomorrow.\n# ::tokens [\"This\", \"girl\", \"there\", \"will\", \"put\", \"a\", \"picture\", \"of\", \"Bill\", \"on\", \"your\", \"desk\", \"before\", \"tomorrow\", \".\"]\n# ::lemmas [\"this\", \"girl\", \"there\", \"will\", \"put\", \"a\", \"picture\", \"of\", \"Bill\", \"on\", \"your\", \"desk\", \"before\", \"tomorrow\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1.1.2 4-1 6-1.2 8-1.2.1.1.1 11-1.3 12-1.4 13-1.4.1\n(p / put-01~e.4\n   :ARG0 (g / girl~e.1\n            :mod (t / this~e.0)\n            :location (t2 / there~e.2))\n   :ARG1 (p2 / picture~e.6\n             :topic (p3 / person\n                        :name (n / name\n                                 :op1 \"Bill\"~e.8)))\n   :ARG2 (d / desk~e.11\n            :poss (y / you))\n   :time (b / before~e.12\n            :op1 (t3 / tomorrow~e.13)))", [[0, 4], [5, 9], [10, 15], [16, 20], [21, 24], [25, 26], [27, 34], [35, 37], [38, 42], [43, 45], [46, 50], [51, 55], [56, 62], [63, 71], [71, 72]]], ["# ::snt Before tomorrow, this girl in the red coat will put a picture of Bill on your desk before tomorrow.\n# ::tokens [\"Before\", \"tomorrow\", \",\", \"this\", \"girl\", \"in\", \"the\", \"red\", \"coat\", \"will\", \"put\", \"a\", \"picture\", \"of\", \"Bill\", \"on\", \"your\", \"desk\", \"before\", \"tomorrow\", \".\"]\n# ::lemmas [\"before\", \"tomorrow\", \",\", \"this\", \"girl\", \"in\", \"the\", \"red\", \"coat\", \"will\", \"put\", \"a\", \"picture\", \"of\", \"Bill\", \"on\", \"your\", \"desk\", \"before\", \"tomorrow\", \".\"]\n# ::alignments 0-1.4 1-1.4.1 3-1.1.1 4-1.1 7-1.1.2.1.1 8-1.1.2.1 10-1 12-1.2 14-1.2.1.1.1 17-1.3\n(p / put-01~e.10\n   :ARG0 (g / girl~e.4\n            :mod (t / this~e.3)\n            :ARG0-of (w / wear-01\n                        :ARG1 (c / coat~e.8\n                                 :ARG1-of (r / red-02~e.7))))\n   :ARG1 (p2 / picture-01~e.12\n             :ARG1 (p3 / person\n                       :name (n / name\n                                :op1 \"Bill\"~e.14)))\n   :ARG2 (d / desk~e.17\n            :poss (y / you))\n   :time (b / before~e.0\n            :op1 (t2 / tomorrow~e.1)))", [[0, 6], [7, 15], [15, 16], [17, 21], [22, 26], [27, 29], [30, 33], [34, 37], [38, 42], [43, 47], [48, 51], [52, 53], [54, 61], [62, 64], [65, 69], [70, 72], [73, 77], [78, 82], [83, 89], [90, 98], [98, 99]]], ["# ::snt On your desk, this girl in the red coat will put a picture of Bill on your desk before tomorrow.\n# ::tokens [\"On\", \"your\", \"desk\", \",\", \"this\", \"girl\", \"in\", \"the\", \"red\", \"coat\", \"will\", \"put\", \"a\", \"picture\", \"of\", \"Bill\", \"on\", \"your\", \"desk\", \"before\", \"tomorrow\", \".\"]\n# ::lemmas [\"on\", \"your\", \"desk\", \",\", \"this\", \"girl\", \"in\", \"the\", \"red\", \"coat\", \"will\", \"put\", \"a\", \"picture\", \"of\", \"Bill\", \"on\", \"your\", \"desk\", \"before\", \"tomorrow\", \".\"]\n# ::alignments 2-1.3 4-1.1.1 5-1.1 8-1.1.2.1.1 9-1.1.2.1 11-1 13-1.2 15-1.2.1.1.1 19-1.4 20-1.4.1\n(p / put-01~e.11\n   :ARG0 (g / girl~e.5\n            :mod (t / this~e.4)\n            :ARG0-of (w / wear-01\n                        :ARG1 (c / coat~e.9\n                                 :ARG1-of (r / red-02~e.8))))\n   :ARG1 (p2 / picture~e.13\n             :topic (p3 / person\n                        :name (n / name\n                                 :op1 \"Bill\"~e.15)))\n   :ARG2 (d / desk~e.2\n            :poss (y / you))\n   :time (b / before~e.19\n            :op1 (t2 / tomorrow~e.20)))", [[0, 2], [3, 7], [8, 12], [12, 13], [14, 18], [19, 23], [24, 26], [27, 30], [31, 34], [35, 39], [40, 44], [45, 48], [49, 50], [51, 58], [59, 61], [62, 66], [67, 69], [70, 74], [75, 79], [80, 86], [87, 95], [95, 96]]], ["# ::snt John wants to look at your notes after class.\n# ::tokens [\"John\", \"wants\", \"to\", \"look\", \"at\", \"your\", \"notes\", \"after\", \"class\", \".\"]\n# ::lemmas [\"John\", \"want\", \"to\", \"look\", \"at\", \"your\", \"note\", \"after\", \"class\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 6-1.2.2 7-1.2.3 8-1.2.3.1\n(w / want-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (l / look-01~e.3\n            :ARG0 p\n            :ARG1 (n2 / note~e.6\n                      :poss (y / you))\n            :time (a / after~e.7\n                     :op1 (c / class~e.8))))", [[0, 4], [5, 10], [11, 13], [14, 18], [19, 21], [22, 26], [27, 32], [33, 38], [39, 44], [44, 45]]], ["# ::snt What Mary bought was a first edition.\n# ::tokens [\"What\", \"Mary\", \"bought\", \"was\", \"a\", \"first\", \"edition\", \".\"]\n# ::lemmas [\"what\", \"Mary\", \"buy\", \"be\", \"a\", \"first\", \"edition\", \".\"]\n# ::alignments 1-1.2.1.1.1 2-1.2 6-1\n(e / edition~e.6\n   :ord (o / ordinal-entity\n           :value 1)\n   :ARG1-of (b / buy-01~e.2\n               :ARG0 (p / person\n                        :name (n / name\n                                 :op1 \"Mary\"~e.1))))", [[0, 4], [5, 9], [10, 16], [17, 20], [21, 22], [23, 28], [29, 36], [36, 37]]], ["# ::snt It's Alice that John was talking to.\n# ::tokens [\"It\", \"'s\", \"Alice\", \"that\", \"John\", \"was\", \"talking\", \"to\", \".\"]\n# ::lemmas [\"it\", \"be\", \"Alice\", \"that\", \"John\", \"be\", \"talk\", \"to\", \".\"]\n# ::alignments 2-1.2.1.1 4-1.1.1.1 6-1\n(t / talk-01~e.6\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.4))\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Alice\"~e.2)))", [[0, 2], [2, 4], [5, 10], [11, 15], [16, 20], [21, 24], [25, 32], [33, 35], [35, 36]]], ["# ::snt It's because he was tired that Mary yelled at you.\n# ::tokens [\"It\", \"'s\", \"because\", \"he\", \"was\", \"tired\", \"that\", \"Mary\", \"yelled\", \"at\", \"you\", \".\"]\n# ::lemmas [\"it\", \"be\", \"because\", \"he\", \"be\", \"tired\", \"that\", \"Mary\", \"yell\", \"at\", \"you\", \".\"]\n# ::alignments 2-1 3-1.1.2 5-1.1 7-1.1.1.1.1.1 8-1.1.1 10-1.1.1.2\n(c / cause-01~e.2\n   :ARG0 (t / tire-01~e.5\n            :ARG0 (y / yell-01~e.8\n                     :ARG0 (p / person\n                              :name (n / name\n                                       :op1 \"Mary\"~e.7))\n                     :ARG2 (y2 / you~e.10))\n            :ARG1 (h / he~e.3)))", [[0, 2], [2, 4], [5, 12], [13, 15], [16, 19], [20, 25], [26, 30], [31, 35], [36, 42], [43, 45], [46, 49], [49, 50]]], ["# ::snt What Mary will do is arrive tomorrow.\n# ::tokens [\"What\", \"Mary\", \"will\", \"do\", \"is\", \"arrive\", \"tomorrow\", \".\"]\n# ::lemmas [\"what\", \"Mary\", \"will\", \"do\", \"be\", \"arrive\", \"tomorrow\", \".\"]\n# ::alignments 1-1.1.1.1 3-1 5-1.2 6-1.2.2\n(d / do-02~e.3\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mary\"~e.1))\n   :ARG1 (a / arrive-01~e.5\n            :ARG1 p\n            :time (t / tomorrow~e.6)))", [[0, 4], [5, 9], [10, 14], [15, 17], [18, 20], [21, 27], [28, 36], [36, 37]]], ["# ::snt I sent to you the recipes from the paper that I told you about yesterday.\n# ::tokens [\"I\", \"sent\", \"to\", \"you\", \"the\", \"recipes\", \"from\", \"the\", \"paper\", \"that\", \"I\", \"told\", \"you\", \"about\", \"yesterday\", \".\"]\n# ::lemmas [\"i\", \"send\", \"to\", \"you\", \"the\", \"recipe\", \"from\", \"the\", \"paper\", \"that\", \"i\", \"tell\", \"you\", \"about\", \"yesterday\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.2.2 5-1.2 8-1.2.1 11-1.2.2 14-1.2.2.3\n(s / send-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (r / recipe~e.5\n            :source (p / paper~e.8)\n            :ARG1-of (t / tell-01~e.11\n                        :ARG0 ii\n                        :ARG2 (y / you~e.3)\n                        :time (y2 / yesterday~e.14)))\n   :ARG2 y)", [[0, 1], [2, 6], [7, 9], [10, 13], [14, 17], [18, 25], [26, 30], [31, 34], [35, 40], [41, 45], [46, 47], [48, 52], [53, 56], [57, 62], [63, 72], [72, 73]]], ["# ::snt they are waiting at the restaurant.\n# ::tokens [\"they\", \"are\", \"waiting\", \"at\", \"the\", \"restaurant\", \".\"]\n# ::lemmas [\"they\", \"be\", \"wait\", \"at\", \"the\", \"restaurant\", \".\"]\n# ::alignments 0-1.1 2-1 5-1.2\n(w / wait-01~e.2\n   :ARG1 (t / they~e.0)\n   :location (r / restaurant~e.5))", [[0, 4], [5, 8], [9, 16], [17, 19], [20, 23], [24, 34], [34, 35]]], ["# ::snt I like that student.\n# ::tokens [\"I\", \"like\", \"that\", \"student\", \".\"]\n# ::lemmas [\"i\", \"like\", \"that\", \"student\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1 3-1.2.2\n(l / like-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person\n            :mod (t / that~e.2)\n            :ARG0-of (s / study-01~e.3)))", [[0, 1], [2, 6], [7, 11], [12, 19], [19, 20]]], ["# ::snt I prefer for the girl to won.\n# ::tokens [\"I\", \"prefer\", \"for\", \"the\", \"girl\", \"to\", \"won\", \".\"]\n# ::lemmas [\"i\", \"prefer\", \"for\", \"the\", \"girl\", \"to\", \"won\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2.1\n(p / prefer-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (w / win-01\n            :ARG0 (g / girl~e.4)))", [[0, 1], [2, 8], [9, 12], [13, 16], [17, 21], [22, 24], [25, 28], [28, 29]]], ["# ::snt He works too extremely hard.\n# ::tokens [\"He\", \"works\", \"too\", \"extremely\", \"hard\", \".\"]\n# ::lemmas [\"he\", \"work\", \"too\", \"extremely\", \"hard\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1.2 3-1.2.2 4-1.2\n(w / work-01~e.1\n   :ARG0 (h / he~e.0)\n   :ARG1-of (h2 / hard-02~e.4\n                :ARG2-of (h3 / have-degree-91\n                             :ARG1 w\n                             :ARG3 (t / too~e.2))\n                :degree (e / extreme~e.3)))", [[0, 2], [3, 8], [9, 12], [13, 22], [23, 27], [27, 28]]], ["# ::snt My nephew could write letters to his parents every week.\n# ::tokens [\"My\", \"nephew\", \"could\", \"write\", \"letters\", \"to\", \"his\", \"parents\", \"every\", \"week\", \".\"]\n# ::lemmas [\"my\", \"nephew\", \"could\", \"write\", \"letter\", \"to\", \"his\", \"parent\", \"every\", \"week\", \".\"]\n# ::alignments 1-1.1.1.1.2 3-1.1 4-1.1.2 7-1.1.3.1.2 9-1.1.4.1.2\n(p / possible-01\n   :ARG1 (w / write-01~e.3\n            :ARG0 (p2 / person\n                      :ARG0-of (h / have-rel-role-91\n                                  :ARG1 (ii / i)\n                                  :ARG2 (n / nephew~e.1)))\n            :ARG1 (l / letter~e.4)\n            :ARG2 (p3 / person\n                      :ARG0-of (h2 / have-rel-role-91\n                                   :ARG1 p2\n                                   :ARG2 (p4 / parent~e.7)))\n            :frequency (r / rate-entity-91\n                          :ARG3 (t / temporal-quantity\n                                   :quant 1\n                                   :unit (w2 / week~e.9)))))", [[0, 2], [3, 9], [10, 15], [16, 21], [22, 29], [30, 32], [33, 36], [37, 44], [45, 50], [51, 55], [55, 56]]], ["# ::snt My niece could write me letters before her third birthday before.\n# ::tokens [\"My\", \"niece\", \"could\", \"write\", \"me\", \"letters\", \"before\", \"her\", \"third\", \"birthday\", \"before\", \".\"]\n# ::lemmas [\"my\", \"niece\", \"could\", \"write\", \"i\", \"letter\", \"before\", \"her\", \"third\", \"birthday\", \"before\", \".\"]\n# ::alignments 1-1.1.1.1.2 3-1.1 4-1.1.1.1.1 5-1.1.2 6-1.2 9-1.2.1 10-1.3\n(p / possible-01\n   :ARG1 (w / write-01~e.3\n            :ARG0 (p2 / person\n                      :ARG0-of (h / have-rel-role-91\n                                  :ARG1 (ii / i~e.4)\n                                  :ARG2 (n / niece~e.1)))\n            :ARG1 (l / letter~e.5)\n            :ARG2 ii)\n   :time (b / before~e.6\n            :op1 (b2 / birthday~e.9\n                     :ord (o / ordinal-entity\n                             :value 3)\n                     :poss p2))\n   :time (b3 / before~e.10))", [[0, 2], [3, 8], [9, 14], [15, 20], [21, 23], [24, 31], [32, 38], [39, 42], [43, 48], [49, 57], [58, 64], [64, 65]]], ["# ::snt She built the house with her own hands from bricks and mortar.\n# ::tokens [\"She\", \"built\", \"the\", \"house\", \"with\", \"her\", \"own\", \"hands\", \"from\", \"bricks\", \"and\", \"mortar\", \".\"]\n# ::lemmas [\"she\", \"build\", \"the\", \"house\", \"with\", \"her\", \"own\", \"hand\", \"from\", \"brick\", \"and\", \"mortar\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 7-1.1.1 9-1.4.1.1 10-1.4.1 11-1.4.1.2\n(b / build-01~e.1\n   :ARG0 (s / she~e.0\n            :part (h / hand~e.7))\n   :ARG1 (h2 / house~e.3)\n   :manner h\n   :ARG1-of (c / cause-01\n               :ARG0 (a / and~e.10\n                        :op1 (b2 / brick~e.9)\n                        :op2 (m / mortar~e.11))))", [[0, 3], [4, 9], [10, 13], [14, 19], [20, 24], [25, 28], [29, 32], [33, 38], [39, 43], [44, 50], [51, 54], [55, 61], [61, 62]]], ["# ::snt It was Mary.\n# ::tokens [\"It\", \"was\", \"Mary\", \".\"]\n# ::lemmas [\"it\", \"be\", \"Mary\", \".\"]\n# ::alignments 2-1.1.1\n(p / person\n   :name (n / name\n            :op1 \"Mary\"~e.2))", [[0, 2], [3, 6], [7, 11], [11, 12]]], ["# ::snt I know this.\n# ::tokens [\"I\", \"know\", \"this\", \".\"]\n# ::lemmas [\"i\", \"know\", \"this\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2\n(k / know-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (t / this~e.2))", [[0, 1], [2, 6], [7, 11], [11, 12]]], ["# ::snt She is proud of him.\n# ::tokens [\"She\", \"is\", \"proud\", \"of\", \"him\", \".\"]\n# ::lemmas [\"she\", \"be\", \"proud\", \"of\", \"he\", \".\"]\n# ::alignments 0-1.1 4-1.2\n(p / pride-01\n   :ARG0 (s / she~e.0)\n   :ARG1 (h / he~e.4))", [[0, 3], [4, 6], [7, 12], [13, 15], [16, 19], [19, 20]]], ["# ::snt Books would please me.\n# ::tokens [\"Books\", \"would\", \"please\", \"me\", \".\"]\n# ::lemmas [\"book\", \"would\", \"please\", \"i\", \".\"]\n# ::alignments 0-1.1 2-1 3-1.2\n(p / please-01~e.2\n   :ARG0 (b / book~e.0)\n   :ARG1 (ii / i~e.3))", [[0, 5], [6, 11], [12, 18], [19, 21], [21, 22]]], ["# ::snt John will have been enthusiastically eating cake.\n# ::tokens [\"John\", \"will\", \"have\", \"been\", \"enthusiastically\", \"eating\", \"cake\", \".\"]\n# ::lemmas [\"John\", \"will\", \"have\", \"be\", \"enthusiastically\", \"eat\", \"cake\", \".\"]\n# ::alignments 0-1.1.1.1 4-1.3 5-1 6-1.2\n(e / eat-01~e.5\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (c / cake~e.6)\n   :manner (e2 / enthusiastic-03~e.4))", [[0, 4], [5, 9], [10, 14], [15, 19], [20, 36], [37, 43], [44, 48], [48, 49]]], ["# ::snt Does John go to school?\n# ::tokens [\"Does\", \"John\", \"go\", \"to\", \"school\", \"?\"]\n# ::lemmas [\"do\", \"John\", \"go\", \"to\", \"school\", \"?\"]\n# ::alignments 1-1.1.1.1 2-1 4-1.2\n(g / go-02~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.1))\n   :ARG4 (s / school~e.4)\n   :polarity (a / amr-unknown))", [[0, 4], [5, 9], [10, 12], [13, 15], [16, 22], [22, 23]]], ["# ::snt Should Mary not taste the soup?\n# ::tokens [\"Should\", \"Mary\", \"not\", \"taste\", \"the\", \"soup\", \"?\"]\n# ::lemmas [\"should\", \"Mary\", \"not\", \"taste\", \"the\", \"soup\", \"?\"]\n# ::alignments 1-1.1.2.1.1 2-1.1.1 3-1.1 5-1.1.3\n(r / recommend-01\n   :ARG1 (t / taste-01~e.3\n            :polarity -~e.2\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Mary\"~e.1))\n            :ARG1 (s / soup~e.5))\n   :polarity (a / amr-unknown))", [[0, 6], [7, 11], [12, 15], [16, 21], [22, 25], [26, 30], [30, 31]]], ["# ::snt Is Bill not sick?\n# ::tokens [\"Is\", \"Bill\", \"not\", \"sick\", \"?\"]\n# ::lemmas [\"be\", \"Bill\", \"not\", \"sick\", \"?\"]\n# ::alignments 1-1.2.1.1 2-1.1 3-1\n(s / sick-05~e.3\n   :polarity -~e.2\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Bill\"~e.1))\n   :polarity (a / amr-unknown))", [[0, 2], [3, 7], [8, 11], [12, 16], [16, 17]]], ["# ::snt John liked Mary.\n# ::tokens [\"John\", \"liked\", \"Mary\", \".\"]\n# ::lemmas [\"John\", \"like\", \"Mary\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1\n(l / like-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Mary\"~e.2)))", [[0, 4], [5, 10], [11, 15], [15, 16]]], ["# ::snt John thinks for Bill to leave.\n# ::tokens [\"John\", \"thinks\", \"for\", \"Bill\", \"to\", \"leave\", \".\"]\n# ::lemmas [\"John\", \"think\", \"for\", \"Bill\", \"to\", \"leave\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1.1.1 5-1.2\n(t / think-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (l / leave-11~e.5\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Bill\"~e.3))))", [[0, 4], [5, 11], [12, 15], [16, 20], [21, 23], [24, 29], [29, 30]]], ["# ::snt I read these three big books.\n# ::tokens [\"I\", \"read\", \"these\", \"three\", \"big\", \"books\", \".\"]\n# ::lemmas [\"i\", \"read\", \"these\", \"three\", \"big\", \"book\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1 4-1.2.2 5-1.2\n(r / read-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (b / book~e.5\n            :quant 3~e.3\n            :mod (b2 / big~e.4)\n            :mod (t / this)))", [[0, 1], [2, 6], [7, 12], [13, 18], [19, 22], [23, 28], [28, 29]]], ["# ::snt I examined a book to Bill.\n# ::tokens [\"I\", \"examined\", \"a\", \"book\", \"to\", \"Bill\", \".\"]\n# ::lemmas [\"i\", \"examine\", \"a\", \"book\", \"to\", \"Bill\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 5-1.3.1.1\n(e / examine-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (b / book~e.3)\n   :beneficiary (p / person\n                   :name (n / name\n                            :op1 \"Bill\"~e.5)))", [[0, 1], [2, 10], [11, 12], [13, 17], [18, 20], [21, 25], [25, 26]]], ["# ::snt We put a book.\n# ::tokens [\"We\", \"put\", \"a\", \"book\", \".\"]\n# ::lemmas [\"we\", \"put\", \"a\", \"book\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2\n(p / put-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (b / book~e.3))", [[0, 2], [3, 6], [7, 8], [9, 13], [13, 14]]], ["# ::snt Mary revealed John to himself.\n# ::tokens [\"Mary\", \"revealed\", \"John\", \"to\", \"himself\", \".\"]\n# ::lemmas [\"Mary\", \"reveal\", \"John\", \"to\", \"himself\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1\n(r / reveal-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mary\"~e.0))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"John\"~e.2))\n   :ARG2 p2)", [[0, 4], [5, 13], [14, 18], [19, 21], [22, 29], [29, 30]]], ["# ::snt They like each other's books.\n# ::tokens [\"They\", \"like\", \"each\", \"other\", \"'s\", \"books\", \".\"]\n# ::lemmas [\"they\", \"like\", \"each\", \"other\", \"'s\", \"book\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1.1 3-1.2.1 5-1.2\n(l / like-01~e.1\n   :ARG0 (t / they~e.0)\n   :ARG1 (b / book~e.5\n            :poss (o / other~e.3\n                     :mod (e / each~e.2))))", [[0, 4], [5, 9], [10, 14], [15, 20], [20, 22], [23, 28], [28, 29]]], ["# ::snt John says Mary likes himself.\n# ::tokens [\"John\", \"says\", \"Mary\", \"likes\", \"himself\", \".\"]\n# ::lemmas [\"John\", \"say\", \"Mary\", \"like\", \"himself\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1.1 3-1.2\n(s / say-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (l / like-01~e.3\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Mary\"~e.2))\n            :ARG1 p))", [[0, 4], [5, 9], [10, 14], [15, 20], [21, 28], [28, 29]]], ["# ::snt After you spoke to him, Peter took the car.\n# ::tokens [\"After\", \"you\", \"spoke\", \"to\", \"him\", \",\", \"Peter\", \"took\", \"the\", \"car\", \".\"]\n# ::lemmas [\"after\", \"you\", \"speak\", \"to\", \"he\", \",\", \"Peter\", \"take\", \"the\", \"car\", \".\"]\n# ::alignments 0-1.3 1-1.3.1.1 2-1.3.1 4-1.3.1.2 6-1.1.1.1 7-1 9-1.2\n(t / take-01~e.7\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Peter\"~e.6))\n   :ARG1 (c / car~e.9)\n   :time (a / after~e.0\n            :op1 (s / speak-01~e.2\n                    :ARG0 (y / you~e.1)\n                    :ARG2 (h / he~e.4))))", [[0, 5], [6, 9], [10, 15], [16, 18], [19, 22], [22, 23], [24, 29], [30, 34], [35, 38], [39, 42], [42, 43]]], ["# ::snt Mary prefers her ice cream in a cone.\n# ::tokens [\"Mary\", \"prefers\", \"her\", \"ice\", \"cream\", \"in\", \"a\", \"cone\", \".\"]\n# ::lemmas [\"Mary\", \"prefer\", \"her\", \"ice\", \"cream\", \"in\", \"a\", \"cone\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 7-1.2.1\n(p / prefer-01~e.1\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Mary\"~e.0))\n   :ARG1 (ii / ice-cream\n             :location (c / cone~e.7)\n             :poss p2))", [[0, 4], [5, 12], [13, 16], [17, 20], [21, 26], [27, 29], [30, 31], [32, 36], [36, 37]]], ["# ::snt Henry found Bill sad.\n# ::tokens [\"Henry\", \"found\", \"Bill\", \"sad\", \".\"]\n# ::lemmas [\"Henry\", \"find\", \"Bill\", \"sad\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1.1 3-1.2\n(f / find-02~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Henry\"~e.0))\n   :ARG1 (s / sad-02~e.3\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Bill\"~e.2))))", [[0, 5], [6, 11], [12, 16], [17, 20], [20, 21]]], ["# ::snt What they saw was Bill leave.\n# ::tokens [\"What\", \"they\", \"saw\", \"was\", \"Bill\", \"leave\", \".\"]\n# ::lemmas [\"what\", \"they\", \"see\", \"be\", \"Bill\", \"leave\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2.1.1.1 5-1.2\n(s / see-01~e.2\n   :ARG0 (t / they~e.1)\n   :ARG1 (l / leave-11~e.5\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Bill\"~e.4))))", [[0, 4], [5, 9], [10, 13], [14, 17], [18, 22], [23, 28], [28, 29]]], ["# ::snt John heard Mary describe him.\n# ::tokens [\"John\", \"heard\", \"Mary\", \"describe\", \"him\", \".\"]\n# ::lemmas [\"John\", \"hear\", \"Mary\", \"describe\", \"he\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1.1 3-1.2 4-1.2.2\n(h / hear-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (d / describe-01~e.3\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Mary\"~e.2))\n            :ARG1 (h2 / he~e.4)))", [[0, 4], [5, 10], [11, 15], [16, 24], [25, 28], [28, 29]]], ["# ::snt There were 3 firemen available.\n# ::tokens [\"There\", \"were\", \"3\", \"firemen\", \"available\", \".\"]\n# ::lemmas [\"there\", \"be\", \"3\", \"fireman\", \"available\", \".\"]\n# ::alignments 2-1.1.1 3-1.1.2.1 4-1\n(a / available-02~e.4\n   :ARG2 (m / man\n            :quant 3~e.2\n            :ARG0-of (f / fight-01\n                        :ARG1 (f2 / fire~e.3))))", [[0, 5], [6, 10], [11, 12], [13, 20], [21, 30], [30, 31]]], ["# ::snt There is no largest prime number.\n# ::tokens [\"There\", \"is\", \"no\", \"largest\", \"prime\", \"number\", \".\"]\n# ::lemmas [\"there\", \"be\", \"no\", \"large\", \"prime\", \"number\", \".\"]\n# ::alignments 2-1.1 3-1.3 4-1.2.1 5-1.2\n(h / have-degree-91\n   :polarity -~e.2\n   :ARG1 (n / number~e.5\n            :mod (p / prime~e.4))\n   :ARG2 (l / large~e.3)\n   :ARG3 (m / most))", [[0, 5], [6, 8], [9, 11], [12, 19], [20, 25], [26, 32], [32, 33]]], ["# ::snt John believes there to be several firemen available.\n# ::tokens [\"John\", \"believes\", \"there\", \"to\", \"be\", \"several\", \"firemen\", \"available\", \".\"]\n# ::lemmas [\"John\", \"believe\", \"there\", \"to\", \"be\", \"several\", \"fireman\", \"available\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 5-1.2.3 6-1.2.2.1 7-1.2\n(b / believe-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (a / available-02~e.7\n            :ARG2 p\n            :ARG0-of (h / have-org-role-91\n                        :ARG2 (f / fireman~e.6))\n            :quant (s / several~e.5)))", [[0, 4], [5, 13], [14, 19], [20, 22], [23, 25], [26, 33], [34, 41], [42, 51], [51, 52]]], ["# ::snt Him knows him.\n# ::tokens [\"Him\", \"knows\", \"him\", \".\"]\n# ::lemmas [\"he\", \"know\", \"he\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2\n(k / know-01~e.1\n   :ARG0 (h / he~e.0)\n   :ARG1 (h2 / he~e.2))", [[0, 3], [4, 9], [10, 13], [13, 14]]], ["# ::snt I asked what who saw?\n# ::tokens [\"I\", \"asked\", \"what\", \"who\", \"saw\", \"?\"]\n# ::lemmas [\"i\", \"ask\", \"what\", \"who\", \"see\", \"?\"]\n# ::alignments 0-1.1 1-1 4-1.2.1\n(a / ask-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (t / thing\n            :ARG1-of (s / see-01~e.4\n                        :ARG0 (a2 / amr-unknown))))", [[0, 1], [2, 7], [8, 12], [13, 16], [17, 20], [20, 21]]], ["# ::snt Why are you leaving?\n# ::tokens [\"Why\", \"are\", \"you\", \"leaving\", \"?\"]\n# ::lemmas [\"why\", \"be\", \"you\", \"leave\", \"?\"]\n# ::alignments 2-1.1 3-1\n(l / leave-11~e.3\n   :ARG0 (y / you~e.2)\n   :ARG1-of (c / cause-01\n               :ARG0 (a / amr-unknown)))", [[0, 3], [4, 7], [8, 11], [12, 19], [19, 20]]], ["# ::snt Medea murdered\n# ::tokens [\"Medea\", \"murdered\"]\n# ::lemmas [\"Medea\", \"murder\"]\n# ::alignments 0-1.1.1.1 1-1\n(m / murder-01~e.1\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Medea\"~e.0)))", [[0, 5], [6, 14]]], ["# ::snt That Jason abandoned Medea stinks!\n# ::tokens [\"That\", \"Jason\", \"abandoned\", \"Medea\", \"stinks\", \"!\"]\n# ::lemmas [\"that\", \"Jason\", \"abandon\", \"Medea\", \"stink\", \"!\"]\n# ::alignments 1-1.1.1.1 2-1.1.2 3-1.1.2.1.1.1 4-1\n(s / stink-01~e.4\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Jason\"~e.1)\n            :ARG0-of (a / abandon-01~e.2\n                        :ARG1 (c / city\n                                 :name (n2 / name\n                                           :op1 \"Medea\"~e.3)))))", [[0, 4], [5, 10], [11, 20], [21, 26], [27, 33], [33, 34]]], ["# ::snt Humans love to eat some happy pigs which can fly.\n# ::tokens [\"Humans\", \"love\", \"to\", \"eat\", \"some\", \"happy\", \"pigs\", \"which\", \"can\", \"fly\", \".\"]\n# ::lemmas [\"human\", \"love\", \"to\", \"eat\", \"some\", \"happy\", \"pig\", \"which\", \"can\", \"fly\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 4-1.2.2.2 5-1.2.2.1 6-1.2.2 9-1.2.2.3\n(l / love-01~e.1\n   :ARG0 (h / human~e.0)\n   :ARG1 (e / eat-01~e.3\n            :ARG0 h\n            :ARG1 (p / pig~e.6\n                     :ARG1-of (h2 / happy-01~e.5)\n                     :quant (s / some~e.4)\n                     :ARG1-of (f / fly-01~e.9\n                                 :ARG1-of (p2 / possible-01)))))", [[0, 6], [7, 11], [12, 14], [15, 18], [19, 23], [24, 29], [30, 34], [35, 40], [41, 44], [45, 48], [48, 49]]], ["# ::snt She intended Jenny to be there\n# ::tokens [\"She\", \"intended\", \"Jenny\", \"to\", \"be\", \"there\"]\n# ::lemmas [\"she\", \"intend\", \"Jenny\", \"to\", \"be\", \"there\"]\n# ::alignments 0-1.1 1-1 2-1.2.1.1.1 5-1.2.2\n(ii / intend-01~e.1\n    :ARG0 (s / she~e.0)\n    :ARG1 (b / be-located-at-91\n             :ARG1 (p / person\n                      :name (n / name\n                               :op1 \"Jenny\"~e.2))\n             :ARG2 (t / there~e.5)))", [[0, 3], [4, 12], [13, 18], [19, 21], [22, 24], [25, 30]]], ["# ::snt Gilgamesh didn't ate the honey.\n# ::tokens [\"Gilgamesh\", \"did\", \"n't\", \"ate\", \"the\", \"honey\", \".\"]\n# ::lemmas [\"Gilgamesh\", \"do\", \"not\", \"eat\", \"the\", \"honey\", \".\"]\n# ::alignments 0-1.2.1.1 3-1 5-1.3\n(e / eat-01~e.3\n   :polarity -\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Gilgamesh\"~e.0))\n   :ARG1 (h / honey~e.5))", [[0, 9], [10, 13], [13, 16], [17, 20], [21, 24], [25, 30], [30, 31]]], ["# ::snt His loves him\n# ::tokens [\"His\", \"loves\", \"him\"]\n# ::lemmas [\"his\", \"love\", \"he\"]\n# ::alignments 1-1 2-1.1\n(l / love-01~e.1\n   :ARG0 (h / he~e.2)\n   :ARG1 (h2 / he))", [[0, 3], [4, 9], [10, 13]]], ["# ::snt It was Julie and Jenny that arrived first\n# ::tokens [\"It\", \"was\", \"Julie\", \"and\", \"Jenny\", \"that\", \"arrived\", \"first\"]\n# ::lemmas [\"it\", \"be\", \"Julie\", \"and\", \"Jenny\", \"that\", \"arrive\", \"first\"]\n# ::alignments 2-1.1.1.1.1 3-1.1 4-1.1.2.1.1 6-1\n(a / arrive-01~e.6\n   :ARG1 (a2 / and~e.3\n             :op1 (p / person\n                     :name (n / name\n                              :op1 \"Julie\"~e.2))\n             :op2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Jenny\"~e.4)))\n   :ord (o / ordinal-entity\n           :value 1))", [[0, 2], [3, 6], [7, 12], [13, 16], [17, 22], [23, 27], [28, 35], [36, 41]]], ["# ::snt Hermione fortunately has passed biology.\n# ::tokens [\"Hermione\", \"fortunately\", \"has\", \"passed\", \"biology\", \".\"]\n# ::lemmas [\"Hermione\", \"fortunately\", \"have\", \"pass\", \"biology\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1 3-1.1 4-1.1.2\n(f / fortunate-01~e.1\n   :ARG2 (p / pass-20~e.3\n            :ARG1 (p2 / person\n                      :name (n / name\n                               :op1 \"Hermione\"~e.0))\n            :ARG2 (b / biology~e.4)))", [[0, 8], [9, 20], [21, 24], [25, 31], [32, 39], [39, 40]]], ["# ::snt He is unhappy about his contact lenses.\n# ::tokens [\"He\", \"is\", \"unhappy\", \"about\", \"his\", \"contact\", \"lenses\", \".\"]\n# ::lemmas [\"he\", \"be\", \"unhappy\", \"about\", \"his\", \"contact\", \"lense\", \".\"]\n# ::alignments 0-1.2 2-1 5-1.3.1 6-1.3\n(h / happy-01~e.2\n   :polarity -\n   :ARG1 (h2 / he~e.0)\n   :ARG2 (l / lens~e.6\n            :instrument-of (c / contact-01~e.5)\n            :poss h2))", [[0, 2], [3, 5], [6, 13], [14, 19], [20, 23], [24, 31], [32, 38], [38, 39]]], ["# ::snt Lloyd's car fell over a cliff last year.\n# ::tokens [\"Lloyd\", \"'s\", \"car\", \"fell\", \"over\", \"a\", \"cliff\", \"last\", \"year\", \".\"]\n# ::lemmas [\"Lloyd\", \"'s\", \"car\", \"fall\", \"over\", \"a\", \"cliff\", \"last\", \"year\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1 3-1 4-1.2 6-1.2.1 7-1.3.1 8-1.3\n(f / fall-01~e.3\n   :ARG1 (c / car~e.2\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Lloyd\"~e.0)))\n   :ARG4 (o / over~e.4\n            :op1 (c2 / cliff~e.6))\n   :time (y / year~e.8\n            :mod (l / last~e.7)))", [[0, 5], [5, 7], [8, 11], [12, 16], [17, 21], [22, 23], [24, 29], [30, 34], [35, 39], [39, 40]]], ["# ::snt I swore that never again would I drink absinthe.\n# ::tokens [\"I\", \"swore\", \"that\", \"never\", \"again\", \"would\", \"I\", \"drink\", \"absinthe\", \".\"]\n# ::lemmas [\"i\", \"swear\", \"that\", \"never\", \"again\", \"would\", \"i\", \"drink\", \"absinthe\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2.5 7-1.2\n(s / swear-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (d / drink-01~e.7\n            :polarity -\n            :ARG0 ii\n            :ARG1 (a / aspirin)\n            :time (e / ever)\n            :mod (a2 / again~e.4)))", [[0, 1], [2, 7], [8, 12], [13, 18], [19, 24], [25, 30], [31, 32], [33, 38], [39, 47], [47, 48]]], ["# ::snt Romeo sent Juliet letters.\n# ::tokens [\"Romeo\", \"sent\", \"Juliet\", \"letters\", \".\"]\n# ::lemmas [\"Romeo\", \"send\", \"Juliet\", \"letter\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.3.1.1 3-1.2\n(s / send-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Romeo\"~e.0))\n   :ARG1 (l / letter~e.3)\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Juliet\"~e.2)))", [[0, 5], [6, 10], [11, 17], [18, 25], [25, 26]]], ["# ::snt When did you eat the cake?\n# ::tokens [\"When\", \"did\", \"you\", \"eat\", \"the\", \"cake\", \"?\"]\n# ::lemmas [\"when\", \"do\", \"you\", \"eat\", \"the\", \"cake\", \"?\"]\n# ::alignments 2-1.1 3-1 5-1.2\n(e / eat-01~e.3\n   :ARG0 (y / you~e.2)\n   :ARG1 (c / cake~e.5)\n   :time (a / amr-unknown))", [[0, 4], [5, 8], [9, 12], [13, 16], [17, 20], [21, 25], [25, 26]]], ["# ::snt By is eaten monkey banana that the being.\n# ::tokens [\"By\", \"is\", \"eaten\", \"monkey\", \"banana\", \"that\", \"the\", \"being\", \".\"]\n# ::lemmas [\"by\", \"be\", \"eat\", \"monkey\", \"banana\", \"that\", \"the\", \"being\", \".\"]\n# ::alignments 2-1 3-1.1.1 4-1.1 7-1.1.2.1.1\n(e / eat-01~e.2\n   :ARG1 (b / banana~e.4\n            :mod (m / monkey~e.3)\n            :ARG1-of (r / resemble-01\n                        :ARG2 (b2 / banana\n                                  :domain (b3 / being~e.7)))))", [[0, 2], [3, 5], [6, 11], [12, 18], [19, 25], [26, 30], [31, 34], [35, 40], [40, 41]]], ["# ::snt What we donated a chopper to was the new hospital\n# ::tokens [\"What\", \"we\", \"donated\", \"a\", \"chopper\", \"to\", \"was\", \"the\", \"new\", \"hospital\"]\n# ::lemmas [\"what\", \"we\", \"donate\", \"a\", \"chopper\", \"to\", \"be\", \"the\", \"new\", \"hospital\"]\n# ::alignments 1-1.1 2-1 4-1.2 8-1.3.1 9-1.3\n(d / donate-01~e.2\n   :ARG0 (w / we~e.1)\n   :ARG1 (c / chopper~e.4)\n   :ARG2 (h / hospital~e.9\n            :ARG1-of (n / new-01~e.8)))", [[0, 4], [5, 7], [8, 15], [16, 17], [18, 25], [26, 28], [29, 32], [33, 36], [37, 40], [41, 49]]], ["# ::snt Gilgamesh must seek Ishtar\n# ::tokens [\"Gilgamesh\", \"must\", \"seek\", \"Ishtar\"]\n# ::lemmas [\"gilgamesh\", \"must\", \"seek\", \"Ishtar\"]\n# ::alignments 0-1.1.1.1 2-1.2 3-1.2.2.1.1\n(o / obligate-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Gilgamesh\"~e.0))\n   :ARG2 (s / seek-01~e.2\n            :ARG0 p\n            :ARG1 (t / team\n                     :name (n2 / name\n                               :op1 \"Ishtar\"~e.3))))", [[0, 9], [10, 14], [15, 19], [20, 26]]], ["# ::snt I love toast and sun dried tomatoes\n# ::tokens [\"I\", \"love\", \"toast\", \"and\", \"sun\", \"dried\", \"tomatoes\"]\n# ::lemmas [\"i\", \"love\", \"toast\", \"and\", \"sun\", \"dry\", \"tomato\"]\n# ::alignments 0-1.1 1-1 2-1.2.1 3-1.2 4-1.2.2.1.1 5-1.2.2.1 6-1.2.2\n(l / love-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (a / and~e.3\n            :op1 (t / toast-01~e.2)\n            :op2 (t2 / tomato~e.6\n                     :ARG1-of (d / dry-08~e.5\n                                 :ARG0 (s / sun~e.4)))))", [[0, 1], [2, 6], [7, 12], [13, 16], [17, 20], [21, 26], [27, 35]]], ["# ::snt Gilgamesh not flew the dragon.\n# ::tokens [\"Gilgamesh\", \"not\", \"flew\", \"the\", \"dragon\", \".\"]\n# ::lemmas [\"gilgamesh\", \"not\", \"fly\", \"the\", \"dragon\", \".\"]\n# ::alignments 0-1.2.1.1 1-1.1 2-1 4-1.3\n(f / fly-01~e.2\n   :polarity -~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Gilgamesh\"~e.0))\n   :ARG2 (d / dragon~e.4))", [[0, 9], [10, 13], [14, 18], [19, 22], [23, 29], [29, 30]]], ["# ::snt Had the potion boiled over?\n# ::tokens [\"Had\", \"the\", \"potion\", \"boiled\", \"over\", \"?\"]\n# ::lemmas [\"have\", \"the\", \"potion\", \"boil\", \"over\", \"?\"]\n# ::alignments 2-1.2 3-1\n(b / boil-over-02~e.3\n   :polarity (a / amr-unknown)\n   :ARG1 (p / potion~e.2))", [[0, 3], [4, 7], [8, 14], [15, 21], [22, 26], [26, 27]]], ["# ::snt The monkey wrote a poem on its favourite banana\n# ::tokens [\"The\", \"monkey\", \"wrote\", \"a\", \"poem\", \"on\", \"its\", \"favourite\", \"banana\"]\n# ::lemmas [\"the\", \"monkey\", \"write\", \"a\", \"poem\", \"on\", \"its\", \"favourite\", \"banana\"]\n# ::alignments 1-1.1 2-1 4-1.2 7-1.2.1.1 8-1.2.1\n(w / write-01~e.2\n   :ARG0 (m / monkey~e.1)\n   :ARG1 (p / poem~e.4\n            :topic (b / banana~e.8\n                      :ARG1-of (f / favor-01~e.7\n                                  :ARG0 m))))", [[0, 3], [4, 10], [11, 16], [17, 18], [19, 23], [24, 26], [27, 30], [31, 40], [41, 47]]], ["# ::snt The man chuckle\n# ::tokens [\"The\", \"man\", \"chuckle\"]\n# ::lemmas [\"the\", \"man\", \"chuckle\"]\n# ::alignments 1-1.1 2-1\n(c / chuckle-01~e.2\n   :ARG0 (m / man~e.1))", [[0, 3], [4, 7], [8, 15]]], ["# ::snt Kiss Anson quickly!\n# ::tokens [\"Kiss\", \"Anson\", \"quickly\", \"!\"]\n# ::lemmas [\"Kiss\", \"Anson\", \"quickly\", \"!\"]\n# ::alignments 0-1 1-1.3.1.1 2-1.4\n(k / kiss-01~e.0\n   :mode imperative\n   :ARG0 (y / you)\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Anson\"~e.1))\n   :ARG1-of (q / quick-02~e.2))", [[0, 4], [5, 10], [11, 18], [18, 19]]], ["# ::snt In every club in London, people threw up their hands in the air\n# ::tokens [\"In\", \"every\", \"club\", \"in\", \"London\", \",\", \"people\", \"threw\", \"up\", \"their\", \"hands\", \"in\", \"the\", \"air\"]\n# ::lemmas [\"in\", \"every\", \"club\", \"in\", \"London\", \",\", \"people\", \"throw\", \"up\", \"their\", \"hand\", \"in\", \"the\", \"air\"]\n# ::alignments 1-1.3.1 2-1.3 4-1.3.2.1.1 7-1 10-1.1.1 13-1.4\n(t / throw-up-07~e.7\n   :ARG0 (p / person\n            :part (h / hand~e.10))\n   :ARG1 h\n   :location (c / club~e.2\n                :mod (e / every~e.1)\n                :location (c2 / city\n                              :name (n / name\n                                       :op1 \"London\"~e.4)))\n   :manner (a / air~e.13))", [[0, 2], [3, 8], [9, 13], [14, 16], [17, 23], [23, 24], [25, 31], [32, 37], [38, 40], [41, 46], [47, 52], [53, 55], [56, 59], [60, 63]]], ["# ::snt Alison collapsed\n# ::tokens [\"Alison\", \"collapsed\"]\n# ::lemmas [\"Alison\", \"collapse\"]\n# ::alignments 0-1.1.1.1 1-1\n(c / collapse-01~e.1\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Alison\"~e.0)))", [[0, 6], [7, 16]]], ["# ::snt He asked did I live there.\n# ::tokens [\"He\", \"asked\", \"did\", \"I\", \"live\", \"there\", \".\"]\n# ::lemmas [\"he\", \"ask\", \"do\", \"i\", \"live\", \"there\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1 4-1.2 5-1.2.2\n(a / ask-01~e.1\n   :ARG0 (h / he~e.0)\n   :ARG1 (l / live-01~e.4\n            :ARG0 (ii / i~e.3)\n            :location (t / there~e.5)))", [[0, 2], [3, 8], [9, 12], [13, 14], [15, 19], [20, 25], [25, 26]]], ["# ::snt There were people playing on the bea\n# ::tokens [\"There\", \"were\", \"people\", \"playing\", \"on\", \"the\", \"bea\"]\n# ::lemmas [\"there\", \"be\", \"people\", \"play\", \"on\", \"the\", \"bea\"]\n# ::alignments 3-1 6-1.2\n(p / play-01~e.3\n   :ARG0 (p2 / person)\n   :location (b / bea~e.6))", [[0, 5], [6, 10], [11, 17], [18, 25], [26, 28], [29, 32], [33, 36]]], ["# ::snt The men chuckles\n# ::tokens [\"The\", \"men\", \"chuckles\"]\n# ::lemmas [\"the\", \"man\", \"chuckle\"]\n# ::alignments 1-1.1 2-1\n(c / chuckle-01~e.2\n   :ARG0 (m / man~e.1))", [[0, 3], [4, 7], [8, 16]]], ["# ::snt I have eaten the muffin.\n# ::tokens [\"I\", \"have\", \"eaten\", \"the\", \"muffin\", \".\"]\n# ::lemmas [\"i\", \"have\", \"eat\", \"the\", \"muffin\", \".\"]\n# ::alignments 0-1.1 2-1 4-1.2\n(e / eat-01~e.2\n   :ARG0 (ii / i~e.0)\n   :ARG1 (m / muffin~e.4))", [[0, 1], [2, 6], [7, 12], [13, 16], [17, 23], [23, 24]]], ["# ::snt Anson thought that he had bought the paint stripper\n# ::tokens [\"Anson\", \"thought\", \"that\", \"he\", \"had\", \"bought\", \"the\", \"paint\", \"stripper\"]\n# ::lemmas [\"Anson\", \"think\", \"that\", \"he\", \"have\", \"buy\", \"the\", \"paint\", \"stripper\"]\n# ::alignments 0-1.1.1.1 1-1 5-1.2 7-1.2.2.1 8-1.2.2\n(t / think-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Anson\"~e.0))\n   :ARG1 (b / buy-01~e.5\n            :ARG0 p\n            :ARG1 (s / stripper~e.8\n                     :purpose (p2 / paint~e.7))))", [[0, 5], [6, 13], [14, 18], [19, 21], [22, 25], [26, 32], [33, 36], [37, 42], [43, 51]]], ["# ::snt Julie quickly answered the question.\n# ::tokens [\"Julie\", \"quickly\", \"answered\", \"the\", \"question\", \".\"]\n# ::lemmas [\"Julie\", \"quickly\", \"answer\", \"the\", \"question\", \".\"]\n# ::alignments 0-1.1.1.1 1-1.3 2-1 4-1.2.1\n(a / answer-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Julie\"~e.0))\n   :ARG1 (t / thing\n            :ARG1-of (q / question-01~e.4))\n   :ARG1-of (q2 / quick-02~e.1))", [[0, 5], [6, 13], [14, 22], [23, 26], [27, 35], [35, 36]]], ["# ::snt They are going home for to see their parents.\n# ::tokens [\"They\", \"are\", \"going\", \"home\", \"for\", \"to\", \"see\", \"their\", \"parents\", \".\"]\n# ::lemmas [\"they\", \"be\", \"go\", \"home\", \"for\", \"to\", \"see\", \"their\", \"parent\", \".\"]\n# ::alignments 0-1.1 2-1 3-1.2 6-1.3 8-1.3.2.1.2\n(g / go-02~e.2\n   :ARG0 (t / they~e.0)\n   :ARG4 (h / home~e.3)\n   :purpose (s / see-01~e.6\n               :ARG0 t\n               :ARG1 (p / person\n                        :ARG0-of (h2 / have-rel-role-91\n                                     :ARG1 t\n                                     :ARG2 (p2 / parent~e.8)))))", [[0, 4], [5, 8], [9, 14], [15, 19], [20, 23], [24, 26], [27, 30], [31, 36], [37, 44], [44, 45]]], ["# ::snt For to do that would be a mistake.\n# ::tokens [\"For\", \"to\", \"do\", \"that\", \"would\", \"be\", \"a\", \"mistake\", \".\"]\n# ::lemmas [\"for\", \"to\", \"do\", \"that\", \"would\", \"be\", \"a\", \"mistake\", \".\"]\n# ::alignments 2-1.1 3-1.1.1 7-1\n(m / mistake-02~e.7\n   :ARG1 (d / do-02~e.2\n            :ARG1 (t / that~e.3)))", [[0, 3], [4, 6], [7, 9], [10, 14], [15, 20], [21, 23], [24, 25], [26, 33], [33, 34]]], ["# ::snt Jenny hasn't eaten all her Clinique make-up again, has she?\n# ::tokens [\"Jenny\", \"has\", \"n't\", \"eaten\", \"all\", \"her\", \"Clinique\", \"make\", \"-\", \"up\", \"again\", \",\", \"has\", \"she\", \"?\"]\n# ::lemmas [\"Jenny\", \"have\", \"not\", \"eat\", \"all\", \"her\", \"Clinique\", \"make\", \"-\", \"up\", \"again\", \",\", \"have\", \"she\", \"?\"]\n# ::alignments 0-1.2.1.1 3-1 4-1.3.2 6-1.3.1.1.1 7-1.3 8-1.1 10-1.4\n(e / eat-01~e.3\n   :polarity -~e.8\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jenny\"~e.0))\n   :ARG1 (m / makeup~e.7\n            :mod (p2 / product\n                     :name (n2 / name\n                               :op1 \"Clinique\"~e.6))\n            :mod (a / all~e.4)\n            :poss p)\n   :mod (a2 / again~e.10)\n   :ARG1-of (r / request-confirmation-91))", [[0, 5], [6, 9], [9, 12], [13, 18], [19, 22], [23, 26], [27, 35], [36, 40], [40, 41], [41, 43], [44, 49], [49, 50], [51, 54], [55, 58], [58, 59]]], ["# ::snt house the old collapsed.\n# ::tokens [\"house\", \"the\", \"old\", \"collapsed\", \".\"]\n# ::lemmas [\"house\", \"the\", \"old\", \"collapse\", \".\"]\n# ::alignments 0-1.1 2-1.1.1 3-1\n(c / collapse-01~e.3\n   :ARG1 (h / house~e.0\n            :mod (o / old~e.2)))", [[0, 5], [6, 9], [10, 13], [14, 23], [23, 24]]], ["# ::snt There were people eating fire at the fair, weren't there?\n# ::tokens [\"There\", \"were\", \"people\", \"eating\", \"fire\", \"at\", \"the\", \"fair\", \",\", \"were\", \"n't\", \"there\", \"?\"]\n# ::lemmas [\"there\", \"be\", \"people\", \"eat\", \"fire\", \"at\", \"the\", \"fair\", \",\", \"be\", \"not\", \"there\", \"?\"]\n# ::alignments 3-1 4-1.2 7-1.3\n(e / eat-01~e.3\n   :ARG0 (p / person)\n   :ARG1 (f / fire~e.4)\n   :location (f2 / fair~e.7)\n   :ARG1-of (r / request-confirmation-91))", [[0, 5], [6, 10], [11, 17], [18, 24], [25, 29], [30, 32], [33, 36], [37, 41], [41, 42], [43, 47], [47, 50], [51, 56], [56, 57]]], ["# ::snt Jason would prefer to have cursed Agamemnon.\n# ::tokens [\"Jason\", \"would\", \"prefer\", \"to\", \"have\", \"cursed\", \"Agamemnon\", \".\"]\n# ::lemmas [\"Jason\", \"would\", \"prefer\", \"to\", \"have\", \"curse\", \"Agamemnon\", \".\"]\n# ::alignments 0-1.1.1.1 2-1 5-1.2 6-1.2.2.1.1\n(p / prefer-01~e.2\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Jason\"~e.0))\n   :ARG1 (c / curse-02~e.5\n            :ARG0 p2\n            :ARG2 (p3 / person\n                      :name (n2 / name\n                                :op1 \"Agamemnon\"~e.6))))", [[0, 5], [6, 11], [12, 18], [19, 21], [22, 26], [27, 33], [34, 43], [43, 44]]], ["# ::snt Anson joked\n# ::tokens [\"Anson\", \"joked\"]\n# ::lemmas [\"Anson\", \"joke\"]\n# ::alignments 0-1.1.1.1 1-1\n(j / joke-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Anson\"~e.0)))", [[0, 5], [6, 11]]], ["# ::snt Gilgamesh may quickly have cast the spell\n# ::tokens [\"Gilgamesh\", \"may\", \"quickly\", \"have\", \"cast\", \"the\", \"spell\"]\n# ::lemmas [\"Gilgamesh\", \"may\", \"quickly\", \"have\", \"cast\", \"the\", \"spell\"]\n# ::alignments 0-1.1.1.1.1 2-1.1.3 4-1.1 6-1.1.2\n(p / possible-01\n   :ARG1 (c / cast-01~e.4\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Gilgamesh\"~e.0))\n            :ARG1 (s / spell~e.6)\n            :ARG1-of (q / quick-02~e.2)))", [[0, 9], [10, 13], [14, 21], [22, 26], [27, 31], [32, 35], [36, 41]]], ["# ::snt Which book about himself did Anson write?\n# ::tokens [\"Which\", \"book\", \"about\", \"himself\", \"did\", \"Anson\", \"write\", \"?\"]\n# ::lemmas [\"which\", \"book\", \"about\", \"himself\", \"do\", \"Anson\", \"write\", \"?\"]\n# ::alignments 1-1.2 5-1.1.1.1 6-1\n(w / write-01~e.6\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Anson\"~e.5))\n   :ARG1 (b / book~e.1\n            :topic p\n            :mod (a / amr-unknown)))", [[0, 5], [6, 10], [11, 16], [17, 24], [25, 28], [29, 34], [35, 40], [40, 41]]], ["# ::snt They claimed they had settled on something, but it wasn't clear what.\n# ::tokens [\"They\", \"claimed\", \"they\", \"had\", \"settled\", \"on\", \"something\", \",\", \"but\", \"it\", \"was\", \"n't\", \"clear\", \"what\", \".\"]\n# ::lemmas [\"they\", \"claim\", \"they\", \"have\", \"settle\", \"on\", \"something\", \",\", \"but\", \"it\", \"be\", \"not\", \"clear\", \"what\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 4-1.1.2 6-1.1.2.2 8-1 12-1.2\n(c / contrast-01~e.8\n   :ARG1 (c2 / claim-01~e.1\n             :ARG0 (t / they~e.0)\n             :ARG1 (s / settle-03~e.4\n                      :ARG0 t\n                      :ARG1 (s2 / something~e.6)))\n   :ARG2 (c3 / clear-06~e.12\n             :polarity -\n             :ARG1 (t2 / thing)))", [[0, 4], [5, 12], [13, 17], [18, 21], [22, 29], [30, 32], [33, 42], [42, 43], [44, 47], [48, 50], [51, 54], [54, 57], [58, 63], [64, 68], [68, 69]]], ["# ::snt Somebody just left - guess who just left.\n# ::tokens [\"Somebody\", \"just\", \"left\", \"-\", \"guess\", \"who\", \"just\", \"left\", \".\"]\n# ::lemmas [\"somebody\", \"just\", \"left\", \"-\", \"guess\", \"who\", \"just\", \"leave\", \".\"]\n# ::alignments 0-1.1.1 1-1.1.2 4-1.2 6-1.2.3.1.1 7-1.1\n(m / multi-sentence\n   :snt1 (l / leave-11~e.7\n            :ARG0 (s / somebody~e.0)\n            :mod (j / just~e.1))\n   :snt2 (g / guess-01~e.4\n            :mode imperative\n            :ARG0 (y / you)\n            :ARG1 (p / person\n                     :ARG0-of (l2 / leave-11\n                                  :mod (j2 / just~e.6)))))", [[0, 8], [9, 13], [14, 18], [19, 20], [21, 26], [27, 30], [31, 35], [36, 40], [40, 41]]], ["# ::snt This opera was written in the 19th century, but we're not sure by whom.\n# ::tokens [\"This\", \"opera\", \"was\", \"written\", \"in\", \"the\", \"19th\", \"century\", \",\", \"but\", \"we\", \"'re\", \"not\", \"sure\", \"by\", \"whom\", \".\"]\n# ::lemmas [\"this\", \"opera\", \"be\", \"write\", \"in\", \"the\", \"19th\", \"century\", \",\", \"but\", \"we\", \"be\", \"not\", \"sure\", \"by\", \"whom\", \".\"]\n# ::alignments 0-1.1.1.1 1-1.1.1 3-1.1 7-1.1.2.1.r 9-1 10-1.2.2 12-1.2.1 13-1.2\n(c / contrast-01~e.9\n   :ARG1 (w / write-01~e.3\n            :ARG1 (o / opera~e.1\n                     :mod (t / this~e.0))\n            :time (d / date-entity\n                     :century~e.7 19))\n   :ARG2 (s / sure-02~e.13\n            :polarity -~e.12\n            :ARG0 (w2 / we~e.10)\n            :ARG1 (p / person\n                     :ARG2-of (c2 / compose-01\n                                  :ARG1 o))))", [[0, 4], [5, 10], [11, 14], [15, 22], [23, 25], [26, 29], [30, 34], [35, 42], [42, 43], [44, 47], [48, 50], [50, 53], [54, 57], [58, 62], [63, 65], [66, 70], [70, 71]]], ["# ::snt He's going to give us one old problem for the test, but which problem isn't clear.\n# ::tokens [\"He\", \"'s\", \"going\", \"to\", \"give\", \"us\", \"one\", \"old\", \"problem\", \"for\", \"the\", \"test\", \",\", \"but\", \"which\", \"problem\", \"is\", \"n't\", \"clear\", \".\"]\n# ::lemmas [\"he\", \"be\", \"go\", \"to\", \"give\", \"we\", \"one\", \"old\", \"problem\", \"for\", \"the\", \"test\", \",\", \"but\", \"which\", \"problem\", \"be\", \"not\", \"clear\", \".\"]\n# ::alignments 0-1.1.1 4-1.1 5-1.1.3 6-1.1.2.1 7-1.1.2.2 8-1.1.2 11-1.1.4 13-1 18-1.2\n(c / contrast-01~e.13\n   :ARG1 (g / give-01~e.4\n            :ARG0 (h / he~e.0)\n            :ARG1 (p / problem~e.8\n                     :quant 1~e.6\n                     :mod (o / old~e.7))\n            :ARG2 (w / we~e.5)\n            :purpose (t / test-01~e.11))\n   :ARG2 (c2 / clear-06~e.18\n             :polarity -\n             :ARG1 p))", [[0, 2], [2, 4], [5, 10], [11, 13], [14, 18], [19, 21], [22, 25], [26, 29], [30, 37], [38, 41], [42, 45], [46, 50], [50, 51], [52, 55], [56, 61], [62, 69], [70, 72], [72, 75], [76, 81], [81, 82]]], ["# ::snt She's reading something. I can't imagine what.\n# ::tokens [\"She\", \"'s\", \"reading\", \"something\", \".\", \"I\", \"ca\", \"n't\", \"imagine\", \"what\", \".\"]\n# ::lemmas [\"she\", \"be\", \"read\", \"something\", \".\", \"i\", \"can\", \"not\", \"imagine\", \"what\", \".\"]\n# ::alignments 0-1.1.1 2-1.1 3-1.1.2 5-1.2.2.1 8-1.2.2\n(m / multi-sentence\n   :snt1 (r / read-01~e.2\n            :ARG0 (s / she~e.0)\n            :ARG1 (s2 / something~e.3))\n   :snt2 (p / possible-01\n            :polarity -\n            :ARG1 (ii / imagine-01~e.8\n                      :ARG0 (ii2 / i~e.5)\n                      :ARG1 (t / thing))))", [[0, 3], [3, 5], [6, 13], [14, 23], [23, 24], [25, 26], [27, 29], [29, 32], [33, 40], [41, 45], [45, 46]]], ["# ::snt If Sam was going somewhere, Sally would know where.\n# ::tokens [\"If\", \"Sam\", \"was\", \"going\", \"somewhere\", \",\", \"Sally\", \"would\", \"know\", \"where\", \".\"]\n# ::lemmas [\"if\", \"Sam\", \"be\", \"go\", \"somewhere\", \",\", \"Sally\", \"would\", \"know\", \"where\", \".\"]\n# ::alignments 1-1.3.1.1.1 3-1.3 4-1.3.2 6-1.1.1.1 8-1\n(k / know-01~e.8\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sally\"~e.6))\n   :ARG1 (l / location)\n   :condition (g / go-02~e.3\n                 :ARG0 (p2 / person\n                           :name (n2 / name\n                                     :op1 \"Sam\"~e.1))\n                 :ARG4 (s / somewhere~e.4)))", [[0, 2], [3, 6], [7, 10], [11, 16], [17, 26], [26, 27], [28, 33], [34, 39], [40, 44], [45, 50], [50, 51]]], ["# ::snt They're going to serve the guests, but it's unclear what.\n# ::tokens [\"They\", \"'re\", \"going\", \"to\", \"serve\", \"the\", \"guests\", \",\", \"but\", \"it\", \"'s\", \"unclear\", \"what\", \".\"]\n# ::lemmas [\"they\", \"be\", \"go\", \"to\", \"serve\", \"the\", \"guest\", \",\", \"but\", \"it\", \"be\", \"unclear\", \"what\", \".\"]\n# ::alignments 0-1.1 4-1 6-1.2 11-1.3\n(s / serve-02~e.4\n   :ARG0 (t / they~e.0)\n   :ARG2 (g / guest~e.6)\n   :concession (c / clear-06~e.11\n                  :polarity -\n                  :ARG1 (t2 / thing)))", [[0, 4], [4, 7], [8, 13], [14, 16], [17, 22], [23, 26], [27, 33], [33, 34], [35, 38], [39, 41], [41, 43], [44, 51], [52, 56], [56, 57]]], ["# ::snt Joan ate dinner but I don't know with whom.\n# ::tokens [\"Joan\", \"ate\", \"dinner\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"with\", \"whom\", \".\"]\n# ::lemmas [\"Joan\", \"eat\", \"dinner\", \"but\", \"i\", \"do\", \"not\", \"know\", \"with\", \"whom\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 2-1.1.2 3-1 4-1.2.2 7-1.2\n(c / contrast-01~e.3\n   :ARG1 (e / eat-01~e.1\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Joan\"~e.0))\n            :ARG1 (d / dinner~e.2))\n   :ARG2 (k / know-01~e.7\n            :polarity -\n            :ARG0 (ii / i~e.4)\n            :ARG1 (p2 / person)))", [[0, 4], [5, 8], [9, 15], [16, 19], [20, 21], [22, 24], [24, 27], [28, 32], [33, 37], [38, 42], [42, 43]]], ["# ::snt I served leek soup.\n# ::tokens [\"I\", \"served\", \"leek\", \"soup\", \".\"]\n# ::lemmas [\"i\", \"serve\", \"leek\", \"soup\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1 3-1.2\n(s / serve-02~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (s2 / soup~e.3\n             :mod (l / leek~e.2)))", [[0, 1], [2, 8], [9, 13], [14, 18], [18, 19]]], ["# ::snt I served my guests leek soup.\n# ::tokens [\"I\", \"served\", \"my\", \"guests\", \"leek\", \"soup\", \".\"]\n# ::lemmas [\"i\", \"serve\", \"my\", \"guest\", \"leek\", \"soup\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.3 4-1.2.1 5-1.2\n(s / serve-02~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (s2 / soup~e.5\n             :mod (l / leek~e.4))\n   :ARG2 (g / guest~e.3\n            :poss ii))", [[0, 1], [2, 8], [9, 11], [12, 18], [19, 23], [24, 28], [28, 29]]], ["# ::snt She served the soup, but I don't know to whom.\n# ::tokens [\"She\", \"served\", \"the\", \"soup\", \",\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"to\", \"whom\", \".\"]\n# ::lemmas [\"she\", \"serve\", \"the\", \"soup\", \",\", \"but\", \"i\", \"do\", \"not\", \"know\", \"to\", \"whom\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 3-1.1.2 5-1 6-1.2.2 9-1.2\n(c / contrast-01~e.5\n   :ARG1 (s / serve-02~e.1\n            :ARG0 (s2 / she~e.0)\n            :ARG1 (s3 / soup~e.3))\n   :ARG2 (k / know-01~e.9\n            :polarity -\n            :ARG0 (ii / i~e.6)\n            :ARG1 (p / person)))", [[0, 3], [4, 10], [11, 14], [15, 19], [19, 20], [21, 24], [25, 26], [27, 29], [29, 32], [33, 37], [38, 40], [41, 45], [45, 46]]], ["# ::snt She served the soup, but I don't know who.\n# ::tokens [\"She\", \"served\", \"the\", \"soup\", \",\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"who\", \".\"]\n# ::lemmas [\"she\", \"serve\", \"the\", \"soup\", \",\", \"but\", \"i\", \"do\", \"not\", \"know\", \"who\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 3-1.1.2 5-1 6-1.2.2 9-1.2\n(c / contrast-01~e.5\n   :ARG1 (s / serve-02~e.1\n            :ARG0 (s2 / she~e.0)\n            :ARG1 (s3 / soup~e.3))\n   :ARG2 (k / know-01~e.9\n            :polarity -\n            :ARG0 (ii / i~e.6)\n            :ARG1 (p / person)))", [[0, 3], [4, 10], [11, 14], [15, 19], [19, 20], [21, 24], [25, 26], [27, 29], [29, 32], [33, 37], [38, 41], [41, 42]]], ["# ::snt She served the students, but I don't know what.\n# ::tokens [\"She\", \"served\", \"the\", \"students\", \",\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"what\", \".\"]\n# ::lemmas [\"she\", \"serve\", \"the\", \"student\", \",\", \"but\", \"i\", \"do\", \"not\", \"know\", \"what\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 3-1.1.2.1 5-1 6-1.2.2 9-1.2\n(c / contrast-01~e.5\n   :ARG1 (s / serve-01~e.1\n            :ARG0 (s2 / she~e.0)\n            :ARG2 (p / person\n                     :ARG0-of (s3 / study-01~e.3)))\n   :ARG2 (k / know-01~e.9\n            :polarity -\n            :ARG0 (ii / i~e.6)\n            :ARG1 (t / thing)))", [[0, 3], [4, 10], [11, 14], [15, 23], [23, 24], [25, 28], [29, 30], [31, 33], [33, 36], [37, 41], [42, 46], [46, 47]]], ["# ::snt She was reading, but I couldn't make out what.\n# ::tokens [\"She\", \"was\", \"reading\", \",\", \"but\", \"I\", \"could\", \"n't\", \"make\", \"out\", \"what\", \".\"]\n# ::lemmas [\"she\", \"be\", \"read\", \",\", \"but\", \"i\", \"could\", \"not\", \"make\", \"out\", \"what\", \".\"]\n# ::alignments 0-1.1.1 2-1.1 4-1 5-1.2.2.1 8-1.2.2\n(c / contrast-01~e.4\n   :ARG1 (r / read-01~e.2\n            :ARG0 (s / she~e.0))\n   :ARG2 (p / possible-01\n            :polarity -\n            :ARG1 (m / make-out-23~e.8\n                     :ARG0 (ii / i~e.5)\n                     :ARG1 (t / thing))))", [[0, 3], [4, 7], [8, 15], [15, 16], [17, 20], [21, 22], [23, 28], [28, 31], [32, 36], [37, 40], [41, 45], [45, 46]]], ["# ::snt The ship sank with a torpedo.\n# ::tokens [\"The\", \"ship\", \"sank\", \"with\", \"a\", \"torpedo\", \".\"]\n# ::lemmas [\"the\", \"ship\", \"sink\", \"with\", \"a\", \"torpedo\", \".\"]\n# ::alignments 1-1.2 2-1 5-1.1\n(s / sink-01~e.2\n   :ARG0 (t / torpedo~e.5)\n   :ARG1 (s2 / ship~e.1))", [[0, 3], [4, 8], [9, 13], [14, 18], [19, 20], [21, 28], [28, 29]]], ["# ::snt They noticed the painting for an hour.\n# ::tokens [\"They\", \"noticed\", \"the\", \"painting\", \"for\", \"an\", \"hour\", \".\"]\n# ::lemmas [\"they\", \"notice\", \"the\", \"painting\", \"for\", \"an\", \"hour\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 6-1.3.2\n(n / notice-01~e.1\n   :ARG0 (t / they~e.0)\n   :ARG1 (p / paint-02~e.3)\n   :duration (t2 / temporal-quantity\n                 :quant 1\n                 :unit (h / hour~e.6)))", [[0, 4], [5, 12], [13, 16], [17, 25], [26, 29], [30, 32], [33, 37], [37, 38]]], ["# ::snt She knew French, but I don't know for whom.\n# ::tokens [\"She\", \"knew\", \"French\", \",\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"for\", \"whom\", \".\"]\n# ::lemmas [\"she\", \"know\", \"French\", \",\", \"but\", \"i\", \"do\", \"not\", \"know\", \"for\", \"whom\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1.1.2.1.1 4-1 5-1.2.2 8-1.2\n(c / contrast-01~e.4\n   :ARG1 (k / know-01~e.1\n            :ARG0 (s / she~e.0)\n            :ARG1 (l / language\n                     :name (n / name\n                              :op1 \"French\"~e.2)))\n   :ARG2 (k2 / know-01~e.8\n             :polarity -\n             :ARG0 (ii / i~e.5)\n             :ARG1 (p / person)))", [[0, 3], [4, 8], [9, 15], [15, 16], [17, 20], [21, 22], [23, 25], [25, 28], [29, 33], [34, 37], [38, 42], [42, 43]]], ["# ::snt Since Jill said Joe had invited Sue, we didn't have to ask who.\n# ::tokens [\"Since\", \"Jill\", \"said\", \"Joe\", \"had\", \"invited\", \"Sue\", \",\", \"we\", \"did\", \"n't\", \"have\", \"to\", \"ask\", \"who\", \".\"]\n# ::lemmas [\"since\", \"Jill\", \"say\", \"Joe\", \"have\", \"invite\", \"Sue\", \",\", \"we\", \"do\", \"not\", \"have\", \"to\", \"ask\", \"who\", \".\"]\n# ::alignments 1-1.4.1.1.1.1 2-1.4.1 3-1.4.1.2.1.1.1 5-1.4.1.2 6-1.4.1.2.2.1.1 8-1.2 13-1.3\n(o / obligate-01\n   :polarity -\n   :ARG1 (w / we~e.8)\n   :ARG2 (a / ask-01~e.13\n            :ARG0 w\n            :ARG1 (p / person))\n   :ARG1-of (c / cause-01\n               :ARG0 (s / say-01~e.2\n                        :ARG0 (p2 / person\n                                  :name (n / name\n                                           :op1 \"Jill\"~e.1))\n                        :ARG1 (ii / invite-01~e.5\n                                  :ARG0 (p3 / person\n                                            :name (n2 / name\n                                                      :op1 \"Joe\"~e.3))\n                                  :ARG1 (p4 / person\n                                            :name (n3 / name\n                                                      :op1 \"Sue\"~e.6))))))", [[0, 5], [6, 10], [11, 15], [16, 19], [20, 23], [24, 31], [32, 35], [35, 36], [37, 39], [40, 43], [43, 46], [47, 51], [52, 54], [55, 58], [59, 62], [62, 63]]], ["# ::snt Because we suspected Joe had given it to Max, we then asked who he had given it to.\n# ::tokens [\"Because\", \"we\", \"suspected\", \"Joe\", \"had\", \"given\", \"it\", \"to\", \"Max\", \",\", \"we\", \"then\", \"asked\", \"who\", \"he\", \"had\", \"given\", \"it\", \"to\", \".\"]\n# ::lemmas [\"because\", \"we\", \"suspect\", \"Joe\", \"have\", \"give\", \"it\", \"to\", \"Max\", \",\", \"we\", \"then\", \"ask\", \"who\", \"he\", \"have\", \"give\", \"it\", \"to\", \".\"]\n# ::alignments 0-1 1-1.1.1 2-1.1 3-1.1.2.1.1.1 5-1.1.2 6-1.1.2.2 8-1.1.2.3.1.1 11-1.2.3 12-1.2 16-1.2.2\n(c / cause-01~e.0\n   :ARG0 (s / suspect-01~e.2\n            :ARG0 (w / we~e.1)\n            :ARG1 (g / give-01~e.5\n                     :ARG0 (p / person\n                              :name (n / name\n                                       :op1 \"Joe\"~e.3))\n                     :ARG1 (ii / it~e.6)\n                     :ARG2 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Max\"~e.8))))\n   :ARG1 (a / ask-01~e.12\n            :ARG0 w\n            :ARG1 (g2 / give-01~e.16\n                      :ARG0 p\n                      :ARG1 ii\n                      :ARG2 p2)\n            :time (t / then~e.11)))", [[0, 7], [8, 10], [11, 20], [21, 24], [25, 28], [29, 34], [35, 37], [38, 40], [41, 44], [44, 45], [46, 48], [49, 53], [54, 59], [60, 63], [64, 66], [67, 70], [71, 76], [77, 79], [80, 82], [82, 83]]], ["# ::snt She didn't talk to one student; I wonder who.\n# ::tokens [\"She\", \"did\", \"n't\", \"talk\", \"to\", \"one\", \"student\", \";\", \"I\", \"wonder\", \"who\", \".\"]\n# ::lemmas [\"she\", \"do\", \"not\", \"talk\", \"to\", \"one\", \"student\", \";\", \"i\", \"wonder\", \"who\", \".\"]\n# ::alignments 0-1.2 3-1 5-1.3.1 6-1.3.2 8-1.4.1.1 9-1.4.1\n(t / talk-01~e.3\n   :polarity -\n   :ARG0 (s / she~e.0)\n   :ARG2 (p / person\n            :quant 1~e.5\n            :ARG0-of (s2 / study-01~e.6))\n   :ARG0-of (c / cause-01\n               :ARG1 (w / wonder-01~e.9\n                        :ARG0 (ii / i~e.8)\n                        :ARG1 (p2 / person\n                                  :domain s))))", [[0, 3], [4, 7], [7, 10], [11, 15], [16, 18], [19, 22], [23, 30], [30, 31], [32, 33], [34, 40], [41, 44], [44, 45]]], ["# ::snt The newspaper has reported that they are about to appoint someone, but I can't remember who.\n# ::tokens [\"The\", \"newspaper\", \"has\", \"reported\", \"that\", \"they\", \"are\", \"about\", \"to\", \"appoint\", \"someone\", \",\", \"but\", \"I\", \"ca\", \"n't\", \"remember\", \"who\", \".\"]\n# ::lemmas [\"the\", \"newspaper\", \"have\", \"report\", \"that\", \"they\", \"be\", \"about\", \"to\", \"appoint\", \"someone\", \",\", \"but\", \"i\", \"can\", \"not\", \"remember\", \"who\", \".\"]\n# ::alignments 1-1.1.1 2-1 3-1.1 7-1.1.2.3 9-1.1.2 10-1.1.2.2 13-1.2.2.1 16-1.2.2\n(h / have-concession-91~e.2\n   :ARG1 (r / report-01~e.3\n            :ARG0 (n / newspaper~e.1)\n            :ARG1 (a / appoint-01~e.9\n                     :ARG0 n\n                     :ARG1 (s / someone~e.10)\n                     :time (a2 / about-to~e.7)))\n   :ARG2 (p / possible-01\n            :polarity -\n            :ARG1 (r2 / remember-01~e.16\n                      :ARG0 (ii / i~e.13)\n                      :ARG1 s)))", [[0, 3], [4, 13], [14, 17], [18, 26], [27, 31], [32, 36], [37, 40], [41, 46], [47, 49], [50, 57], [58, 65], [65, 66], [67, 70], [71, 72], [73, 75], [75, 78], [79, 87], [88, 91], [91, 92]]], ["# ::snt Most columnists claim that a senior White House official has been briefing them.\n# ::tokens [\"Most\", \"columnists\", \"claim\", \"that\", \"a\", \"senior\", \"White\", \"House\", \"official\", \"has\", \"been\", \"briefing\", \"them\", \".\"]\n# ::lemmas [\"most\", \"columnist\", \"claim\", \"that\", \"a\", \"senior\", \"White\", \"House\", \"official\", \"have\", \"be\", \"brief\", \"they\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1 5-1.2.1.1.2.1 6-1.2.1.1.1.1.1 7-1.2.1.1.1.1.2 8-1.2.1.1.2 9-1.2.1.1 11-1.2\n(c / claim-01~e.2\n   :ARG0 (c2 / columnist~e.1\n             :quant (m / most~e.0))\n   :ARG1 (b / brief-01~e.11\n            :ARG0 (p / person\n                     :ARG0-of (h / have-org-role-91~e.9\n                                 :ARG1 (g / government-organization\n                                          :name (n / name\n                                                   :op1 \"White\"~e.6\n                                                   :op2 \"House\"~e.7))\n                                 :ARG2 (o / official~e.8\n                                          :mod (s / senior~e.5))))\n            :ARG1 c2))", [[0, 4], [5, 15], [16, 21], [22, 26], [27, 28], [29, 35], [36, 41], [42, 47], [48, 56], [57, 60], [61, 65], [66, 74], [75, 79], [79, 80]]], ["# ::snt Most columnists claim that a senior White House official has been briefing them, but none will reveal which one has been briefing them.\n# ::tokens [\"Most\", \"columnists\", \"claim\", \"that\", \"a\", \"senior\", \"White\", \"House\", \"official\", \"has\", \"been\", \"briefing\", \"them\", \",\", \"but\", \"none\", \"will\", \"reveal\", \"which\", \"one\", \"has\", \"been\", \"briefing\", \"them\", \".\"]\n# ::lemmas [\"most\", \"columnist\", \"claim\", \"that\", \"a\", \"senior\", \"White\", \"House\", \"official\", \"have\", \"be\", \"brief\", \"they\", \",\", \"but\", \"none\", \"will\", \"reveal\", \"which\", \"one\", \"have\", \"be\", \"brief\", \"they\", \".\"]\n# ::alignments 0-1.1.1.1 1-1.1.1 2-1.1 5-1.1.2.1.1.2.1 6-1.1.2.1.1.1.1.1 7-1.1.2.1.1.1.1.2 8-1.1.2.1.1.2 9-1.1.2.1.1 11-1.1.2 12-1.1.2.2 14-1 17-1.2 22-1.2.3.1\n(c / contrast-01~e.14\n   :ARG1 (c2 / claim-01~e.2\n             :ARG0 (c3 / columnist~e.1\n                       :quant (m / most~e.0))\n             :ARG1 (b / brief-01~e.11\n                      :ARG0 (p / person\n                               :ARG0-of (h / have-org-role-91~e.9\n                                           :ARG1 (g / government-organization\n                                                    :name (n / name\n                                                             :op1 \"White\"~e.6\n                                                             :op2 \"House\"~e.7))\n                                           :ARG2 (o / official~e.8\n                                                    :mod (s / senior~e.5))))\n                      :ARG1 (t / they~e.12)))\n   :ARG2 (r / reveal-01~e.17\n            :polarity -\n            :ARG0 c3\n            :ARG1 (p2 / person\n                      :ARG0-of (b2 / brief-01~e.22\n                                   :ARG1 t))))", [[0, 4], [5, 15], [16, 21], [22, 26], [27, 28], [29, 35], [36, 41], [42, 47], [48, 56], [57, 60], [61, 65], [66, 74], [75, 79], [79, 80], [81, 84], [85, 89], [90, 94], [95, 101], [102, 107], [108, 111], [112, 115], [116, 120], [121, 129], [130, 134], [134, 135]]], ["# ::snt We know how many papers this reviewer has read, but we don't know which ones.\n# ::tokens [\"We\", \"know\", \"how\", \"many\", \"papers\", \"this\", \"reviewer\", \"has\", \"read\", \",\", \"but\", \"we\", \"do\", \"n't\", \"know\", \"which\", \"ones\", \".\"]\n# ::lemmas [\"we\", \"know\", \"how\", \"many\", \"paper\", \"this\", \"reviewer\", \"have\", \"read\", \",\", \"but\", \"we\", \"do\", \"not\", \"know\", \"which\", \"one\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 4-1.1.2.1 5-1.1.2.1.1.1.2 6-1.1.2.1.1.1.1 8-1.1.2.1.1 10-1 14-1.2 16-1.2.3\n(c / contrast-01~e.10\n   :ARG1 (k / know-01~e.1\n            :ARG0 (w / we~e.0)\n            :ARG1 (n / number\n                     :quant-of (p / paper~e.4\n                                  :ARG1-of (r / read-01~e.8\n                                              :ARG0 (p2 / person\n                                                        :ARG0-of (r2 / review-01~e.6)\n                                                        :mod (t / this~e.5))))))\n   :ARG2 (k2 / know-01~e.14\n             :polarity -\n             :ARG0 w\n             :ARG1 (o / one~e.16)))", [[0, 2], [3, 7], [8, 11], [12, 16], [17, 23], [24, 28], [29, 37], [38, 41], [42, 46], [46, 47], [48, 51], [52, 54], [55, 57], [57, 60], [61, 65], [66, 71], [72, 76], [76, 77]]], ["# ::snt Joan said she talked to some students but I don't know who.\n# ::tokens [\"Joan\", \"said\", \"she\", \"talked\", \"to\", \"some\", \"students\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"who\", \".\"]\n# ::lemmas [\"Joan\", \"say\", \"she\", \"talk\", \"to\", \"some\", \"student\", \"but\", \"i\", \"do\", \"not\", \"know\", \"who\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 5-1.2.2.2 6-1.2.2.1 8-1.2.3.2 11-1.2.3\n(s / say-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Joan\"~e.0))\n   :ARG1 (t / talk-01~e.3\n            :ARG0 p\n            :ARG2 (p2 / person\n                      :ARG0-of (s2 / study-01~e.6)\n                      :quant (s3 / some~e.5))\n            :concession-of (k / know-01~e.11\n                              :polarity -\n                              :ARG0 (ii / i~e.8)\n                              :ARG1 p2)))", [[0, 4], [5, 9], [10, 13], [14, 20], [21, 23], [24, 28], [29, 37], [38, 41], [42, 43], [44, 46], [46, 49], [50, 54], [55, 58], [58, 59]]], ["# ::snt John read three of the books but I don't know which ones.\n# ::tokens [\"John\", \"read\", \"three\", \"of\", \"the\", \"books\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"which\", \"ones\", \".\"]\n# ::lemmas [\"John\", \"read\", \"three\", \"of\", \"the\", \"book\", \"but\", \"i\", \"do\", \"not\", \"know\", \"which\", \"one\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 2-1.1.2.1 3-1.1.2.2 5-1.1.2 6-1 7-1.2.2 10-1.2\n(c / contrast-01~e.6\n   :ARG1 (r / read-01~e.1\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"John\"~e.0))\n            :ARG1 (b / book~e.5\n                     :quant 3~e.2\n                     :ARG1-of (ii / include-91~e.3\n                                  :ARG2 (b2 / book))))\n   :ARG2 (k / know-01~e.10\n            :polarity -\n            :ARG0 (ii2 / i~e.7)\n            :ARG1 b2))", [[0, 4], [5, 9], [10, 15], [16, 18], [19, 22], [23, 28], [29, 32], [33, 34], [35, 37], [37, 40], [41, 45], [46, 51], [52, 56], [56, 57]]], ["# ::snt We should put them in the dining room but it's not clear where.\n# ::tokens [\"We\", \"should\", \"put\", \"them\", \"in\", \"the\", \"dining\", \"room\", \"but\", \"it\", \"'s\", \"not\", \"clear\", \"where\", \".\"]\n# ::lemmas [\"we\", \"should\", \"put\", \"they\", \"in\", \"the\", \"dining\", \"room\", \"but\", \"it\", \"be\", \"not\", \"clear\", \"where\", \".\"]\n# ::alignments 0-1.1.1.1 2-1.1.1 3-1.1.1.2 7-1.1.1.3 8-1 11-1.2.1 12-1.2\n(c / contrast-01~e.8\n   :ARG1 (r / recommend-01\n            :ARG1 (p / put-01~e.2\n                     :ARG0 (w / we~e.0)\n                     :ARG1 (t / they~e.3)\n                     :ARG2 (r2 / room~e.7\n                               :location-of (d / dine-01))))\n   :ARG2 (c2 / clear-06~e.12\n             :polarity -~e.11\n             :ARG1 (t2 / thing\n                       :location-of p)))", [[0, 2], [3, 9], [10, 13], [14, 18], [19, 21], [22, 25], [26, 32], [33, 37], [38, 41], [42, 44], [44, 46], [47, 50], [51, 56], [57, 62], [62, 63]]], ["# ::snt We should put them somewhere in the dining room but it's not clear where.\n# ::tokens [\"We\", \"should\", \"put\", \"them\", \"somewhere\", \"in\", \"the\", \"dining\", \"room\", \"but\", \"it\", \"'s\", \"not\", \"clear\", \"where\", \".\"]\n# ::lemmas [\"we\", \"should\", \"put\", \"they\", \"somewhere\", \"in\", \"the\", \"dining\", \"room\", \"but\", \"it\", \"be\", \"not\", \"clear\", \"where\", \".\"]\n# ::alignments 0-1.1.1.1 2-1.1.1 3-1.1.1.2 4-1.1.1.3 8-1.1.1.3.1 9-1 12-1.2.1 13-1.2\n(c / contrast-01~e.9\n   :ARG1 (r / recommend-01\n            :ARG1 (p / put-01~e.2\n                     :ARG0 (w / we~e.0)\n                     :ARG1 (t / they~e.3)\n                     :ARG2 (s / somewhere~e.4\n                              :location (r2 / room~e.8\n                                            :location-of (d / dine-01)))))\n   :ARG2 (c2 / clear-06~e.13\n             :polarity -~e.12\n             :ARG1 (t2 / thing\n                       :location-of p)))", [[0, 2], [3, 9], [10, 13], [14, 18], [19, 28], [29, 31], [32, 35], [36, 42], [43, 47], [48, 51], [52, 54], [54, 56], [57, 60], [61, 66], [67, 72], [72, 73]]], ["# ::snt They were going to meet sometime on Sunday, but the faculty didn't know when they were going to meet.\n# ::tokens [\"They\", \"were\", \"going\", \"to\", \"meet\", \"sometime\", \"on\", \"Sunday\", \",\", \"but\", \"the\", \"faculty\", \"did\", \"n't\", \"know\", \"when\", \"they\", \"were\", \"going\", \"to\", \"meet\", \".\"]\n# ::lemmas [\"they\", \"be\", \"go\", \"to\", \"meet\", \"sometime\", \"on\", \"Sunday\", \",\", \"but\", \"the\", \"faculty\", \"do\", \"not\", \"know\", \"when\", \"they\", \"be\", \"go\", \"to\", \"meet\", \".\"]\n# ::alignments 0-1.1 4-1 5-1.2 7-1.3.1 11-1.4.2 14-1.4 20-1.4.3.1\n(m / meet-03~e.4\n   :ARG0 (t / they~e.0)\n   :time (s / sometime~e.5)\n   :time (d / date-entity\n            :weekday (s2 / sunday~e.7))\n   :concession (k / know-01~e.14\n                  :polarity -\n                  :ARG0 (f / faculty~e.11)\n                  :ARG1 (t2 / time\n                            :time-of (m2 / meet-03~e.20\n                                         :ARG0 t))))", [[0, 4], [5, 9], [10, 15], [16, 18], [19, 23], [24, 32], [33, 35], [36, 42], [42, 43], [44, 47], [48, 51], [52, 59], [60, 63], [63, 66], [67, 71], [72, 76], [77, 81], [82, 86], [87, 92], [93, 95], [96, 100], [100, 101]]], ["# ::snt I don't know who the students John likes are.\n# ::tokens [\"I\", \"do\", \"n't\", \"know\", \"who\", \"the\", \"students\", \"John\", \"likes\", \"are\", \".\"]\n# ::lemmas [\"i\", \"do\", \"not\", \"know\", \"who\", \"the\", \"student\", \"John\", \"like\", \"be\", \".\"]\n# ::alignments 0-1.2 3-1 6-1.3.2 7-1.3.1.1.1.1 8-1.3.1\n(k / know-01~e.3\n   :polarity -\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person\n            :ARG1-of (l / like-01~e.8\n                        :ARG0 (p2 / person\n                                  :name (n / name\n                                           :op1 \"John\"~e.7)))\n            :ARG0-of (s / study-01~e.6)))", [[0, 1], [2, 4], [4, 7], [8, 12], [13, 16], [17, 20], [21, 29], [30, 34], [35, 40], [41, 44], [44, 45]]], ["# ::snt He announced he had eaten the asparagus, but we didn't know which asparagus.\n# ::tokens [\"He\", \"announced\", \"he\", \"had\", \"eaten\", \"the\", \"asparagus\", \",\", \"but\", \"we\", \"did\", \"n't\", \"know\", \"which\", \"asparagus\", \".\"]\n# ::lemmas [\"he\", \"announce\", \"he\", \"have\", \"eat\", \"the\", \"asparagus\", \",\", \"but\", \"we\", \"do\", \"not\", \"know\", \"which\", \"asparagus\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 4-1.1.2 6-1.1.2.2 8-1 9-1.2.2 12-1.2\n(c / contrast-01~e.8\n   :ARG1 (a / announce-01~e.1\n            :ARG0 (h / he~e.0)\n            :ARG1 (e / eat-01~e.4\n                     :ARG0 h\n                     :ARG1 (a2 / asparagus~e.6)))\n   :ARG2 (k / know-01~e.12\n            :polarity -\n            :ARG0 (w / we~e.9)\n            :ARG1 a2))", [[0, 2], [3, 12], [13, 15], [16, 19], [20, 25], [26, 29], [30, 39], [39, 40], [41, 44], [45, 47], [48, 51], [51, 54], [55, 59], [60, 65], [66, 75], [75, 76]]], ["# ::snt She read until midnight, and I wonder what she read.\n# ::tokens [\"She\", \"read\", \"until\", \"midnight\", \",\", \"and\", \"I\", \"wonder\", \"what\", \"she\", \"read\", \".\"]\n# ::lemmas [\"she\", \"read\", \"until\", \"midnight\", \",\", \"and\", \"i\", \"wonder\", \"what\", \"she\", \"read\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1.1.2 3-1.1.2.1 5-1 6-1.2.1 7-1.2 10-1.2.2\n(a / and~e.5\n   :op1 (r / read-01~e.1\n           :ARG0 (s / she~e.0)\n           :time (u / until~e.2\n                    :op1 (m / midnight~e.3)))\n   :op2 (w / wonder-01~e.7\n           :ARG0 (ii / i~e.6)\n           :ARG1 (r2 / read-01~e.10\n                     :ARG0 s\n                     :ARG1 (t / thing))))", [[0, 3], [4, 8], [9, 14], [15, 23], [23, 24], [25, 28], [29, 30], [31, 37], [38, 42], [43, 46], [47, 51], [51, 52]]], ["# ::snt They were eating, and I wonder what they were eating.\n# ::tokens [\"They\", \"were\", \"eating\", \",\", \"and\", \"I\", \"wonder\", \"what\", \"they\", \"were\", \"eating\", \".\"]\n# ::lemmas [\"they\", \"be\", \"eat\", \",\", \"and\", \"i\", \"wonder\", \"what\", \"they\", \"be\", \"eat\", \".\"]\n# ::alignments 0-1.1.1 2-1.1 4-1 5-1.2.1 6-1.2\n(a / and~e.4\n   :op1 (e / eat-01~e.2\n           :ARG0 (t / they~e.0))\n   :op2 (w / wonder-01~e.6\n           :ARG0 (ii / i~e.5)\n           :ARG1 (t2 / thing\n                     :ARG1-of e\n                     :ARG0 t)))", [[0, 4], [5, 9], [10, 16], [16, 17], [18, 21], [22, 23], [24, 30], [31, 35], [36, 40], [41, 45], [46, 52], [52, 53]]], ["# ::snt She found out, and I wonder what.\n# ::tokens [\"She\", \"found\", \"out\", \",\", \"and\", \"I\", \"wonder\", \"what\", \".\"]\n# ::lemmas [\"she\", \"find\", \"out\", \",\", \"and\", \"i\", \"wonder\", \"what\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 4-1 5-1.2.1 6-1.2\n(a / and~e.4\n   :op1 (f / find-out-03~e.1\n           :ARG0 (s / she~e.0))\n   :op2 (w / wonder-01~e.6\n           :ARG0 (ii / i~e.5)\n           :ARG1 (t / thing)))", [[0, 3], [4, 9], [10, 13], [13, 14], [15, 18], [19, 20], [21, 27], [28, 32], [32, 33]]], ["# ::snt They applied yesterday, and I wonder what for.\n# ::tokens [\"They\", \"applied\", \"yesterday\", \",\", \"and\", \"I\", \"wonder\", \"what\", \"for\", \".\"]\n# ::lemmas [\"they\", \"apply\", \"yesterday\", \",\", \"and\", \"i\", \"wonder\", \"what\", \"for\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1.1.2 4-1 5-1.2.1 6-1.2\n(a / and~e.4\n   :op1 (a2 / apply-01~e.1\n            :ARG0 (t / they~e.0)\n            :time (y / yesterday~e.2))\n   :op2 (w / wonder-01~e.6\n           :ARG0 (ii / i~e.5)\n           :ARG1 (t2 / thing\n                     :purpose a2)))", [[0, 4], [5, 12], [13, 22], [22, 23], [24, 27], [28, 29], [30, 36], [37, 41], [42, 45], [45, 46]]], ["# ::snt John is working on War and Peace but I don't know which chapter.\n# ::tokens [\"John\", \"is\", \"working\", \"on\", \"War\", \"and\", \"Peace\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"which\", \"chapter\", \".\"]\n# ::lemmas [\"John\", \"be\", \"work\", \"on\", \"War\", \"and\", \"Peace\", \"but\", \"i\", \"do\", \"not\", \"know\", \"which\", \"chapter\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1 4-1.1.2.2 5-1.1.2.3 6-1.1.2.4 7-1 8-1.2.2 11-1.2 13-1.2.3\n(c / contrast-01~e.7\n   :ARG1 (w / work-01~e.2\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"John\"~e.0))\n            :ARG1 (b / book\n                     :name n\n                     :op1 \"War\"~e.4\n                     :op2 \"and\"~e.5\n                     :op3 \"Peace\"~e.6))\n   :ARG2 (k / know-01~e.11\n            :polarity -\n            :ARG0 (ii / i~e.8)\n            :ARG1 (c2 / chapter~e.13\n                      :mod (a / amr-unknown))))", [[0, 4], [5, 7], [8, 15], [16, 18], [19, 22], [23, 26], [27, 32], [33, 36], [37, 38], [39, 41], [41, 44], [45, 49], [50, 55], [56, 63], [63, 64]]], ["# ::snt She read one of the books but I don't know whose.\n# ::tokens [\"She\", \"read\", \"one\", \"of\", \"the\", \"books\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"whose\", \".\"]\n# ::lemmas [\"she\", \"read\", \"one\", \"of\", \"the\", \"book\", \"but\", \"i\", \"do\", \"not\", \"know\", \"whose\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1.1.2.1 3-1.1.2.2 5-1.1.2 6-1 7-1.2.2 10-1.2 11-1.2.3.1\n(c / contrast-01~e.6\n   :ARG1 (r / read-01~e.1\n            :ARG0 (s / she~e.0)\n            :ARG1 (b / book~e.5\n                     :quant 1~e.2\n                     :ARG1-of (ii / include-91~e.3\n                                  :ARG2 (b2 / book))))\n   :ARG2 (k / know-01~e.10\n            :polarity -\n            :ARG0 (ii2 / i~e.7)\n            :ARG1 (b3 / book\n                      :mod (w / whose~e.11))))", [[0, 3], [4, 8], [9, 12], [13, 15], [16, 19], [20, 25], [26, 29], [30, 31], [32, 34], [34, 37], [38, 42], [43, 48], [48, 49]]], ["# ::snt She talked to several students but I don't know how many.\n# ::tokens [\"She\", \"talked\", \"to\", \"several\", \"students\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"how\", \"many\", \".\"]\n# ::lemmas [\"she\", \"talk\", \"to\", \"several\", \"student\", \"but\", \"i\", \"do\", \"not\", \"know\", \"how\", \"many\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.2 4-1.2.1 6-1.3.2 9-1.3\n(t / talk-01~e.1\n   :ARG0 (s / she~e.0)\n   :ARG2 (p / person\n            :ARG0-of (s2 / study-01~e.4)\n            :quant (s3 / several~e.3))\n   :concession (k / know-01~e.9\n                  :polarity -\n                  :ARG0 (ii / i~e.6)\n                  :ARG1 (n / number\n                           :quant-of (p2 / person\n                                         :ARG0-of (s4 / study-01)))))", [[0, 3], [4, 10], [11, 13], [14, 21], [22, 30], [31, 34], [35, 36], [37, 39], [39, 42], [43, 47], [48, 51], [52, 56], [56, 57]]], ["# ::snt She said she talked to few students, but I don't know how many.\n# ::tokens [\"She\", \"said\", \"she\", \"talked\", \"to\", \"few\", \"students\", \",\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"how\", \"many\", \".\"]\n# ::lemmas [\"she\", \"say\", \"she\", \"talk\", \"to\", \"few\", \"student\", \",\", \"but\", \"i\", \"do\", \"not\", \"know\", \"how\", \"many\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 3-1.1.2 5-1.1.2.2.2 6-1.1.2.2.1 8-1 9-1.2.2 12-1.2 14-1.2.3.2\n(c / contrast-01~e.8\n   :ARG1 (s / say-01~e.1\n            :ARG0 (s2 / she~e.0)\n            :ARG1 (t / talk-01~e.3\n                     :ARG0 s2\n                     :ARG2 (p / person\n                              :ARG0-of (s3 / study-01~e.6)\n                              :quant (f / few~e.5))))\n   :ARG2 (k / know-01~e.12\n            :polarity -\n            :ARG0 (ii / i~e.9)\n            :ARG1 (p2 / person\n                      :ARG0-of (s4 / study-01)\n                      :quant (m / many~e.14))))", [[0, 3], [4, 8], [9, 12], [13, 19], [20, 22], [23, 26], [27, 35], [35, 36], [37, 40], [41, 42], [43, 45], [45, 48], [49, 53], [54, 57], [58, 62], [62, 63]]], ["# ::snt Everyone said they would come but I don't know how many of them.\n# ::tokens [\"Everyone\", \"said\", \"they\", \"would\", \"come\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"how\", \"many\", \"of\", \"them\", \".\"]\n# ::lemmas [\"everyone\", \"say\", \"they\", \"would\", \"come\", \"but\", \"i\", \"do\", \"not\", \"know\", \"how\", \"many\", \"of\", \"they\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1.1.2.1 4-1.1.2 5-1 6-1.2.2 9-1.2\n(c / contrast-01~e.5\n   :ARG1 (s / say-01~e.1\n            :ARG0 (e / everyone~e.0)\n            :ARG1 (c2 / come-01~e.4\n                      :ARG1 (t / they~e.2)))\n   :ARG2 (k / know-01~e.9\n            :polarity -\n            :ARG0 (ii / i~e.6)\n            :ARG1 (n / number\n                     :quant-of t)))", [[0, 8], [9, 13], [14, 18], [19, 24], [25, 29], [30, 33], [34, 35], [36, 38], [38, 41], [42, 46], [47, 50], [51, 55], [56, 58], [59, 63], [63, 64]]], ["# ::snt She was dancing, but I don't know who with.\n# ::tokens [\"She\", \"was\", \"dancing\", \",\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"who\", \"with\", \".\"]\n# ::lemmas [\"she\", \"be\", \"dance\", \",\", \"but\", \"i\", \"do\", \"not\", \"know\", \"who\", \"with\", \".\"]\n# ::alignments 0-1.1.3.1.1 2-1.1.3.1 5-1.1.2 8-1.1\n(h / have-concession-91\n   :ARG1 (k / know-01~e.8\n            :polarity -\n            :ARG0 (ii / i~e.5)\n            :ARG1 (p / person\n                     :accompanier-of (d / dance-01~e.2\n                                        :ARG0 (s / she~e.0)\n                                        :ARG2-of h))))", [[0, 3], [4, 7], [8, 15], [15, 16], [17, 20], [21, 22], [23, 25], [25, 28], [29, 33], [34, 37], [38, 42], [42, 43]]], ["# ::snt Charles was criticized, but I can't remember who by.\n# ::tokens [\"Charles\", \"was\", \"criticized\", \",\", \"but\", \"I\", \"ca\", \"n't\", \"remember\", \"who\", \"by\", \".\"]\n# ::lemmas [\"Charles\", \"be\", \"criticize\", \",\", \"but\", \"i\", \"can\", \"not\", \"remember\", \"who\", \"by\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1 4-1 5-1.2.2.1 8-1.2.2\n(c / contrast-01~e.4\n   :ARG1 (c2 / criticize-01~e.2\n             :ARG1 (p / person\n                      :name (n / name\n                               :op1 \"Charles\"~e.0)))\n   :ARG2 (p2 / possible-01\n             :polarity -\n             :ARG1 (r / remember-01~e.8\n                      :ARG0 (ii / i~e.5)\n                      :ARG1 (p3 / person\n                                :ARG0-of (b / by-oneself)))))", [[0, 7], [8, 11], [12, 22], [22, 23], [24, 27], [28, 29], [30, 32], [32, 35], [36, 44], [45, 48], [49, 51], [51, 52]]], ["# ::snt Charles was criticized by some students, but I can't remember which ones.\n# ::tokens [\"Charles\", \"was\", \"criticized\", \"by\", \"some\", \"students\", \",\", \"but\", \"I\", \"ca\", \"n't\", \"remember\", \"which\", \"ones\", \".\"]\n# ::lemmas [\"Charles\", \"be\", \"criticize\", \"by\", \"some\", \"student\", \",\", \"but\", \"i\", \"can\", \"not\", \"remember\", \"which\", \"one\", \".\"]\n# ::alignments 0-1.1.2.1.1 2-1.1 4-1.1.1.2 5-1.1.1.1 7-1 8-1.2.2.1 11-1.2.2\n(c / contrast-01~e.7\n   :ARG1 (c2 / criticize-01~e.2\n             :ARG0 (p / person\n                      :ARG0-of (s / study-01~e.5)\n                      :quant (s2 / some~e.4))\n             :ARG1 (p2 / person\n                       :name (n / name\n                                :op1 \"Charles\"~e.0)))\n   :ARG2 (p3 / possible-01\n             :polarity -\n             :ARG1 (r / remember-01~e.11\n                      :ARG0 (ii / i~e.8)\n                      :ARG1 c2)))", [[0, 7], [8, 11], [12, 22], [23, 25], [26, 30], [31, 39], [39, 40], [41, 44], [45, 46], [47, 49], [49, 52], [53, 61], [62, 67], [68, 72], [72, 73]]], ["# ::snt Meg is attracted to somebody, but they don't know who.\n# ::tokens [\"Meg\", \"is\", \"attracted\", \"to\", \"somebody\", \",\", \"but\", \"they\", \"do\", \"n't\", \"know\", \"who\", \".\"]\n# ::lemmas [\"Meg\", \"be\", \"attract\", \"to\", \"somebody\", \",\", \"but\", \"they\", \"do\", \"not\", \"know\", \"who\", \".\"]\n# ::alignments 0-1.2.1.1 2-1 4-1.1 7-1.3.2 10-1.3\n(a / attract-01~e.2\n   :ARG0 (s / somebody~e.4)\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Meg\"~e.0))\n   :concession (k / know-01~e.10\n                  :polarity -\n                  :ARG0 (t / they~e.7)\n                  :ARG1 (p2 / person)))", [[0, 3], [4, 6], [7, 16], [17, 19], [20, 28], [28, 29], [30, 33], [34, 38], [39, 41], [41, 44], [45, 49], [50, 53], [53, 54]]], ["# ::snt Meg is attracted to Harry, but they don't know who.\n# ::tokens [\"Meg\", \"is\", \"attracted\", \"to\", \"Harry\", \",\", \"but\", \"they\", \"do\", \"n't\", \"know\", \"who\", \".\"]\n# ::lemmas [\"Meg\", \"be\", \"attract\", \"to\", \"Harry\", \",\", \"but\", \"they\", \"do\", \"not\", \"know\", \"who\", \".\"]\n# ::alignments 0-1.2.1.1 2-1 4-1.1.1.1 7-1.3.2 10-1.3\n(a / attract-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Harry\"~e.4))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Meg\"~e.0))\n   :concession (k / know-01~e.10\n                  :polarity -\n                  :ARG0 (t / they~e.7)\n                  :ARG1 (p3 / person)))", [[0, 3], [4, 6], [7, 16], [17, 19], [20, 25], [25, 26], [27, 30], [31, 35], [36, 38], [38, 41], [42, 46], [47, 50], [50, 51]]], ["# ::snt Meg is attracted to somebody, but they don't know who she.\n# ::tokens [\"Meg\", \"is\", \"attracted\", \"to\", \"somebody\", \",\", \"but\", \"they\", \"do\", \"n't\", \"know\", \"who\", \"she\", \".\"]\n# ::lemmas [\"Meg\", \"be\", \"attract\", \"to\", \"somebody\", \",\", \"but\", \"they\", \"do\", \"not\", \"know\", \"who\", \"she\", \".\"]\n# ::alignments 0-1.2.1.1 2-1 4-1.1 7-1.3.2 10-1.3\n(a / attract-01~e.2\n   :ARG0 (s / somebody~e.4)\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Meg\"~e.0))\n   :concession (k / know-01~e.10\n                  :polarity -\n                  :ARG0 (t / they~e.7)\n                  :ARG1 (p2 / person\n                            :domain p)))", [[0, 3], [4, 6], [7, 16], [17, 19], [20, 28], [28, 29], [30, 33], [34, 38], [39, 41], [41, 44], [45, 49], [50, 53], [54, 57], [57, 58]]], ["# ::snt That certain countries would vote against the resolution has been widely reported, but I'm not sure which ones.\n# ::tokens [\"That\", \"certain\", \"countries\", \"would\", \"vote\", \"against\", \"the\", \"resolution\", \"has\", \"been\", \"widely\", \"reported\", \",\", \"but\", \"I\", \"'m\", \"not\", \"sure\", \"which\", \"ones\", \".\"]\n# ::lemmas [\"that\", \"certain\", \"country\", \"would\", \"vote\", \"against\", \"the\", \"resolution\", \"have\", \"be\", \"widely\", \"report\", \",\", \"but\", \"i\", \"be\", \"not\", \"sure\", \"which\", \"one\", \".\"]\n# ::alignments 1-1.1.1.1.1 2-1.1.1.1 4-1.1.1 5-1.1.1.2 7-1.1.1.2.1 10-1.1.2 11-1.1 13-1 14-1.2.2 16-1.2.1 17-1.2 19-1.2.3\n(c / contrast-01~e.13\n   :ARG1 (r / report-01~e.11\n            :ARG1 (v / vote-01~e.4\n                     :ARG0 (c2 / country~e.2\n                               :mod (c3 / certain~e.1))\n                     :ARG1 (a / against~e.5\n                              :op1 (r2 / resolution~e.7)))\n            :manner (w / wide~e.10))\n   :ARG2 (s / sure-02~e.17\n            :polarity -~e.16\n            :ARG0 (ii / i~e.14)\n            :ARG1 (o / one~e.19)))", [[0, 4], [5, 12], [13, 22], [23, 28], [29, 33], [34, 41], [42, 45], [46, 56], [57, 60], [61, 65], [66, 72], [73, 81], [81, 82], [83, 86], [87, 88], [88, 90], [91, 94], [95, 99], [100, 105], [106, 110], [110, 111]]], ["# ::snt The administration has issued a statement that it is willing to meet with one of the student groups, but I'm not sure which one.\n# ::tokens [\"The\", \"administration\", \"has\", \"issued\", \"a\", \"statement\", \"that\", \"it\", \"is\", \"willing\", \"to\", \"meet\", \"with\", \"one\", \"of\", \"the\", \"student\", \"groups\", \",\", \"but\", \"I\", \"'m\", \"not\", \"sure\", \"which\", \"one\", \".\"]\n# ::lemmas [\"the\", \"administration\", \"have\", \"issue\", \"a\", \"statement\", \"that\", \"it\", \"be\", \"willing\", \"to\", \"meet\", \"with\", \"one\", \"of\", \"the\", \"student\", \"group\", \",\", \"but\", \"i\", \"be\", \"not\", \"sure\", \"which\", \"one\", \".\"]\n# ::alignments 1-1.2.1.1 2-1 5-1.2 9-1.2.2 11-1.2.2.2 13-1.1.3 14-1.1.3.1 16-1.1.3.1.1.1.1 17-1.1.3.1.1 20-1.1.2 22-1.1.1 23-1.1\n(h / have-concession-91~e.2\n   :ARG1 (s / sure-02~e.23\n            :polarity -~e.22\n            :ARG0 (ii / i~e.20)\n            :ARG1 (o / one~e.13\n                     :ARG1-of (ii2 / include-91~e.14\n                                   :ARG2 (g / group~e.17\n                                            :consist-of (p / person\n                                                           :ARG0-of (s2 / study-01~e.16))))))\n   :ARG2 (s3 / state-01~e.5\n             :ARG0 (g2 / government-organization\n                       :ARG0-of (a / administrate-01~e.1))\n             :ARG1 (w / will-02~e.9\n                      :ARG0 g2\n                      :ARG1 (m / meet-03~e.11\n                               :ARG0 g2\n                               :ARG1 o))))", [[0, 3], [4, 18], [19, 22], [23, 29], [30, 31], [32, 41], [42, 46], [47, 49], [50, 52], [53, 60], [61, 63], [64, 68], [69, 73], [74, 77], [78, 80], [81, 84], [85, 92], [93, 99], [99, 100], [101, 104], [105, 106], [106, 108], [109, 112], [113, 117], [118, 123], [124, 127], [127, 128]]], ["# ::snt That certain countries would vote against the resolution has been widely reported, but I'm not sure which ones.\n# ::tokens [\"That\", \"certain\", \"countries\", \"would\", \"vote\", \"against\", \"the\", \"resolution\", \"has\", \"been\", \"widely\", \"reported\", \",\", \"but\", \"I\", \"'m\", \"not\", \"sure\", \"which\", \"ones\", \".\"]\n# ::lemmas [\"that\", \"certain\", \"country\", \"would\", \"vote\", \"against\", \"the\", \"resolution\", \"have\", \"be\", \"widely\", \"report\", \",\", \"but\", \"i\", \"be\", \"not\", \"sure\", \"which\", \"one\", \".\"]\n# ::alignments 1-1.1.1.1.1 2-1.1.1.1 4-1.1.1 5-1.1.1.2 7-1.1.1.2.1 10-1.1.2 11-1.1 13-1 14-1.2.2 16-1.2.1 17-1.2 19-1.2.3\n(c / contrast-01~e.13\n   :ARG1 (r / report-01~e.11\n            :ARG1 (v / vote-01~e.4\n                     :ARG0 (c2 / country~e.2\n                               :mod (c3 / certain~e.1))\n                     :ARG1 (a / against~e.5\n                              :op1 (r2 / resolution~e.7)))\n            :manner (w / wide~e.10))\n   :ARG2 (s / sure-02~e.17\n            :polarity -~e.16\n            :ARG0 (ii / i~e.14)\n            :ARG1 (o / one~e.19)))", [[0, 4], [5, 12], [13, 22], [23, 28], [29, 33], [34, 41], [42, 45], [46, 56], [57, 60], [61, 65], [66, 72], [73, 81], [81, 82], [83, 86], [87, 88], [88, 90], [91, 94], [95, 99], [100, 105], [106, 110], [110, 111]]], ["# ::snt The administration has issued a statement that it is willing to meet with one of the student groups, but I'm not sure which one.\n# ::tokens [\"The\", \"administration\", \"has\", \"issued\", \"a\", \"statement\", \"that\", \"it\", \"is\", \"willing\", \"to\", \"meet\", \"with\", \"one\", \"of\", \"the\", \"student\", \"groups\", \",\", \"but\", \"I\", \"'m\", \"not\", \"sure\", \"which\", \"one\", \".\"]\n# ::lemmas [\"the\", \"administration\", \"have\", \"issue\", \"a\", \"statement\", \"that\", \"it\", \"be\", \"willing\", \"to\", \"meet\", \"with\", \"one\", \"of\", \"the\", \"student\", \"group\", \",\", \"but\", \"i\", \"be\", \"not\", \"sure\", \"which\", \"one\", \".\"]\n# ::alignments 1-1.2.1.1 2-1 5-1.2 9-1.2.2 11-1.2.2.2 13-1.1.3 14-1.1.3.1 16-1.1.3.1.1.1.1 17-1.1.3.1.1 20-1.1.2 22-1.1.1 23-1.1\n(h / have-concession-91~e.2\n   :ARG1 (s / sure-02~e.23\n            :polarity -~e.22\n            :ARG0 (ii / i~e.20)\n            :ARG1 (o / one~e.13\n                     :ARG1-of (ii2 / include-91~e.14\n                                   :ARG2 (g / group~e.17\n                                            :consist-of (p / person\n                                                           :ARG0-of (s2 / study-01~e.16))))))\n   :ARG2 (s3 / state-01~e.5\n             :ARG0 (g2 / government-organization\n                       :ARG0-of (a / administrate-01~e.1))\n             :ARG1 (w / will-02~e.9\n                      :ARG0 g2\n                      :ARG1 (m / meet-03~e.11\n                               :ARG0 g2\n                               :ARG1 o))))", [[0, 3], [4, 18], [19, 22], [23, 29], [30, 31], [32, 41], [42, 46], [47, 49], [50, 52], [53, 60], [61, 63], [64, 68], [69, 73], [74, 77], [78, 80], [81, 84], [85, 92], [93, 99], [99, 100], [101, 104], [105, 106], [106, 108], [109, 112], [113, 117], [118, 123], [124, 127], [127, 128]]], ["# ::snt What circumstances will we use force under?\n# ::tokens [\"What\", \"circumstances\", \"will\", \"we\", \"use\", \"force\", \"under\", \"?\"]\n# ::lemmas [\"what\", \"circumstance\", \"will\", \"we\", \"use\", \"force\", \"under\", \"?\"]\n# ::alignments 1-1.3 3-1.1 4-1 5-1.2\n(u / use-01~e.4\n   :ARG0 (w / we~e.3)\n   :ARG1 (f / force~e.5)\n   :prep-under (c / circumstance~e.1\n                  :mod (a / amr-unknown)))", [[0, 4], [5, 18], [19, 23], [24, 26], [27, 30], [31, 36], [37, 42], [42, 43]]], ["# ::snt What sense is this theory right in?\n# ::tokens [\"What\", \"sense\", \"is\", \"this\", \"theory\", \"right\", \"in\", \"?\"]\n# ::lemmas [\"what\", \"sense\", \"be\", \"this\", \"theory\", \"right\", \"in\", \"?\"]\n# ::alignments 1-1 3-1.1.1 4-1.1 5-1.3\n(s / sense-02~e.1\n   :ARG1 (t / theory~e.4\n            :mod (t2 / this~e.3))\n   :ARG2 (a / amr-unknown)\n   :mod (r / right~e.5))", [[0, 4], [5, 10], [11, 13], [14, 18], [19, 25], [26, 31], [32, 34], [34, 35]]], ["# ::snt We are willing to use force under certain circumstances, but we will not say in advance which ones,.\n# ::tokens [\"We\", \"are\", \"willing\", \"to\", \"use\", \"force\", \"under\", \"certain\", \"circumstances\", \",\", \"but\", \"we\", \"will\", \"not\", \"say\", \"in\", \"advance\", \"which\", \"ones\", \",\", \".\"]\n# ::lemmas [\"we\", \"be\", \"willing\", \"to\", \"use\", \"force\", \"under\", \"certain\", \"circumstance\", \",\", \"but\", \"we\", \"will\", \"not\", \"say\", \"in\", \"advance\", \"which\", \"one\", \",\", \".\"]\n# ::alignments 0-1.1.1 4-1.1.2 5-1.1.2.2 7-1.1.2.3.1 8-1.1.2.3 10-1 12-1.1 13-1.2.1 14-1.2 18-1.2.3.1\n(c / contrast-01~e.10\n   :ARG1 (w / will-02~e.12\n            :ARG0 (w2 / we~e.0)\n            :ARG1 (u / use-01~e.4\n                     :ARG0 w2\n                     :ARG1 (f / force~e.5)\n                     :time (c2 / circumstance~e.8\n                               :mod (c3 / certain~e.7))))\n   :ARG2 (s / say-01~e.14\n            :polarity -~e.13\n            :ARG0 w2\n            :ARG1 (a / amr-unknown\n                     :mod (o / one~e.18))\n            :ARG1-of (ii / in-advance-04)))", [[0, 2], [3, 6], [7, 14], [15, 17], [18, 21], [22, 27], [28, 33], [34, 41], [42, 55], [55, 56], [57, 60], [61, 63], [64, 68], [69, 72], [73, 76], [77, 79], [80, 87], [88, 93], [94, 98], [98, 99], [99, 100]]], ["# ::snt This theory is surely right in some sense; it's just not clear which.\n# ::tokens [\"This\", \"theory\", \"is\", \"surely\", \"right\", \"in\", \"some\", \"sense\", \";\", \"it\", \"'s\", \"just\", \"not\", \"clear\", \"which\", \".\"]\n# ::lemmas [\"this\", \"theory\", \"be\", \"surely\", \"right\", \"in\", \"some\", \"sense\", \";\", \"it\", \"be\", \"just\", \"not\", \"clear\", \"which\", \".\"]\n# ::alignments 0-1.1.1.1 1-1.1.1 3-1.1.2 4-1.1 6-1.1.3.1 7-1.1.3 8-1 11-1.3 12-1.2.1 13-1.2\n(a / and~e.8\n   :op1 (r / right-06~e.4\n           :ARG1 (t / theory~e.1\n                    :mod (t2 / this~e.0))\n           :ARG1-of (s / sure-02~e.3)\n           :mod (s2 / sense~e.7\n                    :mod (s3 / some~e.6)))\n   :op2 (c / clear-06~e.13\n           :polarity -~e.12\n           :ARG1 (t3 / thing\n                     :ARG2-of r))\n   :mod (j / just~e.11))", [[0, 4], [5, 11], [12, 14], [15, 21], [22, 27], [28, 30], [31, 35], [36, 41], [41, 42], [43, 45], [45, 47], [48, 52], [53, 56], [57, 62], [63, 68], [68, 69]]], ["# ::snt They persuaded Kennedy and some other senator to jointly sponsor the legislation, but I can't remember which one.\n# ::tokens [\"They\", \"persuaded\", \"Kennedy\", \"and\", \"some\", \"other\", \"senator\", \"to\", \"jointly\", \"sponsor\", \"the\", \"legislation\", \",\", \"but\", \"I\", \"ca\", \"n't\", \"remember\", \"which\", \"one\", \".\"]\n# ::lemmas [\"they\", \"persuade\", \"Kennedy\", \"and\", \"some\", \"other\", \"senator\", \"to\", \"jointly\", \"sponsor\", \"the\", \"legislation\", \",\", \"but\", \"i\", \"can\", \"not\", \"remember\", \"which\", \"one\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1.1.2.1.1.1 3-1.1.2 4-1.1.2.2.2 5-1.1.2.2.1 6-1.1.2.2.3.1 8-1.1.3.3 9-1.1.3 11-1.1.3.2 13-1 14-1.2.2.1 17-1.2.2 19-1.2.2.2\n(c / contrast-01~e.13\n   :ARG1 (p / persuade-01~e.1\n            :ARG0 (t / they~e.0)\n            :ARG1 (a / and~e.3\n                     :op1 (p2 / person\n                              :name (n / name\n                                       :op1 \"Kennedy\"~e.2))\n                     :op2 (p3 / person\n                              :mod (o / other~e.5)\n                              :mod (s / some~e.4)\n                              :ARG0-of (h / have-org-role-91\n                                          :ARG2 (s2 / senator~e.6))))\n            :ARG2 (s3 / sponsor-01~e.9\n                      :ARG0 a\n                      :ARG1 (l / legislation~e.11)\n                      :manner (j / joint~e.8)))\n   :ARG2 (p4 / possible-01\n             :polarity -\n             :ARG1 (r / remember-01~e.17\n                      :ARG0 (ii / i~e.14)\n                      :ARG1 (o2 / one~e.19))))", [[0, 4], [5, 14], [15, 22], [23, 26], [27, 31], [32, 37], [38, 45], [46, 48], [49, 56], [57, 64], [65, 68], [69, 80], [80, 81], [82, 85], [86, 87], [88, 90], [90, 93], [94, 102], [103, 108], [109, 112], [112, 113]]], ["# ::snt It has been determined that somebody will be appointed; it's just not clear yet who.\n# ::tokens [\"It\", \"has\", \"been\", \"determined\", \"that\", \"somebody\", \"will\", \"be\", \"appointed\", \";\", \"it\", \"'s\", \"just\", \"not\", \"clear\", \"yet\", \"who\", \".\"]\n# ::lemmas [\"it\", \"have\", \"be\", \"determine\", \"that\", \"somebody\", \"will\", \"be\", \"appoint\", \";\", \"it\", \"be\", \"just\", \"not\", \"clear\", \"yet\", \"who\", \".\"]\n# ::alignments 3-1.1 5-1.1.1.1 8-1.1.1 12-1.2.3 13-1.2.1 14-1.2 15-1.2.4\n(m / multi-sentence\n   :snt1 (d / determine-01~e.3\n            :ARG1 (a / appoint-01~e.8\n                     :ARG1 (s / somebody~e.5)))\n   :snt2 (c / clear-06~e.14\n            :polarity -~e.13\n            :ARG1 (p / person)\n            :mod (j / just~e.12)\n            :time (y / yet~e.15)))", [[0, 2], [3, 6], [7, 11], [12, 22], [23, 27], [28, 36], [37, 41], [42, 44], [45, 54], [54, 55], [56, 58], [58, 60], [61, 65], [66, 69], [70, 75], [76, 79], [80, 83], [83, 84]]], ["# ::snt Sally asked if somebody was going to fail Syntax One, but I can't remember who.\n# ::tokens [\"Sally\", \"asked\", \"if\", \"somebody\", \"was\", \"going\", \"to\", \"fail\", \"Syntax\", \"One\", \",\", \"but\", \"I\", \"ca\", \"n't\", \"remember\", \"who\", \".\"]\n# ::lemmas [\"Sally\", \"ask\", \"if\", \"somebody\", \"be\", \"go\", \"to\", \"fail\", \"Syntax\", \"One\", \",\", \"but\", \"i\", \"can\", \"not\", \"remember\", \"who\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 3-1.1.2.1.1 7-1.1.2.1 8-1.1.2.1.2.1.1 9-1.1.2.1.2.1.2 11-1 12-1.2.2.1 15-1.2.2\n(c / contrast-01~e.11\n   :ARG1 (a / ask-01~e.1\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Sally\"~e.0))\n            :ARG1 (t / truth-value\n                     :polarity-of (f / fail-01~e.7\n                                     :ARG1 (s / somebody~e.3)\n                                     :ARG2 (p2 / product\n                                               :name (n2 / name\n                                                         :op1 \"Syntax\"~e.8\n                                                         :op2 \"One\"~e.9)))))\n   :ARG2 (p3 / possible-01\n             :polarity -\n             :ARG1 (r / remember-01~e.15\n                      :ARG0 (ii / i~e.12)\n                      :ARG1 s)))", [[0, 5], [6, 11], [12, 14], [15, 23], [24, 27], [28, 33], [34, 36], [37, 41], [42, 48], [49, 52], [52, 53], [54, 57], [58, 59], [60, 62], [62, 65], [66, 74], [75, 78], [78, 79]]], ["# ::snt Why is Sandy wondering whether there will be students who have to drop the class?\n# ::tokens [\"Why\", \"is\", \"Sandy\", \"wondering\", \"whether\", \"there\", \"will\", \"be\", \"students\", \"who\", \"have\", \"to\", \"drop\", \"the\", \"class\", \"?\"]\n# ::lemmas [\"why\", \"be\", \"Sandy\", \"wonder\", \"whether\", \"there\", \"will\", \"be\", \"student\", \"who\", \"have\", \"to\", \"drop\", \"the\", \"class\", \"?\"]\n# ::alignments 2-1.1.1.1 3-1 8-1.2.1.1.1 12-1.2.1.2 14-1.2.1.2.2\n(w / wonder-01~e.3\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sandy\"~e.2))\n   :ARG1 (t / truth-value\n            :polarity-of (o / obligate-01\n                            :ARG1 (p2 / person\n                                      :ARG0-of (s / study-01~e.8))\n                            :ARG2 (d / drop-05~e.12\n                                     :ARG0 p2\n                                     :ARG1 (c / class~e.14))))\n   :ARG1-of (c2 / cause-01\n                :ARG0 (a / amr-unknown)))", [[0, 3], [4, 6], [7, 12], [13, 22], [23, 30], [31, 36], [37, 41], [42, 44], [45, 53], [54, 57], [58, 62], [63, 65], [66, 70], [71, 74], [75, 80], [80, 81]]], ["# ::snt That certain countries would vote against the resolution has been widely reported.\n# ::tokens [\"That\", \"certain\", \"countries\", \"would\", \"vote\", \"against\", \"the\", \"resolution\", \"has\", \"been\", \"widely\", \"reported\", \".\"]\n# ::lemmas [\"that\", \"certain\", \"country\", \"would\", \"vote\", \"against\", \"the\", \"resolution\", \"have\", \"be\", \"widely\", \"report\", \".\"]\n# ::alignments 1-1.1.1.1 2-1.1.1 4-1.1 5-1.1.2 7-1.1.2.1 10-1.2 11-1\n(r / report-01~e.11\n   :ARG1 (v / vote-01~e.4\n            :ARG0 (c / country~e.2\n                     :mod (c2 / certain~e.1))\n            :ARG1 (a / against~e.5\n                     :op1 (r2 / resolution~e.7)))\n   :manner (w / wide~e.10))", [[0, 4], [5, 12], [13, 22], [23, 28], [29, 33], [34, 41], [42, 45], [46, 56], [57, 60], [61, 65], [66, 72], [73, 81], [81, 82]]], ["# ::snt Sandy was trying to work out which students would be able to solve a problem, but she wouldn't tell us which one.\n# ::tokens [\"Sandy\", \"was\", \"trying\", \"to\", \"work\", \"out\", \"which\", \"students\", \"would\", \"be\", \"able\", \"to\", \"solve\", \"a\", \"problem\", \",\", \"but\", \"she\", \"would\", \"n't\", \"tell\", \"us\", \"which\", \"one\", \".\"]\n# ::lemmas [\"Sandy\", \"be\", \"try\", \"to\", \"work\", \"out\", \"which\", \"student\", \"would\", \"be\", \"able\", \"to\", \"solve\", \"a\", \"problem\", \",\", \"but\", \"she\", \"would\", \"not\", \"tell\", \"we\", \"which\", \"one\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1 4-1.1.2 7-1.1.2.2.1.1.1 12-1.1.2.2.1 14-1.1.2.2.1.2 16-1 20-1.2 21-1.2.4\n(c / contrast-01~e.16\n   :ARG1 (t / try-01~e.2\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Sandy\"~e.0))\n            :ARG1 (w / work-out-02~e.4\n                     :ARG0 p\n                     :ARG1 (p2 / possible-01\n                               :ARG1 (s / solve-01~e.12\n                                        :ARG0 (p3 / person\n                                                  :ARG0-of (s2 / study-01~e.7))\n                                        :ARG1 (p4 / problem~e.14)))))\n   :ARG2 (t2 / tell-01~e.20\n             :polarity -\n             :ARG0 p\n             :ARG1 (p5 / person\n                       :ARG1-of (ii / include-91\n                                    :ARG2 p))\n             :ARG2 (w2 / we~e.21)))", [[0, 5], [6, 9], [10, 16], [17, 19], [20, 24], [25, 28], [29, 34], [35, 43], [44, 49], [50, 52], [53, 57], [58, 60], [61, 66], [67, 68], [69, 76], [76, 77], [78, 81], [82, 85], [86, 91], [91, 94], [95, 99], [100, 102], [103, 108], [109, 112], [112, 113]]], ["# ::snt That Tom will win is likely, but it's not clear which race.\n# ::tokens [\"That\", \"Tom\", \"will\", \"win\", \"is\", \"likely\", \",\", \"but\", \"it\", \"'s\", \"not\", \"clear\", \"which\", \"race\", \".\"]\n# ::lemmas [\"that\", \"Tom\", \"will\", \"win\", \"be\", \"likely\", \",\", \"but\", \"it\", \"be\", \"not\", \"clear\", \"which\", \"race\", \".\"]\n# ::alignments 1-1.1.1.1.1.1 3-1.1.1 5-1.1 7-1 10-1.2.1 11-1.2 13-1.2.2\n(c / contrast-01~e.7\n   :ARG1 (l / likely-01~e.5\n            :ARG1 (w / win-01~e.3\n                     :ARG0 (p / person\n                              :name (n / name\n                                       :op1 \"Tom\"~e.1))))\n   :ARG2 (c2 / clear-06~e.11\n             :polarity -~e.10\n             :ARG1 (r / race-02~e.13)))", [[0, 4], [5, 8], [9, 13], [14, 17], [18, 20], [21, 27], [27, 28], [29, 32], [33, 35], [35, 37], [38, 41], [42, 47], [48, 53], [54, 58], [58, 59]]], ["# ::snt It's likely that Tom will win, but it's not clear which race.\n# ::tokens [\"It\", \"'s\", \"likely\", \"that\", \"Tom\", \"will\", \"win\", \",\", \"but\", \"it\", \"'s\", \"not\", \"clear\", \"which\", \"race\", \".\"]\n# ::lemmas [\"it\", \"be\", \"likely\", \"that\", \"Tom\", \"will\", \"win\", \",\", \"but\", \"it\", \"be\", \"not\", \"clear\", \"which\", \"race\", \".\"]\n# ::alignments 2-1.1 4-1.1.1.1.1.1 6-1.1.1 8-1 11-1.2.1 12-1.2 14-1.2.2\n(c / contrast-01~e.8\n   :ARG1 (l / likely-01~e.2\n            :ARG1 (w / win-01~e.6\n                     :ARG0 (p / person\n                              :name (n / name\n                                       :op1 \"Tom\"~e.4))))\n   :ARG2 (c2 / clear-06~e.12\n             :polarity -~e.11\n             :ARG1 (r / race-02~e.14)))", [[0, 2], [2, 4], [5, 11], [12, 16], [17, 20], [21, 25], [26, 29], [29, 30], [31, 34], [35, 37], [37, 39], [40, 43], [44, 49], [50, 55], [56, 60], [60, 61]]], ["# ::snt Bob found a plumber to fix the sink but it's not clear what with.\n# ::tokens [\"Bob\", \"found\", \"a\", \"plumber\", \"to\", \"fix\", \"the\", \"sink\", \"but\", \"it\", \"'s\", \"not\", \"clear\", \"what\", \"with\", \".\"]\n# ::lemmas [\"Bob\", \"find\", \"a\", \"plumber\", \"to\", \"fix\", \"the\", \"sink\", \"but\", \"it\", \"be\", \"not\", \"clear\", \"what\", \"with\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 3-1.1.2 5-1.1.3 7-1.1.3.2 8-1 11-1.2.1 12-1.2\n(c / contrast-01~e.8\n   :ARG1 (f / find-01~e.1\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Bob\"~e.0))\n            :ARG1 (p2 / plumber~e.3)\n            :purpose (f2 / fix-02~e.5\n                         :ARG0 p\n                         :ARG1 (s / sink~e.7)))\n   :ARG2 (c2 / clear-06~e.12\n             :polarity -~e.11\n             :ARG1 (a / amr-unknown)))", [[0, 3], [4, 9], [10, 11], [12, 19], [20, 22], [23, 26], [27, 30], [31, 35], [36, 39], [40, 42], [42, 44], [45, 48], [49, 54], [55, 59], [60, 64], [64, 65]]], ["# ::snt Sandy is very anxious to see which students will be able to solve the homework problem, but she won't say how.\n# ::tokens [\"Sandy\", \"is\", \"very\", \"anxious\", \"to\", \"see\", \"which\", \"students\", \"will\", \"be\", \"able\", \"to\", \"solve\", \"the\", \"homework\", \"problem\", \",\", \"but\", \"she\", \"wo\", \"n't\", \"say\", \"how\", \".\"]\n# ::lemmas [\"Sandy\", \"be\", \"very\", \"anxious\", \"to\", \"see\", \"which\", \"student\", \"will\", \"be\", \"able\", \"to\", \"solve\", \"the\", \"homework\", \"problem\", \",\", \"but\", \"she\", \"will\", \"not\", \"say\", \"how\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1.2 3-1.1 5-1.1.3 7-1.1.3.2.1.1.1 12-1.1.3.2.1 14-1.1.3.2.1.2.1 15-1.1.3.2.1.2 17-1 21-1.2\n(c / contrast-01~e.17\n   :ARG1 (a / anxious~e.3\n            :domain (p / person\n                       :name (n / name\n                                :op1 \"Sandy\"~e.0))\n            :degree (v / very~e.2)\n            :purpose (s / see-01~e.5\n                        :ARG0 p\n                        :ARG1 (p2 / possible-01\n                                  :ARG1 (s2 / solve-01~e.12\n                                            :ARG0 (p3 / person\n                                                      :ARG0-of (s3 / study-01~e.7))\n                                            :ARG1 (p4 / problem~e.15\n                                                      :topic (h / homework~e.14))))))\n   :ARG2 (s4 / say-01~e.21\n             :polarity -\n             :ARG0 p\n             :ARG1 s2))", [[0, 5], [6, 8], [9, 13], [14, 21], [22, 24], [25, 28], [29, 34], [35, 43], [44, 48], [49, 51], [52, 56], [57, 59], [60, 65], [66, 69], [70, 78], [79, 86], [86, 87], [88, 91], [92, 95], [96, 98], [98, 101], [102, 105], [106, 109], [109, 110]]], ["# ::snt Clinton is anxious to find out which budget dilemmas Panetta would be willing to tackle, but he won't say how.\n# ::tokens [\"Clinton\", \"is\", \"anxious\", \"to\", \"find\", \"out\", \"which\", \"budget\", \"dilemmas\", \"Panetta\", \"would\", \"be\", \"willing\", \"to\", \"tackle\", \",\", \"but\", \"he\", \"wo\", \"n't\", \"say\", \"how\", \".\"]\n# ::lemmas [\"Clinton\", \"be\", \"anxious\", \"to\", \"find\", \"out\", \"which\", \"budget\", \"dilemmas\", \"Panetta\", \"would\", \"be\", \"willing\", \"to\", \"tackle\", \",\", \"but\", \"he\", \"will\", \"not\", \"say\", \"how\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1 4-1.1.2 7-1.1.2.2.1 8-1.1.2.2 9-1.1.2.2.2.1.1.1 14-1.1.2.2.2 16-1 18-1.1.2.2.2.2 20-1.2\n(c / contrast-01~e.16\n   :ARG1 (a / anxious~e.2\n            :domain (p / person\n                       :name (n / name\n                                :op1 \"Clinton\"~e.0))\n            :purpose (f / find-out-03~e.4\n                        :ARG0 p\n                        :ARG1 (d / dilemma~e.8\n                                 :topic (b / budget~e.7)\n                                 :ARG1-of (t / tackle-01~e.14\n                                             :ARG0 (p2 / person\n                                                       :name (n2 / name\n                                                                 :op1 \"Panetta\"~e.9))\n                                             :ARG1-of (w / will-02~e.18\n                                                         :ARG0 p2)))))\n   :ARG2 (s / say-01~e.20\n            :polarity -\n            :ARG0 p\n            :ARG1 (t2 / thing\n                      :manner-of t)))", [[0, 7], [8, 10], [11, 18], [19, 21], [22, 26], [27, 30], [31, 36], [37, 43], [44, 52], [53, 60], [61, 66], [67, 69], [70, 77], [78, 80], [81, 87], [87, 88], [89, 92], [93, 95], [96, 98], [98, 101], [102, 105], [106, 109], [109, 110]]], ["# ::snt We don't know with whom she's been dancing.\n# ::tokens [\"We\", \"do\", \"n't\", \"know\", \"with\", \"whom\", \"she\", \"'s\", \"been\", \"dancing\", \".\"]\n# ::lemmas [\"we\", \"do\", \"not\", \"know\", \"with\", \"whom\", \"she\", \"be\", \"be\", \"dance\", \".\"]\n# ::alignments 0-1.2 3-1 6-1.3.1.1 9-1.3.1\n(k / know-01~e.3\n   :polarity -\n   :ARG0 (w / we~e.0)\n   :ARG1 (p / person\n            :ARG0-of (d / dance-01~e.9\n                        :ARG1 (s / she~e.6))))", [[0, 2], [3, 5], [5, 8], [9, 13], [14, 18], [19, 23], [24, 27], [27, 29], [30, 34], [35, 42], [42, 43]]], ["# ::snt John wrote the book.\n# ::tokens [\"John\", \"wrote\", \"the\", \"book\", \".\"]\n# ::lemmas [\"John\", \"write\", \"the\", \"book\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2\n(w / write-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (b / book~e.3))", [[0, 4], [5, 10], [11, 14], [15, 19], [19, 20]]], ["# ::snt The book was written by John.\n# ::tokens [\"The\", \"book\", \"was\", \"written\", \"by\", \"John\", \".\"]\n# ::lemmas [\"the\", \"book\", \"be\", \"write\", \"by\", \"John\", \".\"]\n# ::alignments 1-1.2 3-1 5-1.1.1.1\n(w / write-01~e.3\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.5))\n   :ARG1 (b / book~e.1))", [[0, 3], [4, 8], [9, 12], [13, 20], [21, 23], [24, 28], [28, 29]]], ["# ::snt Danger was sensed by John.\n# ::tokens [\"Danger\", \"was\", \"sensed\", \"by\", \"John\", \".\"]\n# ::lemmas [\"Danger\", \"be\", \"sense\", \"by\", \"John\", \".\"]\n# ::alignments 2-1 4-1.1.1.1\n(s / sense-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.4))\n   :ARG1 (e / endanger-01))", [[0, 6], [7, 10], [11, 17], [18, 20], [21, 25], [25, 26]]], ["# ::snt A black smoke was emitted by the radiator.\n# ::tokens [\"A\", \"black\", \"smoke\", \"was\", \"emitted\", \"by\", \"the\", \"radiator\", \".\"]\n# ::lemmas [\"a\", \"black\", \"smoke\", \"be\", \"emit\", \"by\", \"the\", \"radiator\", \".\"]\n# ::alignments 1-1.2.1 2-1.2 4-1 7-1.1\n(e / emit-01~e.4\n   :ARG0 (r / radiator~e.7)\n   :ARG1 (s / smoke~e.2\n            :ARG1-of (b / black-04~e.1)))", [[0, 1], [2, 7], [8, 13], [14, 17], [18, 25], [26, 28], [29, 32], [33, 41], [41, 42]]], ["# ::snt A copy of Guns, Germs, and Steel has now been received by each member of the incoming class.\n# ::tokens [\"A\", \"copy\", \"of\", \"Guns\", \",\", \"Germs\", \",\", \"and\", \"Steel\", \"has\", \"now\", \"been\", \"received\", \"by\", \"each\", \"member\", \"of\", \"the\", \"incoming\", \"class\", \".\"]\n# ::lemmas [\"a\", \"copy\", \"of\", \"Guns\", \",\", \"Germs\", \",\", \"and\", \"Steel\", \"have\", \"now\", \"be\", \"receive\", \"by\", \"each\", \"member\", \"of\", \"the\", \"incoming\", \"class\", \".\"]\n# ::alignments 1-1.2.1 5-1.2.1.1.2 7-1.2.1.1 8-1.2.1.1.3 10-1.3 12-1 14-1.1.1 15-1.1 19-1.1.2\n(r / receive-01~e.12\n   :ARG0 (m / member~e.15\n            :mod (e / each~e.14)\n            :part-of (c / class~e.19\n                        :ARG1-of (c2 / come-in-07)))\n   :ARG1 (t / thing\n            :ARG2-of (c3 / copy-01~e.1\n                         :ARG1 (a / and~e.7\n                                  :op1 (g / gun)\n                                  :op2 (g2 / Germs~e.5)\n                                  :op3 (s / steel~e.8))))\n   :time (n / now~e.10))", [[0, 1], [2, 6], [7, 9], [10, 14], [14, 15], [16, 21], [21, 22], [23, 26], [27, 32], [33, 36], [37, 40], [41, 45], [46, 54], [55, 57], [58, 62], [63, 69], [70, 72], [73, 76], [77, 85], [86, 91], [91, 92]]], ["# ::snt I was told that by a little bird.\n# ::tokens [\"I\", \"was\", \"told\", \"that\", \"by\", \"a\", \"little\", \"bird\", \".\"]\n# ::lemmas [\"i\", \"be\", \"tell\", \"that\", \"by\", \"a\", \"little\", \"bird\", \".\"]\n# ::alignments 0-1.2 2-1 3-1.1 6-1.3.1 7-1.3\n(t / tell-01~e.2\n   :ARG1 (t2 / that~e.3)\n   :ARG2 (ii / i~e.0)\n   :instrument (b / bird~e.7\n                  :mod (l / little~e.6)))", [[0, 1], [2, 5], [6, 10], [11, 15], [16, 18], [19, 20], [21, 27], [28, 32], [32, 33]]], ["# ::snt The argument was summed up by the coach.\n# ::tokens [\"The\", \"argument\", \"was\", \"summed\", \"up\", \"by\", \"the\", \"coach\", \".\"]\n# ::lemmas [\"the\", \"argument\", \"be\", \"sum\", \"up\", \"by\", \"the\", \"coach\", \".\"]\n# ::alignments 1-1.2 7-1.1.1\n(s / sum-up-01\n   :ARG0 (p / person\n            :ARG0-of (c / coach-01~e.7))\n   :ARG1 (a / argue-01~e.1))", [[0, 3], [4, 12], [13, 16], [17, 23], [24, 26], [27, 29], [30, 33], [34, 39], [39, 40]]], ["# ::snt John has seen the book.\n# ::tokens [\"John\", \"has\", \"seen\", \"the\", \"book\", \".\"]\n# ::lemmas [\"John\", \"have\", \"see\", \"the\", \"book\", \".\"]\n# ::alignments 0-1.1.1.1 2-1 4-1.2\n(s / see-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (b / book~e.4))", [[0, 4], [5, 8], [9, 13], [14, 17], [18, 22], [22, 23]]], ["# ::snt The book has seen by Mary.\n# ::tokens [\"The\", \"book\", \"has\", \"seen\", \"by\", \"Mary\", \".\"]\n# ::lemmas [\"the\", \"book\", \"have\", \"see\", \"by\", \"Mary\", \".\"]\n# ::alignments 1-1.2 3-1 5-1.1.1.1\n(s / see-01~e.3\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mary\"~e.5))\n   :ARG1 (b / book~e.1))", [[0, 3], [4, 8], [9, 12], [13, 17], [18, 20], [21, 25], [25, 26]]], ["# ::snt Breakfast is eaten nude by the campers.\n# ::tokens [\"Breakfast\", \"is\", \"eaten\", \"nude\", \"by\", \"the\", \"campers\", \".\"]\n# ::lemmas [\"breakfast\", \"be\", \"eat\", \"nude\", \"by\", \"the\", \"camper\", \".\"]\n# ::alignments 0-1.2 2-1 3-1.3 6-1.1.1\n(e / eat-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (c / camp-02~e.6))\n   :ARG1 (b / breakfast~e.0)\n   :manner (n / nude~e.3))", [[0, 9], [10, 12], [13, 18], [19, 23], [24, 26], [27, 30], [31, 38], [38, 39]]], ["# ::snt Breakfast is eaten by the campers nude.\n# ::tokens [\"Breakfast\", \"is\", \"eaten\", \"by\", \"the\", \"campers\", \"nude\", \".\"]\n# ::lemmas [\"breakfast\", \"be\", \"eat\", \"by\", \"the\", \"camper\", \"nude\", \".\"]\n# ::alignments 0-1.2 2-1 5-1.1.1 6-1.1.2\n(e / eat-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (c / camp-02~e.5)\n            :mod (n / nude~e.6))\n   :ARG1 (b / breakfast~e.0))", [[0, 9], [10, 12], [13, 18], [19, 21], [22, 25], [26, 33], [34, 38], [38, 39]]], ["# ::snt The metal was hammered flat by John.\n# ::tokens [\"The\", \"metal\", \"was\", \"hammered\", \"flat\", \"by\", \"John\", \".\"]\n# ::lemmas [\"the\", \"metal\", \"be\", \"hammer\", \"flat\", \"by\", \"John\", \".\"]\n# ::alignments 1-1.2 3-1 4-1.3 6-1.1.1.1\n(h / hammer-01~e.3\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.6))\n   :ARG1 (m / metal~e.1)\n   :manner (f / flat~e.4))", [[0, 3], [4, 9], [10, 13], [14, 22], [23, 27], [28, 30], [31, 35], [35, 36]]], ["# ::snt The metal was hammered by John flat.\n# ::tokens [\"The\", \"metal\", \"was\", \"hammered\", \"by\", \"John\", \"flat\", \".\"]\n# ::lemmas [\"the\", \"metal\", \"be\", \"hammer\", \"by\", \"John\", \"flat\", \".\"]\n# ::alignments 1-1.2 3-1 5-1.1.1.1 6-1.3\n(h / hammer-01~e.3\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.5))\n   :ARG1 (m / metal~e.1)\n   :manner (f / flat-03~e.6\n              :ARG1 m))", [[0, 3], [4, 9], [10, 13], [14, 22], [23, 25], [26, 30], [31, 35], [35, 36]]], ["# ::snt Mary was given the book by John.\n# ::tokens [\"Mary\", \"was\", \"given\", \"the\", \"book\", \"by\", \"John\", \".\"]\n# ::lemmas [\"Mary\", \"be\", \"give\", \"the\", \"book\", \"by\", \"John\", \".\"]\n# ::alignments 0-1.3.1.1 2-1 4-1.2 6-1.1.1.1\n(g / give-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.6))\n   :ARG1 (b / book~e.4)\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Mary\"~e.0)))", [[0, 4], [5, 8], [9, 14], [15, 18], [19, 23], [24, 26], [27, 31], [31, 32]]], ["# ::snt I was convinced to leave by John.\n# ::tokens [\"I\", \"was\", \"convinced\", \"to\", \"leave\", \"by\", \"John\", \".\"]\n# ::lemmas [\"i\", \"be\", \"convince\", \"to\", \"leave\", \"by\", \"John\", \".\"]\n# ::alignments 0-1.2 2-1 4-1.3 6-1.1.1.1\n(c / convince-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.6))\n   :ARG1 (ii / i~e.0)\n   :ARG2 (l / leave-11~e.4\n            :ARG0 ii))", [[0, 1], [2, 5], [6, 15], [16, 18], [19, 24], [25, 27], [28, 32], [32, 33]]], ["# ::snt I was convinced by John to leave.\n# ::tokens [\"I\", \"was\", \"convinced\", \"by\", \"John\", \"to\", \"leave\", \".\"]\n# ::lemmas [\"i\", \"be\", \"convince\", \"by\", \"John\", \"to\", \"leave\", \".\"]\n# ::alignments 0-1.2 2-1 4-1.1.1.1 6-1.3\n(c / convince-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.4))\n   :ARG1 (ii / i~e.0)\n   :ARG2 (l / leave-11~e.6\n            :ARG0 ii))", [[0, 1], [2, 5], [6, 15], [16, 18], [19, 23], [24, 26], [27, 32], [32, 33]]], ["# ::snt The car was driven to Maine by John.\n# ::tokens [\"The\", \"car\", \"was\", \"driven\", \"to\", \"Maine\", \"by\", \"John\", \".\"]\n# ::lemmas [\"the\", \"car\", \"be\", \"drive\", \"to\", \"Maine\", \"by\", \"John\", \".\"]\n# ::alignments 1-1.2 3-1 5-1.3.1.1 7-1.1.1.1\n(d / drive-01~e.3\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.7))\n   :ARG1 (c / car~e.1)\n   :destination (s / state\n                   :name (n2 / name\n                             :op1 \"Maine\"~e.5)))", [[0, 3], [4, 7], [8, 11], [12, 18], [19, 21], [22, 27], [28, 30], [31, 35], [35, 36]]], ["# ::snt The book was given to Mary by John.\n# ::tokens [\"The\", \"book\", \"was\", \"given\", \"to\", \"Mary\", \"by\", \"John\", \".\"]\n# ::lemmas [\"the\", \"book\", \"be\", \"give\", \"to\", \"Mary\", \"by\", \"John\", \".\"]\n# ::alignments 1-1.2 3-1 5-1.3.1.1 7-1.1.1.1\n(g / give-01~e.3\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.7))\n   :ARG1 (b / book~e.1)\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Mary\"~e.5)))", [[0, 3], [4, 8], [9, 12], [13, 18], [19, 21], [22, 26], [27, 29], [30, 34], [34, 35]]], ["# ::snt The book was given by John to Mary.\n# ::tokens [\"The\", \"book\", \"was\", \"given\", \"by\", \"John\", \"to\", \"Mary\", \".\"]\n# ::lemmas [\"the\", \"book\", \"be\", \"give\", \"by\", \"John\", \"to\", \"Mary\", \".\"]\n# ::alignments 1-1.2 3-1 5-1.1.1.1 7-1.3.1.1\n(g / give-01~e.3\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.5))\n   :ARG1 (b / book~e.1)\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Mary\"~e.7)))", [[0, 3], [4, 8], [9, 12], [13, 18], [19, 21], [22, 26], [27, 29], [30, 34], [34, 35]]], ["# ::snt Testimony was given about himself by the suspect.\n# ::tokens [\"Testimony\", \"was\", \"given\", \"about\", \"himself\", \"by\", \"the\", \"suspect\", \".\"]\n# ::lemmas [\"testimony\", \"be\", \"give\", \"about\", \"himself\", \"by\", \"the\", \"suspect\", \".\"]\n# ::alignments 0-1.2 2-1 7-1.1.1\n(g / give-01~e.2\n   :ARG0 (p / person\n            :ARG2-of (s / suspect-01~e.7))\n   :ARG1 (t / testify-01~e.0\n            :ARG0 p)\n   :ARG2 p)", [[0, 9], [10, 13], [14, 19], [20, 25], [26, 33], [34, 36], [37, 40], [41, 48], [48, 49]]], ["# ::snt Books were sent to each other by the students.\n# ::tokens [\"Books\", \"were\", \"sent\", \"to\", \"each\", \"other\", \"by\", \"the\", \"students\", \".\"]\n# ::lemmas [\"book\", \"be\", \"send\", \"to\", \"each\", \"other\", \"by\", \"the\", \"student\", \".\"]\n# ::alignments 0-1.2 2-1 4-1.3.1 5-1.3 8-1.1.1\n(s / send-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (s2 / study-01~e.8))\n   :ARG1 (b / book~e.0)\n   :ARG2 (o / other~e.5\n            :mod (e / each~e.4)))", [[0, 5], [6, 10], [11, 15], [16, 18], [19, 23], [24, 29], [30, 32], [33, 36], [37, 45], [45, 46]]], ["# ::snt Money was hidden from himself by Bill.\n# ::tokens [\"Money\", \"was\", \"hidden\", \"from\", \"himself\", \"by\", \"Bill\", \".\"]\n# ::lemmas [\"money\", \"be\", \"hide\", \"from\", \"himself\", \"by\", \"Bill\", \".\"]\n# ::alignments 0-1.2 2-1 6-1.1.1.1\n(h / hide-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bill\"~e.6))\n   :ARG1 (m / money~e.0)\n   :ARG2 p)", [[0, 5], [6, 9], [10, 16], [17, 21], [22, 29], [30, 32], [33, 37], [37, 38]]], ["# ::snt Medals were given to themselves by the generals.\n# ::tokens [\"Medals\", \"were\", \"given\", \"to\", \"themselves\", \"by\", \"the\", \"generals\", \".\"]\n# ::lemmas [\"medal\", \"be\", \"give\", \"to\", \"themselves\", \"by\", \"the\", \"general\", \".\"]\n# ::alignments 0-1.2 2-1 7-1.1.1.1\n(g / give-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                        :ARG2 (g2 / general~e.7)))\n   :ARG1 (m / medal~e.0)\n   :ARG2 p)", [[0, 6], [7, 11], [12, 17], [18, 20], [21, 31], [32, 34], [35, 38], [39, 47], [47, 48]]], ["# ::snt Medals were given to each other by the generals.\n# ::tokens [\"Medals\", \"were\", \"given\", \"to\", \"each\", \"other\", \"by\", \"the\", \"generals\", \".\"]\n# ::lemmas [\"medal\", \"be\", \"give\", \"to\", \"each\", \"other\", \"by\", \"the\", \"general\", \".\"]\n# ::alignments 0-1.2 2-1 4-1.3.1 5-1.3 8-1.1.1.1\n(g / give-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                        :ARG2 (g2 / general~e.8)))\n   :ARG1 (m / medal~e.0)\n   :ARG2 (o / other~e.5\n            :mod (e / each~e.4)))", [[0, 6], [7, 11], [12, 17], [18, 20], [21, 25], [26, 31], [32, 34], [35, 38], [39, 47], [47, 48]]], ["# ::snt Tabs were kept on each other by the agents.\n# ::tokens [\"Tabs\", \"were\", \"kept\", \"on\", \"each\", \"other\", \"by\", \"the\", \"agents\", \".\"]\n# ::lemmas [\"tab\", \"be\", \"keep\", \"on\", \"each\", \"other\", \"by\", \"the\", \"agent\", \".\"]\n# ::alignments 2-1 4-1.3.1 5-1.3 8-1.1\n(k / keep-01~e.2\n   :ARG0 (a / agent~e.8)\n   :ARG1 (t / titaball)\n   :prep-on (o / other~e.5\n               :mod (e / each~e.4)))", [[0, 4], [5, 9], [10, 14], [15, 17], [18, 22], [23, 28], [29, 31], [32, 35], [36, 42], [42, 43]]], ["# ::snt Testimony was given by the suspect about himself.\n# ::tokens [\"Testimony\", \"was\", \"given\", \"by\", \"the\", \"suspect\", \"about\", \"himself\", \".\"]\n# ::lemmas [\"Testimony\", \"be\", \"give\", \"by\", \"the\", \"suspect\", \"about\", \"himself\", \".\"]\n# ::alignments 0-1.2 2-1 5-1.1.1\n(g / give-01~e.2\n   :ARG0 (p / person\n            :ARG2-of (s / suspect-01~e.5))\n   :ARG1 (t / testify-01~e.0\n            :ARG0 p\n            :ARG1 p\n            :topic p))", [[0, 9], [10, 13], [14, 19], [20, 22], [23, 26], [27, 34], [35, 40], [41, 48], [48, 49]]], ["# ::snt Money was given to his mother by every boy.\n# ::tokens [\"Money\", \"was\", \"given\", \"to\", \"his\", \"mother\", \"by\", \"every\", \"boy\", \".\"]\n# ::lemmas [\"money\", \"be\", \"give\", \"to\", \"his\", \"mother\", \"by\", \"every\", \"boy\", \".\"]\n# ::alignments 0-1.2 2-1 5-1.3.1.2 7-1.1.1 8-1.1\n(g / give-01~e.2\n   :ARG0 (b / boy~e.8\n            :mod (e / every~e.7))\n   :ARG1 (m / money~e.0)\n   :ARG2 (p / person\n            :ARG0-of (h / have-rel-role-91\n                        :ARG1 (h2 / he)\n                        :ARG2 (m2 / mother~e.5))))", [[0, 5], [6, 9], [10, 15], [16, 18], [19, 22], [23, 29], [30, 32], [33, 38], [39, 42], [42, 43]]], ["# ::snt Books were given to no student by any professor.\n# ::tokens [\"Books\", \"were\", \"given\", \"to\", \"no\", \"student\", \"by\", \"any\", \"professor\", \".\"]\n# ::lemmas [\"book\", \"be\", \"give\", \"to\", \"no\", \"student\", \"by\", \"any\", \"professor\", \".\"]\n# ::alignments 0-1.2 2-1 4-1.3.1 5-1.3.2 7-1.1.1 8-1.1\n(g / give-01~e.2\n   :ARG0 (p / professor~e.8\n            :mod (a / any~e.7))\n   :ARG1 (b / book~e.0)\n   :ARG2 (p2 / person\n             :polarity -~e.4\n             :ARG0-of (s / study-01~e.5)))", [[0, 5], [6, 10], [11, 16], [17, 19], [20, 22], [23, 30], [31, 33], [34, 37], [38, 47], [47, 48]]], ["# ::snt Tabs were kept on no criminal by any agent.\n# ::tokens [\"Tabs\", \"were\", \"kept\", \"on\", \"no\", \"criminal\", \"by\", \"any\", \"agent\", \".\"]\n# ::lemmas [\"tab\", \"be\", \"keep\", \"on\", \"no\", \"criminal\", \"by\", \"any\", \"agent\", \".\"]\n# ::alignments 2-1 4-1.2.1 5-1.3 7-1.1.1 8-1.1\n(k / keep-02~e.2\n   :ARG0 (a / agent~e.8\n            :mod (a2 / any~e.7))\n   :ARG1 (t / terrorist\n            :polarity -~e.4)\n   :ARG2 (c / criminal-03~e.5))", [[0, 4], [5, 9], [10, 14], [15, 17], [18, 20], [21, 29], [30, 32], [33, 36], [37, 42], [42, 43]]], ["# ::snt Books were given to each student by the other.\n# ::tokens [\"Books\", \"were\", \"given\", \"to\", \"each\", \"student\", \"by\", \"the\", \"other\", \".\"]\n# ::lemmas [\"book\", \"be\", \"give\", \"to\", \"each\", \"student\", \"by\", \"the\", \"other\", \".\"]\n# ::alignments 0-1.2 2-1 4-1.1.1 5-1.1.2 8-1.3.1\n(g / give-01~e.2\n   :ARG0 (p / person\n            :mod (e / each~e.4)\n            :ARG0-of (s / study-01~e.5))\n   :ARG1 (b / book~e.0)\n   :ARG2 (p2 / person\n             :mod (o / other~e.8)))", [[0, 5], [6, 10], [11, 16], [17, 19], [20, 24], [25, 32], [33, 35], [36, 39], [40, 45], [45, 46]]], ["# ::snt Chocolate eggs were hidden from each child by the other.\n# ::tokens [\"Chocolate\", \"eggs\", \"were\", \"hidden\", \"from\", \"each\", \"child\", \"by\", \"the\", \"other\", \".\"]\n# ::lemmas [\"chocolate\", \"egg\", \"be\", \"hide\", \"from\", \"each\", \"child\", \"by\", \"the\", \"other\", \".\"]\n# ::alignments 0-1.2.1 1-1.2 3-1 5-1.3.1 6-1.3 9-1.1\n(h / hide-01~e.3\n   :ARG0 (o / other~e.9)\n   :ARG1 (e / egg~e.1\n            :mod (c / chocolate~e.0))\n   :ARG2 (c2 / child~e.6\n             :mod (e2 / each~e.5)))", [[0, 9], [10, 14], [15, 19], [20, 26], [27, 31], [32, 36], [37, 42], [43, 45], [46, 49], [50, 55], [55, 56]]], ["# ::snt Books were given to every student by his mother.\n# ::tokens [\"Books\", \"were\", \"given\", \"to\", \"every\", \"student\", \"by\", \"his\", \"mother\", \".\"]\n# ::lemmas [\"book\", \"be\", \"give\", \"to\", \"every\", \"student\", \"by\", \"his\", \"mother\", \".\"]\n# ::alignments 0-1.2 2-1 4-1.4 5-1.1.1.1.1 8-1.1.1.2\n(g / give-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (h / have-rel-role-91\n                        :ARG1 (p2 / person\n                                  :ARG0-of (s / study-01~e.5))\n                        :ARG2 (m / mother~e.8)))\n   :ARG1 (b / book~e.0)\n   :ARG2 p2\n   :mod (e / every~e.4))", [[0, 5], [6, 10], [11, 16], [17, 19], [20, 25], [26, 33], [34, 36], [37, 40], [41, 47], [47, 48]]], ["# ::snt Tabs were kept on every agent by his supervisor.\n# ::tokens [\"Tabs\", \"were\", \"kept\", \"on\", \"every\", \"agent\", \"by\", \"his\", \"supervisor\", \".\"]\n# ::lemmas [\"tab\", \"be\", \"keep\", \"on\", \"every\", \"agent\", \"by\", \"his\", \"supervisor\", \".\"]\n# ::alignments 0-1.2 2-1 4-1.3.1 5-1.3 8-1.1.1\n(k / keep-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (s / supervise-01~e.8\n                        :ARG1 (h / he)))\n   :ARG1 (t / tabs~e.0)\n   :prep-on (a / agent~e.5\n               :mod (e / every~e.4)))", [[0, 4], [5, 9], [10, 14], [15, 17], [18, 23], [24, 29], [30, 32], [33, 36], [37, 47], [47, 48]]], ["# ::snt Books were taken from no student by any professor.\n# ::tokens [\"Books\", \"were\", \"taken\", \"from\", \"no\", \"student\", \"by\", \"any\", \"professor\", \".\"]\n# ::lemmas [\"book\", \"be\", \"take\", \"from\", \"no\", \"student\", \"by\", \"any\", \"professor\", \".\"]\n# ::alignments 0-1.2 2-1 4-1.3.1 5-1.3.2 7-1.1.1 8-1.1\n(t / take-01~e.2\n   :ARG0 (p / professor~e.8\n            :mod (a / any~e.7))\n   :ARG1 (b / book~e.0)\n   :ARG2 (p2 / person\n             :polarity -~e.4\n             :ARG0-of (s / study-01~e.5)))", [[0, 5], [6, 10], [11, 16], [17, 21], [22, 24], [25, 32], [33, 35], [36, 39], [40, 49], [49, 50]]], ["# ::snt Max ate the apple and Sally the hamburgers.\n# ::tokens [\"Max\", \"ate\", \"the\", \"apple\", \"and\", \"Sally\", \"the\", \"hamburgers\", \".\"]\n# ::lemmas [\"Max\", \"eat\", \"the\", \"apple\", \"and\", \"Sally\", \"the\", \"hamburger\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 3-1.1.2 4-1 5-1.2.1.1.1 7-1.2.2\n(a / and~e.4\n   :op1 (e / eat-01~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Max\"~e.0))\n           :ARG1 (a2 / apple~e.3))\n   :op2 (e2 / eat-01\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Sally\"~e.5))\n            :ARG1 (h / hamburger~e.7)))", [[0, 3], [4, 7], [8, 11], [12, 17], [18, 21], [22, 27], [28, 31], [32, 42], [42, 43]]], ["# ::snt Ivan plays bassoon, Boris oboe, and Schwarz English horn.\n# ::tokens [\"Ivan\", \"plays\", \"bassoon\", \",\", \"Boris\", \"oboe\", \",\", \"and\", \"Schwarz\", \"English\", \"horn\", \".\"]\n# ::lemmas [\"Ivan\", \"play\", \"bassoon\", \",\", \"Boris\", \"oboe\", \",\", \"and\", \"Schwarz\", \"English\", \"horn\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1 4-1.2.2.1.1.1 5-1.2.2 7-1.2 8-1.2.3.2.1.1 9-1.2.3.1.1.1 10-1.2.3\n(p / play-11~e.1\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Ivan\"~e.0))\n   :ARG1 (a / and~e.7\n            :op1 (b / bassoon~e.2)\n            :op2 (o / oboe~e.5\n                    :mod (p3 / person\n                             :name (n2 / name\n                                       :op1 \"Boris\"~e.4\n                                       :op2 \"Obama\")))\n            :op3 (h / horn~e.10\n                    :mod (c / country\n                            :name (n3 / name\n                                      :op1 \"England\"~e.9))\n                    :mod (p4 / person\n                             :name (n4 / name\n                                       :op1 \"Schwarz\"~e.8)))))", [[0, 4], [5, 10], [11, 18], [18, 19], [20, 25], [26, 30], [30, 31], [32, 35], [36, 43], [44, 51], [52, 56], [56, 57]]], ["# ::snt Mary is believed to be, and Sue definitely is, pregnant.\n# ::tokens [\"Mary\", \"is\", \"believed\", \"to\", \"be\", \",\", \"and\", \"Sue\", \"definitely\", \"is\", \",\", \"pregnant\", \".\"]\n# ::lemmas [\"Mary\", \"be\", \"believe\", \"to\", \"be\", \",\", \"and\", \"Sue\", \"definitely\", \"be\", \",\", \"pregnant\", \".\"]\n# ::alignments 0-1.1.1.1.1.1 2-1.1 6-1 7-1.3.1.1.1 8-1.3.2\n(a / and~e.6\n   :op1 (b / believe-01~e.2\n           :ARG1 (ii / impregnate-01\n                     :ARG1 (p / person\n                              :name (n / name\n                                       :op1 \"Mary\"~e.0))))\n   :op2 b\n   :ARG1 (ii2 / impregnate-01\n              :ARG1 (p2 / person\n                        :name (n2 / name\n                                  :op1 \"Sue\"~e.7))\n              :mod (d / definite~e.8)))", [[0, 4], [5, 7], [8, 16], [17, 19], [20, 22], [22, 23], [24, 27], [28, 31], [32, 42], [43, 45], [45, 46], [47, 55], [55, 56]]], ["# ::snt Dolores gave incriminating evidence about Harry to the FBI, and Frank sent to his mother-in-law.\n# ::tokens [\"Dolores\", \"gave\", \"incriminating\", \"evidence\", \"about\", \"Harry\", \"to\", \"the\", \"FBI\", \",\", \"and\", \"Frank\", \"sent\", \"to\", \"his\", \"mother\", \"-\", \"in\", \"-\", \"law\", \".\"]\n# ::lemmas [\"dolore\", \"give\", \"incriminate\", \"evidence\", \"about\", \"Harry\", \"to\", \"the\", \"FBI\", \",\", \"and\", \"Frank\", \"send\", \"to\", \"his\", \"mother\", \"-\", \"in\", \"-\", \"law\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 2-1.1.2.1 3-1.1.2 5-1.1.2.2.1.1 8-1.1.3.1.1 10-1 11-1.2.1.1.1 12-1.2 15-1.2.2.1.2\n(a / and~e.10\n   :op1 (g / give-01~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Dolores\"~e.0))\n           :ARG1 (e / evidence-01~e.3\n                    :ARG0-of (ii / incriminate-01~e.2)\n                    :topic (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Harry\"~e.5)))\n           :ARG2 (g2 / government-organization\n                     :name (n3 / name\n                               :op1 \"FBI\"~e.8)))\n   :op2 (s / send-01~e.12\n           :ARG0 (p3 / person\n                     :name (n4 / name\n                               :op1 \"Frank\"~e.11))\n           :ARG2 (p4 / person\n                     :ARG0-of (h / have-rel-role-91\n                                 :ARG1 p3\n                                 :ARG2 (m / mother-in-law~e.15)))))", [[0, 7], [8, 12], [13, 26], [27, 35], [36, 41], [42, 47], [48, 50], [51, 54], [55, 58], [58, 59], [60, 63], [64, 69], [70, 74], [75, 77], [78, 81], [82, 88], [88, 89], [89, 91], [91, 92], [92, 95], [95, 96]]], ["# ::snt Sam plays the bassoon, and Max the saxophone.\n# ::tokens [\"Sam\", \"plays\", \"the\", \"bassoon\", \",\", \"and\", \"Max\", \"the\", \"saxophone\", \".\"]\n# ::lemmas [\"Sam\", \"play\", \"the\", \"bassoon\", \",\", \"and\", \"Max\", \"the\", \"saxophone\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 3-1.1.2 5-1 6-1.2.1.1.1 8-1.2.2\n(a / and~e.5\n   :op1 (p / play-11~e.1\n           :ARG0 (p2 / person\n                     :name (n / name\n                              :op1 \"Sam\"~e.0))\n           :ARG2 (b / bassoon~e.3))\n   :op2 (p3 / play-11\n            :ARG0 (p4 / person\n                      :name (n2 / name\n                                :op1 \"Max\"~e.6))\n            :ARG2 (s / saxophone~e.8)))", [[0, 3], [4, 9], [10, 13], [14, 21], [21, 22], [23, 26], [27, 30], [31, 34], [35, 44], [44, 45]]], ["# ::snt Sam played tuba whenever Max sax.\n# ::tokens [\"Sam\", \"played\", \"tuba\", \"whenever\", \"Max\", \"sax\", \".\"]\n# ::lemmas [\"Sam\", \"play\", \"tuba\", \"whenever\", \"Max\", \"sax\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2 3-1.3 4-1.3.2.1 5-1.3.2\n(p / play-11~e.1\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Sam\"~e.0))\n   :ARG1 (t / tuba~e.2)\n   :time (w / whenever~e.3\n            :ARG0 p2\n            :ARG2 (s / sax~e.5\n                     :mod (m / Max~e.4)))\n   :op1-of w)", [[0, 3], [4, 10], [11, 15], [16, 24], [25, 28], [29, 32], [32, 33]]], ["# ::snt John plays bagpipe despite the fact that Bill the bassoon.\n# ::tokens [\"John\", \"plays\", \"bagpipe\", \"despite\", \"the\", \"fact\", \"that\", \"Bill\", \"the\", \"bassoon\", \".\"]\n# ::lemmas [\"John\", \"play\", \"bagpipe\", \"despite\", \"the\", \"fact\", \"that\", \"Bill\", \"the\", \"bassoon\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2 4-1.3.1.2 7-1.3.1.1 9-1.3.1.3\n(p / play-11~e.1\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"John\"~e.0))\n   :ARG1 (b / bagpipe~e.2)\n   :concession (p3 / person\n                   :name (n2 / name\n                             :op1 \"Bill\"~e.7\n                             :op2 \"the\"~e.4\n                             :op3 \"Bassoon\"~e.9)))", [[0, 4], [5, 10], [11, 18], [19, 26], [27, 30], [31, 35], [36, 40], [41, 45], [46, 49], [50, 57], [57, 58]]], ["# ::snt Bill ate the peaches and Harry the grapes.\n# ::tokens [\"Bill\", \"ate\", \"the\", \"peaches\", \"and\", \"Harry\", \"the\", \"grapes\", \".\"]\n# ::lemmas [\"Bill\", \"eat\", \"the\", \"peach\", \"and\", \"Harry\", \"the\", \"grape\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 3-1.1.2 4-1 5-1.2.1.1.1 7-1.2.2\n(a / and~e.4\n   :op1 (e / eat-01~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Bill\"~e.0))\n           :ARG1 (p2 / peache~e.3))\n   :op2 (e2 / eat-01\n            :ARG0 (p3 / person\n                      :name (n2 / name\n                                :op1 \"Harry\"~e.5))\n            :ARG1 (g / grape~e.7)))", [[0, 4], [5, 8], [9, 12], [13, 20], [21, 24], [25, 30], [31, 34], [35, 41], [41, 42]]], ["# ::snt John has written the words, and Paul the music.\n# ::tokens [\"John\", \"has\", \"written\", \"the\", \"words\", \",\", \"and\", \"Paul\", \"the\", \"music\", \".\"]\n# ::lemmas [\"John\", \"have\", \"write\", \"the\", \"word\", \",\", \"and\", \"Paul\", \"the\", \"music\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1 4-1.1.2 6-1 9-1.2.2\n(a / and~e.6\n   :op1 (w / write-01~e.2\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"John\"~e.0))\n           :ARG1 (w2 / word~e.4))\n   :op2 (w3 / write-01\n            :ARG0 p\n            :ARG1 (m / music~e.9)))", [[0, 4], [5, 8], [9, 16], [17, 20], [21, 26], [26, 27], [28, 31], [32, 36], [37, 40], [41, 46], [46, 47]]], ["# ::snt John has written the words, and Paul has the music.\n# ::tokens [\"John\", \"has\", \"written\", \"the\", \"words\", \",\", \"and\", \"Paul\", \"has\", \"the\", \"music\", \".\"]\n# ::lemmas [\"John\", \"have\", \"write\", \"the\", \"word\", \",\", \"and\", \"Paul\", \"have\", \"the\", \"music\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.2 2-1.1 4-1.1.2 6-1 7-1.2.1.1.1 10-1.2.2\n(a / and~e.6\n   :op1 (w / write-01~e.2\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"John\"~e.0))\n           :ARG1 (w2 / word~e.4))\n   :op2 (h / have-03~e.1\n           :ARG0 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Paul\"~e.7))\n           :ARG1 (m / music~e.10)))", [[0, 4], [5, 8], [9, 16], [17, 20], [21, 26], [26, 27], [28, 31], [32, 36], [37, 40], [41, 44], [45, 50], [50, 51]]], ["# ::snt Simon quickly dropped the gold, and Jack suddenly the diamonds.\n# ::tokens [\"Simon\", \"quickly\", \"dropped\", \"the\", \"gold\", \",\", \"and\", \"Jack\", \"suddenly\", \"the\", \"diamonds\", \".\"]\n# ::lemmas [\"Simon\", \"quickly\", \"drop\", \"the\", \"gold\", \",\", \"and\", \"Jack\", \"suddenly\", \"the\", \"diamond\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1.3 2-1.1 4-1.1.2 6-1 7-1.2.1.1 8-1.4 10-1.3\n(a / and~e.6\n   :op1 (d / drop-01~e.2\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Simon\"~e.0))\n           :ARG1 (g / gold~e.4)\n           :ARG1-of (q / quick-02~e.1)\n           :op2-of a)\n   :ARG0 (p2 / person\n             :name (n2 / name\n                       :op1 \"Jack\"~e.7))\n   :ARG1 (d2 / diamond~e.10)\n   :manner (s / sudden~e.8))", [[0, 5], [6, 13], [14, 21], [22, 25], [26, 30], [30, 31], [32, 35], [36, 40], [41, 49], [50, 53], [54, 62], [62, 63]]], ["# ::snt Max sometimes beats his wife, and Ted frequently his dog.\n# ::tokens [\"Max\", \"sometimes\", \"beats\", \"his\", \"wife\", \",\", \"and\", \"Ted\", \"frequently\", \"his\", \"dog\", \".\"]\n# ::lemmas [\"Max\", \"sometimes\", \"beat\", \"his\", \"wife\", \",\", \"and\", \"Ted\", \"frequently\", \"his\", \"dog\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1.3 2-1.1 4-1.1.2.1.2 6-1 7-1.2.2.1.1.1 8-1.1.3.r 10-1.2.2\n(a / and~e.6\n   :op1 (b / beat-01~e.2\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Max\"~e.0))\n           :ARG1 (p2 / person\n                     :ARG0-of (h / have-rel-role-91\n                                 :ARG1 p\n                                 :ARG2 (w / wife~e.4)))\n           :frequency~e.8 (s / sometimes~e.1))\n   :op2 (b2 / beat-01\n            :ARG0 p\n            :ARG1 (d / dog~e.10\n                     :poss (p3 / person\n                               :name (n2 / name\n                                         :op1 \"Ted\"~e.7)))\n            :frequency (f / frequent-02)))", [[0, 3], [4, 13], [14, 19], [20, 23], [24, 28], [28, 29], [30, 33], [34, 37], [38, 48], [49, 52], [53, 56], [56, 57]]], ["# ::snt are quickly drops and sometimes beats, not just dropped and beats:.\n# ::tokens [\"are\", \"quickly\", \"drops\", \"and\", \"sometimes\", \"beats\", \",\", \"not\", \"just\", \"dropped\", \"and\", \"beats\", \":\", \".\"]\n# ::lemmas [\"be\", \"quickly\", \"drop\", \"and\", \"sometimes\", \"beat\", \",\", \"not\", \"just\", \"drop\", \"and\", \"beat\", \":\", \".\"]\n# ::alignments 1-1.1.1 2-1.1 3-1 4-1.3 5-1.2 7-1.4.1.1 8-1.4.3 10-1.4.1 11-1.4.2\n(a / and~e.3\n   :op1 (d / drop-01~e.2\n           :ARG1-of (q / quick-02~e.1))\n   :op2 (b / beat-03~e.5)\n   :frequency (s / sometimes~e.4)\n   :ARG1-of (c / contrast-01\n               :ARG2 (a2 / and~e.10\n                         :polarity -~e.7\n                         :op1 d)\n               :op2 (b2 / beat-03~e.11)\n               :mod (j / just~e.8)))", [[0, 3], [4, 11], [12, 17], [18, 21], [22, 31], [32, 37], [37, 38], [39, 42], [43, 47], [48, 55], [56, 59], [60, 65], [65, 66], [66, 67]]], ["# ::snt Max sometimes beats his wife, and Ted his dog.\n# ::tokens [\"Max\", \"sometimes\", \"beats\", \"his\", \"wife\", \",\", \"and\", \"Ted\", \"his\", \"dog\", \".\"]\n# ::lemmas [\"Max\", \"sometimes\", \"beat\", \"his\", \"wife\", \",\", \"and\", \"Ted\", \"his\", \"dog\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1.3 2-1.1 4-1.1.2.1.2 6-1 7-1.2.2.1.1 9-1.2.2.4\n(a / and~e.6\n   :op1 (b / beat-01~e.2\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Max\"~e.0))\n           :ARG1 (p2 / person\n                     :ARG0-of (h / have-rel-role-91\n                                 :ARG1 p\n                                 :ARG2 (w / wife~e.4)))\n           :frequency (s / sometimes~e.1))\n   :op2 (b2 / beat-01\n            :ARG0 p\n            :ARG1 (p3 / person\n                      :name (n2 / name\n                                :op1 \"Ted\"~e.7)\n                      :ARG0-of h\n                      :ARG1 p\n                      :ARG2 (d / dog~e.9)))\n   :frequency s)", [[0, 3], [4, 13], [14, 19], [20, 23], [24, 28], [28, 29], [30, 33], [34, 37], [38, 41], [42, 45], [45, 46]]], ["# ::snt I didn't eat fish, Bill didn't eat rice, and Harry didn't eat roast beef.\n# ::tokens [\"I\", \"did\", \"n't\", \"eat\", \"fish\", \",\", \"Bill\", \"did\", \"n't\", \"eat\", \"rice\", \",\", \"and\", \"Harry\", \"did\", \"n't\", \"eat\", \"roast\", \"beef\", \".\"]\n# ::lemmas [\"i\", \"do\", \"not\", \"eat\", \"fish\", \",\", \"Bill\", \"do\", \"not\", \"eat\", \"rice\", \",\", \"and\", \"Harry\", \"do\", \"not\", \"eat\", \"roast\", \"beef\", \".\"]\n# ::alignments 0-1.1.2 3-1.1 4-1.1.3 6-1.2.2.1.1 9-1.2 10-1.2.3 12-1 13-1.3.2.1.1 16-1.3 17-1.3.3.1 18-1.3.3\n(a / and~e.12\n   :op1 (e / eat-01~e.3\n           :polarity -\n           :ARG0 (ii / i~e.0)\n           :ARG1 (f / fish~e.4))\n   :op2 (e2 / eat-01~e.9\n            :polarity -\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Bill\"~e.6))\n            :ARG1 (r / rice~e.10))\n   :op3 (e3 / eat-01~e.16\n            :polarity -\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Harry\"~e.13))\n            :ARG1 (b / beef~e.18\n                     :mod (r2 / roast~e.17))))", [[0, 1], [2, 5], [5, 8], [9, 12], [13, 17], [17, 18], [19, 23], [24, 27], [27, 30], [31, 34], [35, 39], [39, 40], [41, 44], [45, 50], [51, 54], [54, 57], [58, 61], [62, 67], [68, 72], [72, 73]]], ["# ::snt I didn't eat fish, Bill rice, and Harry roast beef.\n# ::tokens [\"I\", \"did\", \"n't\", \"eat\", \"fish\", \",\", \"Bill\", \"rice\", \",\", \"and\", \"Harry\", \"roast\", \"beef\", \".\"]\n# ::lemmas [\"i\", \"do\", \"not\", \"eat\", \"fish\", \",\", \"Bill\", \"rice\", \",\", \"and\", \"Harry\", \"roast\", \"beef\", \".\"]\n# ::alignments 0-1.2 3-1 4-1.3.1 6-1.3.2.1.1.1 7-1.3.2 9-1.3 10-1.3.3.2.1.1 11-1.3.3.1 12-1.3.3\n(e / eat-01~e.3\n   :polarity -\n   :ARG0 (ii / i~e.0)\n   :ARG1 (a / and~e.9\n            :op1 (f / fish~e.4)\n            :op2 (r / rice~e.7\n                    :mod (p / person\n                            :name (n / name\n                                     :op1 \"Bill\"~e.6)))\n            :op3 (b / beef~e.12\n                    :mod (r2 / roast~e.11)\n                    :mod (p2 / person\n                             :name (n2 / name\n                                       :op1 \"Harry\"~e.10)))))", [[0, 1], [2, 5], [5, 8], [9, 12], [13, 17], [17, 18], [19, 23], [24, 28], [28, 29], [30, 33], [34, 39], [40, 45], [46, 50], [50, 51]]], ["# ::snt John writes poetry in the garden, and Max in the bathroom.\n# ::tokens [\"John\", \"writes\", \"poetry\", \"in\", \"the\", \"garden\", \",\", \"and\", \"Max\", \"in\", \"the\", \"bathroom\", \".\"]\n# ::lemmas [\"John\", \"write\", \"poetry\", \"in\", \"the\", \"garden\", \",\", \"and\", \"Max\", \"in\", \"the\", \"bathroom\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 2-1.1.2 5-1.1.3 7-1 8-1.2.1.1.1 11-1.2.2\n(a / and~e.7\n   :op1 (w / write-01~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"John\"~e.0))\n           :ARG1 (p2 / poetry~e.2)\n           :location (g / garden~e.5))\n   :op2 (w2 / write-01\n            :ARG0 (p3 / person\n                      :name (n2 / name\n                                :op1 \"Max\"~e.8))\n            :location (b / bathroom~e.11)))", [[0, 4], [5, 11], [12, 18], [19, 21], [22, 25], [26, 32], [32, 33], [34, 37], [38, 41], [42, 44], [45, 48], [49, 57], [57, 58]]], ["# ::snt Charlie went into the bedroom at 5:30, and Lola at 5:35.\n# ::tokens [\"Charlie\", \"went\", \"into\", \"the\", \"bedroom\", \"at\", \"5:30\", \",\", \"and\", \"Lola\", \"at\", \"5:35\", \".\"]\n# ::lemmas [\"Charlie\", \"go\", \"into\", \"the\", \"bedroom\", \"at\", \"5:30\", \",\", \"and\", \"Lola\", \"at\", \"5:35\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 4-1.1.2 6-1.1.3.1 8-1 9-1.2.1.1.1 11-1.2.3.1\n(a / and~e.8\n   :op1 (g / go-02~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Charlie\"~e.0))\n           :ARG4 (b / bedroom~e.4)\n           :time (d / date-entity\n                    :time \"5:30\"~e.6))\n   :op2 (g2 / go-02\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Lola\"~e.9))\n            :ARG4 b\n            :time (d2 / date-entity\n                      :time \"5:35\"~e.11)))", [[0, 7], [8, 12], [13, 17], [18, 21], [22, 29], [30, 32], [33, 37], [37, 38], [39, 42], [43, 47], [48, 50], [51, 55], [55, 56]]], ["# ::snt I want Bob to shave himself, and Mary to wash himself.\n# ::tokens [\"I\", \"want\", \"Bob\", \"to\", \"shave\", \"himself\", \",\", \"and\", \"Mary\", \"to\", \"wash\", \"himself\", \".\"]\n# ::lemmas [\"i\", \"want\", \"Bob\", \"to\", \"shave\", \"himself\", \",\", \"and\", \"Mary\", \"to\", \"wash\", \"himself\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1.1.1.1 4-1.2.1 7-1.2 8-1.2.2.1.1.1 10-1.2.2\n(w / want-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (a / and~e.7\n            :op1 (s / shave-01~e.4\n                    :ARG0 (p / person\n                             :name (n / name\n                                      :op1 \"Bob\"~e.2))\n                    :ARG2 p)\n            :op2 (w2 / wash-01~e.10\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Mary\"~e.8))\n                     :ARG1 p)))", [[0, 1], [2, 6], [7, 10], [11, 13], [14, 19], [20, 27], [27, 28], [29, 32], [33, 37], [38, 40], [41, 45], [46, 53], [53, 54]]], ["# ::snt Bill is depending on Harry to find the way to the party, and Sue to find the way home.\n# ::tokens [\"Bill\", \"is\", \"depending\", \"on\", \"Harry\", \"to\", \"find\", \"the\", \"way\", \"to\", \"the\", \"party\", \",\", \"and\", \"Sue\", \"to\", \"find\", \"the\", \"way\", \"home\", \".\"]\n# ::lemmas [\"Bill\", \"be\", \"depend\", \"on\", \"Harry\", \"to\", \"find\", \"the\", \"way\", \"to\", \"the\", \"party\", \",\", \"and\", \"Sue\", \"to\", \"find\", \"the\", \"way\", \"home\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1 4-1.1.2.1.1 6-1.2 8-1.2.2 11-1.2.2.1 13-1.1 14-1.1.3.1.1 16-1.3 18-1.3.2 19-1.3.2.1\n(d / depend-01~e.2\n   :ARG0 (a / and~e.13\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Bill\"~e.0))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Harry\"~e.4))\n            :op3 (p3 / person\n                     :name (n3 / name\n                               :op1 \"Sue\"~e.14)))\n   :ARG1 (f / find-01~e.6\n            :ARG0 a\n            :ARG1 (w / way~e.8\n                     :direction (p4 / party~e.11)))\n   :purpose (f2 / find-01~e.16\n                :ARG0 a\n                :ARG1 (w2 / way~e.18\n                          :direction (h / home~e.19))))", [[0, 4], [5, 7], [8, 17], [18, 20], [21, 26], [27, 29], [30, 34], [35, 38], [39, 42], [43, 45], [46, 49], [50, 55], [55, 56], [57, 60], [61, 64], [65, 67], [68, 72], [73, 76], [77, 80], [81, 85], [85, 86]]], ["# ::snt Arizona elected Goldwater Senator, and Pennsylvania, Goldstein.\n# ::tokens [\"Arizona\", \"elected\", \"Goldwater\", \"Senator\", \",\", \"and\", \"Pennsylvania\", \",\", \"Goldstein\", \".\"]\n# ::lemmas [\"Arizona\", \"elect\", \"Goldwater\", \"Senator\", \",\", \"and\", \"Pennsylvania\", \",\", \"Goldstein\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.3.1.1.1.1.1 3-1.3.1.1.2 5-1.3 6-1.3.2.1.1.1.1 8-1.2.1.1\n(e / elect-01~e.1\n   :ARG0 (s / state\n            :name (n / name\n                     :op1 \"Arizona\"~e.0))\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Goldstein\"~e.8))\n   :ARG2 (a / and~e.5\n            :op1 (p2 / person\n                     :ARG0-of (h / have-org-role-91\n                                 :ARG1 (p3 / political-party\n                                           :name (n3 / name\n                                                     :op1 \"Goldwater\"~e.2))\n                                 :ARG2 (s2 / senator~e.3)))\n            :op2 (p4 / person\n                     :ARG0-of (h2 / have-org-role-91\n                                  :ARG1 (s3 / state\n                                            :name (n4 / name\n                                                      :op1 \"Pennsylvania\"~e.6))\n                                  :ARG2 s2))))", [[0, 7], [8, 15], [16, 25], [26, 33], [33, 34], [35, 38], [39, 51], [51, 52], [53, 62], [62, 63]]], ["# ::snt Max writes poetry in the bathroom, and Schwarz radical pamphlets.\n# ::tokens [\"Max\", \"writes\", \"poetry\", \"in\", \"the\", \"bathroom\", \",\", \"and\", \"Schwarz\", \"radical\", \"pamphlets\", \".\"]\n# ::lemmas [\"Max\", \"write\", \"poetry\", \"in\", \"the\", \"bathroom\", \",\", \"and\", \"Schwarz\", \"radical\", \"pamphlet\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 2-1.1.2 5-1.1.2.1 7-1 8-1.2.1.1 9-1.2.2 10-1.2\n(a / and~e.7\n   :op1 (w / write-01~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Max\"~e.0))\n           :ARG1 (p2 / poetry~e.2\n                     :location (b / bathroom~e.5)))\n   :op2 (p3 / pamphlet~e.10\n            :name (n2 / name\n                      :op1 \"Schwarz\"~e.8)\n            :ARG1-of (r / radical-02~e.9)))", [[0, 3], [4, 10], [11, 17], [18, 20], [21, 24], [25, 33], [33, 34], [35, 38], [39, 46], [47, 54], [55, 64], [64, 65]]], ["# ::snt Maytag will give a brand new dryer to the winner of the Mrs. Albania contest, and General Electric, four hundred light bulbs.\n# ::tokens [\"Maytag\", \"will\", \"give\", \"a\", \"brand\", \"new\", \"dryer\", \"to\", \"the\", \"winner\", \"of\", \"the\", \"Mrs.\", \"Albania\", \"contest\", \",\", \"and\", \"General\", \"Electric\", \",\", \"four\", \"hundred\", \"light\", \"bulbs\", \".\"]\n# ::lemmas [\"Maytag\", \"will\", \"give\", \"a\", \"brand\", \"new\", \"dryer\", \"to\", \"the\", \"winner\", \"of\", \"the\", \"Mrs.\", \"Albania\", \"contest\", \",\", \"and\", \"General\", \"Electric\", \",\", \"four\", \"hundred\", \"light\", \"bulb\", \".\"]\n# ::alignments 0-1.1.1.1 2-1 4-1.2.1.1 5-1.2.1 6-1.2 12-1.3.1.1.1.1.1 13-1.3.1.1.1.1.2 14-1.3.1.1.1 16-1.3 17-1.3.2.1.1 18-1.3.2.1.2 20-1.4.1 22-1.4.2 23-1.4\n(g / give-01~e.2\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Maytag\"~e.0))\n   :ARG1 (d / dryer~e.6\n            :ARG1-of (n2 / new-01~e.5\n                         :mod (b / brand~e.4)))\n   :ARG2 (a / and~e.16\n            :op1 (c2 / company\n                     :ARG0-of (w / win-01\n                                 :ARG1 (c3 / contest~e.14\n                                           :name (n3 / name\n                                                     :op1 \"Mrs.\"~e.12\n                                                     :op2 \"Albania\"~e.13\n                                                     :op3 \"Contest\"))))\n            :op2 (c4 / company\n                     :name (n4 / name\n                               :op1 \"General\"~e.17\n                               :op2 \"Electric\"~e.18)))\n   :ARG3 (b2 / bulb~e.23\n             :quant 4~e.20\n             :mod (l / light~e.22)))", [[0, 6], [7, 11], [12, 16], [17, 18], [19, 24], [25, 28], [29, 34], [35, 37], [38, 41], [42, 48], [49, 51], [52, 55], [56, 60], [61, 68], [69, 76], [76, 77], [78, 81], [82, 89], [90, 98], [98, 99], [100, 104], [105, 112], [113, 118], [119, 124], [124, 125]]], ["# ::snt Jack begged Elsie to get married, and Wilfred, Phoebe.\n# ::tokens [\"Jack\", \"begged\", \"Elsie\", \"to\", \"get\", \"married\", \",\", \"and\", \"Wilfred\", \",\", \"Phoebe\", \".\"]\n# ::lemmas [\"Jack\", \"beg\", \"Elsie\", \"to\", \"get\", \"marry\", \",\", \"and\", \"Wilfred\", \",\", \"Phoebe\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 2-1.1.2.1.1.1 5-1.1.2 6-1.3.1.2 7-1 8-1.3.1.1 10-1.3.1.3\n(a / and~e.7\n   :op1 (b / beg-01~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Jack\"~e.0))\n           :ARG1 (m / marry-01~e.5\n                    :ARG1 (p2 / person\n                              :name (n2 / name\n                                        :op1 \"Elsie\"~e.2)))\n           :ARG2 p2\n           :op2-of a)\n   :ARG0 p\n   :ARG1 (p3 / person\n             :name (n3 / name\n                       :op1 \"Wilfred\"~e.8\n                       :op2 \",\"~e.6\n                       :op3 \"Phoebe\"~e.10))\n   :ARG2 m)", [[0, 4], [5, 11], [12, 17], [18, 20], [21, 24], [25, 32], [32, 33], [34, 37], [38, 45], [45, 46], [47, 53], [53, 54]]], ["# ::snt Harry told Sue, and Tom Sally, that Albania is a lovely place for a vacation.\n# ::tokens [\"Harry\", \"told\", \"Sue\", \",\", \"and\", \"Tom\", \"Sally\", \",\", \"that\", \"Albania\", \"is\", \"a\", \"lovely\", \"place\", \"for\", \"a\", \"vacation\", \".\"]\n# ::lemmas [\"Harry\", \"tell\", \"Sue\", \",\", \"and\", \"Tom\", \"Sally\", \",\", \"that\", \"Albania\", \"be\", \"a\", \"lovely\", \"place\", \"for\", \"a\", \"vacation\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.3.1.1.1 4-1.3 5-1.3.2.1.1 6-1.3.2.1.2 9-1.2.3.1.1 12-1.2.1 13-1.2 16-1.2.2\n(t / tell-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Harry\"~e.0))\n   :ARG1 (p2 / place~e.13\n             :mod (l / lovely~e.12)\n             :purpose (v / vacation-01~e.16)\n             :domain (c / country\n                        :name (n2 / name\n                                  :op1 \"Albania\"~e.9)))\n   :ARG2 (a / and~e.4\n            :op1 (p3 / person\n                     :name (n3 / name\n                               :op1 \"Sue\"~e.2))\n            :op2 (p4 / person\n                     :name (n4 / name\n                               :op1 \"Tom\"~e.5\n                               :op2 \"Sally\"~e.6))))", [[0, 5], [6, 10], [11, 14], [14, 15], [16, 19], [20, 23], [24, 29], [29, 30], [31, 35], [36, 43], [44, 46], [47, 48], [49, 55], [56, 61], [62, 65], [66, 67], [68, 76], [76, 77]]], ["# ::snt Joe informed Lucy that Tagalog is spoken in the Philippines, and Bill Jane that Khmer is spoken in Cambodia.\n# ::tokens [\"Joe\", \"informed\", \"Lucy\", \"that\", \"Tagalog\", \"is\", \"spoken\", \"in\", \"the\", \"Philippines\", \",\", \"and\", \"Bill\", \"Jane\", \"that\", \"Khmer\", \"is\", \"spoken\", \"in\", \"Cambodia\", \".\"]\n# ::lemmas [\"Joe\", \"inform\", \"Lucy\", \"that\", \"Tagalog\", \"be\", \"speak\", \"in\", \"the\", \"Philippines\", \",\", \"and\", \"Bill\", \"Jane\", \"that\", \"Khmer\", \"be\", \"speak\", \"in\", \"Cambodia\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1.1 4-1.3.1.1.1 6-1.3 9-1.3.2.1.1 11-1.2 12-1.2.2.1.1 13-1.2.2.1.2 15-1.4.1.1.1 17-1.4 19-1.4.2.1.1\n(ii / inform-01~e.1\n    :ARG0 (p / person\n             :name (n / name\n                      :op1 \"Joe\"~e.0))\n    :ARG1 (a / and~e.11\n             :op1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Lucy\"~e.2))\n             :op2 (p3 / person\n                      :name (n3 / name\n                                :op1 \"Bill\"~e.12\n                                :op2 \"Jane\"~e.13)))\n    :ARG2 (s / speak-01~e.6\n             :ARG1 (l / language\n                      :name (n4 / name\n                                :op1 \"Tagalog\"~e.4))\n             :location (c / country\n                          :name (n5 / name\n                                    :op1 \"Philippines\"~e.9)))\n    :op3 (s2 / speak-01~e.17\n             :ARG1 (l2 / language\n                       :name (n6 / name\n                                 :op1 \"Khmer\"~e.15))\n             :location (c2 / country\n                           :name (n7 / name\n                                     :op1 \"Cambodia\"~e.19))))", [[0, 3], [4, 12], [13, 17], [18, 22], [23, 30], [31, 33], [34, 40], [41, 43], [44, 47], [48, 59], [59, 60], [61, 64], [65, 69], [70, 74], [75, 79], [80, 85], [86, 88], [89, 95], [96, 98], [99, 107], [107, 108]]], ["# ::snt Frank forced Tom to shave himself, and Sam, Harry to watch.\n# ::tokens [\"Frank\", \"forced\", \"Tom\", \"to\", \"shave\", \"himself\", \",\", \"and\", \"Sam\", \",\", \"Harry\", \"to\", \"watch\", \".\"]\n# ::lemmas [\"Frank\", \"force\", \"Tom\", \"to\", \"shave\", \"himself\", \",\", \"and\", \"Sam\", \",\", \"Harry\", \"to\", \"watch\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1.1.1 4-1.2.1 7-1.2 8-1.2.2.1.1.1 10-1.2.3.1.1.1 12-1.2.3\n(f / force-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Frank\"~e.0))\n   :ARG1 (a / and~e.7\n            :op1 (s / shave-01~e.4\n                    :ARG0 (p2 / person\n                              :name (n2 / name\n                                        :op1 \"Tom\"~e.2))\n                    :ARG1 p2)\n            :op2 (s2 / shave-01\n                     :ARG0 (p3 / person\n                               :name (n3 / name\n                                         :op1 \"Sam\"~e.8))\n                     :ARG1 p3)\n            :op3 (w / watch-01~e.12\n                    :ARG0 (p4 / person\n                              :name (n4 / name\n                                        :op1 \"Harry\"~e.10))\n                    :ARG1 s2)))", [[0, 5], [6, 12], [13, 16], [17, 19], [20, 25], [26, 33], [33, 34], [35, 38], [39, 42], [42, 43], [44, 49], [50, 52], [53, 58], [58, 59]]], ["# ::snt Willy put the flowers in a vase, and Charlie the book on the table.\n# ::tokens [\"Willy\", \"put\", \"the\", \"flowers\", \"in\", \"a\", \"vase\", \",\", \"and\", \"Charlie\", \"the\", \"book\", \"on\", \"the\", \"table\", \".\"]\n# ::lemmas [\"Willy\", \"put\", \"the\", \"flower\", \"in\", \"a\", \"vase\", \",\", \"and\", \"Charlie\", \"the\", \"book\", \"on\", \"the\", \"table\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 3-1.1.2 6-1.1.3 8-1 11-1.2.2 14-1.2.3\n(a / and~e.8\n   :op1 (p / put-01~e.1\n           :ARG0 (p2 / person\n                     :name (n / name\n                              :op1 \"Willy\"~e.0))\n           :ARG1 (f / flower~e.3)\n           :ARG2 (v / vase~e.6))\n   :op2 (p3 / put-01\n            :ARG0 p2\n            :ARG1 (b / book~e.11)\n            :ARG2 (t / table~e.14)))", [[0, 5], [6, 9], [10, 13], [14, 21], [22, 24], [25, 26], [27, 31], [31, 32], [33, 36], [37, 44], [45, 48], [49, 53], [54, 56], [57, 60], [61, 66], [66, 67]]], ["# ::snt Arizona elected Goldwater Senator and Massachusetts McCormack.\n# ::tokens [\"Arizona\", \"elected\", \"Goldwater\", \"Senator\", \"and\", \"Massachusetts\", \"McCormack\", \".\"]\n# ::lemmas [\"Arizona\", \"elect\", \"Goldwater\", \"Senator\", \"and\", \"Massachusetts\", \"McCormack\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1.1 3-1.2.1.2.1 4-1.2 5-1.2.2.2.1.1.1 6-1.2.2.1.1\n(e / elect-01~e.1\n   :ARG0 (s / state\n            :name (n / name\n                     :op1 \"Arizona\"~e.0))\n   :ARG1 (a / and~e.4\n            :op1 (p / person\n                    :name (n2 / name\n                              :op1 \"Goldwater\"~e.2)\n                    :ARG0-of (h / have-org-role-91\n                                :ARG2 (s2 / senator~e.3)))\n            :op2 (p2 / person\n                     :name (n3 / name\n                               :op1 \"McCormack\"~e.6)\n                     :ARG0-of (h2 / have-org-role-91\n                                  :ARG1 (s3 / state\n                                            :name (n4 / name\n                                                      :op1 \"Massachusetts\"~e.5))\n                                  :ARG2 s2))))", [[0, 7], [8, 15], [16, 25], [26, 33], [34, 37], [38, 51], [52, 61], [61, 62]]], ["# ::snt Arizona elected Goldwater Senator and McCormack Congressman.\n# ::tokens [\"Arizona\", \"elected\", \"Goldwater\", \"Senator\", \"and\", \"McCormack\", \"Congressman\", \".\"]\n# ::lemmas [\"Arizona\", \"elect\", \"Goldwater\", \"Senator\", \"and\", \"McCormack\", \"Congressman\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1.1.1.1 3-1.2.1.1.2 4-1.2 5-1.2.2.1.2.1 6-1.2.2.2\n(e / elect-01~e.1\n   :ARG0 (s / state\n            :name (n / name\n                     :op1 \"Arizona\"~e.0))\n   :ARG1 (a / and~e.4\n            :op1 (p / person\n                    :ARG0-of (h / have-org-role-91\n                                :ARG1 (o / organization\n                                         :name (n2 / name\n                                                   :op1 \"Goldwater\"~e.2))\n                                :ARG2 (s2 / senator~e.3)))\n            :op2 (p2 / person\n                     :ARG0-of (h2 / have-org-role-91\n                                  :ARG1 o\n                                  :name (n3 / name\n                                            :op1 \"McCormack\"~e.5))\n                     :ARG2 (c / congressman~e.6))))", [[0, 7], [8, 15], [16, 25], [26, 33], [34, 37], [38, 47], [48, 59], [59, 60]]], ["# ::snt Bill ate the peaches, and Harry.\n# ::tokens [\"Bill\", \"ate\", \"the\", \"peaches\", \",\", \"and\", \"Harry\", \".\"]\n# ::lemmas [\"Bill\", \"eat\", \"the\", \"peach\", \",\", \"and\", \"Harry\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 3-1.1.2 5-1 6-1.2.1.1.1\n(a / and~e.5\n   :op1 (e / eat-01~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Bill\"~e.0))\n           :ARG1 (p2 / peach~e.3))\n   :op2 (e2 / eat-01\n            :ARG0 (p3 / person\n                      :name (n2 / name\n                                :op1 \"Harry\"~e.6))\n            :ARG1 p2))", [[0, 4], [5, 8], [9, 12], [13, 20], [20, 21], [22, 25], [26, 31], [31, 32]]], ["# ::snt Bill ate the peaches, and Harry, too.\n# ::tokens [\"Bill\", \"ate\", \"the\", \"peaches\", \",\", \"and\", \"Harry\", \",\", \"too\", \".\"]\n# ::lemmas [\"Bill\", \"eat\", \"the\", \"peach\", \",\", \"and\", \"Harry\", \",\", \"too\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 3-1.1.2 5-1 6-1.2.1.1.1 8-1.2.3\n(a / and~e.5\n   :op1 (e / eat-01~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Bill\"~e.0))\n           :ARG1 (p2 / peach~e.3))\n   :op2 (e2 / eat-01\n            :ARG0 (p3 / person\n                      :name (n2 / name\n                                :op1 \"Harry\"~e.6))\n            :ARG1 p2\n            :mod (t / too~e.8)))", [[0, 4], [5, 8], [9, 12], [13, 20], [20, 21], [22, 25], [26, 31], [31, 32], [33, 36], [36, 37]]], ["# ::snt Either Bill ate the peaches, or Harry.\n# ::tokens [\"Either\", \"Bill\", \"ate\", \"the\", \"peaches\", \",\", \"or\", \"Harry\", \".\"]\n# ::lemmas [\"either\", \"Bill\", \"eat\", \"the\", \"peach\", \",\", \"or\", \"Harry\", \".\"]\n# ::alignments 1-1.1.1.1.1 2-1.1 4-1.1.2 6-1 7-1.2.1.1.1\n(o / or~e.6\n   :op1 (e / eat-01~e.2\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Bill\"~e.1))\n           :ARG1 (p2 / peach~e.4))\n   :op2 (e2 / eat-01\n            :ARG0 (p3 / person\n                      :name (n2 / name\n                                :op1 \"Harry\"~e.7))\n            :ARG1 p2))", [[0, 6], [7, 11], [12, 15], [16, 19], [20, 27], [27, 28], [29, 31], [32, 37], [37, 38]]], ["# ::snt Either Ivan will write the play, or Boris will.\n# ::tokens [\"Either\", \"Ivan\", \"will\", \"write\", \"the\", \"play\", \",\", \"or\", \"Boris\", \"will\", \".\"]\n# ::lemmas [\"either\", \"Ivan\", \"will\", \"write\", \"the\", \"play\", \",\", \"or\", \"Boris\", \"will\", \".\"]\n# ::alignments 1-1.1.1.1.1 3-1.1 5-1.1.2 7-1 8-1.2.1.1.1\n(o / or~e.7\n   :op1 (w / write-01~e.3\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Ivan\"~e.1))\n           :ARG1 (p2 / play-11~e.5))\n   :op2 (w2 / write-01\n            :ARG0 (p3 / person\n                      :name (n2 / name\n                                :op1 \"Boris\"~e.8))\n            :ARG1 p2))", [[0, 6], [7, 11], [12, 16], [17, 22], [23, 26], [27, 31], [31, 32], [33, 35], [36, 41], [42, 46], [46, 47]]], ["# ::snt Tom hasn't smoked the grass, nor has Reuben.\n# ::tokens [\"Tom\", \"has\", \"n't\", \"smoked\", \"the\", \"grass\", \",\", \"nor\", \"has\", \"Reuben\", \".\"]\n# ::lemmas [\"Tom\", \"have\", \"not\", \"smoke\", \"the\", \"grass\", \",\", \"nor\", \"have\", \"Reuben\", \".\"]\n# ::alignments 0-1.1.2.1.1 3-1.1 5-1.1.3 9-1.2.1.1.1\n(a / and\n   :op1 (s / smoke-02~e.3\n           :polarity -\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Tom\"~e.0))\n           :ARG1 (g / grass~e.5))\n   :op2 (s2 / smoke-02\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Reuben\"~e.9))\n            :ARG1 g))", [[0, 3], [4, 7], [7, 10], [11, 17], [18, 21], [22, 27], [27, 28], [29, 32], [33, 36], [37, 43], [43, 44]]], ["# ::snt Frank may have told Chet, and Joe may have, too.\n# ::tokens [\"Frank\", \"may\", \"have\", \"told\", \"Chet\", \",\", \"and\", \"Joe\", \"may\", \"have\", \",\", \"too\", \".\"]\n# ::lemmas [\"Frank\", \"may\", \"have\", \"tell\", \"Chet\", \",\", \"and\", \"Joe\", \"may\", \"have\", \",\", \"too\", \".\"]\n# ::alignments 0-1.1.1.1.1.1 3-1.1.1 4-1.1.1.2.1.1 6-1 7-1.2.1.1.1.1 11-1.2.1.3\n(a / and~e.6\n   :op1 (p / possible-01\n           :ARG1 (t / tell-01~e.3\n                    :ARG0 (p2 / person\n                              :name (n / name\n                                       :op1 \"Frank\"~e.0))\n                    :ARG2 (p3 / person\n                              :name (n2 / name\n                                        :op1 \"Chet\"~e.4))))\n   :op2 (p4 / possible-01\n            :ARG1 (t2 / tell-01\n                      :ARG0 (p5 / person\n                                :name (n3 / name\n                                          :op1 \"Joe\"~e.7))\n                      :ARG2 p5\n                      :mod (t3 / too~e.11))))", [[0, 5], [6, 9], [10, 14], [15, 19], [20, 24], [24, 25], [26, 29], [30, 33], [34, 37], [38, 42], [42, 43], [44, 47], [47, 48]]], ["# ::snt Bill must quickly eat the peaches, and Harry must, too.\n# ::tokens [\"Bill\", \"must\", \"quickly\", \"eat\", \"the\", \"peaches\", \",\", \"and\", \"Harry\", \"must\", \",\", \"too\", \".\"]\n# ::lemmas [\"Bill\", \"must\", \"quickly\", \"eat\", \"the\", \"peach\", \",\", \"and\", \"Harry\", \"must\", \",\", \"too\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1.2.3 3-1.1.2 5-1.1.2.2 7-1 8-1.2.1.1.1 11-1.2.2.3\n(a / and~e.7\n   :op1 (o / obligate-01\n           :ARG1 (p / person\n                    :name (n / name\n                             :op1 \"Bill\"~e.0))\n           :ARG2 (e / eat-01~e.3\n                    :ARG0 p\n                    :ARG1 (p2 / peach~e.5)\n                    :ARG1-of (q / quick-02~e.2)))\n   :op2 (o2 / obligate-01\n            :ARG1 (p3 / person\n                      :name (n2 / name\n                                :op1 \"Harry\"~e.8))\n            :ARG2 (e2 / eat-01\n                      :ARG0 p3\n                      :ARG1 p2\n                      :mod (t / too~e.11))))", [[0, 4], [5, 9], [10, 17], [18, 21], [22, 25], [26, 33], [33, 34], [35, 38], [39, 44], [45, 49], [49, 50], [51, 54], [54, 55]]], ["# ::snt Charlie will leave town if his mother-in-law doesn't.\n# ::tokens [\"Charlie\", \"will\", \"leave\", \"town\", \"if\", \"his\", \"mother\", \"-\", \"in\", \"-\", \"law\", \"does\", \"n't\", \".\"]\n# ::lemmas [\"Charlie\", \"will\", \"leave\", \"town\", \"if\", \"his\", \"mother\", \"-\", \"in\", \"-\", \"law\", \"do\", \"not\", \".\"]\n# ::alignments 0-1.1.1.1 2-1 3-1.2 6-1.3.2.1.2 7-1.3.1 11-1.3\n(l / leave-11~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Charlie\"~e.0))\n   :ARG1 (t / town~e.3)\n   :condition (d / do-02~e.11\n                 :polarity -~e.7\n                 :ARG0 (p2 / person\n                           :ARG0-of (h / have-rel-role-91\n                                       :ARG1 p\n                                       :ARG2 (m / mother-in-law~e.6)))))", [[0, 7], [8, 12], [13, 18], [19, 23], [24, 26], [27, 30], [31, 37], [37, 38], [38, 40], [40, 41], [41, 44], [45, 49], [49, 52], [52, 53]]], ["# ::snt Tom swam the English Channel because he believed that Suzy ex.\n# ::tokens [\"Tom\", \"swam\", \"the\", \"English\", \"Channel\", \"because\", \"he\", \"believed\", \"that\", \"Suzy\", \"ex\", \".\"]\n# ::lemmas [\"Tom\", \"swam\", \"the\", \"English\", \"Channel\", \"because\", \"he\", \"believe\", \"that\", \"Suzy\", \"ex\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1.1 4-1.2.1.2 5-1.3 7-1.3.1 9-1.3.1.2.2.1.1 10-1.3.1.2.1.2\n(s / swam-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Tom\"~e.0))\n   :ARG1 (b / broadcast-program\n            :name (n2 / name\n                      :op1 \"English\"~e.3\n                      :op2 \"Channel\"~e.4))\n   :ARG1-of (c / cause-01~e.5\n               :ARG0 (b2 / believe-01~e.7\n                         :ARG0 p\n                         :ARG1 (p2 / person\n                                   :ARG0-of (h / have-rel-role-91\n                                               :ARG1 p\n                                               :ARG2 (e / ex~e.10))\n                                   :domain (p3 / person\n                                               :name (n3 / name\n                                                         :op1 \"Suzy\"~e.9))))))", [[0, 3], [4, 8], [9, 12], [13, 20], [21, 28], [29, 36], [37, 39], [40, 48], [49, 53], [54, 58], [59, 61], [61, 62]]], ["# ::snt Anyone who can, should show me how to wiggle my ears.\n# ::tokens [\"Anyone\", \"who\", \"can\", \",\", \"should\", \"show\", \"me\", \"how\", \"to\", \"wiggle\", \"my\", \"ears\", \".\"]\n# ::lemmas [\"anyone\", \"who\", \"can\", \",\", \"should\", \"show\", \"i\", \"how\", \"to\", \"wiggle\", \"my\", \"ear\", \".\"]\n# ::alignments 0-1.1.1 5-1.1 6-1.1.1.1.1 9-1.1.2.1 11-1.1.1.1.1.1\n(r / recommend-01\n   :ARG1 (s / show-01~e.5\n            :ARG0 (a / anyone~e.0\n                     :ARG0-of (c / capable-01\n                                 :ARG1 (ii / i~e.6\n                                           :part (e / ear~e.11))))\n            :ARG1 (t / thing\n                     :manner-of (w / wiggle-01~e.9\n                                   :ARG0 ii\n                                   :ARG1 e))\n            :ARG2 ii))", [[0, 6], [7, 10], [11, 14], [14, 15], [16, 22], [23, 27], [28, 30], [31, 34], [35, 37], [38, 44], [45, 47], [48, 52], [52, 53]]], ["# ::snt If he hasn't yet, John should try to climb the Eiffel Tower.\n# ::tokens [\"If\", \"he\", \"has\", \"n't\", \"yet\", \",\", \"John\", \"should\", \"try\", \"to\", \"climb\", \"the\", \"Eiffel\", \"Tower\", \".\"]\n# ::lemmas [\"if\", \"he\", \"have\", \"not\", \"yet\", \",\", \"John\", \"should\", \"try\", \"to\", \"climb\", \"the\", \"Eiffel\", \"Tower\", \".\"]\n# ::alignments 2-1.3 4-1.3.4 6-1.1.1.1.1 8-1.1 10-1.1.2 12-1.1.2.2.1.1 13-1.1.2.2\n(r / recommend-01\n   :ARG1 (t / try-01~e.8\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"John\"~e.6))\n            :ARG1 (c / climb-01~e.10\n                     :ARG0 p\n                     :ARG1 (t2 / tower~e.13\n                               :name (n2 / name\n                                         :op1 \"Eiffel\"~e.12\n                                         :op2 \"Tower\"))))\n   :ARG2 p\n   :condition (h / have-06~e.2\n                 :polarity -\n                 :ARG0 p\n                 :ARG1 c\n                 :time (y / yet~e.4)))", [[0, 2], [3, 5], [6, 9], [9, 12], [13, 16], [16, 17], [18, 22], [23, 29], [30, 33], [34, 36], [37, 42], [43, 46], [47, 53], [54, 59], [59, 60]]], ["# ::snt I like Bill's wine, but Max's is even better.\n# ::tokens [\"I\", \"like\", \"Bill\", \"'s\", \"wine\", \",\", \"but\", \"Max\", \"'s\", \"is\", \"even\", \"better\", \".\"]\n# ::lemmas [\"i\", \"like\", \"Bill\", \"'s\", \"wine\", \",\", \"but\", \"Max\", \"'s\", \"be\", \"even\", \"well\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1.1.2.1.1.1 4-1.1.2 6-1 7-1.2.1.1.1.1 10-1.2.2.2\n(c / contrast-01~e.6\n   :ARG1 (l / like-01~e.1\n            :ARG0 (ii / i~e.0)\n            :ARG1 (w / wine~e.4\n                     :poss (p / person\n                              :name (n / name\n                                       :op1 \"Bill\"~e.2))))\n   :ARG2 (h / have-degree-91\n            :ARG1 (w2 / wine\n                      :poss (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Max\"~e.7)))\n            :ARG2 (g / good-02\n                     :ARG1 w2\n                     :mod (e / even~e.10))\n            :ARG3 (m / more)))", [[0, 1], [2, 6], [7, 11], [11, 13], [14, 18], [18, 19], [20, 23], [24, 27], [27, 29], [30, 32], [33, 37], [38, 44], [44, 45]]], ["# ::snt I like Bill's new wine, but Max's old is even better.\n# ::tokens [\"I\", \"like\", \"Bill\", \"'s\", \"new\", \"wine\", \",\", \"but\", \"Max\", \"'s\", \"old\", \"is\", \"even\", \"better\", \".\"]\n# ::lemmas [\"i\", \"like\", \"Bill\", \"'s\", \"new\", \"wine\", \",\", \"but\", \"Max\", \"'s\", \"old\", \"be\", \"even\", \"well\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1.1.2.1.1.1 4-1.1.2.2 5-1.1.2 7-1 8-1.2.1.1.1.1 10-1.2.1.2 12-1.2.2\n(c / contrast-01~e.7\n   :ARG1 (l / like-01~e.1\n            :ARG0 (ii / i~e.0)\n            :ARG1 (w / wine~e.5\n                     :poss (p / person\n                              :name (n / name\n                                       :op1 \"Bill\"~e.2))\n                     :ARG1-of (n2 / new-01~e.4)))\n   :ARG2 (g / good-02\n            :ARG1 (w2 / wine\n                      :poss (p2 / person\n                                :name (n3 / name\n                                          :op1 \"Max\"~e.8))\n                      :mod (o / old~e.10))\n            :mod (e / even~e.12)))", [[0, 1], [2, 6], [7, 11], [11, 13], [14, 17], [18, 22], [22, 23], [24, 27], [28, 31], [31, 33], [34, 37], [38, 40], [41, 45], [46, 52], [52, 53]]], ["# ::snt Bill's funny story about Sue and Max's about Kathy both amazed me.\n# ::tokens [\"Bill\", \"'s\", \"funny\", \"story\", \"about\", \"Sue\", \"and\", \"Max\", \"'s\", \"about\", \"Kathy\", \"both\", \"amazed\", \"me\", \".\"]\n# ::lemmas [\"Bill\", \"'s\", \"funny\", \"story\", \"about\", \"Sue\", \"and\", \"Max\", \"'s\", \"about\", \"Kathy\", \"both\", \"amaze\", \"i\", \".\"]\n# ::alignments 2-1.1.1.3 3-1.1.1 5-1.1.1.1.1.1 6-1.1 7-1.1.1.2.1.1 10-1.1.2.1.1.1 12-1 13-1.2\n(a / amaze-01~e.12\n   :ARG0 (a2 / and~e.6\n             :op1 (s / story~e.3\n                     :topic (p / person\n                               :name (n / name\n                                        :op1 \"Sue\"~e.5))\n                     :topic (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Max\"~e.7))\n                     :mod (f / funny~e.2))\n             :op2 (s2 / story\n                      :topic (p3 / person\n                                 :name (n3 / name\n                                           :op1 \"Kathy\"~e.10))\n                      :poss p))\n   :ARG1 (ii / i~e.13))", [[0, 4], [4, 6], [7, 12], [13, 18], [19, 24], [25, 28], [29, 32], [33, 36], [36, 38], [39, 44], [45, 50], [51, 55], [56, 62], [63, 65], [65, 66]]], ["# ::snt Bill's funny story about Sue and Max's boring about Kathy both amazed me.\n# ::tokens [\"Bill\", \"'s\", \"funny\", \"story\", \"about\", \"Sue\", \"and\", \"Max\", \"'s\", \"boring\", \"about\", \"Kathy\", \"both\", \"amazed\", \"me\", \".\"]\n# ::lemmas [\"Bill\", \"'s\", \"funny\", \"story\", \"about\", \"Sue\", \"and\", \"Max\", \"'s\", \"boring\", \"about\", \"Kathy\", \"both\", \"amaze\", \"i\", \".\"]\n# ::alignments 0-1.1.2.1.1 2-1.1.1 3-1.1 5-1.1.3.1.1.1 6-1.1.3 7-1.1.3.2.1.1 11-1.1.3.3.1.1 13-1 14-1.2\n(a / amaze-01~e.13\n   :ARG0 (s / story~e.3\n            :ARG1-of (f / funny-02~e.2)\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Bill\"~e.0))\n            :topic (a2 / and~e.6\n                       :op1 (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Sue\"~e.5))\n                       :op2 (p3 / person\n                                :name (n3 / name\n                                          :op1 \"Max\"~e.7))\n                       :topic (p4 / person\n                                  :name (n4 / name\n                                            :op1 \"Kathy\"~e.11))))\n   :ARG1 (ii / i~e.14))", [[0, 4], [4, 6], [7, 12], [13, 18], [19, 24], [25, 28], [29, 32], [33, 36], [36, 38], [39, 45], [46, 51], [52, 57], [58, 62], [63, 69], [70, 72], [72, 73]]], ["# ::snt We may safely disregard both Nixon's assurances to us that the war will end and Agnew's that we are incapacitated.\n# ::tokens [\"We\", \"may\", \"safely\", \"disregard\", \"both\", \"Nixon\", \"'s\", \"assurances\", \"to\", \"us\", \"that\", \"the\", \"war\", \"will\", \"end\", \"and\", \"Agnew\", \"'s\", \"that\", \"we\", \"are\", \"incapacitated\", \".\"]\n# ::lemmas [\"we\", \"may\", \"safely\", \"disregard\", \"both\", \"Nixon\", \"'s\", \"assurance\", \"to\", \"we\", \"that\", \"the\", \"war\", \"will\", \"end\", \"and\", \"Agnew\", \"'s\", \"that\", \"we\", \"be\", \"incapacitate\", \".\"]\n# ::alignments 0-1.1.1 2-1.1.3 3-1.1 5-1.1.2.1.1.1.1 7-1.1.2.1 12-1.1.2.1.3.1 14-1.1.2.1.3 15-1.1.2 16-1.1.2.2.1.1.1 21-1.1.2.2.3\n(p / possible-01\n   :ARG1 (d / disregard-01~e.3\n            :ARG0 (w / we~e.0)\n            :ARG1 (a / and~e.15\n                     :op1 (a2 / assure-01~e.7\n                              :ARG0 (p2 / person\n                                        :name (n / name\n                                                 :op1 \"Nixon\"~e.5))\n                              :ARG1 w\n                              :ARG2 (e / end-01~e.14\n                                       :ARG1 (w2 / war~e.12)))\n                     :op2 (a3 / assure-01\n                              :ARG0 (p3 / person\n                                        :name (n2 / name\n                                                  :op1 \"Agnew\"~e.16))\n                              :ARG1 w\n                              :ARG2 (ii / incapacitate-01~e.21\n                                        :ARG1 w)))\n            :ARG0-of (s / safe-01~e.2)))", [[0, 2], [3, 6], [7, 13], [14, 23], [24, 28], [29, 34], [34, 36], [37, 47], [48, 50], [51, 53], [54, 58], [59, 62], [63, 66], [67, 71], [72, 75], [76, 79], [80, 85], [85, 87], [88, 92], [93, 95], [96, 99], [100, 113], [113, 114]]], ["# ::snt Klemperer's recording of Ives' 1st on Columbia and Von Karajan's of Beethoven's 6th are my favorite.\n# ::tokens [\"Klemperer\", \"'s\", \"recording\", \"of\", \"Ives\", \"'\", \"1st\", \"on\", \"Columbia\", \"and\", \"Von\", \"Karajan\", \"'s\", \"of\", \"Beethoven\", \"'s\", \"6th\", \"are\", \"my\", \"favorite\", \".\"]\n# ::lemmas [\"Klemperer\", \"'s\", \"recording\", \"of\", \"Ives\", \"'\", \"1st\", \"on\", \"Columbia\", \"and\", \"Von\", \"Karajan\", \"'s\", \"of\", \"Beethoven\", \"'s\", \"6th\", \"be\", \"my\", \"favorite\", \".\"]\n# ::alignments 0-1.2.1.1.1.1 2-1.2.1 4-1.2.1.2.2.1.1 8-1.2.1.3.1.1 9-1.2 10-1.2.2.1.1.1 11-1.2.2.1.1.2 14-1.2.2.2.2.1.1 19-1\n(f / favor-01~e.19\n   :ARG0 (ii / i)\n   :ARG1 (a / and~e.9\n            :op1 (r / record-01~e.2\n                    :ARG0 (p / person\n                             :name (n / name\n                                      :op1 \"Klemperer\"~e.0))\n                    :ARG1 (t / thing\n                             :ord (o / ordinal-entity\n                                     :value 1)\n                             :poss (p2 / person\n                                       :name (n2 / name\n                                                 :op1 \"Ives\"~e.4)))\n                    :medium (c / company\n                               :name (n3 / name\n                                         :op1 \"Columbia\"~e.8)))\n            :op2 (r2 / record-01\n                     :ARG0 (p3 / person\n                               :name (n4 / name\n                                         :op1 \"Von\"~e.10\n                                         :op2 \"Karajan\"~e.11))\n                     :ARG1 (t2 / thing\n                               :ord (o2 / ordinal-entity\n                                        :value 6)\n                               :poss (p4 / person\n                                         :name (n5 / name\n                                                   :op1 \"Beethoven\"~e.14)))\n                     :medium c)))", [[0, 9], [9, 11], [12, 21], [22, 24], [25, 29], [29, 30], [31, 34], [35, 37], [38, 46], [47, 50], [51, 54], [55, 62], [62, 64], [65, 67], [68, 77], [77, 79], [80, 83], [84, 87], [88, 90], [91, 99], [99, 100]]], ["# ::snt I was astounded by Sam's stunning defeat of Ira in the chess tournament, and Walt's of Willy in the hopscotch contest.\n# ::tokens [\"I\", \"was\", \"astounded\", \"by\", \"Sam\", \"'s\", \"stunning\", \"defeat\", \"of\", \"Ira\", \"in\", \"the\", \"chess\", \"tournament\", \",\", \"and\", \"Walt\", \"'s\", \"of\", \"Willy\", \"in\", \"the\", \"hopscotch\", \"contest\", \".\"]\n# ::lemmas [\"i\", \"be\", \"astounded\", \"by\", \"Sam\", \"'s\", \"stunning\", \"defeat\", \"of\", \"Ira\", \"in\", \"the\", \"chess\", \"tournament\", \",\", \"and\", \"Walt\", \"'s\", \"of\", \"Willy\", \"in\", \"the\", \"hopscotch\", \"contest\", \".\"]\n# ::alignments 0-1.2 2-1 4-1.1.1.1.1.1 6-1.1.1.3 7-1.1.1 9-1.1.1.2.1.1 12-1.1.1.4.1 13-1.1.1.4 15-1.1 16-1.1.2.1.1.1 19-1.1.2.2.1.1 22-1.1.2.3.1 23-1.1.2.3\n(a / astound-01~e.2\n   :ARG0 (a2 / and~e.15\n             :op1 (d / defeat-01~e.7\n                     :ARG0 (p / person\n                              :name (n / name\n                                       :op1 \"Sam\"~e.4))\n                     :ARG1 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Ira\"~e.9))\n                     :ARG1-of (s / stun-01~e.6)\n                     :subevent-of (t / tournament~e.13\n                                     :mod (c / chess~e.12)))\n             :op2 (d2 / defeat-01\n                      :ARG0 (p3 / person\n                                :name (n3 / name\n                                          :op1 \"Walt\"~e.16))\n                      :ARG1 (p4 / person\n                                :name (n4 / name\n                                          :op1 \"Willy\"~e.19))\n                      :subevent-of (c2 / contest-02~e.23\n                                       :mod (h / hopscotch~e.22))))\n   :ARG1 (ii / i~e.0))", [[0, 1], [2, 5], [6, 15], [16, 18], [19, 22], [22, 24], [25, 33], [34, 40], [41, 43], [44, 47], [48, 50], [51, 54], [55, 60], [61, 71], [71, 72], [73, 76], [77, 81], [81, 83], [84, 86], [87, 92], [93, 95], [96, 99], [100, 109], [110, 117], [117, 118]]], ["# ::snt Either Ted's gin from New Jersey or Bill's from Iowa will satisfy the uneducated palates of our guests.\n# ::tokens [\"Either\", \"Ted\", \"'s\", \"gin\", \"from\", \"New\", \"Jersey\", \"or\", \"Bill\", \"'s\", \"from\", \"Iowa\", \"will\", \"satisfy\", \"the\", \"uneducated\", \"palates\", \"of\", \"our\", \"guests\", \".\"]\n# ::lemmas [\"either\", \"Ted\", \"'s\", \"gin\", \"from\", \"New\", \"Jersey\", \"or\", \"Bill\", \"'s\", \"from\", \"Iowa\", \"will\", \"satisfy\", \"the\", \"uneducated\", \"palate\", \"of\", \"our\", \"guest\", \".\"]\n# ::alignments 1-1.1.1.1.1.1 3-1.1.1 5-1.1.1.2.1.1 6-1.1.1.2.1.2 7-1.1 8-1.1.2.1.1.1 11-1.1.2.2.1.1 13-1 15-1.2.1 16-1.2 19-1.2.2\n(s / satisfy-01~e.13\n   :ARG0 (o / or~e.7\n            :op1 (g / gin~e.3\n                    :poss (p / person\n                             :name (n / name\n                                      :op1 \"Ted\"~e.1))\n                    :source (s2 / state\n                                :name (n2 / name\n                                          :op1 \"New\"~e.5\n                                          :op2 \"Jersey\"~e.6)))\n            :op2 (g2 / gin\n                     :poss (p2 / person\n                               :name (n3 / name\n                                         :op1 \"Bill\"~e.8))\n                     :source (s3 / state\n                                 :name (n4 / name\n                                           :op1 \"Iowa\"~e.11))))\n   :ARG1 (p3 / palates~e.16\n             :ARG1-of (e / educate-01~e.15\n                         :polarity -)\n             :poss (g3 / guest~e.19\n                       :poss (w / we))))", [[0, 6], [7, 10], [10, 12], [13, 16], [17, 21], [22, 25], [26, 32], [33, 35], [36, 40], [40, 42], [43, 47], [48, 52], [53, 57], [58, 65], [66, 69], [70, 80], [81, 88], [89, 91], [92, 95], [96, 102], [102, 103]]], ["# ::snt I borrowed Fred's diagram of a snake's fang because Steve's of a spider's eye had been stolen.\n# ::tokens [\"I\", \"borrowed\", \"Fred\", \"'s\", \"diagram\", \"of\", \"a\", \"snake\", \"'s\", \"fang\", \"because\", \"Steve\", \"'s\", \"of\", \"a\", \"spider\", \"'s\", \"eye\", \"had\", \"been\", \"stolen\", \".\"]\n# ::lemmas [\"i\", \"borrow\", \"Fred\", \"'s\", \"diagram\", \"of\", \"a\", \"snake\", \"'s\", \"fang\", \"because\", \"Steve\", \"'s\", \"of\", \"a\", \"spider\", \"'s\", \"eye\", \"have\", \"be\", \"steal\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1.1.1 4-1.2 7-1.2.2.1 9-1.2.2 10-1.3 11-1.3.1.1.1.1.1 15-1.3.1.1.1.2.1 17-1.3.1.1.1.2 20-1.3.1\n(b / borrow-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (d / diagram~e.4\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Fred\"~e.2))\n            :poss (f / fang~e.9\n                     :poss (s / snake~e.7)))\n   :ARG1-of (c / cause-01~e.10\n               :ARG0 (s2 / steal-01~e.20\n                         :ARG1 (d2 / diagram\n                                   :poss (p2 / person\n                                             :name (n2 / name\n                                                       :op1 \"Steve\"~e.11)\n                                             :poss (e / eye~e.17\n                                                      :part-of (s3 / spider~e.15)))))))", [[0, 1], [2, 10], [11, 15], [15, 17], [18, 25], [26, 28], [29, 30], [31, 36], [36, 38], [39, 43], [44, 51], [52, 57], [57, 59], [60, 62], [63, 64], [65, 71], [71, 73], [74, 77], [78, 81], [82, 86], [87, 93], [93, 94]]], ["# ::snt Richter's performance of Bach on the piano doesn't please me as much as Glenn Gould's.\n# ::tokens [\"Richter\", \"'s\", \"performance\", \"of\", \"Bach\", \"on\", \"the\", \"piano\", \"does\", \"n't\", \"please\", \"me\", \"as\", \"much\", \"as\", \"Glenn\", \"Gould\", \"'s\", \".\"]\n# ::lemmas [\"Richter\", \"'s\", \"performance\", \"of\", \"Bach\", \"on\", \"the\", \"piano\", \"do\", \"not\", \"please\", \"i\", \"as\", \"much\", \"as\", \"Glenn\", \"Gould\", \"'s\", \".\"]\n# ::alignments 0-1.2.1.1.1 2-1.2 4-1.2.2.1.1 7-1.2.3 10-1 11-1.3 15-1.4.3.1.1.1 16-1.4.3.1.1.2\n(p / please-01~e.10\n   :polarity -\n   :ARG0 (p2 / perform-01~e.2\n             :ARG0 (p3 / person\n                       :name (n / name\n                                :op1 \"Richter\"~e.0))\n             :ARG1 (m / music\n                      :name (n2 / name\n                                :op1 \"Bach\"~e.4))\n             :manner (p4 / piano~e.7))\n   :ARG1 (ii / i~e.11)\n   :ARG2-of (h / have-degree-91\n               :ARG1 p2\n               :ARG3 (e / equal)\n               :ARG4 (p5 / perform-01\n                         :ARG0 (p6 / person\n                                   :name (n3 / name\n                                             :op1 \"Glenn\"~e.15\n                                             :op2 \"Gould\"~e.16)))))", [[0, 7], [7, 9], [10, 21], [22, 24], [25, 29], [30, 32], [33, 36], [37, 42], [43, 47], [47, 50], [51, 57], [58, 60], [61, 63], [64, 68], [69, 71], [72, 77], [78, 83], [83, 85], [85, 86]]], ["# ::snt Jerry's attempt to blow up the Pentagon.\n# ::tokens [\"Jerry\", \"'s\", \"attempt\", \"to\", \"blow\", \"up\", \"the\", \"Pentagon\", \".\"]\n# ::lemmas [\"Jerry\", \"'s\", \"attempt\", \"to\", \"blow\", \"up\", \"the\", \"Pentagon\", \".\"]\n# ::alignments 0-1.1.1.1 2-1 4-1.2 7-1.2.2.1.1\n(a / attempt-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jerry\"~e.0))\n   :ARG1 (b / blow-up-06~e.4\n            :ARG0 p\n            :ARG1 (g / government-organization\n                     :name (n2 / name\n                               :op1 \"Pentagon\"~e.7))))", [[0, 5], [5, 7], [8, 15], [16, 18], [19, 23], [24, 26], [27, 30], [31, 39], [39, 40]]], ["# ::snt Whose sister always drinks milk?\n# ::tokens [\"Whose\", \"sister\", \"always\", \"drinks\", \"milk\", \"?\"]\n# ::lemmas [\"whose\", \"sister\", \"always\", \"drink\", \"milk\", \"?\"]\n# ::alignments 1-1.1.1.1 2-1.3 3-1 4-1.2\n(d / drink-01~e.3\n   :ARG0 (p / person\n            :ARG0-of (h / have-rel-role-91\n                        :ARG2 (s / sister~e.1))\n            :poss (a / amr-unknown))\n   :ARG1 (m / milk~e.4)\n   :time (a2 / always~e.2))", [[0, 5], [6, 12], [13, 19], [20, 26], [27, 31], [31, 32]]], ["# ::snt I know the person whose mother's dog died.\n# ::tokens [\"I\", \"know\", \"the\", \"person\", \"whose\", \"mother\", \"'s\", \"dog\", \"died\", \".\"]\n# ::lemmas [\"i\", \"know\", \"the\", \"person\", \"whose\", \"mother\", \"'s\", \"dog\", \"die\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 5-1.2.1.1.1.1.1.2 7-1.2.1.1.1 8-1.2.1\n(k / know-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person~e.3\n            :ARG1-of (d / die-01~e.8\n                        :ARG1-of (c / cause-01\n                                    :ARG0 (d2 / dog~e.7\n                                              :poss (p2 / person\n                                                        :ARG0-of (h / have-rel-role-91\n                                                                    :ARG1 p\n                                                                    :ARG2 (m / mother~e.5))))))))", [[0, 1], [2, 6], [7, 10], [11, 17], [18, 23], [24, 30], [30, 32], [33, 36], [37, 41], [41, 42]]], ["# ::snt I know the person to whom they dedicated the building.\n# ::tokens [\"I\", \"know\", \"the\", \"person\", \"to\", \"whom\", \"they\", \"dedicated\", \"the\", \"building\", \".\"]\n# ::lemmas [\"i\", \"know\", \"the\", \"person\", \"to\", \"whom\", \"they\", \"dedicate\", \"the\", \"building\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 7-1.2.1 9-1.2.1.1\n(k / know-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person~e.3\n            :ARG0-of (d / dedicate-01~e.7\n                        :ARG1 (b / building~e.9)\n                        :ARG2 p)))", [[0, 1], [2, 6], [7, 10], [11, 17], [18, 20], [21, 25], [26, 30], [31, 40], [41, 44], [45, 53], [53, 54]]], ["# ::snt I wonder what inspired them.\n# ::tokens [\"I\", \"wonder\", \"what\", \"inspired\", \"them\", \".\"]\n# ::lemmas [\"i\", \"wonder\", \"what\", \"inspire\", \"they\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1 4-1.2.1.1\n(w / wonder-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (t / thing\n            :ARG0-of (ii2 / inspire-01~e.3\n                          :ARG1 (t2 / they~e.4))))", [[0, 1], [2, 8], [9, 13], [14, 22], [23, 27], [27, 28]]], ["# ::snt I wonder whose mother's dog we were all fond of.\n# ::tokens [\"I\", \"wonder\", \"whose\", \"mother\", \"'s\", \"dog\", \"we\", \"were\", \"all\", \"fond\", \"of\", \".\"]\n# ::lemmas [\"i\", \"wonder\", \"whose\", \"mother\", \"'s\", \"dog\", \"we\", \"be\", \"all\", \"fond\", \"of\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1.1.2 5-1.2 6-1.2.1.1.1 8-1.2.1.1.1.1 9-1.2.2\n(w / wonder-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (d / dog~e.5\n            :poss (p / person\n                     :ARG0-of (h / have-rel-role-91\n                                 :ARG1 (w2 / we~e.6\n                                           :mod (a / all~e.8))\n                                 :ARG2 (m / mother~e.3)))\n            :ARG1-of (f / fond-01~e.9\n                        :ARG0 w2)))", [[0, 1], [2, 8], [9, 14], [15, 21], [21, 23], [24, 27], [28, 30], [31, 35], [36, 39], [40, 44], [45, 47], [47, 48]]], ["# ::snt My uncle from Iowa, whose talking to Sandy yesterday annoyed John, is arriving on Tuesday.\n# ::tokens [\"My\", \"uncle\", \"from\", \"Iowa\", \",\", \"whose\", \"talking\", \"to\", \"Sandy\", \"yesterday\", \"annoyed\", \"John\", \",\", \"is\", \"arriving\", \"on\", \"Tuesday\", \".\"]\n# ::lemmas [\"my\", \"uncle\", \"from\", \"Iowa\", \",\", \"whose\", \"talk\", \"to\", \"Sandy\", \"yesterday\", \"annoy\", \"John\", \",\", \"be\", \"arrive\", \"on\", \"Tuesday\", \".\"]\n# ::alignments 1-1.1.1.2 3-1.1.2.1.1 6-1.1.3 8-1.1.3.1.1.1 9-1.1.3.2.2 10-1.1.3.2 11-1.1.3.2.1.1.1 14-1 16-1.2.1\n(a / arrive-01~e.14\n   :ARG1 (p / person\n            :ARG0-of (h / have-rel-role-91\n                        :ARG1 (ii / i)\n                        :ARG2 (u / uncle~e.1))\n            :source (s / state\n                       :name (n / name\n                                :op1 \"Iowa\"~e.3))\n            :ARG0-of (t / talk-01~e.6\n                        :ARG2 (p2 / person\n                                  :name (n2 / name\n                                            :op1 \"Sandy\"~e.8))\n                        :ARG0-of (a2 / annoy-01~e.10\n                                     :ARG1 (p3 / person\n                                               :name (n3 / name\n                                                         :op1 \"John\"~e.11))\n                                     :time (y / yesterday~e.9))))\n   :time (d / date-entity\n            :weekday (t2 / tuesday~e.16)))", [[0, 2], [3, 8], [9, 13], [14, 18], [18, 19], [20, 25], [26, 33], [34, 36], [37, 42], [43, 52], [53, 60], [61, 65], [65, 66], [67, 69], [70, 78], [79, 81], [82, 89], [89, 90]]], ["# ::snt My uncle from Iowa, whom talking to Sandy yesterday annoyed John, is arriving on Tuesday.\n# ::tokens [\"My\", \"uncle\", \"from\", \"Iowa\", \",\", \"whom\", \"talking\", \"to\", \"Sandy\", \"yesterday\", \"annoyed\", \"John\", \",\", \"is\", \"arriving\", \"on\", \"Tuesday\", \".\"]\n# ::lemmas [\"my\", \"uncle\", \"from\", \"Iowa\", \",\", \"whom\", \"talk\", \"to\", \"Sandy\", \"yesterday\", \"annoy\", \"John\", \",\", \"be\", \"arrive\", \"on\", \"Tuesday\", \".\"]\n# ::alignments 1-1.1.1.2 3-1.1.2.1.1 6-1.1.3 8-1.1.3.1.1.1 9-1.1.3.2.2 10-1.1.3.2 11-1.2.1.1 14-1 16-1.3.1\n(a / arrive-01~e.14\n   :ARG1 (p / person\n            :ARG0-of (h / have-rel-role-91\n                        :ARG1 (ii / i)\n                        :ARG2 (u / uncle~e.1))\n            :source (s / state\n                       :name (n / name\n                                :op1 \"Iowa\"~e.3))\n            :ARG0-of (t / talk-01~e.6\n                        :ARG2 (p2 / person\n                                  :name (n2 / name\n                                            :op1 \"Sandy\"~e.8))\n                        :ARG0-of (a2 / annoy-01~e.10\n                                     :ARG1 ii\n                                     :time (y / yesterday~e.9))))\n   :ARG4 (p3 / person\n             :name (n3 / name\n                       :op1 \"John\"~e.11))\n   :time (d / date-entity\n            :weekday (t2 / tuesday~e.16)))", [[0, 2], [3, 8], [9, 13], [14, 18], [18, 19], [20, 24], [25, 32], [33, 35], [36, 41], [42, 51], [52, 59], [60, 64], [64, 65], [66, 68], [69, 77], [78, 80], [81, 88], [88, 89]]], ["# ::snt Goes to the store is bothering them.\n# ::tokens [\"Goes\", \"to\", \"the\", \"store\", \"is\", \"bothering\", \"them\", \".\"]\n# ::lemmas [\"go\", \"to\", \"the\", \"store\", \"be\", \"bother\", \"they\", \".\"]\n# ::alignments 0-1.1 3-1.1.1 5-1 6-1.2\n(b / bother-01~e.5\n   :ARG0 (g / go-02~e.0\n            :ARG4 (s / store~e.3))\n   :ARG1 (t / they~e.6))", [[0, 4], [5, 7], [8, 11], [12, 17], [18, 20], [21, 30], [31, 35], [35, 36]]], ["# ::snt I want to be raining.\n# ::tokens [\"I\", \"want\", \"to\", \"be\", \"raining\", \".\"]\n# ::lemmas [\"i\", \"want\", \"to\", \"be\", \"rain\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2\n(w / want-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (r / rain-01~e.4))", [[0, 1], [2, 6], [7, 9], [10, 12], [13, 20], [20, 21]]], ["# ::snt I'm looking for a yard in which to be a party.\n# ::tokens [\"I\", \"'m\", \"looking\", \"for\", \"a\", \"yard\", \"in\", \"which\", \"to\", \"be\", \"a\", \"party\", \".\"]\n# ::lemmas [\"i\", \"be\", \"look\", \"for\", \"a\", \"yard\", \"in\", \"which\", \"to\", \"be\", \"a\", \"party\", \".\"]\n# ::alignments 0-1.1 2-1 5-1.2 11-1.2.1\n(l / look-01~e.2\n   :ARG0 (ii / i~e.0)\n   :ARG1 (y / yard~e.5\n            :location-of (p / party-01~e.11)))", [[0, 1], [1, 3], [4, 11], [12, 15], [16, 17], [18, 22], [23, 25], [26, 31], [32, 34], [35, 37], [38, 39], [40, 45], [45, 46]]], ["# ::snt Bother yourself that Kim left!\n# ::tokens [\"Bother\", \"yourself\", \"that\", \"Kim\", \"left\", \"!\"]\n# ::lemmas [\"bother\", \"yourself\", \"that\", \"Kim\", \"leave\", \"!\"]\n# ::alignments 0-1 3-1.4.1.1.1 4-1.4\n(b / bother-01~e.0\n   :mode imperative\n   :ARG0 (y / you)\n   :ARG1 y\n   :ARG2 (l / leave-11~e.4\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Kim\"~e.3))))", [[0, 6], [7, 15], [16, 20], [21, 24], [25, 29], [29, 30]]], ["# ::snt Kim read which book.\n# ::tokens [\"Kim\", \"read\", \"which\", \"book\", \".\"]\n# ::lemmas [\"Kim\", \"read\", \"which\", \"book\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2\n(r / read-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kim\"~e.0))\n   :ARG1 (b / book~e.3))", [[0, 3], [4, 8], [9, 14], [15, 19], [19, 20]]], ["# ::snt I think that who went home.\n# ::tokens [\"I\", \"think\", \"that\", \"who\", \"went\", \"home\", \".\"]\n# ::lemmas [\"i\", \"think\", \"that\", \"who\", \"go\", \"home\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2.1 5-1.2.1.1\n(t / think-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person\n            :ARG1-of (g / go-02~e.4\n                        :ARG4 (h / home~e.5))))", [[0, 1], [2, 7], [8, 12], [13, 16], [17, 21], [22, 26], [26, 27]]], ["# ::snt A student whom to talk to us just walked in.\n# ::tokens [\"A\", \"student\", \"whom\", \"to\", \"talk\", \"to\", \"us\", \"just\", \"walked\", \"in\", \".\"]\n# ::lemmas [\"a\", \"student\", \"whom\", \"to\", \"talk\", \"to\", \"we\", \"just\", \"walk\", \"in\", \".\"]\n# ::alignments 1-1.1.1 4-1.1.2 6-1.1.2.1 7-1.2 8-1\n(w / walk-01~e.8\n   :ARG0 (p / person\n            :ARG0-of (s / study-01~e.1)\n            :ARG0-of (t / talk-01~e.4\n                        :ARG2 (w2 / we~e.6)))\n   :time (j / just~e.7))", [[0, 1], [2, 9], [10, 14], [15, 17], [18, 22], [23, 25], [26, 28], [29, 33], [34, 40], [41, 43], [43, 44]]], ["# ::snt I ran into the baker whose bagels I like.\n# ::tokens [\"I\", \"ran\", \"into\", \"the\", \"baker\", \"whose\", \"bagels\", \"I\", \"like\", \".\"]\n# ::lemmas [\"i\", \"run\", \"into\", \"the\", \"baker\", \"whose\", \"bagel\", \"i\", \"like\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2 6-1.2.1 8-1.2.1.1\n(r / run-02~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (b / bakery~e.4\n            :poss-of (b2 / bagel~e.6\n                         :ARG1-of (l / like-01~e.8\n                                     :ARG0 ii))))", [[0, 1], [2, 5], [6, 10], [11, 14], [15, 20], [21, 26], [27, 33], [34, 35], [36, 40], [40, 41]]], ["# ::snt I ran into the baker from whom I bought these bagels.\n# ::tokens [\"I\", \"ran\", \"into\", \"the\", \"baker\", \"from\", \"whom\", \"I\", \"bought\", \"these\", \"bagels\", \".\"]\n# ::lemmas [\"i\", \"run\", \"into\", \"the\", \"baker\", \"from\", \"whom\", \"i\", \"buy\", \"these\", \"bagel\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2.1 8-1.2.2 10-1.2.2.2\n(r / run-02~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person\n            :ARG0-of (b / bake-01~e.4)\n            :ARG2-of (b2 / buy-01~e.8\n                         :ARG0 ii\n                         :ARG1 (b3 / bagel~e.10\n                                   :mod (t / this)))))", [[0, 1], [2, 5], [6, 10], [11, 14], [15, 20], [21, 25], [26, 30], [31, 32], [33, 39], [40, 45], [46, 52], [52, 53]]], ["# ::snt From whom did you buy these bagels?\n# ::tokens [\"From\", \"whom\", \"did\", \"you\", \"buy\", \"these\", \"bagels\", \"?\"]\n# ::lemmas [\"from\", \"whom\", \"do\", \"you\", \"buy\", \"these\", \"bagel\", \"?\"]\n# ::alignments 3-1.1 4-1 6-1.2\n(b / buy-01~e.4\n   :ARG0 (y / you~e.3)\n   :ARG1 (b2 / bagel~e.6\n             :mod (t / this))\n   :ARG2 (a / amr-unknown))", [[0, 4], [5, 9], [10, 13], [14, 17], [18, 21], [22, 27], [28, 34], [34, 35]]], ["# ::snt I can find the baker in whom to place your trust.\n# ::tokens [\"I\", \"can\", \"find\", \"the\", \"baker\", \"in\", \"whom\", \"to\", \"place\", \"your\", \"trust\", \".\"]\n# ::lemmas [\"i\", \"can\", \"find\", \"the\", \"baker\", \"in\", \"whom\", \"to\", \"place\", \"your\", \"trust\", \".\"]\n# ::alignments 0-1.1.1 2-1.1 4-1.1.2.1 8-1.1.3 10-1.1.3.2\n(p / possible-01\n   :ARG1 (f / find-01~e.2\n            :ARG0 (ii / i~e.0)\n            :ARG1 (p2 / person\n                      :ARG0-of (b / bake-01~e.4))\n            :ARG2 (p3 / place-01~e.8\n                      :ARG0 ii\n                      :ARG1 (t / trust-01~e.10\n                               :ARG0 (y / you)\n                               :ARG2 p2))))", [[0, 1], [2, 5], [6, 10], [11, 14], [15, 20], [21, 23], [24, 28], [29, 31], [32, 37], [38, 42], [43, 48], [48, 49]]], ["# ::snt I wonder who to trust.\n# ::tokens [\"I\", \"wonder\", \"who\", \"to\", \"trust\", \".\"]\n# ::lemmas [\"i\", \"wonder\", \"who\", \"to\", \"trust\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2.1\n(w / wonder-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person\n            :ARG1-of (t / trust-02~e.4\n                        :ARG0 ii)))", [[0, 1], [2, 8], [9, 12], [13, 15], [16, 21], [21, 22]]], ["# ::snt These bagels, likes.\n# ::tokens [\"These\", \"bagels\", \",\", \"likes\", \".\"]\n# ::lemmas [\"these\", \"bagel\", \",\", \"like\", \".\"]\n# ::alignments 1-1.1 3-1\n(l / like-01~e.3\n   :ARG1 (b / bagel~e.1\n            :mod (t / this)))", [[0, 5], [6, 12], [12, 13], [14, 19], [19, 20]]], ["# ::snt I ran into the baker whose bagels likes.\n# ::tokens [\"I\", \"ran\", \"into\", \"the\", \"baker\", \"whose\", \"bagels\", \"likes\", \".\"]\n# ::lemmas [\"i\", \"run\", \"into\", \"the\", \"baker\", \"whose\", \"bagel\", \"like\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2.1 6-1.2.2 7-1.2.2.1\n(r / run-02~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person\n            :ARG0-of (b / bake-01~e.4)\n            :poss-of (b2 / bagel~e.6\n                         :ARG1-of (l / like-01~e.7))))", [[0, 1], [2, 5], [6, 10], [11, 14], [15, 20], [21, 26], [27, 33], [34, 39], [39, 40]]], ["# ::snt I ran into the baker from whom bought these bagels.\n# ::tokens [\"I\", \"ran\", \"into\", \"the\", \"baker\", \"from\", \"whom\", \"bought\", \"these\", \"bagels\", \".\"]\n# ::lemmas [\"i\", \"run\", \"into\", \"the\", \"baker\", \"from\", \"whom\", \"buy\", \"these\", \"bagel\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2.1 7-1.2.2 9-1.2.2.1\n(r / run-02~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person\n            :ARG0-of (b / bake-01~e.4)\n            :ARG2-of (b2 / buy-01~e.7\n                         :ARG1 (b3 / bagel~e.9\n                                   :mod (t / this)))))", [[0, 1], [2, 5], [6, 10], [11, 14], [15, 20], [21, 25], [26, 30], [31, 37], [38, 43], [44, 50], [50, 51]]], ["# ::snt When did you wonder what you should say to Sandy?\n# ::tokens [\"When\", \"did\", \"you\", \"wonder\", \"what\", \"you\", \"should\", \"say\", \"to\", \"Sandy\", \"?\"]\n# ::lemmas [\"when\", \"do\", \"you\", \"wonder\", \"what\", \"you\", \"should\", \"say\", \"to\", \"Sandy\", \"?\"]\n# ::alignments 2-1.1 3-1 7-1.2.1 9-1.2.1.2.1.1\n(w / wonder-01~e.3\n   :ARG0 (y / you~e.2)\n   :ARG1 (t / thing\n            :ARG1-of (s / say-01~e.7\n                        :ARG0 y\n                        :ARG2 (p / person\n                                 :name (n / name\n                                          :op1 \"Sandy\"~e.9))\n                        :ARG1-of (r / recommend-01)))\n   :time (a / amr-unknown))", [[0, 4], [5, 8], [9, 12], [13, 19], [20, 24], [25, 28], [29, 35], [36, 39], [40, 42], [43, 48], [48, 49]]], ["# ::snt It was to amuse us that they wanted.\n# ::tokens [\"It\", \"was\", \"to\", \"amuse\", \"us\", \"that\", \"they\", \"wanted\", \".\"]\n# ::lemmas [\"it\", \"be\", \"to\", \"amuse\", \"we\", \"that\", \"they\", \"want\", \".\"]\n# ::alignments 3-1 4-1.2 6-1.1.1 7-1.1\n(a / amuse-01~e.3\n   :ARG0 (w / want-01~e.7\n            :ARG0 (t / they~e.6))\n   :ARG1 (w2 / we~e.4))", [[0, 2], [3, 6], [7, 9], [10, 15], [16, 18], [19, 23], [24, 28], [29, 35], [35, 36]]], ["# ::snt It was to show us that Kim was singing that they wanted.\n# ::tokens [\"It\", \"was\", \"to\", \"show\", \"us\", \"that\", \"Kim\", \"was\", \"singing\", \"that\", \"they\", \"wanted\", \".\"]\n# ::lemmas [\"it\", \"be\", \"to\", \"show\", \"we\", \"that\", \"Kim\", \"be\", \"singe\", \"that\", \"they\", \"want\", \".\"]\n# ::alignments 0-1.1 3-1.2 4-1.2.2 6-1.2.1.1.1.1 8-1.2.1 10-1.2.1.2.1.1 11-1.2.1.2.1\n(h / have-purpose-91\n   :ARG1 (ii / it~e.0)\n   :ARG2 (s / show-01~e.3\n            :ARG1 (s2 / sing-01~e.8\n                      :ARG0 (p / person\n                               :name (n / name\n                                        :op1 \"Kim\"~e.6))\n                      :ARG1 (t / thing\n                               :ARG1-of (w / want-01~e.11\n                                           :ARG0 (t2 / they~e.10))))\n            :ARG2 (w2 / we~e.4)))", [[0, 2], [3, 6], [7, 9], [10, 14], [15, 17], [18, 22], [23, 26], [27, 30], [31, 38], [39, 43], [44, 48], [49, 55], [55, 56]]], ["# ::snt They persuaded us to be no one available.\n# ::tokens [\"They\", \"persuaded\", \"us\", \"to\", \"be\", \"no\", \"one\", \"available\", \".\"]\n# ::lemmas [\"they\", \"persuade\", \"we\", \"to\", \"be\", \"no\", \"one\", \"available\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2 7-1.3\n(p / persuade-01~e.1\n   :ARG0 (t / they~e.0)\n   :ARG1 (w / we~e.2)\n   :ARG2 (a / available-02~e.7\n            :ARG2 (n / no-one)))", [[0, 4], [5, 14], [15, 17], [18, 20], [21, 23], [24, 26], [27, 30], [31, 40], [40, 41]]], ["# ::snt I prefer for Sandy to do the washing and Kim to do the drying.\n# ::tokens [\"I\", \"prefer\", \"for\", \"Sandy\", \"to\", \"do\", \"the\", \"washing\", \"and\", \"Kim\", \"to\", \"do\", \"the\", \"drying\", \".\"]\n# ::lemmas [\"i\", \"prefer\", \"for\", \"Sandy\", \"to\", \"do\", \"the\", \"washing\", \"and\", \"Kim\", \"to\", \"do\", \"the\", \"drying\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1.1.1.1 7-1.2.1 8-1.2 9-1.2.2.1.1.1\n(p / prefer-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (a / and~e.8\n            :op1 (w / wash-01~e.7\n                    :ARG0 (p2 / person\n                              :name (n / name\n                                       :op1 \"Sandy\"~e.3)))\n            :op2 (d / dry-01\n                    :ARG0 (p3 / person\n                              :name (n2 / name\n                                        :op1 \"Kim\"~e.9)))))", [[0, 1], [2, 8], [9, 12], [13, 18], [19, 21], [22, 24], [25, 28], [29, 36], [37, 40], [41, 44], [45, 47], [48, 50], [51, 54], [55, 61], [61, 62]]], ["# ::snt Kim gave a book to Sandy and a record to Dana.\n# ::tokens [\"Kim\", \"gave\", \"a\", \"book\", \"to\", \"Sandy\", \"and\", \"a\", \"record\", \"to\", \"Dana\", \".\"]\n# ::lemmas [\"Kim\", \"give\", \"a\", \"book\", \"to\", \"Sandy\", \"and\", \"a\", \"record\", \"to\", \"Dana\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1 5-1.3.1.1 6-1.2 8-1.2.2\n(g / give-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kim\"~e.0))\n   :ARG1 (a / and~e.6\n            :op1 (b / book~e.3)\n            :op2 (r / record~e.8))\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Sandy\"~e.5)))", [[0, 3], [4, 8], [9, 10], [11, 15], [16, 18], [19, 24], [25, 28], [29, 30], [31, 37], [38, 40], [41, 45], [45, 46]]], ["# ::snt Joan offered, and Mary actually gave, a gold Cadillac to Billy.\n# ::tokens [\"Joan\", \"offered\", \",\", \"and\", \"Mary\", \"actually\", \"gave\", \",\", \"a\", \"gold\", \"Cadillac\", \"to\", \"Billy\", \".\"]\n# ::lemmas [\"Joan\", \"offer\", \",\", \"and\", \"Mary\", \"actually\", \"give\", \",\", \"a\", \"gold\", \"Cadillac\", \"to\", \"Billy\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 3-1 4-1.2.1.1.1 5-1.2.4 6-1.2 9-1.1.2.2 10-1.1.2.1.1 12-1.1.3.1.1\n(a / and~e.3\n   :op1 (o / offer-01~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Joan\"~e.0))\n           :ARG1 (c / car-make\n                    :name (n2 / name\n                              :op1 \"Cadillac\"~e.10)\n                    :mod (g / gold~e.9))\n           :ARG3 (p2 / person\n                     :name (n3 / name\n                               :op1 \"Billy\"~e.12)))\n   :op2 (g2 / give-01~e.6\n            :ARG0 (p3 / person\n                      :name (n4 / name\n                                :op1 \"Mary\"~e.4))\n            :ARG1 c\n            :ARG2 p2\n            :ARG1-of (a2 / actual-02~e.5)))", [[0, 4], [5, 12], [12, 13], [14, 17], [18, 22], [23, 31], [32, 36], [36, 37], [38, 39], [40, 44], [45, 53], [54, 56], [57, 62], [62, 63]]], ["# ::snt He doesn't intend that, in these circumstances, we be rehired.\n# ::tokens [\"He\", \"does\", \"n't\", \"intend\", \"that\", \",\", \"in\", \"these\", \"circumstances\", \",\", \"we\", \"be\", \"rehired\", \".\"]\n# ::lemmas [\"he\", \"do\", \"not\", \"intend\", \"that\", \",\", \"in\", \"these\", \"circumstance\", \",\", \"we\", \"be\", \"rehire\", \".\"]\n# ::alignments 0-1.2 3-1 8-1.3.2 10-1.3.1 12-1.3\n(ii / intend-01~e.3\n    :polarity -\n    :ARG0 (h / he~e.0)\n    :ARG1 (r / rehire-01~e.12\n             :ARG1 (w / we~e.10)\n             :condition (c / circumstance~e.8\n                           :mod (t / this))))", [[0, 2], [3, 7], [7, 10], [11, 17], [18, 22], [22, 23], [24, 26], [27, 32], [33, 46], [46, 47], [48, 50], [51, 53], [54, 61], [61, 62]]], ["# ::snt He doesn't intend for, in these circumstances, us to be rehired.\n# ::tokens [\"He\", \"does\", \"n't\", \"intend\", \"for\", \",\", \"in\", \"these\", \"circumstances\", \",\", \"us\", \"to\", \"be\", \"rehired\", \".\"]\n# ::lemmas [\"he\", \"do\", \"not\", \"intend\", \"for\", \",\", \"in\", \"these\", \"circumstance\", \",\", \"we\", \"to\", \"be\", \"rehire\", \".\"]\n# ::alignments 0-1.2 3-1 8-1.3.3 10-1.3.2\n(ii / intend-01~e.3\n    :polarity -\n    :ARG0 (h / he~e.0)\n    :ARG1 (r / rehash-01\n             :ARG0 h\n             :ARG1 (w / we~e.10)\n             :manner (c / circumstance~e.8\n                        :mod (t / this))))", [[0, 2], [3, 7], [7, 10], [11, 17], [18, 21], [21, 22], [23, 25], [26, 31], [32, 45], [45, 46], [47, 49], [50, 52], [53, 55], [56, 63], [63, 64]]], ["# ::snt There seems to be no way out.\n# ::tokens [\"There\", \"seems\", \"to\", \"be\", \"no\", \"way\", \"out\", \".\"]\n# ::lemmas [\"there\", \"seem\", \"to\", \"be\", \"no\", \"way\", \"out\", \".\"]\n# ::alignments 1-1 4-1.1.1 5-1.1 6-1.1.2\n(s / seem-01~e.1\n   :ARG1 (w / way~e.5\n            :polarity -~e.4\n            :direction (o / out-06~e.6)))", [[0, 5], [6, 11], [12, 14], [15, 17], [18, 20], [21, 24], [25, 28], [28, 29]]], ["# ::snt It seems to be raining.\n# ::tokens [\"It\", \"seems\", \"to\", \"be\", \"raining\", \".\"]\n# ::lemmas [\"it\", \"seem\", \"to\", \"be\", \"rain\", \".\"]\n# ::alignments 1-1 4-1.1\n(s / seem-01~e.1\n   :ARG1 (r / rain-01~e.4))", [[0, 2], [3, 8], [9, 11], [12, 14], [15, 22], [22, 23]]], ["# ::snt I wonder in whom for them to place their trust.\n# ::tokens [\"I\", \"wonder\", \"in\", \"whom\", \"for\", \"them\", \"to\", \"place\", \"their\", \"trust\", \".\"]\n# ::lemmas [\"i\", \"wonder\", \"in\", \"whom\", \"for\", \"they\", \"to\", \"place\", \"their\", \"trust\", \".\"]\n# ::alignments 0-1.1 1-1 5-1.2.1.1 9-1.2.1\n(w / wonder-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person\n            :ARG2-of (t / trust-01~e.9\n                        :ARG0 (t2 / they~e.5))))", [[0, 1], [2, 8], [9, 11], [12, 16], [17, 20], [21, 25], [26, 28], [29, 34], [35, 40], [41, 46], [46, 47]]], ["# ::snt I wonder whom for us to trust.\n# ::tokens [\"I\", \"wonder\", \"whom\", \"for\", \"us\", \"to\", \"trust\", \".\"]\n# ::lemmas [\"i\", \"wonder\", \"whom\", \"for\", \"we\", \"to\", \"trust\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2.1.1 6-1.2.1\n(w / wonder-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person\n            :ARG1-of (t / trust-02~e.6\n                        :ARG0 (w2 / we~e.4))))", [[0, 1], [2, 8], [9, 13], [14, 17], [18, 20], [21, 23], [24, 29], [29, 30]]], ["# ::snt I wonder who us to trust.\n# ::tokens [\"I\", \"wonder\", \"who\", \"us\", \"to\", \"trust\", \".\"]\n# ::lemmas [\"i\", \"wonder\", \"who\", \"we\", \"to\", \"trust\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1.1 5-1.2.1\n(w / wonder-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person\n            :ARG1-of (t / trust-02~e.5\n                        :ARG0 (w2 / we~e.3))))", [[0, 1], [2, 8], [9, 12], [13, 15], [16, 18], [19, 24], [24, 25]]], ["# ::snt I ran into the baker who to place your trust in.\n# ::tokens [\"I\", \"ran\", \"into\", \"the\", \"baker\", \"who\", \"to\", \"place\", \"your\", \"trust\", \"in\", \".\"]\n# ::lemmas [\"i\", \"run\", \"into\", \"the\", \"baker\", \"who\", \"to\", \"place\", \"your\", \"trust\", \"in\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2.1 9-1.2.2\n(r / run-02~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person\n            :ARG0-of (b / bake-01~e.4)\n            :ARG2-of (t / trust-01~e.9\n                        :ARG0 (y / you))))", [[0, 1], [2, 5], [6, 10], [11, 14], [15, 20], [21, 24], [25, 27], [28, 33], [34, 38], [39, 44], [45, 47], [47, 48]]], ["# ::snt I ran into the baker whom to place your trust in.\n# ::tokens [\"I\", \"ran\", \"into\", \"the\", \"baker\", \"whom\", \"to\", \"place\", \"your\", \"trust\", \"in\", \".\"]\n# ::lemmas [\"i\", \"run\", \"into\", \"the\", \"baker\", \"whom\", \"to\", \"place\", \"your\", \"trust\", \"in\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.3 4-1.2.1 9-1.2.2\n(r / run-02~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person\n            :ARG0-of (b / bake-01~e.4)\n            :ARG2-of (t / trust-01~e.9\n                        :ARG0 (y / you)))\n   :direction (ii2 / into~e.2))", [[0, 1], [2, 5], [6, 10], [11, 14], [15, 20], [21, 25], [26, 28], [29, 34], [35, 39], [40, 45], [46, 48], [48, 49]]], ["# ::snt I supported each argument that Sandy thought was unconvincing.\n# ::tokens [\"I\", \"supported\", \"each\", \"argument\", \"that\", \"Sandy\", \"thought\", \"was\", \"unconvincing\", \".\"]\n# ::lemmas [\"i\", \"support\", \"each\", \"argument\", \"that\", \"Sandy\", \"think\", \"be\", \"unconvincing\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1 3-1.2 5-1.2.2.1.1.1 6-1.2.2\n(s / support-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (a / argue-01~e.3\n            :mod (e / each~e.2)\n            :ARG1-of (t / think-01~e.6\n                        :ARG0 (p / person\n                                 :name (n / name\n                                          :op1 \"Sandy\"~e.5))\n                        :ARG2 (c / credible\n                                 :polarity -\n                                 :domain a))))", [[0, 1], [2, 11], [12, 16], [17, 25], [26, 30], [31, 36], [37, 44], [45, 48], [49, 61], [61, 62]]], ["# ::snt I dislike all the people that I thought that voted in the election.\n# ::tokens [\"I\", \"dislike\", \"all\", \"the\", \"people\", \"that\", \"I\", \"thought\", \"that\", \"voted\", \"in\", \"the\", \"election\", \".\"]\n# ::lemmas [\"i\", \"dislike\", \"all\", \"the\", \"people\", \"that\", \"i\", \"think\", \"that\", \"vote\", \"in\", \"the\", \"election\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1 7-1.2.2.2 9-1.2.2 12-1.2.2.1\n(d / dislike-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person\n            :mod (a / all~e.2)\n            :ARG0-of (v / vote-01~e.9\n                        :ARG1 (e / elect-01~e.12)\n                        :ARG1-of (t / think-01~e.7\n                                    :ARG0 ii))))", [[0, 1], [2, 9], [10, 13], [14, 17], [18, 24], [25, 29], [30, 31], [32, 39], [40, 44], [45, 50], [51, 53], [54, 57], [58, 66], [66, 67]]], ["# ::snt Every essay she's written and which I've read is on that pile.\n# ::tokens [\"Every\", \"essay\", \"she\", \"'s\", \"written\", \"and\", \"which\", \"I\", \"'ve\", \"read\", \"is\", \"on\", \"that\", \"pile\", \".\"]\n# ::lemmas [\"every\", \"essay\", \"she\", \"be\", \"write\", \"and\", \"which\", \"i\", \"'ve\", \"read\", \"be\", \"on\", \"that\", \"pile\", \".\"]\n# ::alignments 0-1.1.2 1-1.1 2-1.1.1.1 4-1.1.1 7-1.1.3.1 9-1.1.3 12-1.2.1 13-1.2\n(b / be-located-at-91\n   :ARG1 (e / essay~e.1\n            :ARG1-of (w / write-01~e.4\n                        :ARG0 (s / she~e.2))\n            :mod (e2 / every~e.0)\n            :ARG1-of (r / read-01~e.9\n                        :ARG0 (ii / i~e.7)))\n   :ARG2 (p / pile~e.13\n            :mod (t / that~e.12)))", [[0, 5], [6, 11], [12, 15], [15, 17], [18, 25], [26, 29], [30, 35], [36, 37], [37, 40], [41, 45], [46, 48], [49, 51], [52, 56], [57, 61], [61, 62]]], ["# ::snt Every essay she's written and that I've read is on that pile.\n# ::tokens [\"Every\", \"essay\", \"she\", \"'s\", \"written\", \"and\", \"that\", \"I\", \"'ve\", \"read\", \"is\", \"on\", \"that\", \"pile\", \".\"]\n# ::lemmas [\"every\", \"essay\", \"she\", \"be\", \"write\", \"and\", \"that\", \"i\", \"'ve\", \"read\", \"be\", \"on\", \"that\", \"pile\", \".\"]\n# ::alignments 0-1.1.1.2 1-1.1.1 2-1.1.1.1.1 4-1.1.1.1 5-1.1 6-1.2.1 7-1.1.2.1 9-1.1.2 13-1.2\n(b / be-located-at-91\n   :ARG1 (a / and~e.5\n            :op1 (e / essay~e.1\n                    :ARG1-of (w / write-01~e.4\n                                :ARG0 (s / she~e.2))\n                    :mod (e2 / every~e.0))\n            :op2 (r / read-01~e.9\n                    :ARG0 (ii / i~e.7)\n                    :ARG1 e))\n   :ARG2 (p / pile~e.13\n            :mod (t / that~e.6)))", [[0, 5], [6, 11], [12, 15], [15, 17], [18, 25], [26, 29], [30, 34], [35, 36], [36, 39], [40, 44], [45, 47], [48, 50], [51, 55], [56, 60], [60, 61]]], ["# ::snt Every essay which she's written and that I've read is on that pile.\n# ::tokens [\"Every\", \"essay\", \"which\", \"she\", \"'s\", \"written\", \"and\", \"that\", \"I\", \"'ve\", \"read\", \"is\", \"on\", \"that\", \"pile\", \".\"]\n# ::lemmas [\"every\", \"essay\", \"which\", \"she\", \"be\", \"write\", \"and\", \"that\", \"i\", \"'ve\", \"read\", \"be\", \"on\", \"that\", \"pile\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 3-1.1.2.1 5-1.1.2 7-1.2.1 8-1.1.3.1 10-1.1.3 14-1.2\n(b / be-located-at-91\n   :ARG1 (e / essay~e.1\n            :mod (e2 / every~e.0)\n            :ARG1-of (w / write-01~e.5\n                        :ARG0 (s / she~e.3))\n            :ARG1-of (r / read-01~e.10\n                        :ARG0 (ii / i~e.8)))\n   :ARG2 (p / pile~e.14\n            :mod (t / that~e.7)))", [[0, 5], [6, 11], [12, 17], [18, 21], [21, 23], [24, 31], [32, 35], [36, 40], [41, 42], [42, 45], [46, 50], [51, 53], [54, 56], [57, 61], [62, 66], [66, 67]]], ["# ::snt Every essay that she's written and which I've read is on that pile.\n# ::tokens [\"Every\", \"essay\", \"that\", \"she\", \"'s\", \"written\", \"and\", \"which\", \"I\", \"'ve\", \"read\", \"is\", \"on\", \"that\", \"pile\", \".\"]\n# ::lemmas [\"every\", \"essay\", \"that\", \"she\", \"be\", \"write\", \"and\", \"which\", \"i\", \"'ve\", \"read\", \"be\", \"on\", \"that\", \"pile\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1.2.1 3-1.1.2.1 5-1.1.2 8-1.1.3.1 10-1.1.3 14-1.2\n(b / be-located-at-91\n   :ARG1 (e / essay~e.1\n            :mod (e2 / every~e.0)\n            :ARG1-of (w / write-01~e.5\n                        :ARG0 (s / she~e.3))\n            :ARG1-of (r / read-01~e.10\n                        :ARG0 (ii / i~e.8)))\n   :ARG2 (p / pile~e.14\n            :mod (t / that~e.2)))", [[0, 5], [6, 11], [12, 16], [17, 20], [20, 22], [23, 30], [31, 34], [35, 40], [41, 42], [42, 45], [46, 50], [51, 53], [54, 56], [57, 61], [62, 66], [66, 67]]], ["# ::snt I dislike the person with what we were talking.\n# ::tokens [\"I\", \"dislike\", \"the\", \"person\", \"with\", \"what\", \"we\", \"were\", \"talking\", \".\"]\n# ::lemmas [\"i\", \"dislike\", \"the\", \"person\", \"with\", \"what\", \"we\", \"be\", \"talk\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 8-1.2.1\n(d / dislike-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person~e.3\n            :ARG0-of (t / talk-01~e.8\n                        :ARG1 (t2 / thing))))", [[0, 1], [2, 9], [10, 13], [14, 20], [21, 25], [26, 30], [31, 33], [34, 38], [39, 46], [46, 47]]], ["# ::snt I dislike the person with who we were talking.\n# ::tokens [\"I\", \"dislike\", \"the\", \"person\", \"with\", \"who\", \"we\", \"were\", \"talking\", \".\"]\n# ::lemmas [\"i\", \"dislike\", \"the\", \"person\", \"with\", \"who\", \"we\", \"be\", \"talk\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 6-1.2.1.1 8-1.2.1\n(d / dislike-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person~e.3\n            :ARG2-of (t / talk-01~e.8\n                        :ARG0 (w / we~e.6))))", [[0, 1], [2, 9], [10, 13], [14, 20], [21, 25], [26, 29], [30, 32], [33, 37], [38, 45], [45, 46]]], ["# ::snt The people who take this course who Dana likes usually.\n# ::tokens [\"The\", \"people\", \"who\", \"take\", \"this\", \"course\", \"who\", \"Dana\", \"likes\", \"usually\", \".\"]\n# ::lemmas [\"the\", \"people\", \"who\", \"take\", \"this\", \"course\", \"who\", \"Dana\", \"like\", \"usually\", \".\"]\n# ::alignments 3-1.1 4-1.1.1.1 5-1.1.1 7-1.2.1.1.1 8-1.2 9-1.2.2\n(p / person\n   :ARG0-of (t / take-01~e.3\n               :ARG1 (c / course~e.5\n                        :mod (t2 / this~e.4)))\n   :ARG1-of (l / like-01~e.8\n               :ARG0 (p2 / person\n                         :name (n / name\n                                  :op1 \"Dana\"~e.7))\n               :mod (u / usual~e.9)))", [[0, 3], [4, 10], [11, 14], [15, 19], [20, 24], [25, 31], [32, 35], [36, 40], [41, 46], [47, 54], [54, 55]]], ["# ::snt The person I like which everyone else in the class hates is Pat.\n# ::tokens [\"The\", \"person\", \"I\", \"like\", \"which\", \"everyone\", \"else\", \"in\", \"the\", \"class\", \"hates\", \"is\", \"Pat\", \".\"]\n# ::lemmas [\"the\", \"person\", \"i\", \"like\", \"which\", \"everyone\", \"else\", \"in\", \"the\", \"class\", \"hate\", \"be\", \"Pat\", \".\"]\n# ::alignments 1-1 2-1.3.1 3-1.3 5-1.2.1.1 6-1.2.1.1.1 9-1.2.1.1.2 10-1.2.1 12-1.1.1\n(p / person~e.1\n   :name (n / name\n            :op1 \"Pat\"~e.12)\n   :domain (p2 / person\n               :ARG1-of (h / hate-01~e.10\n                           :ARG0 (e / everyone~e.5\n                                    :mod (e2 / else~e.6)\n                                    :location (c / class~e.9))))\n   :ARG1-of (l / like-01~e.3\n               :ARG0 (ii / i~e.2)))", [[0, 3], [4, 10], [11, 12], [13, 17], [18, 23], [24, 32], [33, 37], [38, 40], [41, 44], [45, 50], [51, 56], [57, 59], [60, 63], [63, 64]]], ["# ::snt The only person Dana is willing to put up with who I like is Pat.\n# ::tokens [\"The\", \"only\", \"person\", \"Dana\", \"is\", \"willing\", \"to\", \"put\", \"up\", \"with\", \"who\", \"I\", \"like\", \"is\", \"Pat\", \".\"]\n# ::lemmas [\"the\", \"only\", \"person\", \"Dana\", \"be\", \"willing\", \"to\", \"put\", \"up\", \"with\", \"who\", \"i\", \"like\", \"be\", \"Pat\", \".\"]\n# ::alignments 1-1.2.3 2-1 3-1.2.1.1 5-1.2.2 11-1.2.2.1.2.1.1 12-1.2.2.1.2.1 14-1.1.1\n(p / person~e.2\n   :name (n / name\n            :op1 \"Pat\"~e.14)\n   :domain (p2 / person\n               :name (n2 / name\n                         :op1 \"Dana\"~e.3)\n               :ARG0-of (w / will-02~e.5\n                           :ARG1 (p3 / put-up-12\n                                     :ARG0 p2\n                                     :ARG1 (p4 / person\n                                               :ARG1-of (l / like-01~e.12\n                                                           :ARG0 (ii / i~e.11)))))\n               :mod (o / only~e.1)))", [[0, 3], [4, 8], [9, 15], [16, 20], [21, 23], [24, 31], [32, 34], [35, 38], [39, 41], [42, 46], [47, 50], [51, 52], [53, 57], [58, 60], [61, 64], [64, 65]]], ["# ::snt Who that you like does Sandy also like?\n# ::tokens [\"Who\", \"that\", \"you\", \"like\", \"does\", \"Sandy\", \"also\", \"like\", \"?\"]\n# ::lemmas [\"who\", \"that\", \"you\", \"like\", \"do\", \"Sandy\", \"also\", \"like\", \"?\"]\n# ::alignments 2-1.1 3-1 5-1.2.1.1 6-1.3\n(l / like-01~e.3\n   :ARG0 (y / you~e.2)\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandy\"~e.5))\n   :mod (a / also~e.6)\n   :polarity (a2 / amr-unknown))", [[0, 3], [4, 8], [9, 12], [13, 17], [18, 22], [23, 28], [29, 33], [34, 38], [38, 39]]], ["# ::snt Who whose parents attended the meeting is still enrolled in school?\n# ::tokens [\"Who\", \"whose\", \"parents\", \"attended\", \"the\", \"meeting\", \"is\", \"still\", \"enrolled\", \"in\", \"school\", \"?\"]\n# ::lemmas [\"who\", \"whose\", \"parent\", \"attend\", \"the\", \"meeting\", \"be\", \"still\", \"enrol\", \"in\", \"school\", \"?\"]\n# ::alignments 2-1.1.1.1 3-1.1.1.1.1 5-1.1.1.1.1.1 7-1.3 8-1 10-1.2\n(e / enroll-01~e.8\n   :ARG1 (a / amr-unknown\n            :ARG0-of (h / have-rel-role-91\n                        :ARG1 (p / parent~e.2\n                                 :ARG0-of (a2 / attend-01~e.3\n                                              :ARG1 (m / meet-03~e.5)))\n                        :ARG2 (c / child)))\n   :ARG2 (s / school~e.10)\n   :mod (s2 / still~e.7))", [[0, 3], [4, 9], [10, 17], [18, 26], [27, 30], [31, 38], [39, 41], [42, 47], [48, 56], [57, 59], [60, 66], [66, 67]]], ["# ::snt Who you like does Sandy also like?\n# ::tokens [\"Who\", \"you\", \"like\", \"does\", \"Sandy\", \"also\", \"like\", \"?\"]\n# ::lemmas [\"who\", \"you\", \"like\", \"do\", \"Sandy\", \"also\", \"like\", \"?\"]\n# ::alignments 1-1.1 2-1 4-1.2.1.1 5-1.3\n(l / like-01~e.2\n   :ARG0 (y / you~e.1)\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandy\"~e.4))\n   :mod (a / also~e.5)\n   :polarity (a2 / amr-unknown))", [[0, 3], [4, 7], [8, 12], [13, 17], [18, 23], [24, 28], [29, 33], [33, 34]]], ["# ::snt The only person for us to visit whose kids Dana is willing to put up with is Sue.\n# ::tokens [\"The\", \"only\", \"person\", \"for\", \"us\", \"to\", \"visit\", \"whose\", \"kids\", \"Dana\", \"is\", \"willing\", \"to\", \"put\", \"up\", \"with\", \"is\", \"Sue\", \".\"]\n# ::lemmas [\"the\", \"only\", \"person\", \"for\", \"we\", \"to\", \"visit\", \"whose\", \"kid\", \"Dana\", \"be\", \"willing\", \"to\", \"put\", \"up\", \"with\", \"be\", \"Sue\", \".\"]\n# ::alignments 1-1.2.2.1 2-1.2 4-1.1 6-1 8-1.2.2.2.2 9-1.2.2.2.1.1.1 11-1.2.2.3.2 17-1.2.1.1\n(v / visit-01~e.6\n   :ARG0 (w / we~e.4)\n   :ARG1 (p / person~e.2\n            :name (n / name\n                     :op1 \"Sue\"~e.17)\n            :domain (p2 / person\n                        :mod (o / only~e.1)\n                        :ARG0-of (h / have-rel-role-91\n                                    :ARG1 (p3 / person\n                                              :name (n2 / name\n                                                        :op1 \"Dana\"~e.9))\n                                    :ARG2 (k / kid~e.8))\n                        :ARG1-of (p4 / put-up-12\n                                     :ARG0 p3\n                                     :ARG1-of (w2 / will-02~e.11\n                                                  :ARG0 p3)))))", [[0, 3], [4, 8], [9, 15], [16, 19], [20, 22], [23, 25], [26, 31], [32, 37], [38, 42], [43, 47], [48, 50], [51, 58], [59, 61], [62, 65], [66, 68], [69, 73], [74, 76], [77, 80], [80, 81]]], ["# ::snt One book for us to read that Leslie praised was Sense and Sensibility.\n# ::tokens [\"One\", \"book\", \"for\", \"us\", \"to\", \"read\", \"that\", \"Leslie\", \"praised\", \"was\", \"Sense\", \"and\", \"Sensibility\", \".\"]\n# ::lemmas [\"One\", \"book\", \"for\", \"we\", \"to\", \"read\", \"that\", \"Leslie\", \"praise\", \"be\", \"sense\", \"and\", \"sensibility\", \".\"]\n# ::alignments 0-1.2.1 1-1.2 3-1.1 5-1 7-1.2.2.1.1.1 8-1.2.2 10-1.2.3.1.1 11-1.2.3.1.2 12-1.2.3.1.3\n(r / read-01~e.5\n   :ARG0 (w / we~e.3)\n   :ARG1 (b / book~e.1\n            :quant 1~e.0\n            :ARG1-of (p / praise-01~e.8\n                        :ARG0 (p2 / person\n                                  :name (n / name\n                                           :op1 \"Leslie\"~e.7)))\n            :domain (b2 / book\n                        :name (n2 / name\n                                  :op1 \"Sense\"~e.10\n                                  :op2 \"and\"~e.11\n                                  :op3 \"Sensitive\"~e.12))))", [[0, 3], [4, 8], [9, 12], [13, 15], [16, 18], [19, 23], [24, 28], [29, 35], [36, 43], [44, 47], [48, 53], [54, 57], [58, 69], [69, 70]]], ["# ::snt One book that Leslie praised for us to read was Sense and Sensibility.\n# ::tokens [\"One\", \"book\", \"that\", \"Leslie\", \"praised\", \"for\", \"us\", \"to\", \"read\", \"was\", \"Sense\", \"and\", \"Sensibility\", \".\"]\n# ::lemmas [\"One\", \"book\", \"that\", \"Leslie\", \"praise\", \"for\", \"we\", \"to\", \"read\", \"be\", \"sense\", \"and\", \"sensibility\", \".\"]\n# ::alignments 0-1.2.1 1-1.1 3-1.1.2.2.1.1.1 6-1.1.2.1 8-1.1.2 10-1.1.1.1 11-1.1.1.2 12-1.1.1.3\n(ii / include-91\n    :ARG1 (b / book~e.1\n             :name (n / name\n                      :op1 \"Sense\"~e.10\n                      :op2 \"and\"~e.11\n                      :op3 \"Sensitive\"~e.12)\n             :ARG1-of (r / read-01~e.8\n                         :ARG0 (w / we~e.6)\n                         :ARG1-of (r2 / recommend-01\n                                      :ARG0 (p / person\n                                               :name (n2 / name\n                                                         :op1 \"Leslie\"~e.3)))))\n    :ARG2 (b2 / book\n              :quant 1~e.0\n              :ARG1-of r\n              :ARG0 w\n              :ARG2 w))", [[0, 3], [4, 8], [9, 13], [14, 20], [21, 28], [29, 32], [33, 35], [36, 38], [39, 43], [44, 47], [48, 53], [54, 57], [58, 69], [69, 70]]], ["# ::snt The bills that we objected to passed by the House last week were vetoed.\n# ::tokens [\"The\", \"bills\", \"that\", \"we\", \"objected\", \"to\", \"passed\", \"by\", \"the\", \"House\", \"last\", \"week\", \"were\", \"vetoed\", \".\"]\n# ::lemmas [\"the\", \"bill\", \"that\", \"we\", \"object\", \"to\", \"pass\", \"by\", \"the\", \"House\", \"last\", \"week\", \"be\", \"veto\", \".\"]\n# ::alignments 1-1.1 3-1.1.2.1 4-1.1.2 6-1.1.1 9-1.1.1.1.1.1 10-1.1.1.2.1 11-1.1.1.2 13-1\n(v / veto-01~e.13\n   :ARG1 (b / bill~e.1\n            :ARG1-of (p / pass-01~e.6\n                        :ARG0 (g / government-organization\n                                 :name (n / name\n                                          :op1 \"House\"~e.9))\n                        :time (w / week~e.11\n                                 :mod (l / last~e.10)))\n            :ARG1-of (o / object-01~e.4\n                        :ARG0 (w2 / we~e.3))))", [[0, 3], [4, 9], [10, 14], [15, 17], [18, 26], [27, 29], [30, 36], [37, 39], [40, 43], [44, 49], [50, 54], [55, 59], [60, 64], [65, 71], [71, 72]]], ["# ::snt The only people who were at Harvard being added to our group were students.\n# ::tokens [\"The\", \"only\", \"people\", \"who\", \"were\", \"at\", \"Harvard\", \"being\", \"added\", \"to\", \"our\", \"group\", \"were\", \"students\", \".\"]\n# ::lemmas [\"the\", \"only\", \"people\", \"who\", \"be\", \"at\", \"Harvard\", \"be\", \"add\", \"to\", \"our\", \"group\", \"be\", \"student\", \".\"]\n# ::alignments 1-1.1.1 6-1.1.2.1.1 8-1.1.3 11-1.1.3.1 13-1.2\n(p / person\n   :domain (p2 / person\n               :mod (o / only~e.1)\n               :location (u / university\n                            :name (n / name\n                                     :op1 \"Harvard\"~e.6))\n               :ARG1-of (a / add-02~e.8\n                           :ARG2 (g / group~e.11\n                                    :poss (w / we))))\n   :ARG0-of (s / study-01~e.13))", [[0, 3], [4, 8], [9, 15], [16, 19], [20, 24], [25, 27], [28, 35], [36, 41], [42, 47], [48, 50], [51, 54], [55, 60], [61, 65], [66, 74], [74, 75]]], ["# ::snt We like us.\n# ::tokens [\"We\", \"like\", \"us\", \".\"]\n# ::lemmas [\"we\", \"like\", \"we\", \".\"]\n# ::alignments 0-1.1 1-1\n(l / like-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 w)", [[0, 2], [3, 7], [8, 10], [10, 11]]], ["# ::snt She likes herself.\n# ::tokens [\"She\", \"likes\", \"herself\", \".\"]\n# ::lemmas [\"she\", \"like\", \"herself\", \".\"]\n# ::alignments 0-1.1 1-1\n(l / like-01~e.1\n   :ARG0 (s / she~e.0)\n   :ARG1 s)", [[0, 3], [4, 9], [10, 17], [17, 18]]], ["# ::snt Ourselves like us.\n# ::tokens [\"Ourselves\", \"like\", \"us\", \".\"]\n# ::lemmas [\"ourselves\", \"like\", \"we\", \".\"]\n# ::alignments 2-1.1\n(r / resemble-01\n   :ARG1 (w / we~e.2)\n   :ARG2 w)", [[0, 9], [10, 14], [15, 17], [17, 18]]], ["# ::snt She voted for her.\n# ::tokens [\"She\", \"voted\", \"for\", \"her\", \".\"]\n# ::lemmas [\"she\", \"vote\", \"for\", \"she\", \".\"]\n# ::alignments 0-1.1 1-1\n(v / vote-01~e.1\n   :ARG0 (s / she~e.0)\n   :ARG1 s)", [[0, 3], [4, 9], [10, 13], [14, 17], [17, 18]]], ["# ::snt We voted for her.\n# ::tokens [\"We\", \"voted\", \"for\", \"her\", \".\"]\n# ::lemmas [\"we\", \"vote\", \"for\", \"she\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2\n(v / vote-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (s / she~e.3))", [[0, 2], [3, 8], [9, 12], [13, 16], [16, 17]]], ["# ::snt We voted for herself.\n# ::tokens [\"We\", \"voted\", \"for\", \"herself\", \".\"]\n# ::lemmas [\"we\", \"vote\", \"for\", \"herself\", \".\"]\n# ::alignments 0-1.1 1-1\n(v / vote-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (s / she))", [[0, 2], [3, 8], [9, 12], [13, 20], [20, 21]]], ["# ::snt We gave presents to us.\n# ::tokens [\"We\", \"gave\", \"presents\", \"to\", \"us\", \".\"]\n# ::lemmas [\"we\", \"give\", \"present\", \"to\", \"we\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2\n(g / give-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (p / present~e.2)\n   :ARG2 w)", [[0, 2], [3, 7], [8, 16], [17, 19], [20, 22], [22, 23]]], ["# ::snt Leslie told us about ourselves.\n# ::tokens [\"Leslie\", \"told\", \"us\", \"about\", \"ourselves\", \".\"]\n# ::lemmas [\"Leslie\", \"tell\", \"we\", \"about\", \"ourselves\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2\n(t / tell-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Leslie\"~e.0))\n   :ARG1 (w / we~e.2)\n   :ARG2 w)", [[0, 6], [7, 11], [12, 14], [15, 20], [21, 30], [30, 31]]], ["# ::snt Leslie told ourselves about ourselves.\n# ::tokens [\"Leslie\", \"told\", \"ourselves\", \"about\", \"ourselves\", \".\"]\n# ::lemmas [\"Leslie\", \"tell\", \"ourselves\", \"about\", \"ourselves\", \".\"]\n# ::alignments 0-1.1.1.1 1-1\n(t / tell-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Leslie\"~e.0))\n   :ARG1 (w / we)\n   :ARG2 w)", [[0, 6], [7, 11], [12, 21], [22, 27], [28, 37], [37, 38]]], ["# ::snt Our friends like ourselves.\n# ::tokens [\"Our\", \"friends\", \"like\", \"ourselves\", \".\"]\n# ::lemmas [\"our\", \"friend\", \"like\", \"ourselves\", \".\"]\n# ::alignments 1-1.1.2\n(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG1 (w / we)\n               :ARG2 (f / friend~e.1))\n   :ARG1-of (r / resemble-01\n               :ARG2 w))", [[0, 3], [4, 11], [12, 16], [17, 26], [26, 27]]], ["# ::snt Those pictures of us offended ourselves.\n# ::tokens [\"Those\", \"pictures\", \"of\", \"us\", \"offended\", \"ourselves\", \".\"]\n# ::lemmas [\"those\", \"picture\", \"of\", \"we\", \"offend\", \"ourselves\", \".\"]\n# ::alignments 1-1.1 3-1.1.1 4-1\n(o / offend-01~e.4\n   :ARG0 (p / picture~e.1\n            :topic (w / we~e.3)\n            :mod (t / that))\n   :ARG1 w)", [[0, 5], [6, 14], [15, 17], [18, 20], [21, 29], [30, 39], [39, 40]]], ["# ::snt We found your letter to us in the trash.\n# ::tokens [\"We\", \"found\", \"your\", \"letter\", \"to\", \"us\", \"in\", \"the\", \"trash\", \".\"]\n# ::lemmas [\"we\", \"find\", \"your\", \"letter\", \"to\", \"we\", \"in\", \"the\", \"trash\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 8-1.4\n(f / find-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (l / letter~e.3\n            :poss (y / you))\n   :ARG2 w\n   :location (t / trash~e.8))", [[0, 2], [3, 8], [9, 13], [14, 20], [21, 23], [24, 26], [27, 29], [30, 33], [34, 39], [39, 40]]], ["# ::snt Vote for us!\n# ::tokens [\"Vote\", \"for\", \"us\", \"!\"]\n# ::lemmas [\"vote\", \"for\", \"we\", \"!\"]\n# ::alignments 0-1 2-1.3\n(v / vote-01~e.0\n   :mode imperative\n   :ARG0 (y / you)\n   :ARG1 (w / we~e.2))", [[0, 4], [5, 8], [9, 11], [11, 12]]], ["# ::snt Vote for ourselves!\n# ::tokens [\"Vote\", \"for\", \"ourselves\", \"!\"]\n# ::lemmas [\"vote\", \"for\", \"ourselves\", \"!\"]\n# ::alignments 0-1\n(v / vote-01~e.0\n   :mode imperative\n   :ARG0 (y / you)\n   :ARG1 (w / we))", [[0, 4], [5, 8], [9, 18], [18, 19]]], ["# ::snt We appealed to them to vote for themselves.\n# ::tokens [\"We\", \"appealed\", \"to\", \"them\", \"to\", \"vote\", \"for\", \"themselves\", \".\"]\n# ::lemmas [\"we\", \"appeal\", \"to\", \"they\", \"to\", \"vote\", \"for\", \"themselves\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 5-1.3\n(a / appeal-02~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (t / they~e.3)\n   :ARG2 (v / vote-01~e.5\n            :ARG0 t\n            :ARG1 t))", [[0, 2], [3, 11], [12, 14], [15, 19], [20, 22], [23, 27], [28, 31], [32, 42], [42, 43]]], ["# ::snt We appealed to them to vote for us.\n# ::tokens [\"We\", \"appealed\", \"to\", \"them\", \"to\", \"vote\", \"for\", \"us\", \".\"]\n# ::lemmas [\"we\", \"appeal\", \"to\", \"they\", \"to\", \"vote\", \"for\", \"we\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 5-1.3\n(a / appeal-02~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (t / they~e.3)\n   :ARG2 (v / vote-01~e.5\n            :ARG0 t\n            :ARG1 w))", [[0, 2], [3, 11], [12, 14], [15, 19], [20, 22], [23, 27], [28, 31], [32, 34], [34, 35]]], ["# ::snt We appeared to them to vote for them.\n# ::tokens [\"We\", \"appeared\", \"to\", \"them\", \"to\", \"vote\", \"for\", \"them\", \".\"]\n# ::lemmas [\"we\", \"appear\", \"to\", \"they\", \"to\", \"vote\", \"for\", \"they\", \".\"]\n# ::alignments 1-1 3-1.1.1 5-1.1\n(a / appear-02~e.1\n   :ARG1 (v / vote-01~e.5\n            :ARG0 (t / they~e.3)\n            :ARG1 t)\n   :ARG2 t)", [[0, 2], [3, 11], [12, 14], [15, 19], [20, 22], [23, 27], [28, 31], [32, 36], [36, 37]]], ["# ::snt We appeared to them to vote for ourselves.\n# ::tokens [\"We\", \"appeared\", \"to\", \"them\", \"to\", \"vote\", \"for\", \"ourselves\", \".\"]\n# ::lemmas [\"we\", \"appear\", \"to\", \"they\", \"to\", \"vote\", \"for\", \"ourselves\", \".\"]\n# ::alignments 0-1.1.2 1-1 3-1.1.1 5-1.1\n(a / appear-02~e.1\n   :ARG1 (v / vote-01~e.5\n            :ARG0 (t / they~e.3)\n            :ARG1 (w / we~e.0))\n   :ARG2 w)", [[0, 2], [3, 11], [12, 14], [15, 19], [20, 22], [23, 27], [28, 31], [32, 41], [41, 42]]], ["# ::snt We wrapped the blankets around us.\n# ::tokens [\"We\", \"wrapped\", \"the\", \"blankets\", \"around\", \"us\", \".\"]\n# ::lemmas [\"we\", \"wrap\", \"the\", \"blanket\", \"around\", \"we\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2\n(w / wrap-01~e.1\n   :ARG0 (w2 / we~e.0)\n   :ARG1 (b / blanket~e.3)\n   :ARG2 w2)", [[0, 2], [3, 10], [11, 14], [15, 23], [24, 30], [31, 33], [33, 34]]], ["# ::snt We wrapped the blankets around ourselves.\n# ::tokens [\"We\", \"wrapped\", \"the\", \"blankets\", \"around\", \"ourselves\", \".\"]\n# ::lemmas [\"we\", \"wrap\", \"the\", \"blanket\", \"around\", \"ourselves\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2\n(w / wrap-01~e.1\n   :ARG0 (w2 / we~e.0)\n   :ARG1 (b / blanket~e.3)\n   :ARG2 w2)", [[0, 2], [3, 10], [11, 14], [15, 23], [24, 30], [31, 40], [40, 41]]], ["# ::snt The judge sent them to the pen for a decade.\n# ::tokens [\"The\", \"judge\", \"sent\", \"them\", \"to\", \"the\", \"pen\", \"for\", \"a\", \"decade\", \".\"]\n# ::lemmas [\"the\", \"judge\", \"send\", \"they\", \"to\", \"the\", \"pen\", \"for\", \"a\", \"decade\", \".\"]\n# ::alignments 1-1.1.1 2-1 3-1.2 6-1.3 9-1.4.2\n(s / send-03~e.2\n   :ARG0 (p / person\n            :ARG0-of (j / judge-01~e.1))\n   :ARG1 (t / they~e.3)\n   :ARG4 (p2 / pen~e.6)\n   :duration (t2 / temporal-quantity\n                 :quant 1\n                 :unit (d / decade~e.9)))", [[0, 3], [4, 9], [10, 14], [15, 19], [20, 22], [23, 26], [27, 30], [31, 34], [35, 36], [37, 43], [43, 44]]], ["# ::snt The cheetah will run down the hill.\n# ::tokens [\"The\", \"cheetah\", \"will\", \"run\", \"down\", \"the\", \"hill\", \".\"]\n# ::lemmas [\"the\", \"cheetah\", \"will\", \"run\", \"down\", \"the\", \"hill\", \".\"]\n# ::alignments 1-1.1 3-1 4-1.3 6-1.2\n(r / run-02~e.3\n   :ARG0 (c / cheetah~e.1)\n   :path (h / hill~e.6)\n   :direction (d / down~e.4))", [[0, 3], [4, 11], [12, 16], [17, 20], [21, 25], [26, 29], [30, 34], [34, 35]]], ["# ::snt The president will run.\n# ::tokens [\"The\", \"president\", \"will\", \"run\", \".\"]\n# ::lemmas [\"the\", \"president\", \"will\", \"run\", \".\"]\n# ::alignments 1-1.1.1.1 3-1\n(r / run-02~e.3\n   :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                        :ARG2 (p2 / president~e.1))))", [[0, 3], [4, 13], [14, 18], [19, 22], [22, 23]]], ["# ::snt This trail should run over the hill.\n# ::tokens [\"This\", \"trail\", \"should\", \"run\", \"over\", \"the\", \"hill\", \".\"]\n# ::lemmas [\"this\", \"trail\", \"should\", \"run\", \"over\", \"the\", \"hill\", \".\"]\n# ::alignments 0-1.1.1.1 1-1.1.1 3-1.1 4-1.1.2 6-1.1.2.1\n(r / recommend-01\n   :ARG1 (r2 / run-04~e.3\n             :ARG1 (t / trail~e.1\n                      :mod (t2 / this~e.0))\n             :path (o / over~e.4\n                      :op1 (h / hill~e.6))))", [[0, 4], [5, 10], [11, 17], [18, 21], [22, 26], [27, 30], [31, 35], [35, 36]]], ["# ::snt This room will run $200 or more.\n# ::tokens [\"This\", \"room\", \"will\", \"run\", \"$\", \"200\", \"or\", \"more\", \".\"]\n# ::lemmas [\"this\", \"room\", \"will\", \"run\", \"$\", \"200\", \"or\", \"more\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 3-1 5-1.2.1.1\n(r / run-01~e.3\n   :ARG1 (r2 / room~e.1\n             :mod (t / this~e.0))\n   :ARG3 (a / at-least\n            :op1 (m / monetary-quantity\n                    :quant 200~e.5\n                    :unit (d / dollar))))", [[0, 4], [5, 9], [10, 14], [15, 18], [19, 20], [20, 23], [24, 26], [27, 31], [31, 32]]], ["# ::snt They will run the risk.\n# ::tokens [\"They\", \"will\", \"run\", \"the\", \"risk\", \".\"]\n# ::lemmas [\"they\", \"will\", \"run\", \"the\", \"risk\", \".\"]\n# ::alignments 0-1.1 4-1\n(r / risk-01~e.4\n   :ARG0 (t / they~e.0))", [[0, 4], [5, 9], [10, 13], [14, 17], [18, 22], [22, 23]]], ["# ::snt There is a run in that stocking.\n# ::tokens [\"There\", \"is\", \"a\", \"run\", \"in\", \"that\", \"stocking\", \".\"]\n# ::lemmas [\"there\", \"be\", \"a\", \"run\", \"in\", \"that\", \"stocking\", \".\"]\n# ::alignments 3-1 5-1.1.1 6-1.1\n(r / run-01~e.3\n   :ARG1 (s / stocking~e.6\n            :mod (t / that~e.5)))", [[0, 5], [6, 8], [9, 10], [11, 14], [15, 17], [18, 22], [23, 31], [31, 32]]], ["# ::snt Fats won with a run of 20.\n# ::tokens [\"Fats\", \"won\", \"with\", \"a\", \"run\", \"of\", \"20\", \".\"]\n# ::lemmas [\"Fats\", \"win\", \"with\", \"a\", \"run\", \"of\", \"20\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.2 6-1.2.1\n(w / win-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fats\"~e.0))\n   :manner (r / run-13~e.4\n              :quant 20~e.6))", [[0, 4], [5, 8], [9, 13], [14, 15], [16, 19], [20, 22], [23, 25], [25, 26]]], ["# ::snt An earthquake in Romania moved buildings as far away as Moscow and Rome.\n# ::tokens [\"An\", \"earthquake\", \"in\", \"Romania\", \"moved\", \"buildings\", \"as\", \"far\", \"away\", \"as\", \"Moscow\", \"and\", \"Rome\", \".\"]\n# ::lemmas [\"an\", \"earthquake\", \"in\", \"Romania\", \"move\", \"building\", \"as\", \"far\", \"away\", \"as\", \"Moscow\", \"and\", \"Rome\", \".\"]\n# ::alignments 1-1.1 3-1.1.1.1.1 4-1 5-1.2 7-1.3 10-1.3.1.3.1.1.1 11-1.3.1.3 12-1.3.1.3.2.1.1\n(m / move-01~e.4\n   :ARG0 (e / earthquake~e.1\n            :location (c / country\n                         :name (n / name\n                                  :op1 \"Romania\"~e.3)))\n   :ARG1 (b / building~e.5)\n   :ARG2 (f / far~e.7\n            :ARG2-of (h / have-degree-91\n                        :ARG1 b\n                        :ARG3 (e2 / equal)\n                        :ARG4 (a / and~e.11\n                                 :op1 (c2 / city\n                                          :name (n2 / name\n                                                    :op1 \"Moscow\"~e.10))\n                                 :op2 (c3 / city\n                                          :name (n3 / name\n                                                    :op1 \"Rome\"~e.12))))))", [[0, 2], [3, 13], [14, 16], [17, 24], [25, 30], [31, 40], [41, 43], [44, 47], [48, 52], [53, 55], [56, 62], [63, 66], [67, 71], [71, 72]]], ["# ::snt The German shepherd turned on its master.\n# ::tokens [\"The\", \"German\", \"shepherd\", \"turned\", \"on\", \"its\", \"master\", \".\"]\n# ::lemmas [\"the\", \"German\", \"shepherd\", \"turn\", \"on\", \"its\", \"master\", \".\"]\n# ::alignments 1-1.1.2.1.1 2-1.1.1 3-1 6-1.2.1.2\n(t / turn-18~e.3\n   :ARG0 (p / person\n            :ARG0-of (s / shepherd-01~e.2)\n            :mod (c / country\n                    :name (n / name\n                             :op1 \"Germany\"~e.1)))\n   :direction (p2 / person\n                  :ARG0-of (h / have-rel-role-91\n                              :ARG1 p\n                              :ARG2 (m / master~e.6))))", [[0, 3], [4, 10], [11, 19], [20, 26], [27, 29], [30, 33], [34, 40], [40, 41]]], ["# ::snt I saw that gas can explode.\n# ::tokens [\"I\", \"saw\", \"that\", \"gas\", \"can\", \"explode\", \".\"]\n# ::lemmas [\"i\", \"see\", \"that\", \"gas\", \"can\", \"explode\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1.1.1 3-1.2.1.1 5-1.2.1\n(s / see-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / possible-01\n            :ARG1 (e / explode-01~e.5\n                     :ARG1 (g / gas~e.3\n                              :mod (t / that~e.2)))))", [[0, 1], [2, 5], [6, 10], [11, 14], [15, 18], [19, 26], [26, 27]]], ["# ::snt The only thing capable of consuming this food has four legs and flies.\n# ::tokens [\"The\", \"only\", \"thing\", \"capable\", \"of\", \"consuming\", \"this\", \"food\", \"has\", \"four\", \"legs\", \"and\", \"flies\", \".\"]\n# ::lemmas [\"the\", \"only\", \"thing\", \"capable\", \"of\", \"consume\", \"this\", \"food\", \"have\", \"four\", \"leg\", \"and\", \"fly\", \".\"]\n# ::alignments 1-1.1.1 2-1.1 3-1.1.2 5-1.1.2.1 6-1.1.2.1.1.1 7-1.1.2.1.1 8-1 9-1.2.1.1 10-1.2.1 11-1.2 12-1.2.2\n(h / have-03~e.8\n   :ARG0 (t / thing~e.2\n            :mod (o / only~e.1)\n            :ARG1-of (c / capable-01~e.3\n                        :ARG2 (c2 / consume-01~e.5\n                                  :ARG1 (f / food~e.7\n                                           :mod (t2 / this~e.6)))))\n   :ARG1 (a / and~e.11\n            :op1 (l / leg~e.10\n                    :quant 4~e.9)\n            :op2 (f2 / fly~e.12\n                     :quant 4)))", [[0, 3], [4, 8], [9, 14], [15, 22], [23, 25], [26, 35], [36, 40], [41, 45], [46, 49], [50, 54], [55, 59], [60, 63], [64, 69], [69, 70]]], ["# ::snt They found the book on the table.\n# ::tokens [\"They\", \"found\", \"the\", \"book\", \"on\", \"the\", \"table\", \".\"]\n# ::lemmas [\"they\", \"find\", \"the\", \"book\", \"on\", \"the\", \"table\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 6-1.2.1\n(f / find-01~e.1\n   :ARG0 (t / they~e.0)\n   :ARG1 (b / book~e.3\n            :location (t2 / table~e.6)))", [[0, 4], [5, 10], [11, 14], [15, 19], [20, 22], [23, 26], [27, 32], [32, 33]]], ["# ::snt Which experts testified against defendants who exposed themselves?\n# ::tokens [\"Which\", \"experts\", \"testified\", \"against\", \"defendants\", \"who\", \"exposed\", \"themselves\", \"?\"]\n# ::lemmas [\"which\", \"expert\", \"testify\", \"against\", \"defendant\", \"who\", \"expose\", \"themselves\", \"?\"]\n# ::alignments 1-1.1.1 2-1 4-1.2.1 6-1.2.2\n(t / testify-01~e.2\n   :ARG0 (p / person\n            :ARG1-of (e / expert-01~e.1)\n            :mod (a / amr-unknown))\n   :ARG3 (p2 / person\n             :ARG0-of (d / defend-01~e.4)\n             :ARG0-of (e2 / expose-01~e.6)\n             :ARG1-of e2))", [[0, 5], [6, 13], [14, 23], [24, 31], [32, 42], [43, 46], [47, 54], [55, 65], [65, 66]]], ["# ::snt List all experts for the defendant who represented themselves.\n# ::tokens [\"List\", \"all\", \"experts\", \"for\", \"the\", \"defendant\", \"who\", \"represented\", \"themselves\", \".\"]\n# ::lemmas [\"list\", \"all\", \"expert\", \"for\", \"the\", \"defendant\", \"who\", \"represent\", \"themselves\", \".\"]\n# ::alignments 0-1 1-1.1.2 2-1.1.1 5-1.1.3 7-1.1.3.1\n(l / list-01~e.0\n   :ARG1 (p / person\n            :ARG1-of (e / expert-01~e.2)\n            :mod (a / all~e.1)\n            :beneficiary (d / defendant~e.5\n                            :ARG0-of (r / represent-01~e.7)\n                            :ARG1-of r)))", [[0, 4], [5, 8], [9, 16], [17, 20], [21, 24], [25, 34], [35, 38], [39, 50], [51, 61], [61, 62]]], ["# ::snt List associates of each defendant who speak Spanish.\n# ::tokens [\"List\", \"associates\", \"of\", \"each\", \"defendant\", \"who\", \"speak\", \"Spanish\", \".\"]\n# ::lemmas [\"list\", \"associate\", \"of\", \"each\", \"defendant\", \"who\", \"speak\", \"Spanish\", \".\"]\n# ::alignments 0-1 1-1.1.1 3-1.1.1.1.1 4-1.1.1.1 6-1.1.2 7-1.1.2.1.1.1\n(l / list-01~e.0\n   :ARG1 (p / person\n            :ARG1-of (a / associate-01~e.1\n                        :ARG2 (d / defendant~e.4\n                                 :mod (e / each~e.3)))\n            :ARG0-of (s / speak-01~e.6\n                        :ARG3 (l2 / language\n                                  :name (n / name\n                                           :op1 \"Spanish\"~e.7)))))", [[0, 4], [5, 15], [16, 18], [19, 23], [24, 33], [34, 37], [38, 43], [44, 51], [51, 52]]], ["# ::snt We persuaded there to be several students at the talk.\n# ::tokens [\"We\", \"persuaded\", \"there\", \"to\", \"be\", \"several\", \"students\", \"at\", \"the\", \"talk\", \".\"]\n# ::lemmas [\"we\", \"persuade\", \"there\", \"to\", \"be\", \"several\", \"student\", \"at\", \"the\", \"talk\", \".\"]\n# ::alignments 0-1.1 1-1 5-1.2.2 6-1.2.1 9-1.2.3\n(p / persuade-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (p2 / person\n             :ARG0-of (s / study-01~e.6)\n             :quant (s2 / several~e.5)\n             :location (t / talk-01~e.9)))", [[0, 2], [3, 12], [13, 18], [19, 21], [22, 24], [25, 32], [33, 41], [42, 44], [45, 48], [49, 53], [53, 54]]], ["# ::snt Sentences some go on and on.\n# ::tokens [\"Sentences\", \"some\", \"go\", \"on\", \"and\", \"on\", \".\"]\n# ::lemmas [\"sentence\", \"some\", \"go\", \"on\", \"and\", \"on\", \".\"]\n# ::alignments 0-1.1 1-1.1.1 2-1\n(g / go-01~e.2\n   :ARG1 (s / sentence-01~e.0\n            :quant (s2 / some~e.1))\n   :mod (o / on-and-on))", [[0, 9], [10, 14], [15, 17], [18, 20], [21, 24], [25, 27], [27, 28]]], ["# ::snt Some sentences go on and on and on and on and on.\n# ::tokens [\"Some\", \"sentences\", \"go\", \"on\", \"and\", \"on\", \"and\", \"on\", \"and\", \"on\", \"and\", \"on\", \".\"]\n# ::lemmas [\"some\", \"sentence\", \"go\", \"on\", \"and\", \"on\", \"and\", \"on\", \"and\", \"on\", \"and\", \"on\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1\n(g / go-01~e.2\n   :ARG1 (s / sentence~e.1\n            :mod (s2 / some~e.0))\n   :mod (o / on-and-on))", [[0, 4], [5, 14], [15, 17], [18, 20], [21, 24], [25, 27], [28, 31], [32, 34], [35, 38], [39, 41], [42, 45], [46, 48], [48, 49]]], ["# ::snt A dog with brown spots chased a cat with no tail.\n# ::tokens [\"A\", \"dog\", \"with\", \"brown\", \"spots\", \"chased\", \"a\", \"cat\", \"with\", \"no\", \"tail\", \".\"]\n# ::lemmas [\"a\", \"dog\", \"with\", \"brown\", \"spot\", \"chase\", \"a\", \"cat\", \"with\", \"no\", \"tail\", \".\"]\n# ::alignments 1-1.1 3-1.1.1.1.1 4-1.1.1.1 5-1 7-1.2 9-1.2.1.1 10-1.2.1.2\n(c / chase-01~e.5\n   :ARG0 (d / dog~e.1\n            :ARG0-of (h / have-03\n                        :ARG1 (s / spot~e.4\n                                 :ARG1-of (b / brown-02~e.3))))\n   :ARG1 (c2 / cat~e.7\n             :ARG0-of (h2 / have-03\n                          :polarity -~e.9\n                          :ARG1 (t / tail~e.10))))", [[0, 1], [2, 5], [6, 10], [11, 16], [17, 22], [23, 29], [30, 31], [32, 35], [36, 40], [41, 43], [44, 48], [48, 49]]], ["# ::snt Some people yell at the noisy dogs in my neighborhood.\n# ::tokens [\"Some\", \"people\", \"yell\", \"at\", \"the\", \"noisy\", \"dogs\", \"in\", \"my\", \"neighborhood\", \".\"]\n# ::lemmas [\"some\", \"people\", \"yell\", \"at\", \"the\", \"noisy\", \"dog\", \"in\", \"my\", \"neighborhood\", \".\"]\n# ::alignments 0-1.1.1 2-1 5-1.2.1 6-1.2 9-1.2.2\n(y / yell-01~e.2\n   :ARG0 (p / person\n            :mod (s / some~e.0))\n   :ARG2 (d / dog~e.6\n            :mod (n / noisy~e.5)\n            :location (n2 / neighborhood~e.9\n                          :poss (ii / i))))", [[0, 4], [5, 11], [12, 16], [17, 19], [20, 23], [24, 29], [30, 34], [35, 37], [38, 40], [41, 53], [53, 54]]], ["# ::snt Some people yell at the noisy dogs.\n# ::tokens [\"Some\", \"people\", \"yell\", \"at\", \"the\", \"noisy\", \"dogs\", \".\"]\n# ::lemmas [\"some\", \"people\", \"yell\", \"at\", \"the\", \"noisy\", \"dog\", \".\"]\n# ::alignments 0-1.1.1 2-1 5-1.2.1 6-1.2\n(y / yell-01~e.2\n   :ARG0 (p / person\n            :mod (s / some~e.0))\n   :ARG2 (d / dog~e.6\n            :mod (n / noisy~e.5)))", [[0, 4], [5, 11], [12, 16], [17, 19], [20, 23], [24, 29], [30, 34], [34, 35]]], ["# ::snt Some people yell at dogs in my neighborhood.\n# ::tokens [\"Some\", \"people\", \"yell\", \"at\", \"dogs\", \"in\", \"my\", \"neighborhood\", \".\"]\n# ::lemmas [\"some\", \"people\", \"yell\", \"at\", \"dog\", \"in\", \"my\", \"neighborhood\", \".\"]\n# ::alignments 0-1.1.1 2-1 4-1.2 7-1.3\n(y / yell-01~e.2\n   :ARG0 (p / person\n            :mod (s / some~e.0))\n   :ARG2 (d / dog~e.4)\n   :location (n / neighborhood~e.7\n                :poss (ii / i)))", [[0, 4], [5, 11], [12, 16], [17, 19], [20, 24], [25, 27], [28, 30], [31, 43], [43, 44]]], ["# ::snt Some people consider the noisy dogs in my neighborhood dangerous.\n# ::tokens [\"Some\", \"people\", \"consider\", \"the\", \"noisy\", \"dogs\", \"in\", \"my\", \"neighborhood\", \"dangerous\", \".\"]\n# ::lemmas [\"some\", \"people\", \"consider\", \"the\", \"noisy\", \"dog\", \"in\", \"my\", \"neighborhood\", \"dangerous\", \".\"]\n# ::alignments 0-1.1.1 2-1 4-1.2.1.1 5-1.2.1 8-1.2.1.2 9-1.2\n(c / consider-01~e.2\n   :ARG0 (p / person\n            :mod (s / some~e.0))\n   :ARG1 (d / dangerous~e.9\n            :domain (d2 / dog~e.5\n                        :mod (n / noisy~e.4)\n                        :location (n2 / neighborhood~e.8\n                                      :poss (ii / i)))))", [[0, 4], [5, 11], [12, 20], [21, 24], [25, 30], [31, 35], [36, 38], [39, 41], [42, 54], [55, 64], [64, 65]]], ["# ::snt We enjoyed the movie with Cher.\n# ::tokens [\"We\", \"enjoyed\", \"the\", \"movie\", \"with\", \"Cher\", \".\"]\n# ::lemmas [\"we\", \"enjoy\", \"the\", \"movie\", \"with\", \"Cher\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 5-1.3.1.1\n(e / enjoy-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (m / movie~e.3)\n   :accompanier (p / person\n                   :name (n / name\n                            :op1 \"Cher\"~e.5)))", [[0, 2], [3, 10], [11, 14], [15, 20], [21, 25], [26, 30], [30, 31]]], ["# ::snt The room was filled with noisy children and animals.\n# ::tokens [\"The\", \"room\", \"was\", \"filled\", \"with\", \"noisy\", \"children\", \"and\", \"animals\", \".\"]\n# ::lemmas [\"the\", \"room\", \"be\", \"fill\", \"with\", \"noisy\", \"child\", \"and\", \"animal\", \".\"]\n# ::alignments 1-1.1 3-1 5-1.2.3 6-1.2.1 7-1.2 8-1.2.2\n(f / fill-01~e.3\n   :ARG1 (r / room~e.1)\n   :ARG2 (a / and~e.7\n            :op1 (c / child~e.6)\n            :op2 (a2 / animal~e.8)\n            :mod (n / noisy~e.5)))", [[0, 3], [4, 8], [9, 12], [13, 19], [20, 24], [25, 30], [31, 39], [40, 43], [44, 51], [51, 52]]], ["# ::snt I saw the astronomer with a telescope.\n# ::tokens [\"I\", \"saw\", \"the\", \"astronomer\", \"with\", \"a\", \"telescope\", \".\"]\n# ::lemmas [\"i\", \"see\", \"the\", \"astronomer\", \"with\", \"a\", \"telescope\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 6-1.2.1.1\n(s / see-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (a / astronomer~e.3\n            :ARG0-of (h / have-03\n                        :ARG1 (t / telescope~e.6))))", [[0, 1], [2, 5], [6, 9], [10, 20], [21, 25], [26, 27], [28, 37], [37, 38]]], ["# ::snt The fool yelled at noon.\n# ::tokens [\"The\", \"fool\", \"yelled\", \"at\", \"noon\", \".\"]\n# ::lemmas [\"the\", \"fool\", \"yell\", \"at\", \"noon\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2.1\n(y / yell-01~e.2\n   :ARG0 (f / fool~e.1)\n   :time (d / date-entity\n            : (n / noon~e.4)))", [[0, 3], [4, 8], [9, 15], [16, 18], [19, 23], [23, 24]]], ["# ::snt A tourist in Rome laughed.\n# ::tokens [\"A\", \"tourist\", \"in\", \"Rome\", \"laughed\", \".\"]\n# ::lemmas [\"a\", \"tourist\", \"in\", \"Rome\", \"laugh\", \".\"]\n# ::alignments 1-1.1.1 3-1.1.2.1.1 4-1\n(l / laugh-01~e.4\n   :ARG0 (p / person\n            :ARG0-of (t / tour-01~e.1)\n            :location (c / city\n                         :name (n / name\n                                  :op1 \"Rome\"~e.3))))", [[0, 1], [2, 9], [10, 12], [13, 17], [18, 25], [25, 26]]], ["# ::snt The museum displayed no painting by Miro or drawing by Klee.\n# ::tokens [\"The\", \"museum\", \"displayed\", \"no\", \"painting\", \"by\", \"Miro\", \"or\", \"drawing\", \"by\", \"Klee\", \".\"]\n# ::lemmas [\"the\", \"museum\", \"display\", \"no\", \"painting\", \"by\", \"Miro\", \"or\", \"draw\", \"by\", \"Klee\", \".\"]\n# ::alignments 1-1.1 2-1 3-1.2.1 4-1.2.2.1 6-1.2.2.1.1.1.1 7-1.2 8-1.2.3.1 10-1.2.3.1.1.1.1\n(d / display-01~e.2\n   :ARG0 (m / museum~e.1)\n   :ARG1 (o / or~e.7\n            :polarity -~e.3\n            :op1 (t / thing\n                    :ARG1-of (p / paint-02~e.4\n                                :ARG0 (p2 / person\n                                          :name (n / name\n                                                   :op1 \"Miro\"~e.6))))\n            :op2 (t2 / thing\n                     :ARG1-of (d2 / draw-01~e.8\n                                  :ARG0 (p3 / person\n                                            :name (n2 / name\n                                                      :op1 \"Klee\"~e.10))))))", [[0, 3], [4, 10], [11, 20], [21, 23], [24, 32], [33, 35], [36, 40], [41, 43], [44, 51], [52, 54], [55, 59], [59, 60]]], ["# ::snt You asked me to fix the drain, and fix the drain, I shall.\n# ::tokens [\"You\", \"asked\", \"me\", \"to\", \"fix\", \"the\", \"drain\", \",\", \"and\", \"fix\", \"the\", \"drain\", \",\", \"I\", \"shall\", \".\"]\n# ::lemmas [\"you\", \"ask\", \"i\", \"to\", \"fix\", \"the\", \"drain\", \",\", \"and\", \"fix\", \"the\", \"drain\", \",\", \"i\", \"shall\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1.1.2.1.1 4-1.1.2.1 6-1.1.2.1.2 8-1.1.2 9-1.1.2.2\n(c / cause-01\n   :ARG0 (a / ask-02~e.1\n            :ARG0 (y / you~e.0)\n            :ARG1 (a2 / and~e.8\n                      :op1 (f / fix-02~e.4\n                              :ARG0 (ii / i~e.2)\n                              :ARG1 (d / drain~e.6))\n                      :op2 (f2 / fix-02~e.9\n                               :ARG0 ii\n                               :ARG1 d))\n            :ARG2 ii)\n   :ARG1 (f3 / fix-02\n             :ARG0 ii\n             :ARG1 d))", [[0, 3], [4, 9], [10, 12], [13, 15], [16, 19], [20, 23], [24, 29], [29, 30], [31, 34], [35, 38], [39, 42], [43, 48], [48, 49], [50, 51], [52, 57], [57, 58]]], ["# ::snt In the morning, they drink tea.\n# ::tokens [\"In\", \"the\", \"morning\", \",\", \"they\", \"drink\", \"tea\", \".\"]\n# ::lemmas [\"in\", \"the\", \"morning\", \",\", \"they\", \"drink\", \"tea\", \".\"]\n# ::alignments 2-1.3.1 4-1.1 5-1 6-1.2\n(d / drink-01~e.5\n   :ARG0 (t / they~e.4)\n   :ARG1 (t2 / tea~e.6)\n   :time (d2 / date-entity\n             :dayperiod (m / morning~e.2)))", [[0, 2], [3, 6], [7, 14], [14, 15], [16, 20], [21, 26], [27, 30], [30, 31]]], ["# ::snt It was a book about syntax that she was reading.\n# ::tokens [\"It\", \"was\", \"a\", \"book\", \"about\", \"syntax\", \"that\", \"she\", \"was\", \"reading\", \".\"]\n# ::lemmas [\"it\", \"be\", \"a\", \"book\", \"about\", \"syntax\", \"that\", \"she\", \"be\", \"read\", \".\"]\n# ::alignments 3-1.2 5-1.2.1 7-1.1 9-1\n(r / read-01~e.9\n   :ARG0 (s / she~e.7)\n   :ARG1 (b / book~e.3\n            :topic (s2 / syntax~e.5)))", [[0, 2], [3, 6], [7, 8], [9, 13], [14, 19], [20, 26], [27, 31], [32, 35], [36, 39], [40, 47], [47, 48]]], ["# ::snt It is study for the exam that I urgently need to do.\n# ::tokens [\"It\", \"is\", \"study\", \"for\", \"the\", \"exam\", \"that\", \"I\", \"urgently\", \"need\", \"to\", \"do\", \".\"]\n# ::lemmas [\"it\", \"be\", \"study\", \"for\", \"the\", \"exam\", \"that\", \"i\", \"urgently\", \"need\", \"to\", \"do\", \".\"]\n# ::alignments 2-1.2.2 5-1.2.2.2 7-1.1 8-1.2.3 11-1.2\n(o / obligate-01\n   :ARG1 (ii / i~e.7)\n   :ARG2 (d / do-02~e.11\n            :ARG0 ii\n            :ARG1 (s / study-01~e.2\n                     :ARG0 ii\n                     :ARG1 (e / exam~e.5))\n            :manner (u / urgent~e.8)))", [[0, 2], [3, 5], [6, 11], [12, 15], [16, 19], [20, 24], [25, 29], [30, 31], [32, 40], [41, 45], [46, 48], [49, 51], [51, 52]]], ["# ::snt It is after lunch that they always fall asleep.\n# ::tokens [\"It\", \"is\", \"after\", \"lunch\", \"that\", \"they\", \"always\", \"fall\", \"asleep\", \".\"]\n# ::lemmas [\"it\", \"be\", \"after\", \"lunch\", \"that\", \"they\", \"always\", \"fall\", \"asleep\", \".\"]\n# ::alignments 2-1.4 3-1.4.1 5-1.1 6-1.3 7-1\n(f / fall-07~e.7\n   :ARG1 (t / they~e.5)\n   :ARG2 (s / sleep-01\n            :ARG0 t)\n   :time (a / always~e.6)\n   :time (a2 / after~e.2\n             :op1 (l / lunch~e.3)))", [[0, 2], [3, 5], [6, 11], [12, 17], [18, 22], [23, 27], [28, 34], [35, 39], [40, 46], [46, 47]]], ["# ::snt Many artists were represented, but painting by Klee or drawing by Miro the museum displayed no.\n# ::tokens [\"Many\", \"artists\", \"were\", \"represented\", \",\", \"but\", \"painting\", \"by\", \"Klee\", \"or\", \"drawing\", \"by\", \"Miro\", \"the\", \"museum\", \"displayed\", \"no\", \".\"]\n# ::lemmas [\"many\", \"artist\", \"be\", \"represent\", \",\", \"but\", \"painting\", \"by\", \"Klee\", \"or\", \"draw\", \"by\", \"Miro\", \"the\", \"museum\", \"display\", \"no\", \".\"]\n# ::alignments 0-1.1.1.1 1-1.1.1 3-1.1 5-1 6-1.2.3.1 8-1.2.3.1.1.1.1 9-1.2.3 10-1.2.3.2 12-1.2.3.2.1.1.1 14-1.2.2 15-1.2 16-1.2.1\n(c / contrast-01~e.5\n   :ARG1 (r / represent-01~e.3\n            :ARG1 (a / artist~e.1\n                     :quant (m / many~e.0)))\n   :ARG2 (d / display-01~e.15\n            :polarity -~e.16\n            :ARG0 (m2 / museum~e.14)\n            :ARG1 (o / or~e.9\n                     :op1 (p / paint-02~e.6\n                             :ARG0 (p2 / person\n                                       :name (n / name\n                                                :op1 \"Klee\"~e.8)))\n                     :op2 (d2 / draw-02~e.10\n                              :ARG0 (p3 / person\n                                        :name (n2 / name\n                                                  :op1 \"Miro\"~e.12))))))", [[0, 4], [5, 12], [13, 17], [18, 29], [29, 30], [31, 34], [35, 43], [44, 46], [47, 51], [52, 54], [55, 62], [63, 65], [66, 70], [71, 74], [75, 81], [82, 91], [92, 94], [94, 95]]], ["# ::snt The problem disappeared.\n# ::tokens [\"The\", \"problem\", \"disappeared\", \".\"]\n# ::lemmas [\"the\", \"problem\", \"disappear\", \".\"]\n# ::alignments 1-1.1 2-1\n(d / disappear-01~e.2\n   :ARG1 (p / problem~e.1))", [[0, 3], [4, 11], [12, 23], [23, 24]]], ["# ::snt The defendant denied.\n# ::tokens [\"The\", \"defendant\", \"denied\", \".\"]\n# ::lemmas [\"the\", \"defendant\", \"deny\", \".\"]\n# ::alignments 1-1.1 2-1\n(d / deny-01~e.2\n   :ARG0 (d2 / defendant~e.1))", [[0, 3], [4, 13], [14, 20], [20, 21]]], ["# ::snt The teacher handed the student a book.\n# ::tokens [\"The\", \"teacher\", \"handed\", \"the\", \"student\", \"a\", \"book\", \".\"]\n# ::lemmas [\"the\", \"teacher\", \"hand\", \"the\", \"student\", \"a\", \"book\", \".\"]\n# ::alignments 1-1.1.1 2-1 4-1.3.1 6-1.2\n(h / hand-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (t / teach-01~e.1))\n   :ARG1 (b / book~e.6)\n   :ARG2 (p2 / person\n             :ARG0-of (s / study-01~e.4)))", [[0, 3], [4, 11], [12, 18], [19, 22], [23, 30], [31, 32], [33, 37], [37, 38]]], ["# ::snt The teacher handed a book.\n# ::tokens [\"The\", \"teacher\", \"handed\", \"a\", \"book\", \".\"]\n# ::lemmas [\"the\", \"teacher\", \"hand\", \"a\", \"book\", \".\"]\n# ::alignments 1-1.1.1 2-1 4-1.2\n(h / hand-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (t / teach-01~e.1))\n   :ARG1 (b / book~e.4))", [[0, 3], [4, 11], [12, 18], [19, 20], [21, 25], [25, 26]]], ["# ::snt The teacher handed.\n# ::tokens [\"The\", \"teacher\", \"handed\", \".\"]\n# ::lemmas [\"the\", \"teacher\", \"hand\", \".\"]\n# ::alignments 1-1.1.1 2-1\n(h / hand-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (t / teach-01~e.1)))", [[0, 3], [4, 11], [12, 18], [18, 19]]], ["# ::snt Birds sing.\n# ::tokens [\"Birds\", \"sing\", \".\"]\n# ::lemmas [\"bird\", \"sing\", \".\"]\n# ::alignments 0-1.1 1-1\n(s / sing-01~e.1\n   :ARG0 (b / bird~e.0))", [[0, 5], [6, 10], [10, 11]]], ["# ::snt The bird devours the worm.\n# ::tokens [\"The\", \"bird\", \"devours\", \"the\", \"worm\", \".\"]\n# ::lemmas [\"the\", \"bird\", \"devour\", \"the\", \"worm\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2\n(d / devour-01~e.2\n   :ARG0 (b / bird~e.1)\n   :ARG1 (w / worm~e.4))", [[0, 3], [4, 8], [9, 16], [17, 20], [21, 25], [25, 26]]], ["# ::snt The birds devour the worm.\n# ::tokens [\"The\", \"birds\", \"devour\", \"the\", \"worm\", \".\"]\n# ::lemmas [\"the\", \"bird\", \"devour\", \"the\", \"worm\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2\n(d / devour-01~e.2\n   :ARG0 (b / bird~e.1)\n   :ARG1 (w / worm~e.4))", [[0, 3], [4, 9], [10, 16], [17, 20], [21, 25], [25, 26]]], ["# ::snt The bird devour the worm.\n# ::tokens [\"The\", \"bird\", \"devour\", \"the\", \"worm\", \".\"]\n# ::lemmas [\"the\", \"bird\", \"devour\", \"the\", \"worm\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2\n(d / devour-01~e.2\n   :ARG0 (b / bird~e.1)\n   :ARG1 (w / worm~e.4))", [[0, 3], [4, 8], [9, 15], [16, 19], [20, 24], [24, 25]]], ["# ::snt The birds devours the worm.\n# ::tokens [\"The\", \"birds\", \"devours\", \"the\", \"worm\", \".\"]\n# ::lemmas [\"the\", \"bird\", \"devour\", \"the\", \"worm\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2\n(d / devour-01~e.2\n   :ARG0 (b / bird~e.1)\n   :ARG1 (w / worm~e.4))", [[0, 3], [4, 9], [10, 17], [18, 21], [22, 26], [26, 27]]], ["# ::snt The bird gives the worm a tug.\n# ::tokens [\"The\", \"bird\", \"gives\", \"the\", \"worm\", \"a\", \"tug\", \".\"]\n# ::lemmas [\"the\", \"bird\", \"give\", \"the\", \"worm\", \"a\", \"tug\", \".\"]\n# ::alignments 1-1.1 4-1.2 6-1\n(t / tug-01~e.6\n   :ARG0 (b / bird~e.1)\n   :ARG1 (w / worm~e.4))", [[0, 3], [4, 8], [9, 14], [15, 18], [19, 23], [24, 25], [26, 29], [29, 30]]], ["# ::snt Kerry remarked that it was late.\n# ::tokens [\"Kerry\", \"remarked\", \"that\", \"it\", \"was\", \"late\", \".\"]\n# ::lemmas [\"Kerry\", \"remark\", \"that\", \"it\", \"be\", \"late\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1 5-1.2\n(r / remark-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kerry\"~e.0))\n   :ARG1 (l / late~e.5\n            :domain (ii / it~e.3)))", [[0, 5], [6, 14], [15, 19], [20, 22], [23, 26], [27, 31], [31, 32]]], ["# ::snt Kerry remarked.\n# ::tokens [\"Kerry\", \"remarked\", \".\"]\n# ::lemmas [\"Kerry\", \"remark\", \".\"]\n# ::alignments 0-1.1.1.1 1-1\n(r / remark-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kerry\"~e.0)))", [[0, 5], [6, 14], [14, 15]]], ["# ::snt Kerry remarked the time.\n# ::tokens [\"Kerry\", \"remarked\", \"the\", \"time\", \".\"]\n# ::lemmas [\"Kerry\", \"remark\", \"the\", \"time\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2\n(r / remark-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kerry\"~e.0))\n   :ARG1 (t / time~e.3))", [[0, 5], [6, 14], [15, 18], [19, 23], [23, 24]]], ["# ::snt Everyone loves puppies.\n# ::tokens [\"Everyone\", \"loves\", \"puppies\", \".\"]\n# ::lemmas [\"everyone\", \"love\", \"puppy\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2\n(l / love-01~e.1\n   :ARG0 (e / everyone~e.0)\n   :ARG1 (p / puppy~e.2))", [[0, 8], [9, 14], [15, 22], [22, 23]]], ["# ::snt Puppies are loved by everyone.\n# ::tokens [\"Puppies\", \"are\", \"loved\", \"by\", \"everyone\", \".\"]\n# ::lemmas [\"puppy\", \"be\", \"love\", \"by\", \"everyone\", \".\"]\n# ::alignments 2-1 4-1.1\n(l / love-01~e.2\n   :ARG0 (e / everyone~e.4)\n   :ARG1 (p / pussy))", [[0, 7], [8, 11], [12, 17], [18, 20], [21, 29], [29, 30]]], ["# ::snt I have the information.\n# ::tokens [\"I\", \"have\", \"the\", \"information\", \".\"]\n# ::lemmas [\"i\", \"have\", \"the\", \"information\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2\n(h / have-03~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (ii2 / information~e.3))", [[0, 1], [2, 6], [7, 10], [11, 22], [22, 23]]], ["# ::snt I have information.\n# ::tokens [\"I\", \"have\", \"information\", \".\"]\n# ::lemmas [\"i\", \"have\", \"information\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2\n(h / have-03~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (ii2 / information~e.2))", [[0, 1], [2, 6], [7, 18], [18, 19]]], ["# ::snt I was already aware of that fact.\n# ::tokens [\"I\", \"was\", \"already\", \"aware\", \"of\", \"that\", \"fact\", \".\"]\n# ::lemmas [\"i\", \"be\", \"already\", \"aware\", \"of\", \"that\", \"fact\", \".\"]\n# ::alignments 0-1.1 2-1.3 5-1.2.1 6-1.2\n(r / realize-01\n   :ARG0 (ii / i~e.0)\n   :ARG1 (f / fact~e.6\n            :mod (t / that~e.5))\n   :time (a / already~e.2))", [[0, 1], [2, 5], [6, 13], [14, 19], [20, 22], [23, 27], [28, 32], [32, 33]]], ["# ::snt I know you.\n# ::tokens [\"I\", \"know\", \"you\", \".\"]\n# ::lemmas [\"i\", \"know\", \"you\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2\n(k / know-02~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (y / you~e.2))", [[0, 1], [2, 6], [7, 10], [10, 11]]], ["# ::snt I know the you.\n# ::tokens [\"I\", \"know\", \"the\", \"you\", \".\"]\n# ::lemmas [\"i\", \"know\", \"the\", \"you\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2\n(k / know-02~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (y / you~e.3))", [[0, 1], [2, 6], [7, 10], [11, 14], [14, 15]]], ["# ::snt The defendant denies the allegation.\n# ::tokens [\"The\", \"defendant\", \"denies\", \"the\", \"allegation\", \".\"]\n# ::lemmas [\"the\", \"defendant\", \"deny\", \"the\", \"allegation\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2.1\n(d / deny-01~e.2\n   :ARG0 (d2 / defendant~e.1)\n   :ARG1 (t / thing\n            :ARG1-of (a / allege-01~e.4)))", [[0, 3], [4, 13], [14, 20], [21, 24], [25, 35], [35, 36]]], ["# ::snt The defendants deny the allegation.\n# ::tokens [\"The\", \"defendants\", \"deny\", \"the\", \"allegation\", \".\"]\n# ::lemmas [\"the\", \"defendant\", \"deny\", \"the\", \"allegation\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2.1\n(d / deny-01~e.2\n   :ARG0 (d2 / defendant~e.1)\n   :ARG1 (t / thing\n            :ARG1-of (a / allege-01~e.4)))", [[0, 3], [4, 14], [15, 19], [20, 23], [24, 34], [34, 35]]], ["# ::snt The defendants walk.\n# ::tokens [\"The\", \"defendants\", \"walk\", \".\"]\n# ::lemmas [\"the\", \"defendant\", \"walk\", \".\"]\n# ::alignments 1-1.1 2-1\n(w / walk-01~e.2\n   :ARG0 (d / defendant~e.1))", [[0, 3], [4, 14], [15, 19], [19, 20]]], ["# ::snt How many feature structure categories can label the mother node?\n# ::tokens [\"How\", \"many\", \"feature\", \"structure\", \"categories\", \"can\", \"label\", \"the\", \"mother\", \"node\", \"?\"]\n# ::lemmas [\"how\", \"many\", \"feature\", \"structure\", \"category\", \"can\", \"label\", \"the\", \"mother\", \"node\", \"?\"]\n# ::alignments 2-1.1.1.1.1 3-1.1.1.1 4-1.1.1 6-1.1 8-1.1.2.1 9-1.1.2\n(p / possible-01\n   :ARG1 (l / label-01~e.6\n            :ARG0 (c / category~e.4\n                     :mod (s / structure-01~e.3\n                             :ARG1 (f / feature~e.2))\n                     :quant (a / amr-unknown))\n            :ARG1 (n / node~e.9\n                     :mod (m / mother~e.8))))", [[0, 3], [4, 8], [9, 16], [17, 26], [27, 37], [38, 41], [42, 47], [48, 51], [52, 58], [59, 63], [63, 64]]], ["# ::snt How many feature structures categories can label the second daughter?\n# ::tokens [\"How\", \"many\", \"feature\", \"structures\", \"categories\", \"can\", \"label\", \"the\", \"second\", \"daughter\", \"?\"]\n# ::lemmas [\"how\", \"many\", \"feature\", \"structure\", \"category\", \"can\", \"label\", \"the\", \"second\", \"daughter\", \"?\"]\n# ::alignments 2-1.1.1.1.1 3-1.1.1.1 4-1.1.1 6-1.1 9-1.1.2.1.1\n(p / possible-01\n   :ARG1 (l / label-01~e.6\n            :ARG0 (c / category~e.4\n                     :mod (s / structure~e.3\n                             :ARG1-of (f / feature-01~e.2))\n                     :quant (a / amr-unknown))\n            :ARG1 (p2 / person\n                      :ARG0-of (h / have-rel-role-91\n                                  :ARG2 (d / daughter~e.9\n                                           :ord (o / ordinal-entity\n                                                   :value 2))))))", [[0, 3], [4, 8], [9, 16], [17, 27], [28, 38], [39, 42], [43, 48], [49, 52], [53, 59], [60, 68], [68, 69]]], ["# ::snt Pat relies on Kim.\n# ::tokens [\"Pat\", \"relies\", \"on\", \"Kim\", \".\"]\n# ::lemmas [\"Pat\", \"rely\", \"on\", \"Kim\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1.1\n(r / rely-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Pat\"~e.0))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Kim\"~e.3)))", [[0, 3], [4, 10], [11, 13], [14, 17], [17, 18]]], ["# ::snt Pat relies.\n# ::tokens [\"Pat\", \"relies\", \".\"]\n# ::lemmas [\"Pat\", \"rely\", \".\"]\n# ::alignments 0-1.1.1.1 1-1\n(r / rely-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Pat\"~e.0)))", [[0, 3], [4, 10], [10, 11]]], ["# ::snt The child put the toy.\n# ::tokens [\"The\", \"child\", \"put\", \"the\", \"toy\", \".\"]\n# ::lemmas [\"the\", \"child\", \"put\", \"the\", \"toy\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2\n(p / put-01~e.2\n   :ARG0 (c / child~e.1)\n   :ARG1 (t / toy~e.4))", [[0, 3], [4, 9], [10, 13], [14, 17], [18, 21], [21, 22]]], ["# ::snt The guests devoured the meal.\n# ::tokens [\"The\", \"guests\", \"devoured\", \"the\", \"meal\", \".\"]\n# ::lemmas [\"the\", \"guest\", \"devour\", \"the\", \"meal\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2\n(d / devour-01~e.2\n   :ARG0 (g / guest~e.1)\n   :ARG1 (m / meal~e.4))", [[0, 3], [4, 10], [11, 19], [20, 23], [24, 28], [28, 29]]], ["# ::snt The guests devoured.\n# ::tokens [\"The\", \"guests\", \"devoured\", \".\"]\n# ::lemmas [\"the\", \"guest\", \"devour\", \".\"]\n# ::alignments 1-1.1 2-1\n(d / devour-01~e.2\n   :ARG0 (g / guest~e.1))", [[0, 3], [4, 10], [11, 19], [19, 20]]], ["# ::snt The guests dined the meal.\n# ::tokens [\"The\", \"guests\", \"dined\", \"the\", \"meal\", \".\"]\n# ::lemmas [\"the\", \"guest\", \"dine\", \"the\", \"meal\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2\n(d / dine-01~e.2\n   :ARG0 (g / guest~e.1)\n   :ARG1 (m / meal~e.4))", [[0, 3], [4, 10], [11, 16], [17, 20], [21, 25], [25, 26]]], ["# ::snt The guests ate the meal.\n# ::tokens [\"The\", \"guests\", \"ate\", \"the\", \"meal\", \".\"]\n# ::lemmas [\"the\", \"guest\", \"eat\", \"the\", \"meal\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2\n(e / eat-01~e.2\n   :ARG0 (g / guest~e.1)\n   :ARG1 (m / meal~e.4))", [[0, 3], [4, 10], [11, 14], [15, 18], [19, 23], [23, 24]]], ["# ::snt The guests ate.\n# ::tokens [\"The\", \"guests\", \"ate\", \".\"]\n# ::lemmas [\"the\", \"guest\", \"eat\", \".\"]\n# ::alignments 1-1.1 2-1\n(e / eat-01~e.2\n   :ARG0 (g / guest~e.1))", [[0, 3], [4, 10], [11, 14], [14, 15]]], ["# ::snt We relied upon Leslie.\n# ::tokens [\"We\", \"relied\", \"upon\", \"Leslie\", \".\"]\n# ::lemmas [\"we\", \"rely\", \"upon\", \"Leslie\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1.1\n(r / rely-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Leslie\"~e.3)))", [[0, 2], [3, 9], [10, 14], [15, 21], [21, 22]]], ["# ::snt We relied over Leslie.\n# ::tokens [\"We\", \"relied\", \"over\", \"Leslie\", \".\"]\n# ::lemmas [\"we\", \"rely\", \"over\", \"Leslie\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1.1\n(r / rely-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Leslie\"~e.3)))", [[0, 2], [3, 9], [10, 14], [15, 21], [21, 22]]], ["# ::snt We relied with Leslie.\n# ::tokens [\"We\", \"relied\", \"with\", \"Leslie\", \".\"]\n# ::lemmas [\"we\", \"rely\", \"with\", \"Leslie\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1.1\n(r / rely-01~e.1\n   :ARG0 (w / we~e.0)\n   :prep-with (p / person\n                 :name (n / name\n                          :op1 \"Leslie\"~e.3)))", [[0, 2], [3, 9], [10, 14], [15, 21], [21, 22]]], ["# ::snt We relied on top of Leslie.\n# ::tokens [\"We\", \"relied\", \"on\", \"top\", \"of\", \"Leslie\", \".\"]\n# ::lemmas [\"we\", \"rely\", \"on\", \"top\", \"of\", \"Leslie\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 5-1.2.1.1.1\n(r / rely-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (t / top~e.3\n            :domain (p / person\n                       :name (n / name\n                                :op1 \"Leslie\"~e.5))))", [[0, 2], [3, 9], [10, 12], [13, 16], [17, 19], [20, 26], [26, 27]]], ["# ::snt The children are happy.\n# ::tokens [\"The\", \"children\", \"are\", \"happy\", \".\"]\n# ::lemmas [\"the\", \"child\", \"be\", \"happy\", \".\"]\n# ::alignments 1-1.1 3-1\n(h / happy-01~e.3\n   :ARG1 (c / child~e.1))", [[0, 3], [4, 12], [13, 16], [17, 22], [22, 23]]], ["# ::snt The children are happy with the ice cream.\n# ::tokens [\"The\", \"children\", \"are\", \"happy\", \"with\", \"the\", \"ice\", \"cream\", \".\"]\n# ::lemmas [\"the\", \"child\", \"be\", \"happy\", \"with\", \"the\", \"ice\", \"cream\", \".\"]\n# ::alignments 1-1.2 3-1\n(h / happy-01~e.3\n   :ARG0 (ii / ice-cream)\n   :ARG1 (c / child~e.1))", [[0, 3], [4, 12], [13, 16], [17, 22], [23, 27], [28, 31], [32, 35], [36, 41], [41, 42]]], ["# ::snt The children are happy that they have ice cream.\n# ::tokens [\"The\", \"children\", \"are\", \"happy\", \"that\", \"they\", \"have\", \"ice\", \"cream\", \".\"]\n# ::lemmas [\"the\", \"child\", \"be\", \"happy\", \"that\", \"they\", \"have\", \"ice\", \"cream\", \".\"]\n# ::alignments 1-1.1.1 3-1 6-1.1\n(h / happy-01~e.3\n   :ARG0 (h2 / have-03~e.6\n             :ARG0 (c / child~e.1)\n             :ARG1 (ii / ice-cream))\n   :ARG1 c)", [[0, 3], [4, 12], [13, 16], [17, 22], [23, 27], [28, 32], [33, 37], [38, 41], [42, 47], [47, 48]]], ["# ::snt The children are fond.\n# ::tokens [\"The\", \"children\", \"are\", \"fond\", \".\"]\n# ::lemmas [\"the\", \"child\", \"be\", \"fond\", \".\"]\n# ::alignments 1-1.1 3-1\n(f / fond-01~e.3\n   :ARG0 (c / child~e.1))", [[0, 3], [4, 12], [13, 16], [17, 21], [21, 22]]], ["# ::snt The children are fond of ice cream.\n# ::tokens [\"The\", \"children\", \"are\", \"fond\", \"of\", \"ice\", \"cream\", \".\"]\n# ::lemmas [\"the\", \"child\", \"be\", \"fond\", \"of\", \"ice\", \"cream\", \".\"]\n# ::alignments 1-1.1 3-1\n(f / fond-01~e.3\n   :ARG0 (c / child~e.1)\n   :ARG1 (ii / ice-cream))", [[0, 3], [4, 12], [13, 16], [17, 21], [22, 24], [25, 28], [29, 34], [34, 35]]], ["# ::snt The report surprised many people.\n# ::tokens [\"The\", \"report\", \"surprised\", \"many\", \"people\", \".\"]\n# ::lemmas [\"the\", \"report\", \"surprise\", \"many\", \"people\", \".\"]\n# ::alignments 1-1.1 2-1 3-1.2.1\n(s / surprise-01~e.2\n   :ARG0 (r / report~e.1)\n   :ARG1 (p / person\n            :quant (m / many~e.3)))", [[0, 3], [4, 10], [11, 20], [21, 25], [26, 32], [32, 33]]], ["# ::snt The storm arrived after we ate lunch.\n# ::tokens [\"The\", \"storm\", \"arrived\", \"after\", \"we\", \"ate\", \"lunch\", \".\"]\n# ::lemmas [\"the\", \"storm\", \"arrive\", \"after\", \"we\", \"eat\", \"lunch\", \".\"]\n# ::alignments 1-1.1 2-1 3-1.2 4-1.2.1.1 5-1.2.1 6-1.2.1.2\n(a / arrive-01~e.2\n   :ARG1 (s / storm~e.1)\n   :time (a2 / after~e.3\n             :op1 (e / eat-01~e.5\n                     :ARG0 (w / we~e.4)\n                     :ARG1 (l / lunch~e.6))))", [[0, 3], [4, 9], [10, 17], [18, 23], [24, 26], [27, 30], [31, 36], [36, 37]]], ["# ::snt The storm arrived during the picnic.\n# ::tokens [\"The\", \"storm\", \"arrived\", \"during\", \"the\", \"picnic\", \".\"]\n# ::lemmas [\"the\", \"storm\", \"arrive\", \"during\", \"the\", \"picnic\", \".\"]\n# ::alignments 1-1.1 2-1 5-1.2\n(a / arrive-01~e.2\n   :ARG1 (s / storm~e.1)\n   :time (p / picnic-01~e.5))", [[0, 3], [4, 9], [10, 17], [18, 24], [25, 28], [29, 35], [35, 36]]], ["# ::snt The storm arrived during we ate lunch.\n# ::tokens [\"The\", \"storm\", \"arrived\", \"during\", \"we\", \"ate\", \"lunch\", \".\"]\n# ::lemmas [\"the\", \"storm\", \"arrive\", \"during\", \"we\", \"eat\", \"lunch\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2.1 6-1.2\n(a / arrive-01~e.2\n   :ARG1 (s / storm~e.1)\n   :time (l / lunch-01~e.6\n            :ARG0 (w / we~e.4)))", [[0, 3], [4, 9], [10, 17], [18, 24], [25, 27], [28, 31], [32, 37], [37, 38]]], ["# ::snt This dog barked.\n# ::tokens [\"This\", \"dog\", \"barked\", \".\"]\n# ::lemmas [\"this\", \"dog\", \"bark\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1\n(b / bark-01~e.2\n   :ARG0 (d / dog~e.1\n            :mod (t / this~e.0)))", [[0, 4], [5, 8], [9, 15], [15, 16]]], ["# ::snt These dog barked.\n# ::tokens [\"These\", \"dog\", \"barked\", \".\"]\n# ::lemmas [\"these\", \"dog\", \"bark\", \".\"]\n# ::alignments 1-1.1 2-1\n(b / bark-01~e.2\n   :ARG0 (d / dog~e.1\n            :mod (t / this)))", [[0, 5], [6, 9], [10, 16], [16, 17]]], ["# ::snt Much furniture was broken.\n# ::tokens [\"Much\", \"furniture\", \"was\", \"broken\", \".\"]\n# ::lemmas [\"much\", \"furniture\", \"be\", \"break\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 3-1\n(b / break-01~e.3\n   :ARG1 (f / furniture~e.1\n            :quant (m / much~e.0)))", [[0, 4], [5, 14], [15, 18], [19, 25], [25, 26]]], ["# ::snt A furniture was broken.\n# ::tokens [\"A\", \"furniture\", \"was\", \"broken\", \".\"]\n# ::lemmas [\"a\", \"furniture\", \"be\", \"break\", \".\"]\n# ::alignments 1-1.1 3-1\n(b / break-01~e.3\n   :ARG1 (f / furniture~e.1))", [[0, 1], [2, 11], [12, 15], [16, 22], [22, 23]]], ["# ::snt Much chair was broken.\n# ::tokens [\"Much\", \"chair\", \"was\", \"broken\", \".\"]\n# ::lemmas [\"much\", \"chair\", \"be\", \"break\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 3-1\n(b / break-01~e.3\n   :ARG1 (c / chair~e.1\n            :quant (m / much~e.0)))", [[0, 4], [5, 10], [11, 14], [15, 21], [21, 22]]], ["# ::snt We want them on our team.\n# ::tokens [\"We\", \"want\", \"them\", \"on\", \"our\", \"team\", \".\"]\n# ::lemmas [\"we\", \"want\", \"they\", \"on\", \"our\", \"team\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2 5-1.2.1\n(w / want-01~e.1\n   :ARG0 (w2 / we~e.0)\n   :ARG1 (t / they~e.2\n            :part-of (t2 / team~e.5\n                         :poss w2)))", [[0, 2], [3, 7], [8, 12], [13, 15], [16, 19], [20, 24], [24, 25]]], ["# ::snt With them on our team, we'll be sure to win.\n# ::tokens [\"With\", \"them\", \"on\", \"our\", \"team\", \",\", \"we\", \"'ll\", \"be\", \"sure\", \"to\", \"win\", \".\"]\n# ::lemmas [\"with\", \"they\", \"on\", \"our\", \"team\", \",\", \"we\", \"will\", \"be\", \"sure\", \"to\", \"win\", \".\"]\n# ::alignments 1-1.3 4-1.3.1 6-1.1 9-1 11-1.2\n(s / sure-02~e.9\n   :ARG0 (w / we~e.6)\n   :ARG1 (w2 / win-01~e.11\n             :ARG0 w)\n   :condition (t / they~e.1\n                 :prep-on (t2 / team~e.4\n                              :poss w)))", [[0, 4], [5, 9], [10, 12], [13, 16], [17, 21], [21, 22], [23, 25], [25, 28], [29, 31], [32, 36], [37, 39], [40, 43], [43, 44]]], ["# ::snt Kim walks.\n# ::tokens [\"Kim\", \"walks\", \".\"]\n# ::lemmas [\"Kim\", \"walk\", \".\"]\n# ::alignments 0-1.1.1.1 1-1\n(w / walk-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kim\"~e.0)))", [[0, 3], [4, 9], [9, 10]]], ["# ::snt The child walks.\n# ::tokens [\"The\", \"child\", \"walks\", \".\"]\n# ::lemmas [\"the\", \"child\", \"walk\", \".\"]\n# ::alignments 1-1.1 2-1\n(w / walk-01~e.2\n   :ARG0 (c / child~e.1))", [[0, 3], [4, 9], [10, 15], [15, 16]]], ["# ::snt The children walks.\n# ::tokens [\"The\", \"children\", \"walks\", \".\"]\n# ::lemmas [\"the\", \"child\", \"walk\", \".\"]\n# ::alignments 1-1.1 2-1\n(w / walk-01~e.2\n   :ARG0 (c / child~e.1))", [[0, 3], [4, 12], [13, 18], [18, 19]]], ["# ::snt A dog barked.\n# ::tokens [\"A\", \"dog\", \"barked\", \".\"]\n# ::lemmas [\"a\", \"dog\", \"bark\", \".\"]\n# ::alignments 1-1.1 2-1\n(b / bark-01~e.2\n   :ARG0 (d / dog~e.1))", [[0, 1], [2, 5], [6, 12], [12, 13]]], ["# ::snt A dogs barked.\n# ::tokens [\"A\", \"dogs\", \"barked\", \".\"]\n# ::lemmas [\"a\", \"dog\", \"bark\", \".\"]\n# ::alignments 1-1.1 2-1\n(b / bark-01~e.2\n   :ARG0 (d / dog~e.1))", [[0, 1], [2, 6], [7, 13], [13, 14]]], ["# ::snt Few dogs barked.\n# ::tokens [\"Few\", \"dogs\", \"barked\", \".\"]\n# ::lemmas [\"few\", \"dog\", \"bark\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1\n(b / bark-01~e.2\n   :ARG0 (d / dog~e.1\n            :quant (f / few~e.0)))", [[0, 3], [4, 8], [9, 15], [15, 16]]], ["# ::snt The dog barked.\n# ::tokens [\"The\", \"dog\", \"barked\", \".\"]\n# ::lemmas [\"the\", \"dog\", \"bark\", \".\"]\n# ::alignments 1-1.1 2-1\n(b / bark-01~e.2\n   :ARG0 (d / dog~e.1))", [[0, 3], [4, 7], [8, 14], [14, 15]]], ["# ::snt Two cats and one dog live there.\n# ::tokens [\"Two\", \"cats\", \"and\", \"one\", \"dog\", \"live\", \"there\", \".\"]\n# ::lemmas [\"Two\", \"cat\", \"and\", \"one\", \"dog\", \"live\", \"there\", \".\"]\n# ::alignments 0-1.1.1.1 1-1.1.1 2-1.1 3-1.1.2.1 4-1.1.2 5-1 6-1.2\n(l / live-01~e.5\n   :ARG0 (a / and~e.2\n            :op1 (c / cat~e.1\n                    :quant 2~e.0)\n            :op2 (d / dog~e.4\n                    :quant 1~e.3))\n   :location (t / there~e.6))", [[0, 3], [4, 8], [9, 12], [13, 16], [17, 20], [21, 25], [26, 31], [31, 32]]], ["# ::snt We like them.\n# ::tokens [\"We\", \"like\", \"them\", \".\"]\n# ::lemmas [\"we\", \"like\", \"they\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2\n(l / like-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (t / they~e.2))", [[0, 2], [3, 7], [8, 12], [12, 13]]], ["# ::snt We like they.\n# ::tokens [\"We\", \"like\", \"they\", \".\"]\n# ::lemmas [\"we\", \"like\", \"they\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2\n(l / like-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (t / they~e.2))", [[0, 2], [3, 7], [8, 12], [12, 13]]], ["# ::snt A rat died yesterday.\n# ::tokens [\"A\", \"rat\", \"died\", \"yesterday\", \".\"]\n# ::lemmas [\"a\", \"rat\", \"die\", \"yesterday\", \".\"]\n# ::alignments 1-1.1 2-1 3-1.2\n(d / die-01~e.2\n   :ARG1 (r / rat~e.1)\n   :time (y / yesterday~e.3))", [[0, 1], [2, 5], [6, 10], [11, 20], [20, 21]]], ["# ::snt A rat yesterday died.\n# ::tokens [\"A\", \"rat\", \"yesterday\", \"died\", \".\"]\n# ::lemmas [\"a\", \"rat\", \"yesterday\", \"die\", \".\"]\n# ::alignments 1-1.1 2-1.2 3-1\n(d / die-01~e.3\n   :ARG1 (r / rat~e.1)\n   :time (y / yesterday~e.2))", [[0, 1], [2, 5], [6, 15], [16, 20], [20, 21]]], ["# ::snt Chris walks, eats broccoli, and plays squash.\n# ::tokens [\"Chris\", \"walks\", \",\", \"eats\", \"broccoli\", \",\", \"and\", \"plays\", \"squash\", \".\"]\n# ::lemmas [\"Chris\", \"walk\", \",\", \"eats\", \"broccoli\", \",\", \"and\", \"play\", \"squash\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 4-1.2.2 6-1 7-1.3 8-1.3.2\n(a / and~e.6\n   :op1 (w / walk-01~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Chris\"~e.0)))\n   :op2 (e / eat-01\n           :ARG0 p\n           :ARG1 (b / broccoli~e.4))\n   :op3 (p2 / play-01~e.7\n            :ARG0 p\n            :ARG1 (s / squash~e.8)))", [[0, 5], [6, 11], [11, 12], [13, 17], [18, 26], [26, 27], [28, 31], [32, 37], [38, 44], [44, 45]]], ["# ::snt Every family was saved by some dog or other.\n# ::tokens [\"Every\", \"family\", \"was\", \"saved\", \"by\", \"some\", \"dog\", \"or\", \"other\", \".\"]\n# ::lemmas [\"every\", \"family\", \"be\", \"save\", \"by\", \"some\", \"dog\", \"or\", \"other\", \".\"]\n# ::alignments 0-1.2.1 1-1.2 3-1 5-1.1.1.1 6-1.1.1 7-1.1 8-1.1.2.1\n(s / save-02~e.3\n   :ARG0 (o / or~e.7\n            :op1 (d / dog~e.6\n                    :mod (s2 / some~e.5))\n            :op2 (d2 / dog\n                     :mod (o2 / other~e.8)))\n   :ARG1 (f / family~e.1\n            :mod (e / every~e.0)))", [[0, 5], [6, 12], [13, 16], [17, 22], [23, 25], [26, 30], [31, 34], [35, 37], [38, 43], [43, 44]]], ["# ::snt John frightens himself.\n# ::tokens [\"John\", \"frightens\", \"himself\", \".\"]\n# ::lemmas [\"John\", \"frighten\", \"himself\", \".\"]\n# ::alignments 0-1.1.1.1 1-1\n(f / frighten-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 p)", [[0, 4], [5, 14], [15, 22], [22, 23]]], ["# ::snt Susan told herself a story.\n# ::tokens [\"Susan\", \"told\", \"herself\", \"a\", \"story\", \".\"]\n# ::lemmas [\"Susan\", \"tell\", \"herself\", \"a\", \"story\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.2\n(t / tell-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Susan\"~e.0))\n   :ARG1 (s / story~e.4)\n   :ARG2 p)", [[0, 5], [6, 10], [11, 18], [19, 20], [21, 26], [26, 27]]], ["# ::snt Susan told a story to herself.\n# ::tokens [\"Susan\", \"told\", \"a\", \"story\", \"to\", \"herself\", \".\"]\n# ::lemmas [\"Susan\", \"tell\", \"a\", \"story\", \"to\", \"herself\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2\n(t / tell-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Susan\"~e.0))\n   :ARG1 (s / story~e.3)\n   :ARG2 p)", [[0, 5], [6, 10], [11, 12], [13, 18], [19, 21], [22, 29], [29, 30]]], ["# ::snt Susan devoted her to linguistics.\n# ::tokens [\"Susan\", \"devoted\", \"her\", \"to\", \"linguistics\", \".\"]\n# ::lemmas [\"Susan\", \"devote\", \"she\", \"to\", \"linguistic\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.3\n(d / devote-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Susan\"~e.0))\n   :ARG1 p\n   :ARG2 (l / linguistics~e.4))", [[0, 5], [6, 13], [14, 17], [18, 20], [21, 32], [32, 33]]], ["# ::snt Nobody told Susan about her.\n# ::tokens [\"Nobody\", \"told\", \"Susan\", \"about\", \"her\", \".\"]\n# ::lemmas [\"nobody\", \"tell\", \"Susan\", \"about\", \"she\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.3.1.1 3-1.2 4-1.2.1\n(t / tell-01~e.1\n   :ARG0 (n / nobody~e.0)\n   :ARG1 (a / about~e.3\n            :op1 (s / she~e.4))\n   :ARG2 (p / person\n            :name (n2 / name\n                      :op1 \"Susan\"~e.2)))", [[0, 6], [7, 11], [12, 17], [18, 23], [24, 27], [27, 28]]], ["# ::snt Susan thinks that nobody likes herself.\n# ::tokens [\"Susan\", \"thinks\", \"that\", \"nobody\", \"likes\", \"herself\", \".\"]\n# ::lemmas [\"Susan\", \"think\", \"that\", \"nobody\", \"like\", \"herself\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1 4-1.2\n(t / think-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Susan\"~e.0))\n   :ARG1 (l / like-01~e.4\n            :ARG0 (n2 / nobody~e.3)\n            :ARG1 p))", [[0, 5], [6, 12], [13, 17], [18, 24], [25, 30], [31, 38], [38, 39]]], ["# ::snt Susan thinks that nobody likes her.\n# ::tokens [\"Susan\", \"thinks\", \"that\", \"nobody\", \"likes\", \"her\", \".\"]\n# ::lemmas [\"Susan\", \"think\", \"that\", \"nobody\", \"like\", \"she\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1 4-1.2\n(t / think-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Susan\"~e.0))\n   :ARG1 (l / like-01~e.4\n            :ARG0 (n2 / nobody~e.3)\n            :ARG1 p))", [[0, 5], [6, 12], [13, 17], [18, 24], [25, 30], [31, 34], [34, 35]]], ["# ::snt That picture of Susan offended herself.\n# ::tokens [\"That\", \"picture\", \"of\", \"Susan\", \"offended\", \"herself\", \".\"]\n# ::lemmas [\"that\", \"picture\", \"of\", \"Susan\", \"offend\", \"herself\", \".\"]\n# ::alignments 0-1.1.2 1-1.1 3-1.1.1.1.1 4-1\n(o / offend-01~e.4\n   :ARG0 (p / picture~e.1\n            :topic (p2 / person\n                       :name (n / name\n                                :op1 \"Susan\"~e.3))\n            :mod (t / that~e.0))\n   :ARG1 p2)", [[0, 4], [5, 12], [13, 15], [16, 21], [22, 30], [31, 38], [38, 39]]], ["# ::snt Sandy offended Jason.\n# ::tokens [\"Sandy\", \"offended\", \"Jason\", \".\"]\n# ::lemmas [\"Sandy\", \"offend\", \"Jason\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1\n(o / offend-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sandy\"~e.0))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Jason\"~e.2)))", [[0, 5], [6, 14], [15, 20], [20, 21]]], ["# ::snt He enjoys themselves.\n# ::tokens [\"He\", \"enjoys\", \"themselves\", \".\"]\n# ::lemmas [\"he\", \"enjoy\", \"themselves\", \".\"]\n# ::alignments 0-1.1 1-1\n(e / enjoy-01~e.1\n   :ARG0 (h / he~e.0)\n   :ARG1 (t / they))", [[0, 2], [3, 9], [10, 20], [20, 21]]], ["# ::snt She enjoys himself.\n# ::tokens [\"She\", \"enjoys\", \"himself\", \".\"]\n# ::lemmas [\"she\", \"enjoy\", \"himself\", \".\"]\n# ::alignments 0-1.1 1-1\n(e / enjoy-01~e.1\n   :ARG0 (s / she~e.0)\n   :ARG1 s)", [[0, 3], [4, 10], [11, 18], [18, 19]]], ["# ::snt Nobody told Susan.\n# ::tokens [\"Nobody\", \"told\", \"Susan\", \".\"]\n# ::lemmas [\"nobody\", \"tell\", \"Susan\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1.1\n(t / tell-01~e.1\n   :ARG0 (n / nobody~e.0)\n   :ARG2 (p / person\n            :name (n2 / name\n                      :op1 \"Susan\"~e.2)))", [[0, 6], [7, 11], [12, 17], [17, 18]]], ["# ::snt Nobody talked to Susan.\n# ::tokens [\"Nobody\", \"talked\", \"to\", \"Susan\", \".\"]\n# ::lemmas [\"nobody\", \"talk\", \"to\", \"Susan\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1.1\n(t / talk-01~e.1\n   :ARG0 (n / nobody~e.0)\n   :ARG2 (p / person\n            :name (n2 / name\n                      :op1 \"Susan\"~e.3)))", [[0, 6], [7, 13], [14, 16], [17, 22], [22, 23]]], ["# ::snt Nobody talked to Susan.\n# ::tokens [\"Nobody\", \"talked\", \"to\", \"Susan\", \".\"]\n# ::lemmas [\"nobody\", \"talk\", \"to\", \"Susan\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1.1\n(t / talk-01~e.1\n   :ARG0 (n / nobody~e.0)\n   :ARG2 (p / person\n            :name (n2 / name\n                      :op1 \"Susan\"~e.3)))", [[0, 6], [7, 13], [14, 16], [17, 22], [22, 23]]], ["# ::snt We compared him.\n# ::tokens [\"We\", \"compared\", \"him\", \".\"]\n# ::lemmas [\"we\", \"compare\", \"he\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2\n(c / compare-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (h / he~e.2))", [[0, 2], [3, 11], [12, 15], [15, 16]]], ["# ::snt We compared them.\n# ::tokens [\"We\", \"compared\", \"them\", \".\"]\n# ::lemmas [\"we\", \"compare\", \"they\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2\n(c / compare-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (t / they~e.2))", [[0, 2], [3, 11], [12, 16], [16, 17]]], ["# ::snt I met the person who they visited.\n# ::tokens [\"I\", \"met\", \"the\", \"person\", \"who\", \"they\", \"visited\", \".\"]\n# ::lemmas [\"i\", \"meet\", \"the\", \"person\", \"who\", \"they\", \"visit\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 5-1.2.1.1 6-1.2.1\n(m / meet-02~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person~e.3\n            :ARG1-of (v / visit-01~e.6\n                        :ARG0 (t / they~e.5))))", [[0, 1], [2, 5], [6, 9], [10, 16], [17, 20], [21, 25], [26, 33], [33, 34]]], ["# ::snt Despite their average age, the Charge boasts an experienced roster.\n# ::tokens [\"Despite\", \"their\", \"average\", \"age\", \",\", \"the\", \"Charge\", \"boasts\", \"an\", \"experienced\", \"roster\", \".\"]\n# ::lemmas [\"despite\", \"their\", \"average\", \"age\", \",\", \"the\", \"Charge\", \"boast\", \"an\", \"experienced\", \"roster\", \".\"]\n# ::alignments 2-1.3.2 3-1.3 6-1.1.1.1 7-1 9-1.2.1 10-1.2\n(b / boast-01~e.7\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Charge\"~e.6))\n   :ARG1 (r / roster~e.10\n            :ARG1-of (e / experience-01~e.9))\n   :concession (a / age-01~e.3\n                  :ARG1 t\n                  :ARG1-of (a2 / average-04~e.2)))", [[0, 7], [8, 13], [14, 21], [22, 25], [25, 26], [27, 30], [31, 37], [38, 44], [45, 47], [48, 59], [60, 66], [66, 67]]], ["# ::snt The Cardinal plays Arizona State at 7 p.m Saturday at Stanford.\n# ::tokens [\"The\", \"Cardinal\", \"plays\", \"Arizona\", \"State\", \"at\", \"7\", \"p.m\", \"Saturday\", \"at\", \"Stanford\", \".\"]\n# ::lemmas [\"the\", \"Cardinal\", \"play\", \"Arizona\", \"State\", \"at\", \"7\", \"p.m\", \"Saturday\", \"at\", \"Stanford\", \".\"]\n# ::alignments 1-1.1.1.1 2-1 3-1.2.1.1 4-1.2.1.2 8-1.3.2\n(p / play-01~e.2\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Cardinal\"~e.1))\n   :ARG1 (t2 / team\n             :name (n2 / name\n                       :op1 \"Arizona\"~e.3\n                       :op2 \"State\"~e.4))\n   :time (d / date-entity\n            :time \"7:00\"\n            :weekday (s / saturday~e.8))\n   :location t)", [[0, 3], [4, 12], [13, 18], [19, 26], [27, 32], [33, 35], [36, 37], [38, 41], [42, 50], [51, 53], [54, 62], [62, 63]]], ["# ::snt The picture of Sandy was awesome.\n# ::tokens [\"The\", \"picture\", \"of\", \"Sandy\", \"was\", \"awesome\", \".\"]\n# ::lemmas [\"the\", \"picture\", \"of\", \"Sandy\", \"be\", \"awesome\", \".\"]\n# ::alignments 1-1.1 3-1.1.1.1.1\n(a / awe-01\n   :ARG0 (p / picture-01~e.1\n            :ARG1 (p2 / person\n                      :name (n / name\n                               :op1 \"Sandy\"~e.3))))", [[0, 3], [4, 11], [12, 14], [15, 20], [21, 24], [25, 32], [32, 33]]], ["# ::snt The picture was awesome.\n# ::tokens [\"The\", \"picture\", \"was\", \"awesome\", \".\"]\n# ::lemmas [\"the\", \"picture\", \"be\", \"awesome\", \".\"]\n# ::alignments 1-1.1\n(a / awe-01\n   :ARG0 (p / picture~e.1))", [[0, 3], [4, 11], [12, 15], [16, 23], [23, 24]]], ["# ::snt We couldn't find any pictures of Blind Mello Jello.\n# ::tokens [\"We\", \"could\", \"n't\", \"find\", \"any\", \"pictures\", \"of\", \"Blind\", \"Mello\", \"Jello\", \".\"]\n# ::lemmas [\"we\", \"could\", \"not\", \"find\", \"any\", \"picture\", \"of\", \"Blind\", \"Mello\", \"Jello\", \".\"]\n# ::alignments 0-1.2.1 3-1.2 5-1.2.2 7-1.2.2.1.1.1 8-1.2.2.1.1.2 9-1.2.2.1.1.3\n(p / possible-01\n   :polarity -\n   :ARG1 (f / find-01~e.3\n            :ARG0 (w / we~e.0)\n            :ARG1 (p2 / picture~e.5\n                      :topic (p3 / person\n                                 :name (n / name\n                                          :op1 \"Blind\"~e.7\n                                          :op2 \"Mello\"~e.8\n                                          :op3 \"Jello\"~e.9)))))", [[0, 2], [3, 8], [8, 11], [12, 16], [17, 20], [21, 29], [30, 32], [33, 38], [39, 44], [45, 50], [50, 51]]], ["# ::snt Leslie slept the baby.\n# ::tokens [\"Leslie\", \"slept\", \"the\", \"baby\", \".\"]\n# ::lemmas [\"Leslie\", \"sleep\", \"the\", \"baby\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2\n(s / sleep-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Leslie\"~e.0))\n   :ARG1 (b / baby~e.3))", [[0, 6], [7, 12], [13, 16], [17, 21], [21, 22]]], ["# ::snt Dana relied.\n# ::tokens [\"Dana\", \"relied\", \".\"]\n# ::lemmas [\"Dana\", \"rely\", \".\"]\n# ::alignments 0-1.1.1.1 1-1\n(r / rely-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dana\"~e.0)))", [[0, 4], [5, 11], [11, 12]]], ["# ::snt Pat devoured.\n# ::tokens [\"Pat\", \"devoured\", \".\"]\n# ::lemmas [\"Pat\", \"devour\", \".\"]\n# ::alignments 0-1.1.1.1 1-1\n(d / devour-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Pat\"~e.0)))", [[0, 3], [4, 12], [12, 13]]], ["# ::snt Chris handed.\n# ::tokens [\"Chris\", \"handed\", \".\"]\n# ::lemmas [\"Chris\", \"hand\", \".\"]\n# ::alignments 0-1.1.1.1 1-1\n(h / hand~e.1\n   :part-of (p / person\n               :name (n / name\n                        :op1 \"Chris\"~e.0)))", [[0, 5], [6, 12], [12, 13]]], ["# ::snt Chris handed a ticket.\n# ::tokens [\"Chris\", \"handed\", \"a\", \"ticket\", \".\"]\n# ::lemmas [\"Chris\", \"hand\", \"a\", \"ticket\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2\n(h / hand-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chris\"~e.0))\n   :ARG1 (t / ticket~e.3))", [[0, 5], [6, 12], [13, 14], [15, 21], [21, 22]]], ["# ::snt We put.\n# ::tokens [\"We\", \"put\", \".\"]\n# ::lemmas [\"we\", \"put\", \".\"]\n# ::alignments 0-1.1 1-1\n(p / put-02~e.1\n   :ARG0 (w / we~e.0))", [[0, 2], [3, 6], [6, 7]]], ["# ::snt We put on the shelf.\n# ::tokens [\"We\", \"put\", \"on\", \"the\", \"shelf\", \".\"]\n# ::lemmas [\"we\", \"put\", \"on\", \"the\", \"shelf\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2\n(p / put-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (s / shelf~e.4))", [[0, 2], [3, 6], [7, 9], [10, 13], [14, 19], [19, 20]]], ["# ::snt We put the book.\n# ::tokens [\"We\", \"put\", \"the\", \"book\", \".\"]\n# ::lemmas [\"we\", \"put\", \"the\", \"book\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2\n(p / put-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (b / book~e.3))", [[0, 2], [3, 6], [7, 10], [11, 15], [15, 16]]], ["# ::snt Dana relied on Hilary.\n# ::tokens [\"Dana\", \"relied\", \"on\", \"Hilary\", \".\"]\n# ::lemmas [\"Dana\", \"rely\", \"on\", \"Hilary\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1.1\n(r / rely-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dana\"~e.0))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Hilary\"~e.3)))", [[0, 4], [5, 11], [12, 14], [15, 21], [21, 22]]], ["# ::snt Pat devoured the sandwich.\n# ::tokens [\"Pat\", \"devoured\", \"the\", \"sandwich\", \".\"]\n# ::lemmas [\"Pat\", \"devour\", \"the\", \"sandwich\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2\n(d / devour-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Pat\"~e.0))\n   :ARG1 (s / sandwich~e.3))", [[0, 3], [4, 12], [13, 16], [17, 25], [25, 26]]], ["# ::snt Chris handed Bo a ticket.\n# ::tokens [\"Chris\", \"handed\", \"Bo\", \"a\", \"ticket\", \".\"]\n# ::lemmas [\"Chris\", \"hand\", \"Bo\", \"a\", \"ticket\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.3.1.1 4-1.2\n(h / hand-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chris\"~e.0))\n   :ARG1 (t / ticket~e.4)\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Bo\"~e.2)))", [[0, 5], [6, 12], [13, 15], [16, 17], [18, 24], [24, 25]]], ["# ::snt We put the book on the shelf.\n# ::tokens [\"We\", \"put\", \"the\", \"book\", \"on\", \"the\", \"shelf\", \".\"]\n# ::lemmas [\"we\", \"put\", \"the\", \"book\", \"on\", \"the\", \"shelf\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 6-1.3\n(p / put-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (b / book~e.3)\n   :ARG2 (s / shelf~e.6))", [[0, 2], [3, 6], [7, 10], [11, 15], [16, 18], [19, 22], [23, 28], [28, 29]]], ["# ::snt Dana walked and Leslie running.\n# ::tokens [\"Dana\", \"walked\", \"and\", \"Leslie\", \"running\", \".\"]\n# ::lemmas [\"Dana\", \"walk\", \"and\", \"Leslie\", \"run\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 2-1 3-1.2.1.1.1 4-1.2\n(a / and~e.2\n   :op1 (w / walk-01~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Dana\"~e.0)))\n   :op2 (r / run-02~e.4\n           :ARG0 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Leslie\"~e.3))))", [[0, 4], [5, 11], [12, 15], [16, 22], [23, 30], [30, 31]]], ["# ::snt the putter of books on the table left.\n# ::tokens [\"the\", \"putter\", \"of\", \"books\", \"on\", \"the\", \"table\", \"left\", \".\"]\n# ::lemmas [\"the\", \"putter\", \"of\", \"book\", \"on\", \"the\", \"table\", \"leave\", \".\"]\n# ::alignments 1-1 3-1.1 6-1.3 7-1.2\n(p / putter~e.1\n   :poss (b / book~e.3)\n   :ARG1-of (l / leave-17~e.7)\n   :location (t / table~e.6))", [[0, 3], [4, 10], [11, 13], [14, 19], [20, 22], [23, 26], [27, 32], [33, 37], [37, 38]]], ["# ::snt the putter on the table left.\n# ::tokens [\"the\", \"putter\", \"on\", \"the\", \"table\", \"left\", \".\"]\n# ::lemmas [\"the\", \"putter\", \"on\", \"the\", \"table\", \"leave\", \".\"]\n# ::alignments 1-1 4-1.2 5-1.1\n(p / putter~e.1\n   :ARG1-of (l / left-20~e.5)\n   :location (t / table~e.4))", [[0, 3], [4, 10], [11, 13], [14, 17], [18, 23], [24, 28], [28, 29]]], ["# ::snt Jan gave Dale a book.\n# ::tokens [\"Jan\", \"gave\", \"Dale\", \"a\", \"book\", \".\"]\n# ::lemmas [\"Jan\", \"give\", \"Dale\", \"a\", \"book\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.3.1.1 4-1.2\n(g / give-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jan\"~e.0))\n   :ARG1 (b / book~e.4)\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Dale\"~e.2)))", [[0, 3], [4, 8], [9, 13], [14, 15], [16, 20], [20, 21]]], ["# ::snt Jan gave a book to Dale.\n# ::tokens [\"Jan\", \"gave\", \"a\", \"book\", \"to\", \"Dale\", \".\"]\n# ::lemmas [\"Jan\", \"give\", \"a\", \"book\", \"to\", \"Dale\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 5-1.3.1.1\n(g / give-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jan\"~e.0))\n   :ARG1 (b / book~e.3)\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Dale\"~e.5)))", [[0, 3], [4, 8], [9, 10], [11, 15], [16, 18], [19, 23], [23, 24]]], ["# ::snt Jan handed Dale a book.\n# ::tokens [\"Jan\", \"handed\", \"Dale\", \"a\", \"book\", \".\"]\n# ::lemmas [\"Jan\", \"hand\", \"Dale\", \"a\", \"book\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.3.1.1 4-1.2\n(h / hand-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jan\"~e.0))\n   :ARG1 (b / book~e.4)\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Dale\"~e.2)))", [[0, 3], [4, 10], [11, 15], [16, 17], [18, 22], [22, 23]]], ["# ::snt Jan handed a book to Dale.\n# ::tokens [\"Jan\", \"handed\", \"a\", \"book\", \"to\", \"Dale\", \".\"]\n# ::lemmas [\"Jan\", \"hand\", \"a\", \"book\", \"to\", \"Dale\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 5-1.3.1.1\n(h / hand-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jan\"~e.0))\n   :ARG1 (b / book~e.3)\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Dale\"~e.5)))", [[0, 3], [4, 10], [11, 12], [13, 17], [18, 20], [21, 25], [25, 26]]], ["# ::snt Kris donated the library a book.\n# ::tokens [\"Kris\", \"donated\", \"the\", \"library\", \"a\", \"book\", \".\"]\n# ::lemmas [\"Kris\", \"donate\", \"the\", \"library\", \"a\", \"book\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.3 5-1.2\n(d / donate-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kris\"~e.0))\n   :ARG1 (b / book~e.5)\n   :ARG2 (l / library~e.3))", [[0, 4], [5, 12], [13, 16], [17, 24], [25, 26], [27, 31], [31, 32]]], ["# ::snt Dale gave Brooke a hard time.\n# ::tokens [\"Dale\", \"gave\", \"Brooke\", \"a\", \"hard\", \"time\", \".\"]\n# ::lemmas [\"Dale\", \"give\", \"Brooke\", \"a\", \"hard\", \"time\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.3.1.1 4-1.2.1 5-1.2\n(g / give-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dale\"~e.0))\n   :ARG1 (t / time~e.5\n            :ARG1-of (h / hard-02~e.4))\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Brooke\"~e.2)))", [[0, 4], [5, 9], [10, 16], [17, 18], [19, 23], [24, 28], [28, 29]]], ["# ::snt Dale gave a hard time to Brooke.\n# ::tokens [\"Dale\", \"gave\", \"a\", \"hard\", \"time\", \"to\", \"Brooke\", \".\"]\n# ::lemmas [\"Dale\", \"give\", \"a\", \"hard\", \"time\", \"to\", \"Brooke\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1 4-1.2 6-1.3.1.1\n(g / give-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dale\"~e.0))\n   :ARG1 (t / time~e.4\n            :ARG1-of (h / hard-02~e.3))\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Brooke\"~e.6)))", [[0, 4], [5, 9], [10, 11], [12, 16], [17, 21], [22, 24], [25, 31], [31, 32]]], ["# ::snt Pat coughed.\n# ::tokens [\"Pat\", \"coughed\", \".\"]\n# ::lemmas [\"Pat\", \"cough\", \".\"]\n# ::alignments 0-1.1.1.1 1-1\n(c / cough-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Pat\"~e.0)))", [[0, 3], [4, 11], [11, 12]]], ["# ::snt Pat coughed the napkin off the table.\n# ::tokens [\"Pat\", \"coughed\", \"the\", \"napkin\", \"off\", \"the\", \"table\", \".\"]\n# ::lemmas [\"Pat\", \"cough\", \"the\", \"napkin\", \"off\", \"the\", \"table\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 4-1.3 6-1.3.1\n(c / cough-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Pat\"~e.0))\n   :ARG1 (n2 / napkin~e.3)\n   :direction (o / off~e.4\n                 :op1 (t / table~e.6)))", [[0, 3], [4, 11], [12, 15], [16, 22], [23, 26], [27, 30], [31, 36], [36, 37]]], ["# ::snt The horse kicked me.\n# ::tokens [\"The\", \"horse\", \"kicked\", \"me\", \".\"]\n# ::lemmas [\"the\", \"horse\", \"kick\", \"i\", \".\"]\n# ::alignments 1-1.1 2-1 3-1.2\n(k / kick-01~e.2\n   :ARG0 (h / horse~e.1)\n   :ARG1 (ii / i~e.3))", [[0, 3], [4, 9], [10, 16], [17, 19], [19, 20]]], ["# ::snt They yelled their way into the meeting.\n# ::tokens [\"They\", \"yelled\", \"their\", \"way\", \"into\", \"the\", \"meeting\", \".\"]\n# ::lemmas [\"they\", \"yell\", \"their\", \"way\", \"into\", \"the\", \"meeting\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 6-1.2.1\n(y / yell-01~e.1\n   :ARG0 (t / they~e.0)\n   :ARG1 (w / way~e.3\n            :purpose (m / meet-03~e.6\n                        :ARG0 t)\n            :poss t))", [[0, 4], [5, 11], [12, 17], [18, 21], [22, 26], [27, 30], [31, 38], [38, 39]]], ["# ::snt Kim is standing here.\n# ::tokens [\"Kim\", \"is\", \"standing\", \"here\", \".\"]\n# ::lemmas [\"Kim\", \"be\", \"stand\", \"here\", \".\"]\n# ::alignments 0-1.1.1.1 2-1 3-1.2\n(s / stand-01~e.2\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Kim\"~e.0))\n   :ARG2 (h / here~e.3))", [[0, 3], [4, 6], [7, 15], [16, 20], [20, 21]]], ["# ::snt Sandy has eaten dinner.\n# ::tokens [\"Sandy\", \"has\", \"eaten\", \"dinner\", \".\"]\n# ::lemmas [\"Sandy\", \"have\", \"eat\", \"dinner\", \".\"]\n# ::alignments 0-1.1.1.1 2-1 3-1.2\n(e / eat-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sandy\"~e.0))\n   :ARG1 (d / dinner~e.3))", [[0, 5], [6, 9], [10, 15], [16, 22], [22, 23]]], ["# ::snt The boat floated down the river sank.\n# ::tokens [\"The\", \"boat\", \"floated\", \"down\", \"the\", \"river\", \"sank\", \".\"]\n# ::lemmas [\"the\", \"boat\", \"float\", \"down\", \"the\", \"river\", \"sank\", \".\"]\n# ::alignments 1-1.1 2-1.1.1 3-1.1.1.1 5-1.1.1.1.1\n(s / sink-01\n   :ARG1 (b / boat~e.1\n            :ARG1-of (f / float-01~e.2\n                        :ARG2 (d / down~e.3\n                                 :op1 (r / river~e.5)))))", [[0, 3], [4, 8], [9, 16], [17, 21], [22, 25], [26, 31], [32, 36], [36, 37]]], ["# ::snt The horse taken to the hospital died.\n# ::tokens [\"The\", \"horse\", \"taken\", \"to\", \"the\", \"hospital\", \"died\", \".\"]\n# ::lemmas [\"the\", \"horse\", \"take\", \"to\", \"the\", \"hospital\", \"die\", \".\"]\n# ::alignments 1-1.1 2-1.1.1 5-1.1.1.1 6-1\n(d / die-01~e.6\n   :ARG1 (h / horse~e.1\n            :ARG1-of (t / take-01~e.2\n                        :ARG3 (h2 / hospital~e.5))))", [[0, 3], [4, 9], [10, 15], [16, 18], [19, 22], [23, 31], [32, 36], [36, 37]]], ["# ::snt The boat that was floated down the river sank.\n# ::tokens [\"The\", \"boat\", \"that\", \"was\", \"floated\", \"down\", \"the\", \"river\", \"sank\", \".\"]\n# ::lemmas [\"the\", \"boat\", \"that\", \"be\", \"float\", \"down\", \"the\", \"river\", \"sank\", \".\"]\n# ::alignments 1-1.1 4-1.1.1 5-1.1.1.2 7-1.1.1.1\n(s / sink-01\n   :ARG1 (b / boat~e.1\n            :ARG1-of (f / float-01~e.4\n                        :ARG2 (r / river~e.7)\n                        :direction (d / down~e.5))))", [[0, 3], [4, 8], [9, 13], [14, 17], [18, 25], [26, 30], [31, 34], [35, 40], [41, 45], [45, 46]]], ["# ::snt The thief seized by the police turned out to be our cousin.\n# ::tokens [\"The\", \"thief\", \"seized\", \"by\", \"the\", \"police\", \"turned\", \"out\", \"to\", \"be\", \"our\", \"cousin\", \".\"]\n# ::lemmas [\"the\", \"thief\", \"seize\", \"by\", \"the\", \"police\", \"turn\", \"out\", \"to\", \"be\", \"our\", \"cousin\", \".\"]\n# ::alignments 2-1.1.2 5-1.1.2.1 6-1 11-1.2.1.2\n(t / turn-out-11~e.6\n   :ARG1 (p / person\n            :ARG0-of (s / steal-01)\n            :ARG1-of (s2 / seize-01~e.2\n                         :ARG0 (p2 / police~e.5)))\n   :ARG2 (p3 / person\n             :ARG0-of (h / have-rel-role-91\n                         :ARG1 (w / we)\n                         :ARG2 (c / cousin~e.11))))", [[0, 3], [4, 9], [10, 16], [17, 19], [20, 23], [24, 30], [31, 37], [38, 41], [42, 44], [45, 47], [48, 51], [52, 58], [58, 59]]], ["# ::snt The evidence that was assembled by the prosecution convinced the jury.\n# ::tokens [\"The\", \"evidence\", \"that\", \"was\", \"assembled\", \"by\", \"the\", \"prosecution\", \"convinced\", \"the\", \"jury\", \".\"]\n# ::lemmas [\"the\", \"evidence\", \"that\", \"be\", \"assemble\", \"by\", \"the\", \"prosecution\", \"convince\", \"the\", \"jury\", \".\"]\n# ::alignments 1-1.1 4-1.1.1 7-1.1.1.1 8-1 10-1.2\n(c / convince-01~e.8\n   :ARG0 (e / evidence~e.1\n            :ARG1-of (a / assemble-01~e.4\n                        :ARG0 (p / prosecute-01~e.7)))\n   :ARG1 (j / jury~e.10))", [[0, 3], [4, 12], [13, 17], [18, 21], [22, 31], [32, 34], [35, 38], [39, 50], [51, 60], [61, 64], [65, 69], [69, 70]]], ["# ::snt The thief who was seized by the police turned out to be our cousin.\n# ::tokens [\"The\", \"thief\", \"who\", \"was\", \"seized\", \"by\", \"the\", \"police\", \"turned\", \"out\", \"to\", \"be\", \"our\", \"cousin\", \".\"]\n# ::lemmas [\"the\", \"thief\", \"who\", \"be\", \"seize\", \"by\", \"the\", \"police\", \"turn\", \"out\", \"to\", \"be\", \"our\", \"cousin\", \".\"]\n# ::alignments 4-1.1.2 7-1.1.2.1 8-1 13-1.2.1.2\n(t / turn-out-11~e.8\n   :ARG1 (p / person\n            :ARG0-of (s / steal-01)\n            :ARG1-of (s2 / seize-01~e.4\n                         :ARG0 (p2 / police~e.7)))\n   :ARG2 (p3 / person\n             :ARG0-of (h / have-rel-role-91\n                         :ARG1 (w / we)\n                         :ARG2 (c / cousin~e.13))))", [[0, 3], [4, 9], [10, 13], [14, 17], [18, 24], [25, 27], [28, 31], [32, 38], [39, 45], [46, 49], [50, 52], [53, 55], [56, 59], [60, 66], [66, 67]]], ["# ::snt Lou forgot the umbrella was broken.\n# ::tokens [\"Lou\", \"forgot\", \"the\", \"umbrella\", \"was\", \"broken\", \".\"]\n# ::lemmas [\"Lou\", \"forget\", \"the\", \"umbrella\", \"be\", \"break\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1 5-1.2\n(f / forget-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lou\"~e.0))\n   :ARG1 (b / break-01~e.5\n            :ARG1 (u / umbrella~e.3)))", [[0, 3], [4, 10], [11, 14], [15, 23], [24, 27], [28, 34], [34, 35]]], ["# ::snt Dana learned the umbrella was broken.\n# ::tokens [\"Dana\", \"learned\", \"the\", \"umbrella\", \"was\", \"broken\", \".\"]\n# ::lemmas [\"Dana\", \"learn\", \"the\", \"umbrella\", \"be\", \"break\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1 5-1.2\n(l / learn-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dana\"~e.0))\n   :ARG1 (b / break-01~e.5\n            :ARG1 (u / umbrella~e.3)))", [[0, 4], [5, 12], [13, 16], [17, 25], [26, 29], [30, 36], [36, 37]]], ["# ::snt Dana learned a new theorem in class.\n# ::tokens [\"Dana\", \"learned\", \"a\", \"new\", \"theorem\", \"in\", \"class\", \".\"]\n# ::lemmas [\"Dana\", \"learn\", \"a\", \"new\", \"theorem\", \"in\", \"class\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1 4-1.2 6-1.3\n(l / learn-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Dana\"~e.0))\n   :ARG1 (t / theorem~e.4\n            :ARG1-of (n2 / new-01~e.3))\n   :location (c / class~e.6))", [[0, 4], [5, 12], [13, 14], [15, 18], [19, 26], [27, 29], [30, 35], [35, 36]]], ["# ::snt Lynn likes the hat on the shelf.\n# ::tokens [\"Lynn\", \"likes\", \"the\", \"hat\", \"on\", \"the\", \"shelf\", \".\"]\n# ::lemmas [\"Lynn\", \"like\", \"the\", \"hat\", \"on\", \"the\", \"shelf\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 6-1.2.1\n(l / like-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lynn\"~e.0))\n   :ARG1 (h / hat~e.3\n            :location (s / shelf~e.6)))", [[0, 4], [5, 10], [11, 14], [15, 18], [19, 21], [22, 25], [26, 31], [31, 32]]], ["# ::snt The artist drew the child with a bicycle.\n# ::tokens [\"The\", \"artist\", \"drew\", \"the\", \"child\", \"with\", \"a\", \"bicycle\", \".\"]\n# ::lemmas [\"the\", \"artist\", \"draw\", \"the\", \"child\", \"with\", \"a\", \"bicycle\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2 7-1.3\n(d / draw-01~e.2\n   :ARG0 (a / artist~e.1)\n   :ARG1 (c / child~e.4)\n   :instrument (b / bicycle~e.7))", [[0, 3], [4, 10], [11, 15], [16, 19], [20, 25], [26, 30], [31, 32], [33, 40], [40, 41]]], ["# ::snt Lynn bought the hat on the shelf.\n# ::tokens [\"Lynn\", \"bought\", \"the\", \"hat\", \"on\", \"the\", \"shelf\", \".\"]\n# ::lemmas [\"Lynn\", \"buy\", \"the\", \"hat\", \"on\", \"the\", \"shelf\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 6-1.2.1\n(b / buy-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lynn\"~e.0))\n   :ARG1 (h / hat~e.3\n            :location (s / shelf~e.6)))", [[0, 4], [5, 11], [12, 15], [16, 19], [20, 22], [23, 26], [27, 32], [32, 33]]], ["# ::snt The cat was bitten by the dog.\n# ::tokens [\"The\", \"cat\", \"was\", \"bitten\", \"by\", \"the\", \"dog\", \".\"]\n# ::lemmas [\"the\", \"cat\", \"be\", \"bite\", \"by\", \"the\", \"dog\", \".\"]\n# ::alignments 1-1.2 3-1 6-1.1\n(b / bite-01~e.3\n   :ARG0 (d / dog~e.6)\n   :ARG1 (c / cat~e.1))", [[0, 3], [4, 7], [8, 11], [12, 18], [19, 21], [22, 25], [26, 29], [29, 30]]], ["# ::snt The cat was bitten.\n# ::tokens [\"The\", \"cat\", \"was\", \"bitten\", \".\"]\n# ::lemmas [\"the\", \"cat\", \"be\", \"bite\", \".\"]\n# ::alignments 1-1.1 3-1\n(b / bite-01~e.3\n   :ARG1 (c / cat~e.1))", [[0, 3], [4, 7], [8, 11], [12, 18], [18, 19]]], ["# ::snt Pat handed Chris a note.\n# ::tokens [\"Pat\", \"handed\", \"Chris\", \"a\", \"note\", \".\"]\n# ::lemmas [\"Pat\", \"hand\", \"Chris\", \"a\", \"note\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.3.1.1 4-1.2\n(h / hand-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Pat\"~e.0))\n   :ARG1 (n2 / note~e.4)\n   :ARG2 (p2 / person\n             :name (n3 / name\n                       :op1 \"Chris\"~e.2)))", [[0, 3], [4, 10], [11, 16], [17, 18], [19, 23], [23, 24]]], ["# ::snt Chris was handed a note by Pat.\n# ::tokens [\"Chris\", \"was\", \"handed\", \"a\", \"note\", \"by\", \"Pat\", \".\"]\n# ::lemmas [\"Chris\", \"be\", \"hand\", \"a\", \"note\", \"by\", \"Pat\", \".\"]\n# ::alignments 0-1.3.1.1 2-1 4-1.2 6-1.1.1.1\n(h / hand-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Pat\"~e.6))\n   :ARG1 (n2 / note~e.4)\n   :ARG2 (p2 / person\n             :name (n3 / name\n                       :op1 \"Chris\"~e.0)))", [[0, 5], [6, 9], [10, 16], [17, 18], [19, 23], [24, 26], [27, 30], [30, 31]]], ["# ::snt Dumb ideas are put notions in children's heads.\n# ::tokens [\"Dumb\", \"ideas\", \"are\", \"put\", \"notions\", \"in\", \"children\", \"'s\", \"heads\", \".\"]\n# ::lemmas [\"dumb\", \"idea\", \"be\", \"put\", \"notion\", \"in\", \"child\", \"'s\", \"head\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 3-1 6-1.3.1 8-1.3\n(p / put-01~e.3\n   :ARG0 (ii / idea~e.1\n             :mod (d / dumb~e.0))\n   :ARG1 (ii2 / idea)\n   :ARG2 (h / head~e.8\n            :part-of (c / child~e.6)))", [[0, 4], [5, 10], [11, 14], [15, 18], [19, 26], [27, 29], [30, 38], [38, 40], [41, 46], [46, 47]]], ["# ::snt The patient was died by the doctor.\n# ::tokens [\"The\", \"patient\", \"was\", \"died\", \"by\", \"the\", \"doctor\", \".\"]\n# ::lemmas [\"the\", \"patient\", \"be\", \"die\", \"by\", \"the\", \"doctor\", \".\"]\n# ::alignments 1-1.2 3-1 6-1.1\n(d / die-01~e.3\n   :ARG0 (d2 / doctor~e.6)\n   :ARG1 (p / patient~e.1))", [[0, 3], [4, 11], [12, 15], [16, 20], [21, 23], [24, 27], [28, 34], [34, 35]]], ["# ::snt The doctor died the patient.\n# ::tokens [\"The\", \"doctor\", \"died\", \"the\", \"patient\", \".\"]\n# ::lemmas [\"the\", \"doctor\", \"die\", \"the\", \"patient\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2\n(d / die-01~e.2\n   :ARG1 (d2 / doctor~e.1)\n   :ARG1 (p / patient~e.4))", [[0, 3], [4, 10], [11, 15], [16, 19], [20, 27], [27, 28]]], ["# ::snt Pat handed Chris.\n# ::tokens [\"Pat\", \"handed\", \"Chris\", \".\"]\n# ::lemmas [\"Pat\", \"hand\", \"Chris\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1\n(h / hand-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Pat\"~e.0))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Chris\"~e.2)))", [[0, 3], [4, 10], [11, 16], [16, 17]]], ["# ::snt Chris was handed by Pat.\n# ::tokens [\"Chris\", \"was\", \"handed\", \"by\", \"Pat\", \".\"]\n# ::lemmas [\"Chris\", \"be\", \"hand\", \"by\", \"Pat\", \".\"]\n# ::alignments 0-1.2.1.1 2-1 4-1.1.1.1\n(h / hand-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Pat\"~e.4))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Chris\"~e.0)))", [[0, 5], [6, 9], [10, 16], [17, 19], [20, 23], [23, 24]]], ["# ::snt TV puts dumb ideas into their heads.\n# ::tokens [\"TV\", \"puts\", \"dumb\", \"ideas\", \"into\", \"their\", \"heads\", \".\"]\n# ::lemmas [\"tv\", \"put\", \"dumb\", \"idea\", \"into\", \"their\", \"head\", \".\"]\n# ::alignments 1-1 2-1.2.1 3-1.2 6-1.3\n(p / put-01~e.1\n   :ARG0 (t / television)\n   :ARG1 (ii / idea~e.3\n             :mod (d / dumb~e.2))\n   :ARG2 (h / head~e.6\n            :part-of (t2 / they)))", [[0, 2], [3, 7], [8, 12], [13, 18], [19, 23], [24, 29], [30, 35], [35, 36]]], ["# ::snt Dumb ideas are put into their heads by TV.\n# ::tokens [\"Dumb\", \"ideas\", \"are\", \"put\", \"into\", \"their\", \"heads\", \"by\", \"TV\", \".\"]\n# ::lemmas [\"dumb\", \"idea\", \"be\", \"put\", \"into\", \"their\", \"head\", \"by\", \"tv\", \".\"]\n# ::alignments 0-1.2.1 1-1.2 3-1 6-1.3\n(p / put-01~e.3\n   :ARG0 (t / television)\n   :ARG1 (ii / idea~e.1\n             :mod (d / dumb~e.0))\n   :ARG2 (h / head~e.6\n            :part-of (t2 / they)))", [[0, 4], [5, 10], [11, 14], [15, 18], [19, 23], [24, 29], [30, 35], [36, 38], [39, 41], [41, 42]]], ["# ::snt Dumb ideas are put into their heads.\n# ::tokens [\"Dumb\", \"ideas\", \"are\", \"put\", \"into\", \"their\", \"heads\", \".\"]\n# ::lemmas [\"dumb\", \"idea\", \"be\", \"put\", \"into\", \"their\", \"head\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 3-1 6-1.2\n(p / put-01~e.3\n   :ARG1 (ii / idea~e.1\n             :mod (d / dumb~e.0))\n   :ARG2 (h / head~e.6\n            :part-of (t / they)))", [[0, 4], [5, 10], [11, 14], [15, 18], [19, 23], [24, 29], [30, 35], [35, 36]]], ["# ::snt Dumb ideas are put.\n# ::tokens [\"Dumb\", \"ideas\", \"are\", \"put\", \".\"]\n# ::lemmas [\"dumb\", \"idea\", \"be\", \"put\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 3-1\n(p / put-01~e.3\n   :ARG1 (ii / idea~e.1\n             :mod (d / dumb~e.0)))", [[0, 4], [5, 10], [11, 14], [15, 18], [18, 19]]], ["# ::snt Dumb ideas are put by TV.\n# ::tokens [\"Dumb\", \"ideas\", \"are\", \"put\", \"by\", \"TV\", \".\"]\n# ::lemmas [\"dumb\", \"idea\", \"be\", \"put\", \"by\", \"tv\", \".\"]\n# ::alignments 0-1.2.1 1-1.2 3-1\n(p / put-01~e.3\n   :ARG0 (t / television)\n   :ARG1 (ii / idea~e.1\n             :mod (d / dumb~e.0)))", [[0, 4], [5, 10], [11, 14], [15, 18], [19, 21], [22, 24], [24, 25]]], ["# ::snt Him was arrested by the police.\n# ::tokens [\"Him\", \"was\", \"arrested\", \"by\", \"the\", \"police\", \".\"]\n# ::lemmas [\"he\", \"be\", \"arrest\", \"by\", \"the\", \"police\", \".\"]\n# ::alignments 0-1.2 2-1 5-1.1\n(a / arrest-01~e.2\n   :ARG0 (p / police~e.5)\n   :ARG1 (h / he~e.0))", [[0, 3], [4, 7], [8, 16], [17, 19], [20, 23], [24, 30], [30, 31]]], ["# ::snt The cat got bitten by the dog.\n# ::tokens [\"The\", \"cat\", \"got\", \"bitten\", \"by\", \"the\", \"dog\", \".\"]\n# ::lemmas [\"the\", \"cat\", \"got\", \"bite\", \"by\", \"the\", \"dog\", \".\"]\n# ::alignments 1-1.2 3-1 6-1.1\n(b / bite-01~e.3\n   :ARG0 (d / dog~e.6)\n   :ARG1 (c / cat~e.1))", [[0, 3], [4, 7], [8, 11], [12, 18], [19, 21], [22, 25], [26, 29], [29, 30]]], ["# ::snt Liked by many people but respected by few, Jean will have to run an aggressive reelection campaign.\n# ::tokens [\"Liked\", \"by\", \"many\", \"people\", \"but\", \"respected\", \"by\", \"few\", \",\", \"Jean\", \"will\", \"have\", \"to\", \"run\", \"an\", \"aggressive\", \"reelection\", \"campaign\", \".\"]\n# ::lemmas [\"like\", \"by\", \"many\", \"people\", \"but\", \"respect\", \"by\", \"few\", \",\", \"Jean\", \"will\", \"have\", \"to\", \"run\", \"an\", \"aggressive\", \"reelection\", \"campaign\", \".\"]\n# ::alignments 0-1.3.1 2-1.3.1.1.1 5-1.3.2 9-1.1.1.1 13-1.2 15-1.2.2.2 16-1.2.2.1 17-1.2.2\n(o / obligate-01\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Jean\"~e.9))\n   :ARG2 (r / run-02~e.13\n            :ARG0 p\n            :ARG1 (c / campaign-01~e.17\n                     :ARG1 (r2 / reelect-01~e.16\n                               :ARG1 p)\n                     :mod (a / aggressive~e.15)))\n   :concession (a2 / and\n                   :op1 (l / like-01~e.0\n                           :ARG0 (p2 / person\n                                     :quant (m / many~e.2))\n                           :ARG1 p)\n                   :op2 (r3 / respect-01~e.5\n                            :ARG0 p2\n                            :ARG1 p)))", [[0, 5], [6, 8], [9, 13], [14, 20], [21, 24], [25, 34], [35, 37], [38, 41], [41, 42], [43, 47], [48, 52], [53, 57], [58, 60], [61, 64], [65, 67], [68, 78], [79, 89], [90, 98], [98, 99]]], ["# ::snt Anyone handed a note will be watched closely.\n# ::tokens [\"Anyone\", \"handed\", \"a\", \"note\", \"will\", \"be\", \"watched\", \"closely\", \".\"]\n# ::lemmas [\"anyone\", \"hand\", \"a\", \"note\", \"will\", \"be\", \"watch\", \"closely\", \".\"]\n# ::alignments 0-1.1 1-1.1.1 3-1.1.1.1 6-1 7-1.2\n(w / watch-01~e.6\n   :ARG1 (a / anyone~e.0\n            :ARG1-of (h / hand-01~e.1\n                        :ARG2 (n / note~e.3)))\n   :manner (c / close-10~e.7))", [[0, 6], [7, 13], [14, 15], [16, 20], [21, 25], [26, 28], [29, 36], [37, 44], [44, 45]]], ["# ::snt There are storm clouds gathering.\n# ::tokens [\"There\", \"are\", \"storm\", \"clouds\", \"gathering\", \".\"]\n# ::lemmas [\"there\", \"be\", \"storm\", \"cloud\", \"gather\", \".\"]\n# ::alignments 2-1.1.1 3-1.1 4-1\n(g / gather-01~e.4\n   :ARG1 (c / cloud~e.3\n            :mod (s / storm~e.2)))", [[0, 5], [6, 9], [10, 15], [16, 22], [23, 32], [32, 33]]], ["# ::snt The FBI is keeping close tabs on Pat.\n# ::tokens [\"The\", \"FBI\", \"is\", \"keeping\", \"close\", \"tabs\", \"on\", \"Pat\", \".\"]\n# ::lemmas [\"the\", \"FBI\", \"be\", \"keep\", \"close\", \"tab\", \"on\", \"Pat\", \".\"]\n# ::alignments 1-1.1.1.1 3-1 4-1.2.3 5-1.2 7-1.2.2.1.1\n(k / keep-01~e.3\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"FBI\"~e.1))\n   :ARG1 (t / tab-01~e.5\n            :ARG0 g\n            :ARG1 (p / person\n                     :name (n2 / name\n                               :op1 \"Pat\"~e.7))\n            :ARG1-of (c / close-10~e.4)))", [[0, 3], [4, 7], [8, 10], [11, 18], [19, 24], [25, 29], [30, 32], [33, 36], [36, 37]]], ["# ::snt Pat is on the roof.\n# ::tokens [\"Pat\", \"is\", \"on\", \"the\", \"roof\", \".\"]\n# ::lemmas [\"Pat\", \"be\", \"on\", \"the\", \"roof\", \".\"]\n# ::alignments 0-1.1.1 4-1.2\n(p / person\n   :name (n / name\n            :op1 \"Pat\"~e.0)\n   :location (r / roof~e.4))", [[0, 3], [4, 6], [7, 9], [10, 13], [14, 18], [18, 19]]], ["# ::snt Pat is fond of Chris.\n# ::tokens [\"Pat\", \"is\", \"fond\", \"of\", \"Chris\", \".\"]\n# ::lemmas [\"Pat\", \"be\", \"fond\", \"of\", \"Chris\", \".\"]\n# ::alignments 0-1.1.1.1 4-1.2.1.1\n(l / like-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Pat\"~e.0))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Chris\"~e.4)))", [[0, 3], [4, 6], [7, 11], [12, 14], [15, 20], [20, 21]]], ["# ::snt Pat is singing the blues.\n# ::tokens [\"Pat\", \"is\", \"singing\", \"the\", \"blues\", \".\"]\n# ::lemmas [\"Pat\", \"be\", \"singe\", \"the\", \"blue\", \".\"]\n# ::alignments 0-1.1.1.1 2-1\n(s / sing-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Pat\"~e.0))\n   :ARG1 (m / music\n            :name n\n            :op1 \" blues\"))", [[0, 3], [4, 6], [7, 14], [15, 18], [19, 24], [24, 25]]], ["# ::snt Pat is likes Chris.\n# ::tokens [\"Pat\", \"is\", \"likes\", \"Chris\", \".\"]\n# ::lemmas [\"Pat\", \"be\", \"like\", \"Chris\", \".\"]\n# ::alignments 0-1.1.1.1 2-1 3-1.2.1.1\n(l / like-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Pat\"~e.0))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Chris\"~e.3)))", [[0, 3], [4, 6], [7, 12], [13, 18], [18, 19]]], ["# ::snt Pat is mere.\n# ::tokens [\"Pat\", \"is\", \"mere\", \".\"]\n# ::lemmas [\"Pat\", \"be\", \"mere\", \".\"]\n# ::alignments 0-1.1.1.1 2-1\n(m / mere~e.2\n   :domain (p / person\n              :name (n / name\n                       :op1 \"Pat\"~e.0)))", [[0, 3], [4, 6], [7, 11], [11, 12]]], ["# ::snt There were many people fond of Pat.\n# ::tokens [\"There\", \"were\", \"many\", \"people\", \"fond\", \"of\", \"Pat\", \".\"]\n# ::lemmas [\"there\", \"be\", \"many\", \"people\", \"fond\", \"of\", \"Pat\", \".\"]\n# ::alignments 2-1.1.1 4-1 6-1.2.1.1\n(f / fond-01~e.4\n   :ARG0 (p / person\n            :quant (m / many~e.2))\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Pat\"~e.6)))", [[0, 5], [6, 10], [11, 15], [16, 22], [23, 27], [28, 30], [31, 34], [34, 35]]], ["# ::snt There are people looking through the window.\n# ::tokens [\"There\", \"are\", \"people\", \"looking\", \"through\", \"the\", \"window\", \".\"]\n# ::lemmas [\"there\", \"be\", \"people\", \"look\", \"through\", \"the\", \"window\", \".\"]\n# ::alignments 3-1 6-1.2\n(l / look-01~e.3\n   :ARG0 (p / person)\n   :ARG1 (w / window~e.6))", [[0, 5], [6, 9], [10, 16], [17, 24], [25, 32], [33, 36], [37, 43], [43, 44]]], ["# ::snt Pat took a seat available.\n# ::tokens [\"Pat\", \"took\", \"a\", \"seat\", \"available\", \".\"]\n# ::lemmas [\"Pat\", \"take\", \"a\", \"seat\", \"available\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 4-1.2.1\n(t / take-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Pat\"~e.0))\n   :ARG1 (s / seat~e.3\n            :ARG2-of (a / available-02~e.4)))", [[0, 3], [4, 8], [9, 10], [11, 15], [16, 25], [25, 26]]], ["# ::snt I looked for a seat available.\n# ::tokens [\"I\", \"looked\", \"for\", \"a\", \"seat\", \"available\", \".\"]\n# ::lemmas [\"i\", \"look\", \"for\", \"a\", \"seat\", \"available\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2 5-1.2.1\n(l / look-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (s / seat~e.4\n            :ARG2-of (a / available-02~e.5)))", [[0, 1], [2, 8], [9, 12], [13, 14], [15, 19], [20, 29], [29, 30]]], ["# ::snt A unicorn is in the garden.\n# ::tokens [\"A\", \"unicorn\", \"is\", \"in\", \"the\", \"garden\", \".\"]\n# ::lemmas [\"a\", \"unicorn\", \"be\", \"in\", \"the\", \"garden\", \".\"]\n# ::alignments 1-1.1 5-1.2\n(b / be-located-at-91\n   :ARG1 (u / unicorn~e.1)\n   :ARG2 (g / garden~e.5))", [[0, 1], [2, 9], [10, 12], [13, 15], [16, 19], [20, 26], [26, 27]]], ["# ::snt Merle gave there a book.\n# ::tokens [\"Merle\", \"gave\", \"there\", \"a\", \"book\", \".\"]\n# ::lemmas [\"Merle\", \"give\", \"there\", \"a\", \"book\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.3 4-1.2\n(g / give-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Merle\"~e.0))\n   :ARG1 (b / book~e.4)\n   :ARG2 (t / there~e.2))", [[0, 5], [6, 10], [11, 16], [17, 18], [19, 23], [23, 24]]], ["# ::snt That the Giants had lost really mattered.\n# ::tokens [\"That\", \"the\", \"Giants\", \"had\", \"lost\", \"really\", \"mattered\", \".\"]\n# ::lemmas [\"that\", \"the\", \"Giants\", \"have\", \"lose\", \"really\", \"matter\", \".\"]\n# ::alignments 2-1.1.1.1.1 4-1.1 5-1.2 6-1\n(m / matter-01~e.6\n   :ARG1 (l / lose-03~e.4\n            :ARG0 (t / team\n                     :name (n / name\n                              :op1 \"Giants\"~e.2)))\n   :ARG1-of (r / real-04~e.5))", [[0, 4], [5, 8], [9, 15], [16, 19], [20, 24], [25, 31], [32, 40], [40, 41]]], ["# ::snt That the Giants had lost mattered.\n# ::tokens [\"That\", \"the\", \"Giants\", \"had\", \"lost\", \"mattered\", \".\"]\n# ::lemmas [\"that\", \"the\", \"Giants\", \"have\", \"lose\", \"matter\", \".\"]\n# ::alignments 2-1.1.1.1.1 4-1.1 5-1\n(m / matter-01~e.5\n   :ARG1 (l / lose-03~e.4\n            :ARG0 (t / team\n                     :name (n / name\n                              :op1 \"Giants\"~e.2))))", [[0, 4], [5, 8], [9, 15], [16, 19], [20, 24], [25, 33], [33, 34]]], ["# ::snt It really mattered that the Giants had lost.\n# ::tokens [\"It\", \"really\", \"mattered\", \"that\", \"the\", \"Giants\", \"had\", \"lost\", \".\"]\n# ::lemmas [\"it\", \"really\", \"matter\", \"that\", \"the\", \"Giants\", \"have\", \"lose\", \".\"]\n# ::alignments 1-1.2 2-1 5-1.1.1.1.1 7-1.1\n(m / matter-01~e.2\n   :ARG1 (l / lose-03~e.7\n            :ARG0 (t / team\n                     :name (n / name\n                              :op1 \"Giants\"~e.5)))\n   :ARG1-of (r / real-04~e.1))", [[0, 2], [3, 9], [10, 18], [19, 23], [24, 27], [28, 34], [35, 38], [39, 43], [43, 44]]], ["# ::snt That Chris knew the answer never occurred to Pat.\n# ::tokens [\"That\", \"Chris\", \"knew\", \"the\", \"answer\", \"never\", \"occurred\", \"to\", \"Pat\", \".\"]\n# ::lemmas [\"that\", \"Chris\", \"know\", \"the\", \"answer\", \"never\", \"occur\", \"to\", \"Pat\", \".\"]\n# ::alignments 1-1.1.1.1 2-1 4-1.2.2 8-1.2.4.1.1\n(k / know-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chris\"~e.1))\n   :ARG1 (b / be-temporally-at-91\n            :polarity -\n            :ARG1 (a / answer-01~e.4)\n            :ARG2 (e / ever)\n            :beneficiary (p2 / person\n                             :name (n2 / name\n                                       :op1 \"Pat\"~e.8))))", [[0, 4], [5, 10], [11, 15], [16, 19], [20, 26], [27, 32], [33, 41], [42, 44], [45, 48], [48, 49]]], ["# ::snt It occurred to Pat that Chris knew the answer.\n# ::tokens [\"It\", \"occurred\", \"to\", \"Pat\", \"that\", \"Chris\", \"knew\", \"the\", \"answer\", \".\"]\n# ::lemmas [\"it\", \"occur\", \"to\", \"Pat\", \"that\", \"Chris\", \"know\", \"the\", \"answer\", \".\"]\n# ::alignments 3-1.1.1.1 5-1.2.1.1.1 6-1.2 8-1.2.2\n(t / think-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Pat\"~e.3))\n   :ARG1 (k / know-01~e.6\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Chris\"~e.5))\n            :ARG1 (a / answer-01~e.8)))", [[0, 2], [3, 11], [12, 14], [15, 18], [19, 23], [24, 29], [30, 34], [35, 38], [39, 45], [45, 46]]], ["# ::snt That the media discuss celebrities' sex lives disturbs many Americans.\n# ::tokens [\"That\", \"the\", \"media\", \"discuss\", \"celebrities\", \"'\", \"sex\", \"lives\", \"disturbs\", \"many\", \"Americans\", \".\"]\n# ::lemmas [\"that\", \"the\", \"medium\", \"discuss\", \"celebrity\", \"'\", \"sex\", \"life\", \"disturb\", \"many\", \"Americans\", \".\"]\n# ::alignments 2-1.1.1 3-1.1 4-1.1.2.1.1 6-1.1.2.1 7-1.1.2 8-1 9-1.2.2 10-1.2.1.1.1\n(d / disturb-01~e.8\n   :ARG0 (d2 / discuss-01~e.3\n             :ARG0 (m / media~e.2)\n             :ARG1 (l / life~e.7\n                      :mod (s / sex-01~e.6\n                              :ARG0 (c / celebrity~e.4))))\n   :ARG1 (p / person\n            :mod (c2 / country\n                     :name (n / name\n                              :op1 \"America\"~e.10))\n            :quant (m2 / many~e.9)))", [[0, 4], [5, 8], [9, 14], [15, 22], [23, 34], [34, 35], [36, 39], [40, 45], [46, 54], [55, 59], [60, 69], [69, 70]]], ["# ::snt It disturbs many Americans that the media discuss celebrities' sex lives.\n# ::tokens [\"It\", \"disturbs\", \"many\", \"Americans\", \"that\", \"the\", \"media\", \"discuss\", \"celebrities\", \"'\", \"sex\", \"lives\", \".\"]\n# ::lemmas [\"it\", \"disturb\", \"many\", \"Americans\", \"that\", \"the\", \"medium\", \"discuss\", \"celebrity\", \"'\", \"sex\", \"life\", \".\"]\n# ::alignments 1-1 2-1.2.2 3-1.2.1.1.1 6-1.1.1 7-1.1 8-1.1.2.1.1 10-1.1.2.1 11-1.1.2\n(d / disturb-01~e.1\n   :ARG0 (d2 / discuss-01~e.7\n             :ARG0 (m / media~e.6)\n             :ARG1 (l / life~e.11\n                      :mod (s / sex-01~e.10\n                              :ARG0 (c / celebrity~e.8))))\n   :ARG1 (p / person\n            :mod (c2 / country\n                     :name (n / name\n                              :op1 \"America\"~e.3))\n            :quant (m2 / many~e.2)))", [[0, 2], [3, 11], [12, 16], [17, 26], [27, 31], [32, 35], [36, 41], [42, 49], [50, 61], [61, 62], [63, 66], [67, 72], [72, 73]]], ["# ::snt That the Giants lost the series sucks.\n# ::tokens [\"That\", \"the\", \"Giants\", \"lost\", \"the\", \"series\", \"sucks\", \".\"]\n# ::lemmas [\"that\", \"the\", \"Giants\", \"lose\", \"the\", \"series\", \"suck\", \".\"]\n# ::alignments 2-1.1.1.1.1 3-1.1 5-1.1.2 6-1\n(s / suck-03~e.6\n   :ARG0 (l / lose-03~e.3\n            :ARG0 (t / team\n                     :name (n / name\n                              :op1 \"Giants\"~e.2))\n            :ARG1 (s2 / series~e.5)))", [[0, 4], [5, 8], [9, 15], [16, 20], [21, 24], [25, 31], [32, 37], [37, 38]]], ["# ::snt It sucks that the Giants lost the series.\n# ::tokens [\"It\", \"sucks\", \"that\", \"the\", \"Giants\", \"lost\", \"the\", \"series\", \".\"]\n# ::lemmas [\"it\", \"suck\", \"that\", \"the\", \"Giants\", \"lose\", \"the\", \"series\", \".\"]\n# ::alignments 1-1 4-1.1.1.1.1 5-1.1 7-1.1.2\n(s / suck-03~e.1\n   :ARG0 (l / lose-03~e.5\n            :ARG0 (t / team\n                     :name (n / name\n                              :op1 \"Giants\"~e.4))\n            :ARG1 (s2 / series~e.7)))", [[0, 2], [3, 8], [9, 13], [14, 17], [18, 24], [25, 29], [30, 33], [34, 40], [40, 41]]], ["# ::snt That the Giants lost the series bites.\n# ::tokens [\"That\", \"the\", \"Giants\", \"lost\", \"the\", \"series\", \"bites\", \".\"]\n# ::lemmas [\"that\", \"the\", \"Giants\", \"lose\", \"the\", \"series\", \"bite\", \".\"]\n# ::alignments 2-1.1.1.1 3-1 5-1.2.1 6-1.2\n(l / lose-03~e.3\n   :ARG0 (t / team\n            :name (n / name\n                     :op1 \"Giants\"~e.2))\n   :ARG1 (b / bite~e.6\n            :mod (s / series~e.5)))", [[0, 4], [5, 8], [9, 15], [16, 20], [21, 24], [25, 31], [32, 37], [37, 38]]], ["# ::snt It bites that the Giants lost the series.\n# ::tokens [\"It\", \"bites\", \"that\", \"the\", \"Giants\", \"lost\", \"the\", \"series\", \".\"]\n# ::lemmas [\"it\", \"bite\", \"that\", \"the\", \"Giants\", \"lose\", \"the\", \"series\", \".\"]\n# ::alignments 1-1 4-1.1.1.1.1 5-1.1 7-1.1.2\n(b / bite-01~e.1\n   :ARG2 (l / lose-03~e.5\n            :ARG0 (t / team\n                     :name (n / name\n                              :op1 \"Giants\"~e.4))\n            :ARG1 (s / series~e.7)))", [[0, 2], [3, 8], [9, 13], [14, 17], [18, 24], [25, 29], [30, 33], [34, 40], [40, 41]]], ["# ::snt That Pat is innocent proves.\n# ::tokens [\"That\", \"Pat\", \"is\", \"innocent\", \"proves\", \".\"]\n# ::lemmas [\"that\", \"Pat\", \"be\", \"innocent\", \"prof\", \".\"]\n# ::alignments 1-1.1.1.1.1 3-1.1 4-1\n(p / prove-01~e.4\n   :ARG1 (ii / innocent-01~e.3\n             :ARG1 (p2 / person\n                       :name (n / name\n                                :op1 \"Pat\"~e.1))))", [[0, 4], [5, 8], [9, 11], [12, 20], [21, 27], [27, 28]]], ["# ::snt It proves that Pat is innocent.\n# ::tokens [\"It\", \"proves\", \"that\", \"Pat\", \"is\", \"innocent\", \".\"]\n# ::lemmas [\"it\", \"prove\", \"that\", \"Pat\", \"be\", \"innocent\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1.1.1 5-1.2\n(p / prove-01~e.1\n   :ARG0 (ii / it~e.0)\n   :ARG1 (ii2 / innocent-01~e.5\n              :ARG1 (p2 / person\n                        :name (n / name\n                                 :op1 \"Pat\"~e.3))))", [[0, 2], [3, 9], [10, 14], [15, 18], [19, 21], [22, 30], [30, 31]]], ["# ::snt It suggested that Sandy had lied.\n# ::tokens [\"It\", \"suggested\", \"that\", \"Sandy\", \"had\", \"lied\", \".\"]\n# ::lemmas [\"it\", \"suggest\", \"that\", \"Sandy\", \"have\", \"lie\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1.1.1 5-1.2\n(s / suggest-01~e.1\n   :ARG0 (ii / it~e.0)\n   :ARG1 (l / lie-08~e.5\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Sandy\"~e.3))))", [[0, 2], [3, 12], [13, 17], [18, 23], [24, 27], [28, 32], [32, 33]]], ["# ::snt I gave it to Pat.\n# ::tokens [\"I\", \"gave\", \"it\", \"to\", \"Pat\", \".\"]\n# ::lemmas [\"i\", \"give\", \"it\", \"to\", \"Pat\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2 4-1.3.1.1\n(g / give-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (ii2 / it~e.2)\n   :ARG2 (p / person\n            :name (n / name\n                     :op1 \"Pat\"~e.4)))", [[0, 1], [2, 6], [7, 9], [10, 12], [13, 16], [16, 17]]], ["# ::snt We forgot that we needed invitations.\n# ::tokens [\"We\", \"forgot\", \"that\", \"we\", \"needed\", \"invitations\", \".\"]\n# ::lemmas [\"we\", \"forget\", \"that\", \"we\", \"need\", \"invitation\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2 5-1.2.2\n(f / forget-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (n / need-01~e.4\n            :ARG0 w\n            :ARG1 (ii / invite-01~e.5)))", [[0, 2], [3, 9], [10, 14], [15, 17], [18, 24], [25, 36], [36, 37]]], ["# ::snt Nobody saw that Pat had arrived.\n# ::tokens [\"Nobody\", \"saw\", \"that\", \"Pat\", \"had\", \"arrived\", \".\"]\n# ::lemmas [\"nobody\", \"see\", \"that\", \"Pat\", \"have\", \"arrive\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1.1.1 5-1.2\n(s / see-01~e.1\n   :ARG0 (n / nobody~e.0)\n   :ARG1 (a / arrive-01~e.5\n            :ARG1 (p / person\n                     :name (n2 / name\n                               :op1 \"Pat\"~e.3))))", [[0, 6], [7, 10], [11, 15], [16, 19], [20, 23], [24, 31], [31, 32]]], ["# ::snt Carrie kicked the bucket last night.\n# ::tokens [\"Carrie\", \"kicked\", \"the\", \"bucket\", \"last\", \"night\", \".\"]\n# ::lemmas [\"Carrie\", \"kick\", \"the\", \"bucket\", \"last\", \"night\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 5-1.3.1\n(k / kick-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carrie\"~e.0))\n   :ARG1 (b / bucket~e.3)\n   :time (d / date-entity\n            :dayperiod (n2 / night~e.5)\n            :mod (y / yesterday)))", [[0, 6], [7, 13], [14, 17], [18, 24], [25, 29], [30, 35], [35, 36]]], ["# ::snt The FBI kept tabs on Sandy.\n# ::tokens [\"The\", \"FBI\", \"kept\", \"tabs\", \"on\", \"Sandy\", \".\"]\n# ::lemmas [\"the\", \"FBI\", \"keep\", \"tab\", \"on\", \"Sandy\", \".\"]\n# ::alignments 1-1.1.1.1 2-1 3-1.2 5-1.2.2.1.1\n(k / keep-01~e.2\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"FBI\"~e.1))\n   :ARG1 (t / tab-03~e.3\n            :ARG0 g\n            :ARG1 (p / person\n                     :name (n2 / name\n                               :op1 \"Sandy\"~e.5))))", [[0, 3], [4, 7], [8, 12], [13, 17], [18, 20], [21, 26], [26, 27]]], ["# ::snt The candidates take advantage of the voters.\n# ::tokens [\"The\", \"candidates\", \"take\", \"advantage\", \"of\", \"the\", \"voters\", \".\"]\n# ::lemmas [\"the\", \"candidate\", \"take\", \"advantage\", \"of\", \"the\", \"voter\", \".\"]\n# ::alignments 1-1.1 2-1 6-1.2.1\n(t / take-advantage-02~e.2\n   :ARG0 (c / candidate~e.1)\n   :ARG1 (p / person\n            :ARG0-of (v / vote-01~e.6)))", [[0, 3], [4, 14], [15, 19], [20, 29], [30, 32], [33, 36], [37, 43], [43, 44]]], ["# ::snt The police put tabs on undocumented workers.\n# ::tokens [\"The\", \"police\", \"put\", \"tabs\", \"on\", \"undocumented\", \"workers\", \".\"]\n# ::lemmas [\"the\", \"police\", \"put\", \"tab\", \"on\", \"undocumented\", \"worker\", \".\"]\n# ::alignments 1-1.1 2-1 3-1.2 5-1.3.2 6-1.3.1\n(p / put-01~e.2\n   :ARG0 (p2 / police~e.1)\n   :ARG1 (t / tab~e.3)\n   :ARG2 (p3 / person\n             :ARG0-of (w / work-01~e.6)\n             :ARG1-of (d / document-01~e.5\n                         :polarity -)))", [[0, 3], [4, 10], [11, 14], [15, 19], [20, 22], [23, 35], [36, 43], [43, 44]]], ["# ::snt John ate the meat raw.\n# ::tokens [\"John\", \"ate\", \"the\", \"meat\", \"raw\", \".\"]\n# ::lemmas [\"John\", \"eat\", \"the\", \"meat\", \"raw\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 4-1.2.1\n(e / eat-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (m / meat~e.3\n            :mod (r / raw~e.4)))", [[0, 4], [5, 8], [9, 12], [13, 17], [18, 21], [21, 22]]], ["# ::snt John ate the meat nude.\n# ::tokens [\"John\", \"ate\", \"the\", \"meat\", \"nude\", \".\"]\n# ::lemmas [\"John\", \"eat\", \"the\", \"meat\", \"nude\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 4-1.3\n(e / eat-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (m / meat~e.3)\n   :manner (n2 / nude~e.4))", [[0, 4], [5, 8], [9, 12], [13, 17], [18, 22], [22, 23]]], ["# ::snt John made Bill mad.\n# ::tokens [\"John\", \"made\", \"Bill\", \"mad\", \".\"]\n# ::lemmas [\"John\", \"make\", \"Bill\", \"mad\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1.1 3-1.2\n(m / make-02~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (m2 / mad-04~e.3\n             :ARG1 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Bill\"~e.2))))", [[0, 4], [5, 9], [10, 14], [15, 18], [18, 19]]], ["# ::snt John loaded the hay into the wagon green.\n# ::tokens [\"John\", \"loaded\", \"the\", \"hay\", \"into\", \"the\", \"wagon\", \"green\", \".\"]\n# ::lemmas [\"John\", \"load\", \"the\", \"hay\", \"into\", \"the\", \"wagon\", \"green\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 6-1.3 7-1.3.1\n(l / load-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (h / hay~e.3)\n   :ARG2 (w / wagon~e.6\n            :ARG1-of (g / green-03~e.7)))", [[0, 4], [5, 11], [12, 15], [16, 19], [20, 24], [25, 28], [29, 34], [35, 40], [40, 41]]], ["# ::snt John loaded the hay into the wagon full.\n# ::tokens [\"John\", \"loaded\", \"the\", \"hay\", \"into\", \"the\", \"wagon\", \"full\", \".\"]\n# ::lemmas [\"John\", \"load\", \"the\", \"hay\", \"into\", \"the\", \"wagon\", \"full\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 6-1.3 7-1.3.1\n(l / load-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (h / hay~e.3)\n   :ARG2 (w / wagon~e.6\n            :ARG1-of (f / full-09~e.7)))", [[0, 4], [5, 11], [12, 15], [16, 19], [20, 24], [25, 28], [29, 34], [35, 39], [39, 40]]], ["# ::snt I presented it to John dead.\n# ::tokens [\"I\", \"presented\", \"it\", \"to\", \"John\", \"dead\", \".\"]\n# ::lemmas [\"i\", \"present\", \"it\", \"to\", \"John\", \"dead\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2 4-1.3.1.1\n(p / present-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (ii2 / it~e.2)\n   :ARG2 (p2 / person\n             :name (n / name\n                      :op1 \"John\"~e.4)\n             :ARG1-of (d / die-01)))", [[0, 1], [2, 11], [12, 14], [15, 17], [18, 22], [23, 27], [27, 28]]], ["# ::snt John thinks of Bill as silly.\n# ::tokens [\"John\", \"thinks\", \"of\", \"Bill\", \"as\", \"silly\", \".\"]\n# ::lemmas [\"John\", \"think\", \"of\", \"Bill\", \"as\", \"silly\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1.1 5-1.3\n(t / think-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Bill\"~e.3))\n   :ARG2 (s / silly~e.5))", [[0, 4], [5, 11], [12, 14], [15, 19], [20, 22], [23, 28], [28, 29]]], ["# ::snt Bill was thought of as silly.\n# ::tokens [\"Bill\", \"was\", \"thought\", \"of\", \"as\", \"silly\", \".\"]\n# ::lemmas [\"Bill\", \"be\", \"think\", \"of\", \"as\", \"silly\", \".\"]\n# ::alignments 0-1.1.1.1 2-1 5-1.2\n(t / think-01~e.2\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Bill\"~e.0))\n   :ARG2 (s / silly~e.5))", [[0, 4], [5, 8], [9, 16], [17, 19], [20, 22], [23, 28], [28, 29]]], ["# ::snt Who do you think of as silly?\n# ::tokens [\"Who\", \"do\", \"you\", \"think\", \"of\", \"as\", \"silly\", \"?\"]\n# ::lemmas [\"who\", \"do\", \"you\", \"think\", \"of\", \"as\", \"silly\", \"?\"]\n# ::alignments 2-1.1 3-1 6-1.3\n(t / think-01~e.3\n   :ARG0 (y / you~e.2)\n   :ARG1 (a / amr-unknown)\n   :ARG2 (s / silly~e.6))", [[0, 3], [4, 6], [7, 10], [11, 16], [17, 19], [20, 22], [23, 28], [28, 29]]], ["# ::snt Of whom do you think as silly?\n# ::tokens [\"Of\", \"whom\", \"do\", \"you\", \"think\", \"as\", \"silly\", \"?\"]\n# ::lemmas [\"of\", \"whom\", \"do\", \"you\", \"think\", \"as\", \"silly\", \"?\"]\n# ::alignments 3-1.1 4-1 6-1.2\n(t / think-01~e.4\n   :ARG0 (y / you~e.3)\n   :ARG1 (s / silly~e.6\n            :domain (a / amr-unknown)))", [[0, 2], [3, 7], [8, 10], [11, 14], [15, 20], [21, 23], [24, 29], [29, 30]]], ["# ::snt John made Bill sick.\n# ::tokens [\"John\", \"made\", \"Bill\", \"sick\", \".\"]\n# ::lemmas [\"John\", \"make\", \"Bill\", \"sick\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1.1 3-1.2\n(m / make-02~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (s / sick-05~e.3\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Bill\"~e.2))))", [[0, 4], [5, 9], [10, 14], [15, 19], [19, 20]]], ["# ::snt John left nude.\n# ::tokens [\"John\", \"left\", \"nude\", \".\"]\n# ::lemmas [\"John\", \"leave\", \"nude\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2\n(l / leave-12~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (n2 / nude~e.2\n             :domain p))", [[0, 4], [5, 9], [10, 14], [14, 15]]], ["# ::snt John became sick.\n# ::tokens [\"John\", \"became\", \"sick\", \".\"]\n# ::lemmas [\"John\", \"become\", \"sick\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2\n(b / become-01~e.1\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG2 (s / sick-05~e.2\n            :ARG1 p))", [[0, 4], [5, 11], [12, 16], [16, 17]]], ["# ::snt John strikes Bill as stupid.\n# ::tokens [\"John\", \"strikes\", \"Bill\", \"as\", \"stupid\", \".\"]\n# ::lemmas [\"John\", \"strike\", \"Bill\", \"as\", \"stupid\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1 4-1.3\n(s / strike-04~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Bill\"~e.2))\n   :ARG2 (s2 / stupid~e.4))", [[0, 4], [5, 12], [13, 17], [18, 20], [21, 27], [27, 28]]], ["# ::snt John arrived dead.\n# ::tokens [\"John\", \"arrived\", \"dead\", \".\"]\n# ::lemmas [\"John\", \"arrive\", \"dead\", \".\"]\n# ::alignments 0-1.1.1.1 1-1\n(a / arrive-01~e.1\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG4 (d / die-01\n            :ARG1 p))", [[0, 4], [5, 12], [13, 17], [17, 18]]], ["# ::snt John persuaded Bill to leave.\n# ::tokens [\"John\", \"persuaded\", \"Bill\", \"to\", \"leave\", \".\"]\n# ::lemmas [\"John\", \"persuade\", \"Bill\", \"to\", \"leave\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1 4-1.3\n(p / persuade-01~e.1\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"John\"~e.0))\n   :ARG1 (p3 / person\n             :name (n2 / name\n                       :op1 \"Bill\"~e.2))\n   :ARG2 (l / leave-11~e.4\n            :ARG0 p3))", [[0, 4], [5, 14], [15, 19], [20, 22], [23, 28], [28, 29]]], ["# ::snt John died waiting for a bus.\n# ::tokens [\"John\", \"died\", \"waiting\", \"for\", \"a\", \"bus\", \".\"]\n# ::lemmas [\"John\", \"die\", \"wait\", \"for\", \"a\", \"bus\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2 5-1.2.2\n(d / die-01~e.1\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :time (w / wait-01~e.2\n            :ARG1 p\n            :ARG2 (b / bus~e.5)))", [[0, 4], [5, 9], [10, 17], [18, 21], [22, 23], [24, 27], [27, 28]]], ["# ::snt to leave would be John's pleasure.\n# ::tokens [\"to\", \"leave\", \"would\", \"be\", \"John\", \"'s\", \"pleasure\", \".\"]\n# ::lemmas [\"to\", \"leave\", \"would\", \"be\", \"John\", \"'s\", \"pleasure\", \".\"]\n# ::alignments 1-1.2 4-1.1.1.1 6-1\n(p / pleasure~e.6\n   :poss (p2 / person\n             :name (n / name\n                      :op1 \"John\"~e.4))\n   :domain (l / leave-11~e.1\n              :ARG0 p2))", [[0, 2], [3, 8], [9, 14], [15, 17], [18, 22], [22, 24], [25, 33], [33, 34]]], ["# ::snt For John to leave would be my pleasure.\n# ::tokens [\"For\", \"John\", \"to\", \"leave\", \"would\", \"be\", \"my\", \"pleasure\", \".\"]\n# ::lemmas [\"for\", \"John\", \"to\", \"leave\", \"would\", \"be\", \"my\", \"pleasure\", \".\"]\n# ::alignments 1-1.2.1.1.1 3-1.2 7-1\n(p / pleasure~e.7\n   :poss (ii / i)\n   :domain (l / leave-11~e.3\n              :ARG0 (p2 / person\n                        :name (n / name\n                                 :op1 \"John\"~e.1))))", [[0, 3], [4, 8], [9, 11], [12, 17], [18, 23], [24, 26], [27, 29], [30, 38], [38, 39]]], ["# ::snt John died nude.\n# ::tokens [\"John\", \"died\", \"nude\", \".\"]\n# ::lemmas [\"John\", \"die\", \"nude\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2\n(d / die-01~e.1\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :manner (n2 / nude~e.2))", [[0, 4], [5, 9], [10, 14], [14, 15]]], ["# ::snt John promised Bill to be examined.\n# ::tokens [\"John\", \"promised\", \"Bill\", \"to\", \"be\", \"examined\", \".\"]\n# ::lemmas [\"John\", \"promise\", \"Bill\", \"to\", \"be\", \"examine\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1.1 5-1.2\n(p / promise-01~e.1\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"John\"~e.0))\n   :ARG2 (e / examine-01~e.5\n            :ARG1 (p3 / person\n                      :name (n2 / name\n                                :op1 \"Bill\"~e.2))))", [[0, 4], [5, 13], [14, 18], [19, 21], [22, 24], [25, 33], [33, 34]]], ["# ::snt John was promised.\n# ::tokens [\"John\", \"was\", \"promised\", \".\"]\n# ::lemmas [\"John\", \"be\", \"promise\", \".\"]\n# ::alignments 0-1.1.1.1 2-1\n(p / promise-01~e.2\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"John\"~e.0)))", [[0, 4], [5, 8], [9, 17], [17, 18]]], ["# ::snt John was promised the book.\n# ::tokens [\"John\", \"was\", \"promised\", \"the\", \"book\", \".\"]\n# ::lemmas [\"John\", \"be\", \"promise\", \"the\", \"book\", \".\"]\n# ::alignments 0-1.1.1.1 2-1 4-1.2\n(p / promise-01~e.2\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"John\"~e.0))\n   :ARG2 (b / book~e.4))", [[0, 4], [5, 8], [9, 17], [18, 21], [22, 26], [26, 27]]], ["# ::snt Good cooks are made by them.\n# ::tokens [\"Good\", \"cooks\", \"are\", \"made\", \"by\", \"them\", \".\"]\n# ::lemmas [\"good\", \"cook\", \"be\", \"make\", \"by\", \"they\", \".\"]\n# ::alignments 0-1.2.2 1-1.2.1 3-1 5-1.1\n(m / make-01~e.3\n   :ARG0 (t / they~e.5)\n   :ARG1 (p / person\n            :ARG0-of (c / cook-01~e.1)\n            :ARG1-of (g / good-02~e.0)))", [[0, 4], [5, 10], [11, 14], [15, 19], [20, 22], [23, 27], [27, 28]]], ["# ::snt what to do is a mystery.\n# ::tokens [\"what\", \"to\", \"do\", \"is\", \"a\", \"mystery\", \".\"]\n# ::lemmas [\"what\", \"to\", \"do\", \"be\", \"a\", \"mystery\", \".\"]\n# ::alignments 2-1.1.1 5-1\n(m / mystery~e.5\n   :domain (t / thing\n              :ARG1-of (d / do-02~e.2)))", [[0, 4], [5, 7], [8, 10], [11, 13], [14, 15], [16, 23], [23, 24]]], ["# ::snt what to do is a mystery to John.\n# ::tokens [\"what\", \"to\", \"do\", \"is\", \"a\", \"mystery\", \"to\", \"John\", \".\"]\n# ::lemmas [\"what\", \"to\", \"do\", \"be\", \"a\", \"mystery\", \"to\", \"John\", \".\"]\n# ::alignments 2-1.1.1 5-1 7-1.1.1.1.1.1\n(m / mystery~e.5\n   :domain (t / thing\n              :ARG1-of (d / do-02~e.2\n                          :ARG0 (p / person\n                                   :name (n / name\n                                            :op1 \"John\"~e.7))))\n   :poss p)", [[0, 4], [5, 7], [8, 10], [11, 13], [14, 15], [16, 23], [24, 26], [27, 31], [31, 32]]], ["# ::snt John has something to do.\n# ::tokens [\"John\", \"has\", \"something\", \"to\", \"do\", \".\"]\n# ::lemmas [\"John\", \"have\", \"something\", \"to\", \"do\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2\n(h / have-to-do-with-04~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (s / something~e.2))", [[0, 4], [5, 8], [9, 18], [19, 21], [22, 24], [24, 25]]], ["# ::snt 1 wondered what Bill to do.\n# ::tokens [\"1\", \"wondered\", \"what\", \"Bill\", \"to\", \"do\", \".\"]\n# ::lemmas [\"1\", \"wonder\", \"what\", \"Bill\", \"to\", \"do\", \".\"]\n# ::alignments 0-1.1.1 1-1 3-1.2.1.2.1 5-1.2.1\n(w / wonder-01~e.1\n   :ARG0 (p / person\n            :quant 1~e.0)\n   :ARG1 (t / thing\n            :ARG1-of (d / do-02~e.5\n                        :ARG0 p\n                        :name (n / name\n                                 :op1 \"Bill\"~e.3))))", [[0, 1], [2, 10], [11, 15], [16, 20], [21, 23], [24, 26], [26, 27]]], ["# ::snt I am counting on you for Mary to get there on time.\n# ::tokens [\"I\", \"am\", \"counting\", \"on\", \"you\", \"for\", \"Mary\", \"to\", \"get\", \"there\", \"on\", \"time\", \".\"]\n# ::lemmas [\"i\", \"be\", \"count\", \"on\", \"you\", \"for\", \"Mary\", \"to\", \"get\", \"there\", \"on\", \"time\", \".\"]\n# ::alignments 0-1.1 2-1 4-1.2 6-1.3.1.1.1 8-1.3 9-1.3.2\n(c / count-03~e.2\n   :ARG0 (ii / i~e.0)\n   :ARG1 (y / you~e.4)\n   :ARG3 (g / get-05~e.8\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Mary\"~e.6))\n            :ARG2 (t / there~e.9)\n            :mod (o / on-time)))", [[0, 1], [2, 4], [5, 13], [14, 16], [17, 20], [21, 24], [25, 29], [30, 32], [33, 36], [37, 42], [43, 45], [46, 50], [50, 51]]], ["# ::snt John wants to win.\n# ::tokens [\"John\", \"wants\", \"to\", \"win\", \".\"]\n# ::lemmas [\"John\", \"want\", \"to\", \"win\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2\n(w / want-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (w2 / win-01~e.3\n             :ARG0 p))", [[0, 4], [5, 10], [11, 13], [14, 17], [17, 18]]], ["# ::snt John wants for Bill to win.\n# ::tokens [\"John\", \"wants\", \"for\", \"Bill\", \"to\", \"win\", \".\"]\n# ::lemmas [\"John\", \"want\", \"for\", \"Bill\", \"to\", \"win\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1.1.1 5-1.2\n(w / want-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (w2 / win-01~e.5\n             :ARG0 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Bill\"~e.3))))", [[0, 4], [5, 10], [11, 14], [15, 19], [20, 22], [23, 26], [26, 27]]], ["# ::snt I would hate to leave.\n# ::tokens [\"I\", \"would\", \"hate\", \"to\", \"leave\", \".\"]\n# ::lemmas [\"i\", \"would\", \"hate\", \"to\", \"leave\", \".\"]\n# ::alignments 0-1.1 2-1 4-1.2\n(h / hate-01~e.2\n   :ARG0 (ii / i~e.0)\n   :ARG1 (l / leave-11~e.4\n            :ARG0 ii))", [[0, 1], [2, 7], [8, 12], [13, 15], [16, 21], [21, 22]]], ["# ::snt I arranged to leave.\n# ::tokens [\"I\", \"arranged\", \"to\", \"leave\", \".\"]\n# ::lemmas [\"i\", \"arrange\", \"to\", \"leave\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2\n(a / arrange-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (l / leave-11~e.3\n            :ARG0 ii))", [[0, 1], [2, 10], [11, 13], [14, 19], [19, 20]]], ["# ::snt I arranged for Pete to leave.\n# ::tokens [\"I\", \"arranged\", \"for\", \"Pete\", \"to\", \"leave\", \".\"]\n# ::lemmas [\"i\", \"arrange\", \"for\", \"Pete\", \"to\", \"leave\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1.1.1 5-1.2\n(a / arrange-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (l / leave-11~e.5\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Pete\"~e.3))))", [[0, 1], [2, 10], [11, 14], [15, 19], [20, 22], [23, 28], [28, 29]]], ["# ::snt It was arranged to have dinner at 6.\n# ::tokens [\"It\", \"was\", \"arranged\", \"to\", \"have\", \"dinner\", \"at\", \"6\", \".\"]\n# ::lemmas [\"it\", \"be\", \"arrange\", \"to\", \"have\", \"dinner\", \"at\", \"6\", \".\"]\n# ::alignments 2-1 4-1.1 5-1.1.1\n(a / arrange-01~e.2\n   :ARG1 (h / have-06~e.4\n            :ARG1 (d / dinner~e.5)\n            :time (d2 / date-entity\n                      :time \"6:00\")))", [[0, 2], [3, 6], [7, 15], [16, 18], [19, 23], [24, 30], [31, 33], [34, 35], [35, 36]]], ["# ::snt It was preferred to have dinner at 6.\n# ::tokens [\"It\", \"was\", \"preferred\", \"to\", \"have\", \"dinner\", \"at\", \"6\", \".\"]\n# ::lemmas [\"it\", \"be\", \"prefer\", \"to\", \"have\", \"dinner\", \"at\", \"6\", \".\"]\n# ::alignments 2-1 4-1.1 5-1.1.1\n(p / prefer-01~e.2\n   :ARG1 (h / have-06~e.4\n            :ARG1 (d / dinner~e.5)\n            :time (d2 / date-entity\n                      :time \"6:00\")))", [[0, 2], [3, 6], [7, 16], [17, 19], [20, 24], [25, 31], [32, 34], [35, 36], [36, 37]]], ["# ::snt It was decided to have dinner at 6.\n# ::tokens [\"It\", \"was\", \"decided\", \"to\", \"have\", \"dinner\", \"at\", \"6\", \".\"]\n# ::lemmas [\"it\", \"be\", \"decide\", \"to\", \"have\", \"dinner\", \"at\", \"6\", \".\"]\n# ::alignments 2-1 4-1.1 5-1.1.1\n(d / decide-01~e.2\n   :ARG1 (h / have-06~e.4\n            :ARG1 (d2 / dinner~e.5)\n            :time (d3 / date-entity\n                      :time \"6:00\")))", [[0, 2], [3, 6], [7, 14], [15, 17], [18, 22], [23, 29], [30, 32], [33, 34], [34, 35]]], ["# ::snt It was decided by the committee to have dinner at 6.\n# ::tokens [\"It\", \"was\", \"decided\", \"by\", \"the\", \"committee\", \"to\", \"have\", \"dinner\", \"at\", \"6\", \".\"]\n# ::lemmas [\"it\", \"be\", \"decide\", \"by\", \"the\", \"committee\", \"to\", \"have\", \"dinner\", \"at\", \"6\", \".\"]\n# ::alignments 2-1 5-1.1 7-1.2 8-1.2.2\n(d / decide-01~e.2\n   :ARG0 (c / committee~e.5)\n   :ARG1 (h / have-06~e.7\n            :ARG0 c\n            :ARG1 (d2 / dinner~e.8)\n            :time (d3 / date-entity\n                      :time \"6:00\")))", [[0, 2], [3, 6], [7, 14], [15, 17], [18, 21], [22, 31], [32, 34], [35, 39], [40, 46], [47, 49], [50, 51], [51, 52]]], ["# ::snt it is important to John to leave.\n# ::tokens [\"it\", \"is\", \"important\", \"to\", \"John\", \"to\", \"leave\", \".\"]\n# ::lemmas [\"it\", \"be\", \"important\", \"to\", \"John\", \"to\", \"leave\", \".\"]\n# ::alignments 2-1 4-1.1.1.1.1 6-1.1\n(ii / important-01~e.2\n    :ARG1 (l / leave-11~e.6\n             :ARG0 (p / person\n                      :name (n / name\n                               :op1 \"John\"~e.4))))", [[0, 2], [3, 5], [6, 15], [16, 18], [19, 23], [24, 26], [27, 32], [32, 33]]], ["# ::snt I want to leave.\n# ::tokens [\"I\", \"want\", \"to\", \"leave\", \".\"]\n# ::lemmas [\"i\", \"want\", \"to\", \"leave\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2\n(w / want-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (l / leave-11~e.3\n            :ARG0 ii))", [[0, 1], [2, 6], [7, 9], [10, 15], [15, 16]]], ["# ::snt to leave would be my pleasure.\n# ::tokens [\"to\", \"leave\", \"would\", \"be\", \"my\", \"pleasure\", \".\"]\n# ::lemmas [\"to\", \"leave\", \"would\", \"be\", \"my\", \"pleasure\", \".\"]\n# ::alignments 1-1.2 5-1\n(p / pleasure~e.5\n   :poss (ii / i)\n   :domain (l / leave-11~e.1\n              :ARG0 ii))", [[0, 2], [3, 8], [9, 14], [15, 17], [18, 20], [21, 29], [29, 30]]], ["# ::snt it is important to me to leave.\n# ::tokens [\"it\", \"is\", \"important\", \"to\", \"me\", \"to\", \"leave\", \".\"]\n# ::lemmas [\"it\", \"be\", \"important\", \"to\", \"i\", \"to\", \"leave\", \".\"]\n# ::alignments 2-1 4-1.1.1 6-1.1\n(ii / important-01~e.2\n    :ARG1 (l / leave-11~e.6\n             :ARG0 (ii2 / i~e.4)))", [[0, 2], [3, 5], [6, 15], [16, 18], [19, 21], [22, 24], [25, 30], [30, 31]]], ["# ::snt I bought a book to read.\n# ::tokens [\"I\", \"bought\", \"a\", \"book\", \"to\", \"read\", \".\"]\n# ::lemmas [\"i\", \"buy\", \"a\", \"book\", \"to\", \"read\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 5-1.2.1\n(b / buy-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (b2 / book~e.3\n             :ARG1-of (r / read-01~e.5\n                         :ARG0 ii)))", [[0, 1], [2, 8], [9, 10], [11, 15], [16, 18], [19, 23], [23, 24]]], ["# ::snt John promised Mary to leave together.\n# ::tokens [\"John\", \"promised\", \"Mary\", \"to\", \"leave\", \"together\", \".\"]\n# ::lemmas [\"John\", \"promise\", \"Mary\", \"to\", \"leave\", \"together\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1 4-1.3 5-1.3.2\n(p / promise-01~e.1\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"John\"~e.0))\n   :ARG1 (p3 / person\n             :name (n2 / name\n                       :op1 \"Mary\"~e.2))\n   :ARG2 (l / leave-11~e.4\n            :ARG0 p3\n            :mod (t / together~e.5)))", [[0, 4], [5, 13], [14, 18], [19, 21], [22, 27], [28, 36], [36, 37]]], ["# ::snt I want to meet at 6.\n# ::tokens [\"I\", \"want\", \"to\", \"meet\", \"at\", \"6\", \".\"]\n# ::lemmas [\"i\", \"want\", \"to\", \"meet\", \"at\", \"6\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2\n(w / want-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (m / meet-03~e.3\n            :ARG0 ii\n            :time (d / date-entity\n                     :time \"6:00\")))", [[0, 1], [2, 6], [7, 9], [10, 14], [15, 17], [18, 19], [19, 20]]], ["# ::snt I will try to meet at 6.\n# ::tokens [\"I\", \"will\", \"try\", \"to\", \"meet\", \"at\", \"6\", \".\"]\n# ::lemmas [\"i\", \"will\", \"try\", \"to\", \"meet\", \"at\", \"6\", \".\"]\n# ::alignments 0-1.1 2-1 4-1.2\n(t / try-01~e.2\n   :ARG0 (ii / i~e.0)\n   :ARG1 (m / meet-03~e.4\n            :ARG0 ii\n            :time (d / date-entity\n                     :time \"6:00\")))", [[0, 1], [2, 6], [7, 10], [11, 13], [14, 18], [19, 21], [22, 23], [23, 24]]], ["# ::snt John's arrival dead surprised me.\n# ::tokens [\"John\", \"'s\", \"arrival\", \"dead\", \"surprised\", \"me\", \".\"]\n# ::lemmas [\"John\", \"'s\", \"arrival\", \"dead\", \"surprise\", \"i\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1 4-1 5-1.2\n(s / surprise-01~e.4\n   :ARG0 (a / arrive-01~e.2\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"John\"~e.0))\n            :manner (d / die-01\n                       :ARG1 p))\n   :ARG1 (ii / i~e.5))", [[0, 4], [4, 6], [7, 14], [15, 19], [20, 29], [30, 32], [32, 33]]], ["# ::snt the arrival of John dead surprised me.\n# ::tokens [\"the\", \"arrival\", \"of\", \"John\", \"dead\", \"surprised\", \"me\", \".\"]\n# ::lemmas [\"the\", \"arrival\", \"of\", \"John\", \"dead\", \"surprise\", \"i\", \".\"]\n# ::alignments 1-1.1 3-1.1.1.1.1 5-1 6-1.2\n(s / surprise-01~e.5\n   :ARG0 (a / arrive-01~e.1\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"John\"~e.3)\n                     :ARG1-of (d / die-01)))\n   :ARG1 (ii / i~e.6))", [[0, 3], [4, 11], [12, 14], [15, 19], [20, 24], [25, 34], [35, 37], [37, 38]]], ["# ::snt John's attempt to leave surprised me.\n# ::tokens [\"John\", \"'s\", \"attempt\", \"to\", \"leave\", \"surprised\", \"me\", \".\"]\n# ::lemmas [\"John\", \"'s\", \"attempt\", \"to\", \"leave\", \"surprise\", \"i\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1 4-1.1.2 5-1 6-1.2\n(s / surprise-01~e.5\n   :ARG0 (a / attempt-01~e.2\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"John\"~e.0))\n            :ARG1 (l / leave-11~e.4\n                     :ARG0 p))\n   :ARG1 (ii / i~e.6))", [[0, 4], [4, 6], [7, 14], [15, 17], [18, 23], [24, 33], [34, 36], [36, 37]]], ["# ::snt any attempt to leave surprises me.\n# ::tokens [\"any\", \"attempt\", \"to\", \"leave\", \"surprises\", \"me\", \".\"]\n# ::lemmas [\"any\", \"attempt\", \"to\", \"leave\", \"surprise\", \"i\", \".\"]\n# ::alignments 0-1.2 1-1 3-1.1 4-1.1.1.1 5-1.1.1.1.1\n(a / attempt-01~e.1\n   :ARG1 (l / leave-0~e.3\n            :ARG1 (t / thing\n                     :ARG0-of (s / surprise-01~e.4\n                                 :ARG1 (ii / i~e.5))))\n   :mod (a2 / any~e.0))", [[0, 3], [4, 11], [12, 14], [15, 20], [21, 30], [31, 33], [33, 34]]], ["# ::snt John left orders for Bill not to leave.\n# ::tokens [\"John\", \"left\", \"orders\", \"for\", \"Bill\", \"not\", \"to\", \"leave\", \".\"]\n# ::lemmas [\"John\", \"leave\", \"order\", \"for\", \"Bill\", \"not\", \"to\", \"leave\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2 4-1.2.1.1.1 5-1.2.2.1 7-1.2.2\n(l / leave-15~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (o / order-01~e.2\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Bill\"~e.4))\n            :ARG2 (l2 / leave-15~e.7\n                      :polarity -~e.5\n                      :ARG0 p2)))", [[0, 4], [5, 9], [10, 16], [17, 20], [21, 25], [26, 29], [30, 32], [33, 38], [38, 39]]], ["# ::snt It is clear that he is here.\n# ::tokens [\"It\", \"is\", \"clear\", \"that\", \"he\", \"is\", \"here\", \".\"]\n# ::lemmas [\"it\", \"be\", \"clear\", \"that\", \"he\", \"be\", \"here\", \".\"]\n# ::alignments 2-1 4-1.1 6-1.1.1\n(c / clear-06~e.2\n   :ARG1 (h / he~e.4\n            :location (h2 / here~e.6)))", [[0, 2], [3, 5], [6, 11], [12, 16], [17, 19], [20, 22], [23, 27], [27, 28]]], ["# ::snt John's reluctance is clear that he is here.\n# ::tokens [\"John\", \"'s\", \"reluctance\", \"is\", \"clear\", \"that\", \"he\", \"is\", \"here\", \".\"]\n# ::lemmas [\"John\", \"'s\", \"reluctance\", \"be\", \"clear\", \"that\", \"he\", \"be\", \"here\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1 4-1 8-1.1.2\n(c / clear-06~e.4\n   :ARG1 (r / reluctant-01~e.2\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"John\"~e.0))\n            :location (h / here~e.8)))", [[0, 4], [4, 6], [7, 17], [18, 20], [21, 26], [27, 31], [32, 34], [35, 37], [38, 42], [42, 43]]], ["# ::snt It is upsetting, the way he goes on that he won't help.\n# ::tokens [\"It\", \"is\", \"upsetting\", \",\", \"the\", \"way\", \"he\", \"goes\", \"on\", \"that\", \"he\", \"wo\", \"n't\", \"help\", \".\"]\n# ::lemmas [\"it\", \"be\", \"upsetting\", \",\", \"the\", \"way\", \"he\", \"go\", \"on\", \"that\", \"he\", \"will\", \"not\", \"help\", \".\"]\n# ::alignments 2-1 5-1.1 6-1.1.1.1.2 13-1.1.1.1\n(u / upset-01~e.2\n   :ARG0 (w / way~e.5\n            :manner-of (g / go-on-15\n                          :ARG1 (h / help-01~e.13\n                                   :polarity -\n                                   :ARG0 (h2 / he~e.6)))))", [[0, 2], [3, 5], [6, 15], [15, 16], [17, 20], [21, 24], [25, 27], [28, 32], [33, 35], [36, 40], [41, 43], [44, 46], [46, 49], [50, 54], [54, 55]]], ["# ::snt John considers it clear that Bill is here.\n# ::tokens [\"John\", \"considers\", \"it\", \"clear\", \"that\", \"Bill\", \"is\", \"here\", \".\"]\n# ::lemmas [\"John\", \"consider\", \"it\", \"clear\", \"that\", \"Bill\", \"be\", \"here\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 5-1.2.1.1.1.1 7-1.2.1.2\n(c / consider-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (c2 / clear-06~e.3\n             :ARG1 (b / be-located-at-91\n                      :ARG1 (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Bill\"~e.5))\n                      :ARG2 (h / here~e.7))))", [[0, 4], [5, 14], [15, 17], [18, 23], [24, 28], [29, 33], [34, 36], [37, 41], [41, 42]]], ["# ::snt John saw to it that Bill had a good time.\n# ::tokens [\"John\", \"saw\", \"to\", \"it\", \"that\", \"Bill\", \"had\", \"a\", \"good\", \"time\", \".\"]\n# ::lemmas [\"John\", \"see\", \"to\", \"it\", \"that\", \"Bill\", \"have\", \"a\", \"good\", \"time\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 5-1.2.1.1.1 6-1.2 8-1.2.2.1 9-1.2.2\n(s / see-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (h / have-03~e.6\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Bill\"~e.5))\n            :ARG1 (t / time~e.9\n                     :ARG1-of (g / good-02~e.8))))", [[0, 4], [5, 8], [9, 11], [12, 14], [15, 19], [20, 24], [25, 28], [29, 30], [31, 35], [36, 40], [40, 41]]], ["# ::snt John stated it succinctly that he was leaving.\n# ::tokens [\"John\", \"stated\", \"it\", \"succinctly\", \"that\", \"he\", \"was\", \"leaving\", \".\"]\n# ::lemmas [\"John\", \"state\", \"it\", \"succinctly\", \"that\", \"he\", \"be\", \"leave\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.3 7-1.2\n(s / state-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (l / leave-11~e.7\n            :ARG0 p)\n   :manner (s2 / succinct~e.3))", [[0, 4], [5, 11], [12, 14], [15, 25], [26, 30], [31, 33], [34, 37], [38, 45], [45, 46]]], ["# ::snt It was felt that Bill was tardy.\n# ::tokens [\"It\", \"was\", \"felt\", \"that\", \"Bill\", \"was\", \"tardy\", \".\"]\n# ::lemmas [\"it\", \"be\", \"feel\", \"that\", \"Bill\", \"be\", \"tardy\", \".\"]\n# ::alignments 2-1 4-1.1.1.1.1 6-1.1\n(f / feel-02~e.2\n   :ARG1 (t / tardy~e.6\n            :domain (p / person\n                       :name (n / name\n                                :op1 \"Bill\"~e.4))))", [[0, 2], [3, 6], [7, 11], [12, 16], [17, 21], [22, 25], [26, 31], [31, 32]]], ["# ::snt John's reluctance seems.\n# ::tokens [\"John\", \"'s\", \"reluctance\", \"seems\", \".\"]\n# ::lemmas [\"John\", \"'s\", \"reluctance\", \"seem\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1 3-1\n(s / seem-01~e.3\n   :ARG1 (r / reluctant-01~e.2\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"John\"~e.0))))", [[0, 4], [4, 6], [7, 17], [18, 23], [23, 24]]], ["# ::snt John seems t to be here.\n# ::tokens [\"John\", \"seems\", \"t\", \"to\", \"be\", \"here\", \".\"]\n# ::lemmas [\"John\", \"seem\", \"t\", \"to\", \"be\", \"here\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1 5-1.1.2\n(s / seem-01~e.1\n   :ARG1 (b / be-located-at-91\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"John\"~e.0))\n            :ARG2 (h / here~e.5)))", [[0, 4], [5, 10], [11, 12], [13, 15], [16, 18], [19, 23], [23, 24]]], ["# ::snt To leave is to give up.\n# ::tokens [\"To\", \"leave\", \"is\", \"to\", \"give\", \"up\", \".\"]\n# ::lemmas [\"to\", \"leave\", \"be\", \"to\", \"give\", \"up\", \".\"]\n# ::alignments 1-1 4-1.1.1\n(l / leave-11~e.1\n   :ARG1-of (m / mean-01\n               :ARG2 (g / give-up-07~e.4)))", [[0, 2], [3, 8], [9, 11], [12, 14], [15, 19], [20, 22], [22, 23]]], ["# ::snt It proves that John was lying that he left town.\n# ::tokens [\"It\", \"proves\", \"that\", \"John\", \"was\", \"lying\", \"that\", \"he\", \"left\", \"town\", \".\"]\n# ::lemmas [\"it\", \"prove\", \"that\", \"John\", \"be\", \"lie\", \"that\", \"he\", \"leave\", \"town\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1.1.1 5-1.2 8-1.2.2 9-1.2.2.2\n(p / prove-01~e.1\n   :ARG0 (ii / it~e.0)\n   :ARG1 (l / lie-08~e.5\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"John\"~e.3))\n            :ARG1 (l2 / leave-11~e.8\n                      :ARG0 p2\n                      :ARG1 (t / town~e.9))))", [[0, 2], [3, 9], [10, 14], [15, 19], [20, 23], [24, 29], [30, 34], [35, 37], [38, 42], [43, 47], [47, 48]]], ["# ::snt Many people said they were sick who weren't.\n# ::tokens [\"Many\", \"people\", \"said\", \"they\", \"were\", \"sick\", \"who\", \"were\", \"n't\", \".\"]\n# ::lemmas [\"many\", \"people\", \"say\", \"they\", \"be\", \"sick\", \"who\", \"be\", \"not\", \".\"]\n# ::alignments 0-1.1.1 2-1 5-1.1.2\n(s / say-01~e.2\n   :ARG0 (p / person\n            :quant (m / many~e.0)\n            :ARG1-of (s2 / sick-05~e.5))\n   :ARG1 (s3 / sick-05\n             :polarity -\n             :ARG1 p))", [[0, 4], [5, 11], [12, 16], [17, 21], [22, 26], [27, 31], [32, 35], [36, 40], [40, 43], [43, 44]]], ["# ::snt It's that John won't help that bothers me.\n# ::tokens [\"It\", \"'s\", \"that\", \"John\", \"wo\", \"n't\", \"help\", \"that\", \"bothers\", \"me\", \".\"]\n# ::lemmas [\"it\", \"be\", \"that\", \"John\", \"will\", \"not\", \"help\", \"that\", \"bother\", \"i\", \".\"]\n# ::alignments 3-1.1.2.1.1 6-1.1 8-1 9-1.2\n(b / bother-01~e.8\n   :ARG0 (h / help-01~e.6\n            :polarity -\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"John\"~e.3)))\n   :ARG1 (ii / i~e.9))", [[0, 2], [2, 4], [5, 9], [10, 14], [15, 17], [17, 20], [21, 25], [26, 30], [31, 38], [39, 41], [41, 42]]], ["# ::snt It is believed to be the problem that he is here.\n# ::tokens [\"It\", \"is\", \"believed\", \"to\", \"be\", \"the\", \"problem\", \"that\", \"he\", \"is\", \"here\", \".\"]\n# ::lemmas [\"it\", \"be\", \"believe\", \"to\", \"be\", \"the\", \"problem\", \"that\", \"he\", \"be\", \"here\", \".\"]\n# ::alignments 0-1.1.1 2-1 6-1.1 8-1.1.2.1 10-1.1.2\n(b / believe-01~e.2\n   :ARG1 (p / problem~e.6\n            :domain (ii / it~e.0)\n            :location (h / here~e.10\n                         :domain (h2 / he~e.8))))", [[0, 2], [3, 5], [6, 14], [15, 17], [18, 20], [21, 24], [25, 32], [33, 37], [38, 40], [41, 43], [44, 48], [48, 49]]], ["# ::snt That John is here seems to be believed to be the problem.\n# ::tokens [\"That\", \"John\", \"is\", \"here\", \"seems\", \"to\", \"be\", \"believed\", \"to\", \"be\", \"the\", \"problem\", \".\"]\n# ::lemmas [\"that\", \"John\", \"be\", \"here\", \"seem\", \"to\", \"be\", \"believe\", \"to\", \"be\", \"the\", \"problem\", \".\"]\n# ::alignments 1-1.1.1.1.1.1 3-1.1.1.1.2 4-1 7-1.1 11-1.1.1\n(s / seem-01~e.4\n   :ARG1 (b / believe-01~e.7\n            :ARG1 (p / problem~e.11\n                     :domain (p2 / person\n                                 :name (n / name\n                                          :op1 \"John\"~e.1)\n                                 :location (h / here~e.3)))))", [[0, 4], [5, 9], [10, 12], [13, 17], [18, 23], [24, 26], [27, 29], [30, 38], [39, 41], [42, 44], [45, 48], [49, 56], [56, 57]]], ["# ::snt It seems to be believed to be the problem that John is here.\n# ::tokens [\"It\", \"seems\", \"to\", \"be\", \"believed\", \"to\", \"be\", \"the\", \"problem\", \"that\", \"John\", \"is\", \"here\", \".\"]\n# ::lemmas [\"it\", \"seem\", \"to\", \"be\", \"believe\", \"to\", \"be\", \"the\", \"problem\", \"that\", \"John\", \"be\", \"here\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.1 8-1.1.1 10-1.1.1.2.1.1.1 12-1.1.1.2\n(s / seem-01~e.1\n   :ARG1 (b / believe-01~e.4\n            :ARG1 (p / problem~e.8\n                     :domain (ii / it~e.0)\n                     :location (h / here~e.12\n                                  :domain (p2 / person\n                                              :name (n / name\n                                                       :op1 \"John\"~e.10))))))", [[0, 2], [3, 8], [9, 11], [12, 14], [15, 23], [24, 26], [27, 29], [30, 33], [34, 41], [42, 46], [47, 51], [52, 54], [55, 59], [59, 60]]], ["# ::snt It is believed to have been shown that movement is cyclic, but it isn't that VP Deletion is.\n# ::tokens [\"It\", \"is\", \"believed\", \"to\", \"have\", \"been\", \"shown\", \"that\", \"movement\", \"is\", \"cyclic\", \",\", \"but\", \"it\", \"is\", \"n't\", \"that\", \"VP\", \"Deletion\", \"is\", \".\"]\n# ::lemmas [\"it\", \"be\", \"believe\", \"to\", \"have\", \"be\", \"show\", \"that\", \"movement\", \"be\", \"cyclic\", \",\", \"but\", \"it\", \"be\", \"not\", \"that\", \"VP\", \"deletion\", \"be\", \".\"]\n# ::alignments 2-1.1 4-1.2 6-1.1.1 8-1.1.1.1.1 10-1.1.1.1 12-1 18-1.2.2.1.1\n(c / contrast-01~e.12\n   :ARG1 (b / believe-01~e.2\n            :ARG1 (s / show-01~e.6\n                     :ARG1 (c2 / cyclic~e.10\n                               :domain (m / movement-07~e.8))))\n   :ARG2 (h / have-org-role-91~e.4\n            :polarity -\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Deletion\"~e.18))\n            :ARG2 (p2 / president\n                      :mod (v / vice))))", [[0, 2], [3, 5], [6, 14], [15, 17], [18, 22], [23, 27], [28, 33], [34, 38], [39, 47], [48, 50], [51, 57], [57, 58], [59, 62], [63, 65], [66, 68], [68, 71], [72, 76], [77, 79], [80, 88], [89, 91], [91, 92]]], ["# ::snt It is believed that movement is cyclic, but it isn't that VP Deletion is.\n# ::tokens [\"It\", \"is\", \"believed\", \"that\", \"movement\", \"is\", \"cyclic\", \",\", \"but\", \"it\", \"is\", \"n't\", \"that\", \"VP\", \"Deletion\", \"is\", \".\"]\n# ::lemmas [\"it\", \"be\", \"believe\", \"that\", \"movement\", \"be\", \"cyclic\", \",\", \"but\", \"it\", \"be\", \"not\", \"that\", \"VP\", \"deletion\", \"be\", \".\"]\n# ::alignments 2-1.1 4-1.1.1.1 6-1.1.1 8-1 14-1.2.2.1.1\n(c / contrast-01~e.8\n   :ARG1 (b / believe-01~e.2\n            :ARG1 (c2 / cyclic~e.6\n                      :domain (m / movement-07~e.4)))\n   :ARG2 (c3 / cyclic\n             :polarity -\n             :domain (p / person\n                        :name (n / name\n                                 :op1 \"Deletion\"~e.14)\n                        :ARG0-of (h / have-org-role-91\n                                    :ARG2 (p2 / president\n                                              :mod (v / vice))))))", [[0, 2], [3, 5], [6, 14], [15, 19], [20, 28], [29, 31], [32, 38], [38, 39], [40, 43], [44, 46], [47, 49], [49, 52], [53, 57], [58, 60], [61, 69], [70, 72], [72, 73]]], ["# ::snt It is believed to be true by everyone that movement is cyclic.\n# ::tokens [\"It\", \"is\", \"believed\", \"to\", \"be\", \"true\", \"by\", \"everyone\", \"that\", \"movement\", \"is\", \"cyclic\", \".\"]\n# ::lemmas [\"it\", \"be\", \"believe\", \"to\", \"be\", \"true\", \"by\", \"everyone\", \"that\", \"movement\", \"be\", \"cyclic\", \".\"]\n# ::alignments 2-1 5-1.2 7-1.1 9-1.2.1.1 11-1.2.1\n(b / believe-01~e.2\n   :ARG0 (e / everyone~e.7)\n   :ARG1 (t / true-01~e.5\n            :ARG1 (c / cyclic~e.11\n                     :domain (m / movement-07~e.9))))", [[0, 2], [3, 5], [6, 14], [15, 17], [18, 20], [21, 25], [26, 28], [29, 37], [38, 42], [43, 51], [52, 54], [55, 61], [61, 62]]], ["# ::snt It was John that I saw.\n# ::tokens [\"It\", \"was\", \"John\", \"that\", \"I\", \"saw\", \".\"]\n# ::lemmas [\"it\", \"be\", \"John\", \"that\", \"i\", \"see\", \".\"]\n# ::alignments 2-1.1.1 4-1.2.1 5-1.2\n(p / person\n   :name (n / name\n            :op1 \"John\"~e.2)\n   :ARG1-of (s / see-01~e.5\n               :ARG0 (ii / i~e.4)))", [[0, 2], [3, 6], [7, 11], [12, 16], [17, 18], [19, 22], [22, 23]]], ["# ::snt I bought it dead.\n# ::tokens [\"I\", \"bought\", \"it\", \"dead\", \".\"]\n# ::lemmas [\"i\", \"buy\", \"it\", \"dead\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1\n(b / buy-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (d / die-01\n            :ARG1 (ii2 / it~e.2)))", [[0, 1], [2, 8], [9, 11], [12, 16], [16, 17]]], ["# ::snt I gave it to Pete dead.\n# ::tokens [\"I\", \"gave\", \"it\", \"to\", \"Pete\", \"dead\", \".\"]\n# ::lemmas [\"i\", \"give\", \"it\", \"to\", \"Pete\", \"dead\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2 4-1.3.1.1\n(g / give-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (ii2 / it~e.2)\n   :ARG2 (p / person\n            :name (n / name\n                     :op1 \"Petersburg\"~e.4)\n            :ARG1-of (d / die-01)))", [[0, 1], [2, 6], [7, 9], [10, 12], [13, 17], [18, 22], [22, 23]]], ["# ::snt I wrote a letter to Bill to read.\n# ::tokens [\"I\", \"wrote\", \"a\", \"letter\", \"to\", \"Bill\", \"to\", \"read\", \".\"]\n# ::lemmas [\"i\", \"write\", \"a\", \"letter\", \"to\", \"Bill\", \"to\", \"read\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 5-1.3.1.1 7-1.4\n(w / write-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (l / letter~e.3)\n   :ARG2 (p / person\n            :name (n / name\n                     :op1 \"Bill\"~e.5))\n   :purpose (r / read-01~e.7\n               :ARG0 ii\n               :ARG1 l))", [[0, 1], [2, 7], [8, 9], [10, 16], [17, 19], [20, 24], [25, 27], [28, 32], [32, 33]]], ["# ::snt I wrote to Bill to read.\n# ::tokens [\"I\", \"wrote\", \"to\", \"Bill\", \"to\", \"read\", \".\"]\n# ::lemmas [\"i\", \"write\", \"to\", \"Bill\", \"to\", \"read\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1.1 5-1.3\n(w / write-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG2 (p / person\n            :name (n / name\n                     :op1 \"Bill\"~e.3))\n   :purpose (r / read-01~e.5\n               :ARG0 ii\n               :ARG1 p))", [[0, 1], [2, 7], [8, 10], [11, 15], [16, 18], [19, 23], [23, 24]]], ["# ::snt It was bought to read.\n# ::tokens [\"It\", \"was\", \"bought\", \"to\", \"read\", \".\"]\n# ::lemmas [\"it\", \"be\", \"buy\", \"to\", \"read\", \".\"]\n# ::alignments 0-1.1 2-1 4-1.2\n(b / buy-01~e.2\n   :ARG1 (ii / it~e.0)\n   :purpose (r / read-01~e.4\n               :ARG1 ii))", [[0, 2], [3, 6], [7, 13], [14, 16], [17, 21], [21, 22]]], ["# ::snt The book was bought by Bill to read.\n# ::tokens [\"The\", \"book\", \"was\", \"bought\", \"by\", \"Bill\", \"to\", \"read\", \".\"]\n# ::lemmas [\"the\", \"book\", \"be\", \"buy\", \"by\", \"Bill\", \"to\", \"read\", \".\"]\n# ::alignments 1-1.2 3-1 5-1.1.1.1 7-1.3\n(b / buy-01~e.3\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bill\"~e.5))\n   :ARG1 (b2 / book~e.1)\n   :purpose (r / read-01~e.7\n               :ARG0 p\n               :ARG1 b2))", [[0, 3], [4, 8], [9, 12], [13, 19], [20, 22], [23, 27], [28, 30], [31, 35], [35, 36]]], ["# ::snt I bought it for Bill to read.\n# ::tokens [\"I\", \"bought\", \"it\", \"for\", \"Bill\", \"to\", \"read\", \".\"]\n# ::lemmas [\"i\", \"buy\", \"it\", \"for\", \"Bill\", \"to\", \"read\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2 4-1.3.1.1 6-1.4\n(b / buy-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (ii2 / it~e.2)\n   :ARG3 (p / person\n            :name (n / name\n                     :op1 \"Bill\"~e.4))\n   :purpose (r / read-01~e.6\n               :ARG0 p\n               :ARG1 ii2))", [[0, 1], [2, 8], [9, 11], [12, 15], [16, 20], [21, 23], [24, 28], [28, 29]]], ["# ::snt I bought it to hold books.\n# ::tokens [\"I\", \"bought\", \"it\", \"to\", \"hold\", \"books\", \".\"]\n# ::lemmas [\"i\", \"buy\", \"it\", \"to\", \"hold\", \"book\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2 4-1.3 5-1.3.2\n(b / buy-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (ii2 / it~e.2)\n   :purpose (h / hold-01~e.4\n               :ARG0 ii2\n               :ARG1 (b2 / book~e.5)))", [[0, 1], [2, 8], [9, 11], [12, 14], [15, 19], [20, 25], [25, 26]]], ["# ::snt John is proud that there are pictures of himself here.\n# ::tokens [\"John\", \"is\", \"proud\", \"that\", \"there\", \"are\", \"pictures\", \"of\", \"himself\", \"here\", \".\"]\n# ::lemmas [\"John\", \"be\", \"proud\", \"that\", \"there\", \"be\", \"picture\", \"of\", \"himself\", \"here\", \".\"]\n# ::alignments 0-1.1.1.1 6-1.2.1 9-1.2.2\n(p / pride-01\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"John\"~e.0))\n   :ARG2 (b / be-located-at-91\n            :ARG1 (p3 / picture-01~e.6\n                      :ARG1 p2)\n            :ARG2 (h / here~e.9)))", [[0, 4], [5, 7], [8, 13], [14, 18], [19, 24], [25, 28], [29, 37], [38, 40], [41, 48], [49, 53], [53, 54]]], ["# ::snt John thinks that it is appropriate for there to be a picture of himself in the corridor.\n# ::tokens [\"John\", \"thinks\", \"that\", \"it\", \"is\", \"appropriate\", \"for\", \"there\", \"to\", \"be\", \"a\", \"picture\", \"of\", \"himself\", \"in\", \"the\", \"corridor\", \".\"]\n# ::lemmas [\"John\", \"think\", \"that\", \"it\", \"be\", \"appropriate\", \"for\", \"there\", \"to\", \"be\", \"a\", \"picture\", \"of\", \"himself\", \"in\", \"the\", \"corridor\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 5-1.2 11-1.2.1.1 16-1.2.1.2\n(t / think-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (a / appropriate-02~e.5\n            :ARG1 (b / be-located-at-91\n                     :ARG1 (p2 / picture~e.11\n                               :topic p)\n                     :ARG2 (c / corridor~e.16))))", [[0, 4], [5, 11], [12, 16], [17, 19], [20, 22], [23, 34], [35, 38], [39, 44], [45, 47], [48, 50], [51, 52], [53, 60], [61, 63], [64, 71], [72, 74], [75, 78], [79, 87], [87, 88]]], ["# ::snt John thinks it would upset himself to die.\n# ::tokens [\"John\", \"thinks\", \"it\", \"would\", \"upset\", \"himself\", \"to\", \"die\", \".\"]\n# ::lemmas [\"John\", \"think\", \"it\", \"would\", \"upset\", \"himself\", \"to\", \"die\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.2 7-1.2.1\n(t / think-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (u / upset-01~e.4\n            :ARG0 (d / die-01~e.7\n                     :ARG1 p)\n            :ARG1 p))", [[0, 4], [5, 11], [12, 14], [15, 20], [21, 26], [27, 34], [35, 37], [38, 41], [41, 42]]], ["# ::snt John made Bill be mad at himself.\n# ::tokens [\"John\", \"made\", \"Bill\", \"be\", \"mad\", \"at\", \"himself\", \".\"]\n# ::lemmas [\"John\", \"make\", \"Bill\", \"be\", \"mad\", \"at\", \"himself\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.2.1.1 4-1.2\n(m / make-02~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (m2 / mad-04~e.4\n             :ARG0 p\n             :ARG1 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Bill\"~e.2))))", [[0, 4], [5, 9], [10, 14], [15, 17], [18, 21], [22, 24], [25, 32], [32, 33]]], ["# ::snt John knew that the book for himself to read was Parnell.\n# ::tokens [\"John\", \"knew\", \"that\", \"the\", \"book\", \"for\", \"himself\", \"to\", \"read\", \"was\", \"Parnell\", \".\"]\n# ::lemmas [\"John\", \"know\", \"that\", \"the\", \"book\", \"for\", \"himself\", \"to\", \"read\", \"be\", \"Parnell\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.2 8-1.2.2 10-1.2.1.1\n(k / know-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (b / book~e.4\n            :name (n2 / name\n                      :op1 \"Parnell\"~e.10)\n            :ARG1-of (r / read-01~e.8\n                        :ARG0 p\n                        :mod (b2 / by-oneself))))", [[0, 4], [5, 9], [10, 14], [15, 18], [19, 23], [24, 27], [28, 35], [36, 38], [39, 43], [44, 47], [48, 55], [55, 56]]], ["# ::snt John knew that for himself to be there would cause problems.\n# ::tokens [\"John\", \"knew\", \"that\", \"for\", \"himself\", \"to\", \"be\", \"there\", \"would\", \"cause\", \"problems\", \".\"]\n# ::lemmas [\"John\", \"know\", \"that\", \"for\", \"himself\", \"to\", \"be\", \"there\", \"would\", \"cause\", \"problem\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 9-1.2 10-1.2.2\n(k / know-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (c / cause-01~e.9\n            :ARG0 (e / exist-01\n                     :ARG1 p)\n            :ARG1 (p2 / problem~e.10)))", [[0, 4], [5, 9], [10, 14], [15, 18], [19, 26], [27, 29], [30, 32], [33, 38], [39, 44], [45, 50], [51, 59], [59, 60]]], ["# ::snt A picture of himself frightened John.\n# ::tokens [\"A\", \"picture\", \"of\", \"himself\", \"frightened\", \"John\", \".\"]\n# ::lemmas [\"a\", \"picture\", \"of\", \"himself\", \"frighten\", \"John\", \".\"]\n# ::alignments 1-1.1 4-1 5-1.1.1.1.1\n(f / frighten-01~e.4\n   :ARG0 (p / picture~e.1\n            :topic (p2 / person\n                       :name (n / name\n                                :op1 \"John\"~e.5)))\n   :ARG1 p2)", [[0, 1], [2, 9], [10, 12], [13, 20], [21, 31], [32, 36], [36, 37]]]]