[["# ::snt The sailors rode the breeze clear of the rocks.\n# ::tokens [\"The\", \"sailors\", \"rode\", \"the\", \"breeze\", \"clear\", \"of\", \"the\", \"rocks\", \".\"]\n# ::lemmas [\"the\", \"sailor\", \"ride\", \"the\", \"breeze\", \"clear\", \"of\", \"the\", \"rock\", \".\"]\n# ::alignments 1-1.1.1 2-1 4-1.2 5-1.2.1 8-1.2.1.1\n(r / ride-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (s / sail-01~e.1))\n   :ARG1 (b / breeze~e.4\n            :ARG0-of (c / clear-06~e.5\n                        :ARG1 (r2 / rock~e.8))))", [[0, 3], [4, 11], [12, 16], [17, 20], [21, 27], [28, 33], [34, 36], [37, 40], [41, 46], [46, 47]]], ["# ::snt The weights made the rope stretch over the pulley.\n# ::tokens [\"The\", \"weights\", \"made\", \"the\", \"rope\", \"stretch\", \"over\", \"the\", \"pulley\", \".\"]\n# ::lemmas [\"the\", \"weight\", \"make\", \"the\", \"rope\", \"stretch\", \"over\", \"the\", \"pulley\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2.1 5-1.2 6-1.2.2 8-1.2.2.1\n(m / make-02~e.2\n   :ARG0 (w / weight~e.1)\n   :ARG1 (s / stretch-01~e.5\n            :ARG1 (r / rope~e.4)\n            :ARG2 (o / over~e.6\n                     :op1 (p / pulley~e.8))))", [[0, 3], [4, 11], [12, 16], [17, 20], [21, 25], [26, 33], [34, 38], [39, 42], [43, 49], [49, 50]]], ["# ::snt The mechanical doll wriggled itself loose.\n# ::tokens [\"The\", \"mechanical\", \"doll\", \"wriggled\", \"itself\", \"loose\", \".\"]\n# ::lemmas [\"the\", \"mechanical\", \"doll\", \"wriggle\", \"itself\", \"loose\", \".\"]\n# ::alignments 1-1.1.1 2-1.1 3-1 5-1.2\n(w / wriggle-01~e.3\n   :ARG0 (d / doll~e.2\n            :mod (m / mechanics~e.1)\n            :ARG1-of w)\n   :ARG3 (l / loose-04~e.5\n            :ARG1 d))", [[0, 3], [4, 14], [15, 19], [20, 28], [29, 35], [36, 41], [41, 42]]], ["# ::snt If you had eaten more, you would want less.\n# ::tokens [\"If\", \"you\", \"had\", \"eaten\", \"more\", \",\", \"you\", \"would\", \"want\", \"less\", \".\"]\n# ::lemmas [\"if\", \"you\", \"have\", \"eat\", \"more\", \",\", \"you\", \"would\", \"want\", \"less\", \".\"]\n# ::alignments 1-1.1 3-1.3 4-1.3.2 8-1 9-1.2\n(w / want-01~e.8\n   :ARG0 (y / you~e.1)\n   :ARG1 (l / less~e.9)\n   :condition (e / eat-01~e.3\n                 :ARG0 y\n                 :quant (m / more~e.4)))", [[0, 2], [3, 6], [7, 10], [11, 16], [17, 21], [21, 22], [23, 26], [27, 32], [33, 37], [38, 42], [42, 43]]], ["# ::snt As you eat the most, you want the least.\n# ::tokens [\"As\", \"you\", \"eat\", \"the\", \"most\", \",\", \"you\", \"want\", \"the\", \"least\", \".\"]\n# ::lemmas [\"as\", \"you\", \"eat\", \"the\", \"most\", \",\", \"you\", \"want\", \"the\", \"least\", \".\"]\n# ::alignments 1-1.1 2-1.3.1 4-1.2.1.1 7-1\n(w / want-01~e.7\n   :ARG0 (y / you~e.1)\n   :ARG1 (t / thing\n            :ARG1-of (h / have-quant-91\n                        :ARG3 (m / most~e.4)))\n   :ARG1-of (c / cause-01\n               :ARG0 (e / eat-01~e.2\n                        :ARG0 y\n                        :ARG1-of (h2 / have-quant-91\n                                     :ARG3 (m2 / most)))))", [[0, 2], [3, 6], [7, 10], [11, 14], [15, 19], [19, 20], [21, 24], [25, 29], [30, 33], [34, 39], [39, 40]]], ["# ::snt The more you would want, the less you would eat.\n# ::tokens [\"The\", \"more\", \"you\", \"would\", \"want\", \",\", \"the\", \"less\", \"you\", \"would\", \"eat\", \".\"]\n# ::lemmas [\"the\", \"more\", \"you\", \"would\", \"want\", \",\", \"the\", \"less\", \"you\", \"would\", \"eat\", \".\"]\n# ::alignments 1-1.1 2-1.1.1.1.1 4-1.1.1.1 7-1.2 10-1.2.1.1\n(c / correlate-91\n   :ARG1 (m / more~e.1\n            :ARG3-of (h / have-quant-91\n                        :ARG1 (w / want-01~e.4\n                                 :ARG0 (y / you~e.2))))\n   :ARG2 (l / less~e.7\n            :ARG3-of (h2 / have-quant-91\n                         :ARG1 (e / eat-01~e.10\n                                  :ARG0 y))))", [[0, 3], [4, 8], [9, 12], [13, 18], [19, 23], [23, 24], [25, 28], [29, 33], [34, 37], [38, 43], [44, 47], [47, 48]]], ["# ::snt I demand that the more John eat, the more he pays.\n# ::tokens [\"I\", \"demand\", \"that\", \"the\", \"more\", \"John\", \"eat\", \",\", \"the\", \"more\", \"he\", \"pays\", \".\"]\n# ::lemmas [\"i\", \"demand\", \"that\", \"the\", \"more\", \"John\", \"eat\", \",\", \"the\", \"more\", \"he\", \"pay\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2.1 5-1.2.1.1.1.1.1.1 6-1.2.1.1.1 9-1.2.2 11-1.2.2.1.1\n(d / demand-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (c / correlate-91\n            :ARG1 (m / more~e.4\n                     :ARG3-of (h / have-quant-91\n                                 :ARG1 (e / eat-01~e.6\n                                          :ARG0 (p / person\n                                                   :name (n / name\n                                                            :op1 \"John\"~e.5)))))\n            :ARG2 (m2 / more~e.9\n                      :ARG3-of (h2 / have-quant-91\n                                   :ARG1 (p2 / pay-01~e.11\n                                             :ARG0 p)))))", [[0, 1], [2, 8], [9, 13], [14, 17], [18, 22], [23, 27], [28, 31], [31, 32], [33, 36], [37, 41], [42, 44], [45, 49], [49, 50]]], ["# ::snt Mary listens to the Grateful Dead, she gets depressed.\n# ::tokens [\"Mary\", \"listens\", \"to\", \"the\", \"Grateful\", \"Dead\", \",\", \"she\", \"gets\", \"depressed\", \".\"]\n# ::lemmas [\"Mary\", \"listen\", \"to\", \"the\", \"Grateful\", \"Dead\", \",\", \"she\", \"get\", \"depressed\", \".\"]\n# ::alignments 0-1.1.1.1 1-1.2.1 4-1.2.1.2.1.1 5-1.2.1.2.1.2 9-1\n(d / depress-01~e.9\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Mary\"~e.0))\n   :ARG1-of (c / cause-01\n               :ARG0 (l / listen-01~e.1\n                        :ARG0 p\n                        :ARG1 (m / music\n                                 :name (n2 / name\n                                           :op1 \"Grateful\"~e.4\n                                           :op2 \"Dead\"~e.5)))))", [[0, 4], [5, 12], [13, 15], [16, 19], [20, 28], [29, 33], [33, 34], [35, 38], [39, 43], [44, 53], [53, 54]]], ["# ::snt The angrier Mary got, the more she looked at pictures.\n# ::tokens [\"The\", \"angrier\", \"Mary\", \"got\", \",\", \"the\", \"more\", \"she\", \"looked\", \"at\", \"pictures\", \".\"]\n# ::lemmas [\"the\", \"angrier\", \"Mary\", \"got\", \",\", \"the\", \"more\", \"she\", \"look\", \"at\", \"picture\", \".\"]\n# ::alignments 1-1.1.1.2 2-1.1.1.1.1.1 6-1.1 8-1.2.2 10-1.2.2.2\n(c / correlate-91\n   :ARG1 (m / more~e.6\n            :ARG3-of (h / have-degree-91\n                        :ARG1 (p / person\n                                 :name (n / name\n                                          :op1 \"Mary\"~e.2))\n                        :ARG2 (a / angrier~e.1)))\n   :ARG2 (m2 / more\n             :ARG3-of h\n             :ARG1 (l / look-01~e.8\n                      :ARG0 p\n                      :ARG1 (p2 / picture~e.10))\n             :ARG2 (ii / intense-02\n                       :ARG1 l)))", [[0, 3], [4, 11], [12, 16], [17, 20], [20, 21], [22, 25], [26, 30], [31, 34], [35, 41], [42, 44], [45, 53], [53, 54]]], ["# ::snt The higher the stakes, the lower his expectations are.\n# ::tokens [\"The\", \"higher\", \"the\", \"stakes\", \",\", \"the\", \"lower\", \"his\", \"expectations\", \"are\", \".\"]\n# ::lemmas [\"the\", \"high\", \"the\", \"stake\", \",\", \"the\", \"low\", \"his\", \"expectation\", \"be\", \".\"]\n# ::alignments 1-1.1.1.2 3-1.1.1.1 6-1.2.1.2 8-1.2.1.1\n(c / correlate-91\n   :ARG1 (m / more\n            :ARG3-of (h / have-degree-91\n                        :ARG1 (s / stakes~e.3)\n                        :ARG2 (h2 / high-02~e.1\n                                  :ARG1 s)))\n   :ARG2 (m2 / more\n             :ARG3-of (h3 / have-degree-91\n                          :ARG1 (e / expect-01~e.8\n                                   :ARG0 (h4 / he))\n                          :ARG2 (l / low-04~e.6\n                                   :ARG1 e))))", [[0, 3], [4, 10], [11, 14], [15, 21], [21, 22], [23, 26], [27, 32], [33, 36], [37, 49], [50, 53], [53, 54]]], ["# ::snt The more Fred is obnoxious, the less attention you should pay to him.\n# ::tokens [\"The\", \"more\", \"Fred\", \"is\", \"obnoxious\", \",\", \"the\", \"less\", \"attention\", \"you\", \"should\", \"pay\", \"to\", \"him\", \".\"]\n# ::lemmas [\"the\", \"more\", \"Fred\", \"be\", \"obnoxious\", \",\", \"the\", \"less\", \"attention\", \"you\", \"should\", \"pay\", \"to\", \"he\", \".\"]\n# ::alignments 1-1.1 2-1.1.1.1.1.1.1 4-1.1.1.1 7-1.2 8-1.2.1.1 9-1.2.1.1.1\n(c / correlate-91\n   :ARG1 (m / more~e.1\n            :ARG3-of (h / have-quant-91\n                        :ARG1 (o / obnoxious~e.4\n                                 :domain (p / person\n                                            :name (n / name\n                                                     :op1 \"Fred\"~e.2)))))\n   :ARG2 (l / less~e.7\n            :ARG3-of (h2 / have-quant-91\n                         :ARG1 (a / attend-02~e.8\n                                  :ARG0 (y / you~e.9)\n                                  :ARG1 p\n                                  :ARG1-of (r / recommend-01\n                                              :ARG2 y)))))", [[0, 3], [4, 8], [9, 13], [14, 16], [17, 26], [26, 27], [28, 31], [32, 36], [37, 46], [47, 50], [51, 57], [58, 61], [62, 64], [65, 68], [68, 69]]], ["# ::snt John was lots more obnoxious than Fred.\n# ::tokens [\"John\", \"was\", \"lots\", \"more\", \"obnoxious\", \"than\", \"Fred\", \".\"]\n# ::lemmas [\"John\", \"be\", \"lot\", \"more\", \"obnoxious\", \"than\", \"Fred\", \".\"]\n# ::alignments 0-1.1.1.1 2-1.3.1 3-1.3 4-1.2 6-1.4.1.1\n(h / have-degree-91\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG2 (o / obnoxious~e.4)\n   :ARG3 (m / more~e.3\n            :quant (l / lot~e.2))\n   :ARG4 (p2 / person\n             :name (n2 / name\n                       :op1 \"Fred\"~e.6)))", [[0, 4], [5, 8], [9, 13], [14, 18], [19, 28], [29, 33], [34, 38], [38, 39]]], ["# ::snt The more people you give beer to, the more people get sick.\n# ::tokens [\"The\", \"more\", \"people\", \"you\", \"give\", \"beer\", \"to\", \",\", \"the\", \"more\", \"people\", \"get\", \"sick\", \".\"]\n# ::lemmas [\"the\", \"more\", \"people\", \"you\", \"give\", \"beer\", \"to\", \",\", \"the\", \"more\", \"people\", \"get\", \"sick\", \".\"]\n# ::alignments 1-1.1 3-1.1.1.1.1.1 4-1.1.1.1.1 5-1.1.1.1.1.2 9-1.2 11-1.2.1.1 12-1.2.1.2\n(c / correlate-91\n   :ARG1 (m / more~e.1\n            :ARG3-of (h / have-quant-91\n                        :ARG1 (p / person\n                                 :ARG2-of (g / give-01~e.4\n                                             :ARG0 (y / you~e.3)\n                                             :ARG1 (b / beer~e.5)))))\n   :ARG2 (m2 / more~e.9\n             :ARG3-of (h2 / have-quant-91\n                          :ARG1 (g2 / get-03~e.11\n                                    :ARG1 p)\n                          :ARG2 (s / sick-05~e.12\n                                   :ARG1 p))))", [[0, 3], [4, 8], [9, 15], [16, 19], [20, 24], [25, 29], [30, 32], [32, 33], [34, 37], [38, 42], [43, 49], [50, 53], [54, 58], [58, 59]]], ["# ::snt The more does Bill smoke, the more Susan hates him.\n# ::tokens [\"The\", \"more\", \"does\", \"Bill\", \"smoke\", \",\", \"the\", \"more\", \"Susan\", \"hates\", \"him\", \".\"]\n# ::lemmas [\"the\", \"more\", \"do\", \"Bill\", \"smoke\", \",\", \"the\", \"more\", \"Susan\", \"hate\", \"he\", \".\"]\n# ::alignments 1-1.1 3-1.1.1.1.1.1.1 4-1.1.1.1 7-1.2 8-1.2.2.1.1.1 9-1.2.2\n(c / correlate-91\n   :ARG1 (m / more~e.1\n            :ARG3-of (h / have-quant-91\n                        :ARG1 (s / smoke-02~e.4\n                                 :ARG0 (p / person\n                                          :name (n / name\n                                                   :op1 \"Bill\"~e.3)))))\n   :ARG2 (m2 / more~e.7\n             :ARG3-of h\n             :ARG1 (h2 / hate-01~e.9\n                       :ARG0 (p2 / person\n                                 :name (n2 / name\n                                           :op1 \"Susan\"~e.8))\n                       :ARG1 p)))", [[0, 3], [4, 8], [9, 13], [14, 18], [19, 24], [24, 25], [26, 29], [30, 34], [35, 40], [41, 46], [47, 50], [50, 51]]], ["# ::snt The more pictures of him that appear in the news, the more embarrassed John becomes.\n# ::tokens [\"The\", \"more\", \"pictures\", \"of\", \"him\", \"that\", \"appear\", \"in\", \"the\", \"news\", \",\", \"the\", \"more\", \"embarrassed\", \"John\", \"becomes\", \".\"]\n# ::lemmas [\"the\", \"more\", \"picture\", \"of\", \"he\", \"that\", \"appear\", \"in\", \"the\", \"news\", \",\", \"the\", \"more\", \"embarrassed\", \"John\", \"become\", \".\"]\n# ::alignments 1-1.1 2-1.1.1.1 4-1.1.1.1.1 6-1.1.1.1.2 9-1.1.1.1.2.1 12-1.2 13-1.2.1.1.2 14-1.2.1.1.1.1.1 15-1.2.1.1\n(c / correlate-91\n   :ARG1 (m / more~e.1\n            :ARG3-of (h / have-quant-91\n                        :ARG1 (p / picture~e.2\n                                 :topic (h2 / he~e.4)\n                                 :ARG1-of (a / appear-01~e.6\n                                             :location (n / news~e.9)))))\n   :ARG2 (m2 / more~e.12\n             :ARG3-of (h3 / have-degree-91\n                          :ARG1 (b / become-01~e.15\n                                   :ARG1 (p2 / person\n                                             :name (n2 / name\n                                                       :op1 \"John\"~e.14))\n                                   :ARG2 (e / embarrass-01~e.13\n                                            :ARG0 p2)))))", [[0, 3], [4, 8], [9, 17], [18, 20], [21, 24], [25, 29], [30, 36], [37, 39], [40, 43], [44, 48], [48, 49], [50, 53], [54, 58], [59, 70], [71, 75], [76, 83], [83, 84]]], ["# ::snt Every senator seems to become more corrupt, as he talks to more lobbyists.\n# ::tokens [\"Every\", \"senator\", \"seems\", \"to\", \"become\", \"more\", \"corrupt\", \",\", \"as\", \"he\", \"talks\", \"to\", \"more\", \"lobbyists\", \".\"]\n# ::lemmas [\"every\", \"senator\", \"seem\", \"to\", \"become\", \"more\", \"corrupt\", \",\", \"as\", \"he\", \"talk\", \"to\", \"more\", \"lobbyist\", \".\"]\n# ::alignments 0-1.1.1.2 1-1.1.1.1.1 2-1 4-1.1 5-1.1.2.2.2 6-1.1.2 10-1.2.1 12-1.2.1.2.2 13-1.2.1.2.1\n(s / seem-01~e.2\n   :ARG1 (b / become-01~e.4\n            :ARG1 (p / person\n                     :ARG0-of (h / have-org-role-91\n                                 :ARG2 (s2 / senator~e.1))\n                     :mod (e / every~e.0))\n            :ARG2 (c / corrupt-01~e.6\n                     :ARG1 p\n                     :ARG2-of (h2 / have-degree-91\n                                  :ARG1 p\n                                  :ARG3 (m / more~e.5))))\n   :ARG1-of (c2 / cause-01\n                :ARG0 (t / talk-01~e.10\n                         :ARG0 p\n                         :ARG2 (p2 / person\n                                   :ARG0-of (l / lobby-01~e.13)\n                                   :quant (m2 / more~e.12)))))", [[0, 5], [6, 13], [14, 19], [20, 22], [23, 29], [30, 34], [35, 42], [42, 43], [44, 46], [47, 49], [50, 55], [56, 58], [59, 63], [64, 73], [73, 74]]], ["# ::snt Who does John visit Sally because he likes?\n# ::tokens [\"Who\", \"does\", \"John\", \"visit\", \"Sally\", \"because\", \"he\", \"likes\", \"?\"]\n# ::lemmas [\"who\", \"do\", \"John\", \"visit\", \"Sally\", \"because\", \"he\", \"like\", \"?\"]\n# ::alignments 2-1.1.1.1 3-1 4-1.2.1.1 5-1.4 7-1.4.1\n(v / visit-01~e.3\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.2))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Sally\"~e.4))\n   :polarity (a / amr-unknown)\n   :ARG1-of (c / cause-01~e.5\n               :ARG0 (l / like-01~e.7\n                        :ARG0 p\n                        :ARG1 v)))", [[0, 3], [4, 8], [9, 13], [14, 19], [20, 25], [26, 33], [34, 36], [37, 42], [42, 43]]], ["# ::snt Marianne did not leave.\n# ::tokens [\"Marianne\", \"did\", \"not\", \"leave\", \".\"]\n# ::lemmas [\"Marianne\", \"do\", \"not\", \"leave\", \".\"]\n# ::alignments 0-1.2.1.1 2-1.1 3-1\n(l / leave-11~e.3\n   :polarity -~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Marianne\"~e.0)))", [[0, 8], [9, 12], [13, 16], [17, 22], [22, 23]]], ["# ::snt He could not] have been working.\n# ::tokens [\"He\", \"could\", \"not\", \"]\", \"have\", \"been\", \"working\", \".\"]\n# ::lemmas [\"he\", \"could\", \"not\", \"]\", \"have\", \"be\", \"work\", \".\"]\n# ::alignments 0-1.2.1 2-1.1 6-1.2\n(p / possible-01\n   :polarity -~e.2\n   :ARG1 (w / work-01~e.6\n            :ARG0 (h / he~e.0)))", [[0, 2], [3, 8], [9, 12], [12, 13], [14, 18], [19, 23], [24, 31], [31, 32]]], ["# ::snt He can not have been working.\n# ::tokens [\"He\", \"can\", \"not\", \"have\", \"been\", \"working\", \".\"]\n# ::lemmas [\"he\", \"can\", \"not\", \"have\", \"be\", \"work\", \".\"]\n# ::alignments 0-1.2.1 2-1.1 5-1.2\n(p / possible-01\n   :polarity -~e.2\n   :ARG1 (w / work-01~e.5\n            :ARG0 (h / he~e.0)))", [[0, 2], [3, 6], [7, 10], [11, 15], [16, 20], [21, 28], [28, 29]]], ["# ::snt You will believe Bob.\n# ::tokens [\"You\", \"will\", \"believe\", \"Bob\", \".\"]\n# ::lemmas [\"you\", \"will\", \"believe\", \"Bob\", \".\"]\n# ::alignments 0-1.1 2-1 3-1.2.1.1\n(b / believe-01~e.2\n   :ARG0 (y / you~e.0)\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Bob\"~e.3)))", [[0, 3], [4, 8], [9, 16], [17, 20], [20, 21]]], ["# ::snt John has not kissed Mary.\n# ::tokens [\"John\", \"has\", \"not\", \"kissed\", \"Mary\", \".\"]\n# ::lemmas [\"John\", \"have\", \"not\", \"kiss\", \"Mary\", \".\"]\n# ::alignments 0-1.2.1.1 2-1.1 3-1 4-1.3.1.1\n(k / kiss-01~e.3\n   :polarity -~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Mary\"~e.4)))", [[0, 4], [5, 8], [9, 12], [13, 19], [20, 24], [24, 25]]], ["# ::snt I said that never in my life had I seen a place like Bangor.\n# ::tokens [\"I\", \"said\", \"that\", \"never\", \"in\", \"my\", \"life\", \"had\", \"I\", \"seen\", \"a\", \"place\", \"like\", \"Bangor\", \".\"]\n# ::lemmas [\"i\", \"say\", \"that\", \"never\", \"in\", \"my\", \"life\", \"have\", \"i\", \"see\", \"a\", \"place\", \"like\", \"Bangor\", \".\"]\n# ::alignments 0-1.1 1-1 9-1.2 11-1.2.3 13-1.2.3.1.1.1.1\n(s / say-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (s2 / see-01~e.9\n             :polarity -\n             :ARG0 ii\n             :ARG1 (p / place~e.11\n                      :ARG1-of (r / resemble-01\n                                  :ARG2 (c / city\n                                           :name (n / name\n                                                    :op1 \"Bangor\"~e.13))))\n             :time (e / ever)\n             :time (l / live-01\n                      :ARG0 ii)))", [[0, 1], [2, 6], [7, 11], [12, 17], [18, 20], [21, 23], [24, 28], [29, 32], [33, 34], [35, 39], [40, 41], [42, 47], [48, 52], [53, 59], [59, 60]]], ["# ::snt Mickey looked up it.\n# ::tokens [\"Mickey\", \"looked\", \"up\", \"it\", \".\"]\n# ::lemmas [\"Mickey\", \"look\", \"up\", \"it\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2\n(l / look-up-05~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mickey\"~e.0))\n   :ARG1 (ii / it~e.3))", [[0, 6], [7, 13], [14, 16], [17, 19], [19, 20]]], ["# ::snt There tended to be a lot of discussion.\n# ::tokens [\"There\", \"tended\", \"to\", \"be\", \"a\", \"lot\", \"of\", \"discussion\", \".\"]\n# ::lemmas [\"there\", \"tend\", \"to\", \"be\", \"a\", \"lot\", \"of\", \"discussion\", \".\"]\n# ::alignments 1-1 5-1.1.1 7-1.1\n(t / tend-02~e.1\n   :ARG1 (d / discuss-01~e.7\n            :quant (l / lot~e.5)))", [[0, 5], [6, 12], [13, 15], [16, 18], [19, 20], [21, 24], [25, 27], [28, 38], [38, 39]]], ["# ::snt John tried to be a good boy.\n# ::tokens [\"John\", \"tried\", \"to\", \"be\", \"a\", \"good\", \"boy\", \".\"]\n# ::lemmas [\"John\", \"try\", \"to\", \"be\", \"a\", \"good\", \"boy\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 5-1.2.1 6-1.2\n(t / try-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (b / boy~e.6\n            :ARG1-of (g / good-02~e.5)\n            :domain p))", [[0, 4], [5, 10], [11, 13], [14, 16], [17, 18], [19, 23], [24, 27], [27, 28]]], ["# ::snt John is eager.\n# ::tokens [\"John\", \"is\", \"eager\", \".\"]\n# ::lemmas [\"John\", \"be\", \"eager\", \".\"]\n# ::alignments 0-1.1.1.1 2-1\n(e / eager-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0)))", [[0, 4], [5, 7], [8, 13], [13, 14]]], ["# ::snt We want John to win.\n# ::tokens [\"We\", \"want\", \"John\", \"to\", \"win\", \".\"]\n# ::lemmas [\"we\", \"want\", \"John\", \"to\", \"win\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1.1.1 4-1.2\n(w / want-01~e.1\n   :ARG0 (w2 / we~e.0)\n   :ARG1 (w3 / win-01~e.4\n             :ARG0 (p / person\n                      :name (n / name\n                               :op1 \"John\"~e.2))))", [[0, 2], [3, 7], [8, 12], [13, 15], [16, 19], [19, 20]]], ["# ::snt The box contained the ball from the tree.\n# ::tokens [\"The\", \"box\", \"contained\", \"the\", \"ball\", \"from\", \"the\", \"tree\", \".\"]\n# ::lemmas [\"the\", \"box\", \"contain\", \"the\", \"ball\", \"from\", \"the\", \"tree\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2 7-1.2.1\n(c / contain-01~e.2\n   :ARG0 (b / box~e.1)\n   :ARG1 (b2 / ball~e.4\n             :source (t / tree~e.7)))", [[0, 3], [4, 7], [8, 17], [18, 21], [22, 26], [27, 31], [32, 35], [36, 40], [40, 41]]], ["# ::snt The tube was escaped by gas.\n# ::tokens [\"The\", \"tube\", \"was\", \"escaped\", \"by\", \"gas\", \".\"]\n# ::lemmas [\"the\", \"tube\", \"be\", \"escape\", \"by\", \"gas\", \".\"]\n# ::alignments 1-1.1 3-1 5-1.2\n(e / escape-01~e.3\n   :ARG0 (t / tube~e.1)\n   :ARG1 (g / gas~e.5))", [[0, 3], [4, 8], [9, 12], [13, 20], [21, 23], [24, 27], [27, 28]]], ["# ::snt Water bubbled up out of the kettle.\n# ::tokens [\"Water\", \"bubbled\", \"up\", \"out\", \"of\", \"the\", \"kettle\", \".\"]\n# ::lemmas [\"water\", \"bubble\", \"up\", \"out\", \"of\", \"the\", \"kettle\", \".\"]\n# ::alignments 0-1.1 1-1 6-1.2\n(b / bubble-up-02~e.1\n   :ARG1 (w / water~e.0)\n   :source (k / kettle~e.6))", [[0, 5], [6, 13], [14, 16], [17, 20], [21, 23], [24, 27], [28, 34], [34, 35]]], ["# ::snt The tub leaked water.\n# ::tokens [\"The\", \"tub\", \"leaked\", \"water\", \".\"]\n# ::lemmas [\"the\", \"tub\", \"leak\", \"water\", \".\"]\n# ::alignments 1-1.1 2-1 3-1.2\n(l / leak-01~e.2\n   :ARG0 (t / tub~e.1)\n   :ARG1 (w / water~e.3))", [[0, 3], [4, 7], [8, 14], [15, 20], [20, 21]]], ["# ::snt What the water did to the bottle was fill it.\n# ::tokens [\"What\", \"the\", \"water\", \"did\", \"to\", \"the\", \"bottle\", \"was\", \"fill\", \"it\", \".\"]\n# ::lemmas [\"what\", \"the\", \"water\", \"do\", \"to\", \"the\", \"bottle\", \"be\", \"fill\", \"it\", \".\"]\n# ::alignments 2-1.1.1 3-1.1 6-1.1.2 8-1.2\n(t / thing\n   :ARG1-of (d / do-02~e.3\n               :ARG0 (w / water~e.2)\n               :ARG2 (b / bottle~e.6))\n   :domain (f / fill-01~e.8\n              :ARG0 w\n              :ARG1 b))", [[0, 4], [5, 8], [9, 14], [15, 18], [19, 21], [22, 25], [26, 32], [33, 36], [37, 41], [42, 44], [44, 45]]], ["# ::snt What the water did to the whole bottle was fill it.\n# ::tokens [\"What\", \"the\", \"water\", \"did\", \"to\", \"the\", \"whole\", \"bottle\", \"was\", \"fill\", \"it\", \".\"]\n# ::lemmas [\"what\", \"the\", \"water\", \"do\", \"to\", \"the\", \"whole\", \"bottle\", \"be\", \"fill\", \"it\", \".\"]\n# ::alignments 2-1.1.1 3-1.1 6-1.1.2.1 7-1.1.2 9-1.2\n(t / thing\n   :ARG1-of (d / do-02~e.3\n               :ARG0 (w / water~e.2)\n               :ARG2 (b / bottle~e.7\n                        :mod (w2 / whole~e.6)))\n   :domain (f / fill-01~e.9\n              :ARG0 w\n              :ARG1 b))", [[0, 4], [5, 8], [9, 14], [15, 18], [19, 21], [22, 25], [26, 31], [32, 38], [39, 42], [43, 47], [48, 50], [50, 51]]], ["# ::snt The tank leaked the fluid free.\n# ::tokens [\"The\", \"tank\", \"leaked\", \"the\", \"fluid\", \"free\", \".\"]\n# ::lemmas [\"the\", \"tank\", \"leak\", \"the\", \"fluid\", \"free\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2.1 5-1.2\n(l / leak-01~e.2\n   :ARG0 (t / tank~e.1)\n   :ARG1 (f / free-04~e.5\n            :ARG1 (f2 / fluid~e.4)))", [[0, 3], [4, 8], [9, 15], [16, 19], [20, 25], [26, 30], [30, 31]]], ["# ::snt John lay the ball in the box.\n# ::tokens [\"John\", \"lay\", \"the\", \"ball\", \"in\", \"the\", \"box\", \".\"]\n# ::lemmas [\"John\", \"lie\", \"the\", \"ball\", \"in\", \"the\", \"box\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 6-1.3\n(l / lay-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (b / ball~e.3)\n   :ARG2 (b2 / box~e.6))", [[0, 4], [5, 8], [9, 12], [13, 17], [18, 20], [21, 24], [25, 28], [28, 29]]], ["# ::snt John owns the book.\n# ::tokens [\"John\", \"owns\", \"the\", \"book\", \".\"]\n# ::lemmas [\"John\", \"own\", \"the\", \"book\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2\n(o / own-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (b / book~e.3))", [[0, 4], [5, 9], [10, 13], [14, 18], [18, 19]]], ["# ::snt We persuaded Mary to leave and Sue to stay.\n# ::tokens [\"We\", \"persuaded\", \"Mary\", \"to\", \"leave\", \"and\", \"Sue\", \"to\", \"stay\", \".\"]\n# ::lemmas [\"we\", \"persuade\", \"Mary\", \"to\", \"leave\", \"and\", \"Sue\", \"to\", \"stay\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1.1.1.1 4-1.2.1 5-1.2 6-1.2.2.1.1.1 8-1.2.2\n(p / persuade-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (a / and~e.5\n            :op1 (l / leave-11~e.4\n                    :ARG0 (p2 / person\n                              :name (n / name\n                                       :op1 \"Mary\"~e.2)))\n            :op2 (s / stay-01~e.8\n                    :ARG1 (p3 / person\n                              :name (n2 / name\n                                        :op1 \"Sue\"~e.6)))))", [[0, 2], [3, 12], [13, 17], [18, 20], [21, 26], [27, 30], [31, 34], [35, 37], [38, 42], [42, 43]]], ["# ::snt Most people probably consider, even though the courts didn't actually find, Klaus guilty of murder.\n# ::tokens [\"Most\", \"people\", \"probably\", \"consider\", \",\", \"even\", \"though\", \"the\", \"courts\", \"did\", \"n't\", \"actually\", \"find\", \",\", \"Klaus\", \"guilty\", \"of\", \"murder\", \".\"]\n# ::lemmas [\"most\", \"people\", \"probably\", \"consider\", \",\", \"even\", \"though\", \"the\", \"court\", \"do\", \"not\", \"actually\", \"find\", \",\", \"Klaus\", \"guilty\", \"of\", \"murder\", \".\"]\n# ::alignments 0-1.1.1 2-1.3 3-1 8-1.4.2 11-1.4.4 12-1.4 14-1.2.1.1.1 15-1.2 17-1.2.2\n(c / consider-01~e.3\n   :ARG0 (p / person\n            :mod (m / most~e.0))\n   :ARG1 (g / guilty-01~e.15\n            :ARG1 (p2 / person\n                      :name (n / name\n                               :op1 \"Klaus\"~e.14))\n            :ARG2 (m2 / murder-01~e.17\n                      :ARG0 p2))\n   :mod (p3 / probable~e.2)\n   :concession (f / find-01~e.12\n                  :polarity -\n                  :ARG0 (c2 / court~e.8)\n                  :ARG1 g\n                  :ARG1-of (a / actual-02~e.11)))", [[0, 4], [5, 11], [12, 20], [21, 29], [29, 30], [31, 35], [36, 42], [43, 46], [47, 53], [54, 57], [57, 60], [61, 69], [70, 74], [74, 75], [76, 81], [82, 88], [89, 91], [92, 98], [98, 99]]], ["# ::snt Mary beautifully plays the violin.\n# ::tokens [\"Mary\", \"beautifully\", \"plays\", \"the\", \"violin\", \".\"]\n# ::lemmas [\"Mary\", \"beautifully\", \"play\", \"the\", \"violin\", \".\"]\n# ::alignments 0-1.1.1.1 1-1.3 2-1 4-1.2\n(p / play-11~e.2\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Mary\"~e.0))\n   :ARG2 (v / violin~e.4)\n   :ARG1-of (b / beautiful-02~e.1))", [[0, 4], [5, 16], [17, 22], [23, 26], [27, 33], [33, 34]]], ["# ::snt Clearly, John probably will immediately learn French perfectly.\n# ::tokens [\"Clearly\", \",\", \"John\", \"probably\", \"will\", \"immediately\", \"learn\", \"French\", \"perfectly\", \".\"]\n# ::lemmas [\"clearly\", \",\", \"John\", \"probably\", \"will\", \"immediately\", \"learn\", \"French\", \"perfectly\", \".\"]\n# ::alignments 0-1.2 2-1.1.1.1.1 5-1.1.4 6-1.1 7-1.1.2.1.1 8-1.1.3\n(l / likely-01\n   :ARG1 (l2 / learn-01~e.6\n             :ARG0 (p / person\n                      :name (n / name\n                               :op1 \"John\"~e.2))\n             :ARG1 (l3 / language\n                       :name (n2 / name\n                                 :op1 \"French\"~e.7))\n             :ARG1-of (p2 / perfect-02~e.8)\n             :time (ii / immediate~e.5))\n   :ARG1-of (c / clear-06~e.0))", [[0, 7], [7, 8], [9, 13], [14, 22], [23, 27], [28, 39], [40, 45], [46, 52], [53, 62], [62, 63]]], ["# ::snt Sue gave to Bill a book.\n# ::tokens [\"Sue\", \"gave\", \"to\", \"Bill\", \"a\", \"book\", \".\"]\n# ::lemmas [\"Sue\", \"give\", \"to\", \"Bill\", \"a\", \"book\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.3.1.1 5-1.2\n(g / give-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sue\"~e.0))\n   :ARG1 (b / book~e.5)\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Bill\"~e.3)))", [[0, 3], [4, 8], [9, 11], [12, 16], [17, 18], [19, 23], [23, 24]]], ["# ::snt The men will all leave.\n# ::tokens [\"The\", \"men\", \"will\", \"all\", \"leave\", \".\"]\n# ::lemmas [\"the\", \"man\", \"will\", \"all\", \"leave\", \".\"]\n# ::alignments 1-1.1 3-1.1.1 4-1\n(l / leave-11~e.4\n   :ARG0 (m / man~e.1\n            :mod (a / all~e.3)))", [[0, 3], [4, 7], [8, 12], [13, 16], [17, 22], [22, 23]]], ["# ::snt John went home.\n# ::tokens [\"John\", \"went\", \"home\", \".\"]\n# ::lemmas [\"John\", \"go\", \"home\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2\n(g / go-02~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG4 (h / home~e.2))", [[0, 4], [5, 9], [10, 14], [14, 15]]], ["# ::snt They represented seriously to the dean Mary as a genuine linguist.\n# ::tokens [\"They\", \"represented\", \"seriously\", \"to\", \"the\", \"dean\", \"Mary\", \"as\", \"a\", \"genuine\", \"linguist\", \".\"]\n# ::lemmas [\"they\", \"represent\", \"seriously\", \"to\", \"the\", \"dean\", \"Mary\", \"as\", \"a\", \"genuine\", \"linguist\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.4 5-1.2.2 6-1.2.1.1 9-1.3.1 10-1.3\n(r / represent-01~e.1\n   :ARG0 (t / they~e.0)\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Mary\"~e.6)\n            :mod (d / dean~e.5))\n   :ARG2 (l / linguist~e.10\n            :mod (g / genuine~e.9))\n   :ARG1-of (s / serious-01~e.2))", [[0, 4], [5, 16], [17, 26], [27, 29], [30, 33], [34, 38], [39, 43], [44, 46], [47, 48], [49, 56], [57, 65], [65, 66]]], ["# ::snt Us love they.\n# ::tokens [\"Us\", \"love\", \"they\", \".\"]\n# ::lemmas [\"Us\", \"love\", \"they\", \".\"]\n# ::alignments 1-1 2-1.2\n(l / love-01~e.1\n   :ARG0 (w / we)\n   :ARG1 (t / they~e.2))", [[0, 2], [3, 7], [8, 12], [12, 13]]], ["# ::snt It is nice to go abroad.\n# ::tokens [\"It\", \"is\", \"nice\", \"to\", \"go\", \"abroad\", \".\"]\n# ::lemmas [\"it\", \"be\", \"nice\", \"to\", \"go\", \"abroad\", \".\"]\n# ::alignments 2-1 4-1.1 5-1.1.1\n(n / nice-01~e.2\n   :ARG1 (g / go-02~e.4\n            :ARG4 (a / abroad~e.5)))", [[0, 2], [3, 5], [6, 10], [11, 13], [14, 16], [17, 23], [23, 24]]], ["# ::snt Mary intended John to go abroad.\n# ::tokens [\"Mary\", \"intended\", \"John\", \"to\", \"go\", \"abroad\", \".\"]\n# ::lemmas [\"Mary\", \"intend\", \"John\", \"to\", \"go\", \"abroad\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1.1 4-1.2 5-1.2.2\n(ii / intend-01~e.1\n    :ARG0 (p / person\n             :name (n / name\n                      :op1 \"Mary\"~e.0))\n    :ARG1 (g / go-02~e.4\n             :ARG0 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"John\"~e.2))\n             :ARG4 (a / abroad~e.5)))", [[0, 4], [5, 13], [14, 18], [19, 21], [22, 24], [25, 31], [31, 32]]], ["# ::snt I remembered having kissed Mary.\n# ::tokens [\"I\", \"remembered\", \"having\", \"kissed\", \"Mary\", \".\"]\n# ::lemmas [\"i\", \"remember\", \"having\", \"kiss\", \"Mary\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 4-1.2.2.1.1\n(r / remember-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (k / kiss-01~e.3\n            :ARG0 ii\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Mary\"~e.4))))", [[0, 1], [2, 12], [13, 19], [20, 26], [27, 31], [31, 32]]], ["# ::snt I can't believe Fred won't, either.\n# ::tokens [\"I\", \"ca\", \"n't\", \"believe\", \"Fred\", \"wo\", \"n't\", \",\", \"either\", \".\"]\n# ::lemmas [\"i\", \"can\", \"not\", \"believe\", \"Fred\", \"will\", \"not\", \",\", \"either\", \".\"]\n# ::alignments 0-1.2.1 3-1.2 4-1.2.2.2.1.1 8-1.2.3\n(p / possible-01\n   :polarity -\n   :ARG1 (b / believe-01~e.3\n            :ARG0 (ii / i~e.0)\n            :ARG1 (e / event\n                     :polarity -\n                     :mod (p2 / person\n                              :name (n / name\n                                       :op1 \"Fred\"~e.4)))\n            :mod (e2 / either~e.8)))", [[0, 1], [2, 4], [4, 7], [8, 15], [16, 20], [21, 23], [23, 26], [26, 27], [28, 34], [34, 35]]], ["# ::snt John wants to read Fred's story, and I also want to.\n# ::tokens [\"John\", \"wants\", \"to\", \"read\", \"Fred\", \"'s\", \"story\", \",\", \"and\", \"I\", \"also\", \"want\", \"to\", \".\"]\n# ::lemmas [\"John\", \"want\", \"to\", \"read\", \"Fred\", \"'s\", \"story\", \",\", \"and\", \"i\", \"also\", \"want\", \"to\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 3-1.1.2 4-1.1.2.2.1.1.1 6-1.1.2.2 8-1 9-1.2.1 10-1.2.3 11-1.2\n(a / and~e.8\n   :op1 (w / want-01~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"John\"~e.0))\n           :ARG1 (r / read-01~e.3\n                    :ARG0 p\n                    :ARG1 (s / story~e.6\n                             :poss (p2 / person\n                                       :name (n2 / name\n                                                 :op1 \"Fred\"~e.4)))))\n   :op2 (w2 / want-01~e.11\n            :ARG0 (ii / i~e.9)\n            :ARG1 r\n            :mod (a2 / also~e.10)))", [[0, 4], [5, 10], [11, 13], [14, 18], [19, 23], [23, 25], [26, 31], [31, 32], [33, 36], [37, 38], [39, 43], [44, 48], [49, 51], [51, 52]]], ["# ::snt We wanted to invite someone, but we couldn't decide who to.\n# ::tokens [\"We\", \"wanted\", \"to\", \"invite\", \"someone\", \",\", \"but\", \"we\", \"could\", \"n't\", \"decide\", \"who\", \"to\", \".\"]\n# ::lemmas [\"we\", \"want\", \"to\", \"invite\", \"someone\", \",\", \"but\", \"we\", \"could\", \"not\", \"decide\", \"who\", \"to\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 3-1.1.2 4-1.1.2.2 6-1 10-1.2.2\n(c / contrast-01~e.6\n   :ARG1 (w / want-01~e.1\n            :ARG0 (w2 / we~e.0)\n            :ARG1 (ii / invite-01~e.3\n                      :ARG0 w2\n                      :ARG1 (s / someone~e.4)))\n   :ARG2 (p / possible-01\n            :polarity -\n            :ARG1 (d / decide-01~e.10\n                     :ARG0 w2\n                     :ARG1 (ii2 / invite-01\n                                :ARG0 w2\n                                :ARG1 s))))", [[0, 2], [3, 9], [10, 12], [13, 19], [20, 27], [27, 28], [29, 32], [33, 35], [36, 41], [41, 44], [45, 51], [52, 55], [56, 58], [58, 59]]], ["# ::snt Mary will read Fred's story, and Joe will read Holly's.\n# ::tokens [\"Mary\", \"will\", \"read\", \"Fred\", \"'s\", \"story\", \",\", \"and\", \"Joe\", \"will\", \"read\", \"Holly\", \"'s\", \".\"]\n# ::lemmas [\"Mary\", \"will\", \"read\", \"Fred\", \"'s\", \"story\", \",\", \"and\", \"Joe\", \"will\", \"read\", \"Holly\", \"'s\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1 3-1.1.2.1.1.1 5-1.1.2 7-1 8-1.2.1.1.1 10-1.2 11-1.2.2.1.1.1\n(a / and~e.7\n   :op1 (r / read-01~e.2\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Mary\"~e.0))\n           :ARG1 (s / story~e.5\n                    :poss (p2 / person\n                              :name (n2 / name\n                                        :op1 \"Fred\"~e.3))))\n   :op2 (r2 / read-01~e.10\n            :ARG0 (p3 / person\n                      :name (n3 / name\n                                :op1 \"Joe\"~e.8))\n            :ARG1 (s2 / story\n                      :poss (p4 / person\n                                :name (n4 / name\n                                          :op1 \"Holly\"~e.11)))))", [[0, 4], [5, 9], [10, 14], [15, 19], [19, 21], [22, 27], [27, 28], [29, 32], [33, 36], [37, 41], [42, 46], [47, 52], [52, 54], [54, 55]]], ["# ::snt Mary claimed that eating cabbage, Holly shouldn't.\n# ::tokens [\"Mary\", \"claimed\", \"that\", \"eating\", \"cabbage\", \",\", \"Holly\", \"should\", \"n't\", \".\"]\n# ::lemmas [\"Mary\", \"claim\", \"that\", \"eat\", \"cabbage\", \",\", \"Holly\", \"should\", \"not\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.3 4-1.2.3.1 6-1.2.2.1.1\n(c / claim-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mary\"~e.0))\n   :ARG1 (r / recommend-01\n            :polarity -\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Holly\"~e.6))\n            :ARG1 (e / eat-01~e.3\n                     :ARG1 (c2 / cabbage~e.4))))", [[0, 4], [5, 12], [13, 17], [18, 24], [25, 32], [32, 33], [34, 39], [40, 46], [46, 49], [49, 50]]], ["# ::snt Mary came to be introduced by the bartender and I also came to be.\n# ::tokens [\"Mary\", \"came\", \"to\", \"be\", \"introduced\", \"by\", \"the\", \"bartender\", \"and\", \"I\", \"also\", \"came\", \"to\", \"be\", \".\"]\n# ::lemmas [\"Mary\", \"come\", \"to\", \"be\", \"introduce\", \"by\", \"the\", \"bartender\", \"and\", \"i\", \"also\", \"come\", \"to\", \"be\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 4-1.1.2 7-1.1.2.2 8-1 9-1.2.1 10-1.2.3 11-1.2\n(a / and~e.8\n   :op1 (c / come-01~e.1\n           :ARG1 (p / person\n                    :name (n / name\n                             :op1 \"Mary\"~e.0))\n           :ARG4 (ii / introduce-01~e.4\n                     :ARG0 p\n                     :ARG0-of (b / bartend-01~e.7))\n           :ARG1 p)\n   :op2 (c2 / come-01~e.11\n            :ARG1 (ii2 / i~e.9)\n            :ARG4 ii\n            :mod (a2 / also~e.10)))", [[0, 4], [5, 9], [10, 12], [13, 15], [16, 26], [27, 29], [30, 33], [34, 43], [44, 47], [48, 49], [50, 54], [55, 59], [60, 62], [63, 65], [65, 66]]], ["# ::snt If I can, I will work on it.\n# ::tokens [\"If\", \"I\", \"can\", \",\", \"I\", \"will\", \"work\", \"on\", \"it\", \".\"]\n# ::lemmas [\"if\", \"i\", \"can\", \",\", \"i\", \"will\", \"work\", \"on\", \"it\", \".\"]\n# ::alignments 1-1.1 6-1 8-1.2\n(w / work-01~e.6\n   :ARG0 (ii / i~e.1)\n   :ARG1 (ii2 / it~e.8)\n   :condition (p / possible-01)\n   :ARG1-of p)", [[0, 2], [3, 4], [5, 8], [8, 9], [10, 11], [12, 16], [17, 21], [22, 24], [25, 27], [27, 28]]], ["# ::snt Joe's neuroses bother his patrons, and Sally does too.\n# ::tokens [\"Joe\", \"'s\", \"neuroses\", \"bother\", \"his\", \"patrons\", \",\", \"and\", \"Sally\", \"does\", \"too\", \".\"]\n# ::lemmas [\"Joe\", \"'s\", \"neurosis\", \"bother\", \"his\", \"patron\", \",\", \"and\", \"Sally\", \"do\", \"too\", \".\"]\n# ::alignments 0-1.1.1.1.1.1 2-1.1.1 3-1.1 5-1.1.2.1 7-1 8-1.2.1.1.1 10-1.2.3\n(a / and~e.7\n   :op1 (b / bother-01~e.3\n           :ARG0 (n / neurosis~e.2\n                    :poss (p / person\n                             :name (n2 / name\n                                       :op1 \"Joe\"~e.0)))\n           :ARG1 (p2 / person\n                     :ARG0-of (p3 / patronize-01~e.5\n                                  :ARG1 p)))\n   :op2 (b2 / bother-01\n            :ARG0 (p4 / person\n                      :name (n3 / name\n                                :op1 \"Sally\"~e.8))\n            :ARG1 p2\n            :mod (t / too~e.10)))", [[0, 3], [3, 5], [6, 14], [15, 21], [22, 25], [26, 33], [33, 34], [35, 38], [39, 44], [45, 49], [50, 53], [53, 54]]], ["# ::snt I know which book Jos\u00e9 didn't read for class, and which book Lilly did it for him.\n# ::tokens [\"I\", \"know\", \"which\", \"book\", \"Jos\\u00e9\", \"did\", \"n't\", \"read\", \"for\", \"class\", \",\", \"and\", \"which\", \"book\", \"Lilly\", \"did\", \"it\", \"for\", \"him\", \".\"]\n# ::lemmas [\"i\", \"know\", \"which\", \"book\", \"Jos\\u00e9\", \"do\", \"not\", \"read\", \"for\", \"class\", \",\", \"and\", \"which\", \"book\", \"Lilly\", \"do\", \"it\", \"for\", \"he\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1 5-1.2.2.1 7-1.2.1.1 9-1.2.1.1.3 11-1.2 13-1.2.2 14-1.2.2.1.1.1.1\n(k / know-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (a / and~e.11\n            :op1 (b / book~e.3\n                    :ARG1-of (r / read-01~e.7\n                                :polarity -\n                                :ARG0 (p / person\n                                         :name (n / name\n                                                  :op1 \"Josie\"))\n                                :purpose (c / class~e.9)))\n            :op2 (b2 / book~e.13\n                     :ARG1-of (d / do-02~e.5\n                                 :ARG0 (p2 / person\n                                           :name (n2 / name\n                                                     :op1 \"Lilly\"~e.14))\n                                 :beneficiary p))))", [[0, 1], [2, 6], [7, 12], [13, 17], [18, 22], [23, 26], [26, 29], [30, 34], [35, 38], [39, 44], [44, 45], [46, 49], [50, 55], [56, 60], [61, 66], [67, 70], [71, 73], [74, 77], [78, 81], [81, 82]]], ["# ::snt This is the book which Bob reviewed, and this is the one which Fred won't do it.\n# ::tokens [\"This\", \"is\", \"the\", \"book\", \"which\", \"Bob\", \"reviewed\", \",\", \"and\", \"this\", \"is\", \"the\", \"one\", \"which\", \"Fred\", \"wo\", \"n't\", \"do\", \"it\", \".\"]\n# ::lemmas [\"this\", \"be\", \"the\", \"book\", \"which\", \"Bob\", \"review\", \",\", \"and\", \"this\", \"be\", \"the\", \"one\", \"which\", \"Fred\", \"will\", \"not\", \"do\", \"it\", \".\"]\n# ::alignments 0-1.1.2.1 3-1.1.2 5-1.1.1.1.1 6-1.1 8-1 9-1.2.1 14-1.2.3.1.1 17-1.2.2 18-1.2.2.2\n(a / and~e.8\n   :op1 (r / review-01~e.6\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Bob\"~e.5))\n           :ARG1 (b / book~e.3\n                    :mod (t / this~e.0)))\n   :op2 (b2 / book\n            :mod (t2 / this~e.9)\n            :ARG0-of (d / do-02~e.17\n                        :polarity -\n                        :ARG1 (ii / it~e.18))\n            :domain (p2 / person\n                        :name (n2 / name\n                                  :op1 \"Fred\"~e.14))))", [[0, 4], [5, 7], [8, 11], [12, 16], [17, 22], [23, 26], [27, 35], [35, 36], [37, 40], [41, 45], [46, 48], [49, 52], [53, 56], [57, 62], [63, 67], [68, 70], [70, 73], [74, 76], [77, 79], [79, 80]]], ["# ::snt I know which book Mag read, and which book Bob said that you hadn't.\n# ::tokens [\"I\", \"know\", \"which\", \"book\", \"Mag\", \"read\", \",\", \"and\", \"which\", \"book\", \"Bob\", \"said\", \"that\", \"you\", \"had\", \"n't\", \".\"]\n# ::lemmas [\"i\", \"know\", \"which\", \"book\", \"Mag\", \"read\", \",\", \"and\", \"which\", \"book\", \"Bob\", \"say\", \"that\", \"you\", \"have\", \"not\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1 4-1.2.1.1.1.1.1 5-1.2.1.1 7-1.2 9-1.2.2 10-1.2.2.1.2.1.1 11-1.2.2.1.3\n(k / know-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (a / and~e.7\n            :op1 (b / book~e.3\n                    :ARG1-of (r / read-01~e.5\n                                :ARG0 (p / person\n                                         :name (n / name\n                                                  :op1 \"Mag\"~e.4))))\n            :op2 (b2 / book~e.9\n                     :ARG1-of (r2 / read-01\n                                  :polarity -\n                                  :ARG0 (p2 / person\n                                            :name (n2 / name\n                                                      :op1 \"Bob\"~e.10))\n                                  :ARG1-of (s / say-01~e.11\n                                              :ARG0 p2)))))", [[0, 1], [2, 6], [7, 12], [13, 17], [18, 21], [22, 26], [26, 27], [28, 31], [32, 37], [38, 42], [43, 46], [47, 51], [52, 56], [57, 60], [61, 64], [64, 67], [67, 68]]], ["# ::snt I know which book Mag read, and which book Bob read my report that you hadn't.\n# ::tokens [\"I\", \"know\", \"which\", \"book\", \"Mag\", \"read\", \",\", \"and\", \"which\", \"book\", \"Bob\", \"read\", \"my\", \"report\", \"that\", \"you\", \"had\", \"n't\", \".\"]\n# ::lemmas [\"i\", \"know\", \"which\", \"book\", \"Mag\", \"read\", \",\", \"and\", \"which\", \"book\", \"Bob\", \"read\", \"my\", \"report\", \"that\", \"you\", \"have\", \"not\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1 4-1.2.1.1.1.1.1 5-1.2.1.1 7-1.2 9-1.2.2 10-1.2.2.1.2.1.1 11-1.2.2.1 13-1.2.2.1.3 15-1.2.2.2.1\n(k / know-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (a / and~e.7\n            :op1 (b / book~e.3\n                    :ARG1-of (r / read-01~e.5\n                                :ARG0 (p / person\n                                         :name (n / name\n                                                  :op1 \"Mag\"~e.4))))\n            :op2 (b2 / book~e.9\n                     :ARG1-of (r2 / read-01~e.11\n                                  :polarity -\n                                  :ARG0 (p2 / person\n                                            :name (n2 / name\n                                                      :op1 \"Bob\"~e.10))\n                                  :ARG1-of (r3 / report-01~e.13\n                                               :ARG0 ii))\n                     :ARG1-of (r4 / read-01\n                                  :ARG0 (y / you~e.15)))))", [[0, 1], [2, 6], [7, 12], [13, 17], [18, 21], [22, 26], [26, 27], [28, 31], [32, 37], [38, 42], [43, 46], [47, 51], [52, 54], [55, 61], [62, 66], [67, 70], [71, 74], [74, 77], [77, 78]]], ["# ::snt I'm sure I would like him to eat fruit more than I would cookies.\n# ::tokens [\"I\", \"'m\", \"sure\", \"I\", \"would\", \"like\", \"him\", \"to\", \"eat\", \"fruit\", \"more\", \"than\", \"I\", \"would\", \"cookies\", \".\"]\n# ::lemmas [\"i\", \"be\", \"sure\", \"i\", \"would\", \"like\", \"he\", \"to\", \"eat\", \"fruit\", \"more\", \"than\", \"i\", \"would\", \"cookie\", \".\"]\n# ::alignments 0-1.1 2-1 5-1.2 6-1.2.2.1 8-1.2.2 9-1.2.2.2 10-1.2.2.3.1 14-1.2.2.3.2.2\n(s / sure-02~e.2\n   :ARG0 (ii / i~e.0)\n   :ARG1 (l / like-02~e.5\n            :ARG0 ii\n            :ARG1 (e / eat-01~e.8\n                     :ARG0 (h / he~e.6)\n                     :ARG1 (f / fruit~e.9)\n                     :ARG1-of (h2 / have-quant-91\n                                  :ARG3 (m / more~e.10)\n                                  :ARG4 (e2 / eat-01\n                                            :ARG0 ii\n                                            :ARG1 (c / cookie~e.14))))))", [[0, 1], [1, 3], [4, 8], [9, 10], [11, 16], [17, 21], [22, 25], [26, 28], [29, 32], [33, 38], [39, 43], [44, 48], [49, 50], [51, 56], [57, 64], [64, 65]]], ["# ::snt Rusty talked about himself only after Mary did talk about him.\n# ::tokens [\"Rusty\", \"talked\", \"about\", \"himself\", \"only\", \"after\", \"Mary\", \"did\", \"talk\", \"about\", \"him\", \".\"]\n# ::lemmas [\"Rusty\", \"talk\", \"about\", \"himself\", \"only\", \"after\", \"Mary\", \"do\", \"talk\", \"about\", \"he\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.3.2 5-1.3 6-1.3.1.1.1.1 8-1.3.1\n(t / talk-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rusty\"~e.0))\n   :ARG1 p\n   :time (a / after~e.5\n            :op1 (t2 / talk-01~e.8\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Mary\"~e.6))\n                     :ARG1 p)\n            :mod (o / only~e.4)))", [[0, 5], [6, 12], [13, 18], [19, 26], [27, 31], [32, 37], [38, 42], [43, 46], [47, 51], [52, 57], [58, 61], [61, 62]]], ["# ::snt Fred talked about everything before Rusty did talk about something.\n# ::tokens [\"Fred\", \"talked\", \"about\", \"everything\", \"before\", \"Rusty\", \"did\", \"talk\", \"about\", \"something\", \".\"]\n# ::lemmas [\"Fred\", \"talk\", \"about\", \"everything\", \"before\", \"Rusty\", \"do\", \"talk\", \"about\", \"something\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 4-1.3 5-1.3.1.1.1.1 7-1.3.1 9-1.3.1.2\n(t / talk-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fred\"~e.0))\n   :ARG1 (e / everything~e.3)\n   :time (b / before~e.4\n            :op1 (t2 / talk-01~e.7\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Rusty\"~e.5))\n                     :ARG1 (s / something~e.9))))", [[0, 4], [5, 11], [12, 17], [18, 28], [29, 35], [36, 41], [42, 45], [46, 50], [51, 56], [57, 66], [66, 67]]], ["# ::snt John often meets Mary.\n# ::tokens [\"John\", \"often\", \"meets\", \"Mary\", \".\"]\n# ::lemmas [\"John\", \"often\", \"meet\", \"Mary\", \".\"]\n# ::alignments 0-1.1.1.1 1-1.3 2-1 3-1.2.1.1\n(m / meet-02~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Mary\"~e.3))\n   :frequency (o / often~e.1))", [[0, 4], [5, 10], [11, 16], [17, 21], [21, 22]]], ["# ::snt The problem perceives easily.\n# ::tokens [\"The\", \"problem\", \"perceives\", \"easily\", \".\"]\n# ::lemmas [\"the\", \"problem\", \"perceive\", \"easily\", \".\"]\n# ::alignments 1-1.1 2-1\n(p / perceive-01~e.2\n   :ARG1 (p2 / problem~e.1)\n   :ARG1-of (e / easy-05))", [[0, 3], [4, 11], [12, 21], [22, 28], [28, 29]]], ["# ::snt A hundred men surrounded the fort.\n# ::tokens [\"A\", \"hundred\", \"men\", \"surrounded\", \"the\", \"fort\", \".\"]\n# ::lemmas [\"A\", \"hundred\", \"man\", \"surround\", \"the\", \"fort\", \".\"]\n# ::alignments 1-1.1.1 2-1.1 3-1 5-1.2\n(s / surround-01~e.3\n   :ARG1 (m / man~e.2\n            :quant 100~e.1)\n   :ARG2 (f / fort~e.5))", [[0, 1], [2, 9], [10, 13], [14, 24], [25, 28], [29, 33], [33, 34]]], ["# ::snt We elected me.\n# ::tokens [\"We\", \"elected\", \"me\", \".\"]\n# ::lemmas [\"we\", \"elect\", \"i\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2\n(e / elect-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (ii / i~e.2))", [[0, 2], [3, 10], [11, 13], [13, 14]]], ["# ::snt Which report that John was incompetent did he submit?\n# ::tokens [\"Which\", \"report\", \"that\", \"John\", \"was\", \"incompetent\", \"did\", \"he\", \"submit\", \"?\"]\n# ::lemmas [\"which\", \"report\", \"that\", \"John\", \"be\", \"incompetent\", \"do\", \"he\", \"submit\", \"?\"]\n# ::alignments 1-1.2 3-1.2.1.2.1.1 5-1.2.1 7-1.1 8-1\n(s / submit-01~e.8\n   :ARG0 (h / he~e.7)\n   :ARG1 (r / report-01~e.1\n            :ARG1 (c / competent-01~e.5\n                     :polarity -\n                     :ARG1 (p / person\n                              :name (n / name\n                                       :op1 \"John\"~e.3)))\n            :mod (a / amr-unknown)))", [[0, 5], [6, 12], [13, 17], [18, 22], [23, 26], [27, 38], [39, 42], [43, 45], [46, 52], [52, 53]]], ["# ::snt Mary has always preferred lemons to limes.\n# ::tokens [\"Mary\", \"has\", \"always\", \"preferred\", \"lemons\", \"to\", \"limes\", \".\"]\n# ::lemmas [\"Mary\", \"have\", \"always\", \"prefer\", \"lemon\", \"to\", \"lime\", \".\"]\n# ::alignments 0-1.1.1.1 2-1.4 3-1 4-1.2 6-1.3\n(p / prefer-01~e.3\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Mary\"~e.0))\n   :ARG1 (l / lemon~e.4)\n   :ARG2 (l2 / limes~e.6)\n   :time (a / always~e.2))", [[0, 4], [5, 8], [9, 15], [16, 25], [26, 32], [33, 35], [36, 41], [41, 42]]], ["# ::snt He let the cats which were whining out.\n# ::tokens [\"He\", \"let\", \"the\", \"cats\", \"which\", \"were\", \"whining\", \"out\", \".\"]\n# ::lemmas [\"he\", \"let\", \"the\", \"cat\", \"which\", \"be\", \"whine\", \"out\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1 6-1.2 7-1.2.2\n(l / let-01~e.1\n   :ARG0 (h / he~e.0)\n   :ARG1 (w / whine-01~e.6\n            :ARG0 (c / cat~e.3)\n            :direction (o / out~e.7)))", [[0, 2], [3, 6], [7, 10], [11, 15], [16, 21], [22, 26], [27, 34], [35, 38], [38, 39]]], ["# ::snt What did Bill buy?\n# ::tokens [\"What\", \"did\", \"Bill\", \"buy\", \"?\"]\n# ::lemmas [\"what\", \"do\", \"Bill\", \"buy\", \"?\"]\n# ::alignments 2-1.1.1.1 3-1\n(b / buy-01~e.3\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bill\"~e.2))\n   :ARG1 (a / amr-unknown))", [[0, 4], [5, 8], [9, 13], [14, 17], [17, 18]]], ["# ::snt Mary saw the boy walking toward the railroad station.\n# ::tokens [\"Mary\", \"saw\", \"the\", \"boy\", \"walking\", \"toward\", \"the\", \"railroad\", \"station\", \".\"]\n# ::lemmas [\"Mary\", \"see\", \"the\", \"boy\", \"walk\", \"toward\", \"the\", \"railroad\", \"station\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1 4-1.2 7-1.2.2.1 8-1.2.2\n(s / see-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mary\"~e.0))\n   :ARG1 (w / walk-01~e.4\n            :ARG0 (b / boy~e.3)\n            :ARG2 (s2 / station~e.8\n                      :mod (r / railroad~e.7))))", [[0, 4], [5, 8], [9, 12], [13, 16], [17, 24], [25, 31], [32, 35], [36, 44], [45, 52], [52, 53]]], ["# ::snt A proof that the claim had been. made was giver that John had lied.\n# ::tokens [\"A\", \"proof\", \"that\", \"the\", \"claim\", \"had\", \"been\", \".\", \"made\", \"was\", \"giver\", \"that\", \"John\", \"had\", \"lied\", \".\"]\n# ::lemmas [\"a\", \"proof\", \"that\", \"the\", \"claim\", \"have\", \"be\", \".\", \"make\", \"be\", \"giver\", \"that\", \"John\", \"have\", \"lie\", \".\"]\n# ::alignments 4-1.1.1 12-1.2.1.1.1 14-1.2\n(p / prove-01\n   :ARG0 (t / thing\n            :ARG1-of (c / claim-01~e.4))\n   :ARG1 (l / lie-08~e.14\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"John\"~e.12))))", [[0, 1], [2, 7], [8, 12], [13, 16], [17, 22], [23, 26], [27, 31], [31, 32], [33, 37], [38, 41], [42, 47], [48, 52], [53, 57], [58, 61], [62, 66], [66, 67]]], ["# ::snt He attributed to a short circuit which was caused by an overloaded transducer the fire which destroyed most of my factory.\n# ::tokens [\"He\", \"attributed\", \"to\", \"a\", \"short\", \"circuit\", \"which\", \"was\", \"caused\", \"by\", \"an\", \"overloaded\", \"transducer\", \"the\", \"fire\", \"which\", \"destroyed\", \"most\", \"of\", \"my\", \"factory\", \".\"]\n# ::lemmas [\"he\", \"attribute\", \"to\", \"a\", \"short\", \"circuit\", \"which\", \"be\", \"cause\", \"by\", \"an\", \"overloaded\", \"transducer\", \"the\", \"fire\", \"which\", \"destroy\", \"most\", \"of\", \"my\", \"factory\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2.1 5-1.2 8-1.2.2 11-1.2.2.1.2 12-1.2.2.1.3 14-1.2.2.1 16-1.2.2.1.1 17-1.2.2.1.1.1.1.2 18-1.2.2.1.1.1.1 20-1.2.2.1.1.1\n(a / attribute-01~e.1\n   :ARG0 (h / he~e.0)\n   :ARG1 (c / circuit~e.5\n            :ARG1-of (s / short-07~e.4)\n            :ARG1-of (c2 / cause-01~e.8\n                         :ARG0 (f / fire~e.14\n                                  :ARG0-of (d / destroy-01~e.16\n                                              :ARG1 (f2 / factory~e.20\n                                                        :ARG1-of (ii / include-91~e.18\n                                                                     :ARG2 (f3 / factory\n                                                                               :poss (ii2 / i))\n                                                                     :ARG3 (m / most~e.17))))\n                                  :ARG1-of (o / overload-01~e.11)\n                                  :ARG0-of (t / transducer-01~e.12)))))", [[0, 2], [3, 13], [14, 16], [17, 18], [19, 24], [25, 32], [33, 38], [39, 42], [43, 49], [50, 52], [53, 55], [56, 66], [67, 77], [78, 81], [82, 86], [87, 92], [93, 102], [103, 107], [108, 110], [111, 113], [114, 121], [121, 122]]], ["# ::snt The mayor regarded as being absurd the proposal to build a sidewalk from Dartmouth to Smith.\n# ::tokens [\"The\", \"mayor\", \"regarded\", \"as\", \"being\", \"absurd\", \"the\", \"proposal\", \"to\", \"build\", \"a\", \"sidewalk\", \"from\", \"Dartmouth\", \"to\", \"Smith\", \".\"]\n# ::lemmas [\"the\", \"mayor\", \"regard\", \"as\", \"be\", \"absurd\", \"the\", \"proposal\", \"to\", \"build\", \"a\", \"sidewalk\", \"from\", \"Dartmouth\", \"to\", \"Smith\", \".\"]\n# ::alignments 1-1.1.1.1 2-1 5-1.3 7-1.2 9-1.2.1 11-1.2.1.1 13-1.2.1.2.1.1 15-1.2.1.3.1.1\n(r / regard-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                        :ARG2 (m / mayor~e.1)))\n   :ARG1 (p2 / propose-01~e.7\n             :ARG1 (b / build-01~e.9\n                      :ARG1 (s / sidewalk~e.11)\n                      :source (u / university\n                                 :name (n / name\n                                          :op1 \"Dartmouth\"~e.13))\n                      :destination (u2 / university\n                                       :name (n2 / name\n                                                 :op1 \"Smith\"~e.15))))\n   :ARG2 (a / absurd~e.5))", [[0, 3], [4, 9], [10, 18], [19, 21], [22, 27], [28, 34], [35, 38], [39, 47], [48, 50], [51, 56], [57, 58], [59, 67], [68, 72], [73, 82], [83, 85], [86, 91], [91, 92]]], ["# ::snt I want that Bill left to remain a secret.\n# ::tokens [\"I\", \"want\", \"that\", \"Bill\", \"left\", \"to\", \"remain\", \"a\", \"secret\", \".\"]\n# ::lemmas [\"i\", \"want\", \"that\", \"Bill\", \"leave\", \"to\", \"remain\", \"a\", \"secret\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1.1.1.1 4-1.2 6-1.2.1 8-1.2.1.2\n(w / want-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (l / leave-17~e.4\n            :ARG1 (r / remain-01~e.6\n                     :ARG1 (p / person\n                              :name (n / name\n                                       :op1 \"Bill\"~e.3))\n                     :ARG3 (s / secret~e.8))))", [[0, 1], [2, 6], [7, 11], [12, 16], [17, 21], [22, 24], [25, 31], [32, 33], [34, 40], [40, 41]]], ["# ::snt I know a man who Tom drives as drives.\n# ::tokens [\"I\", \"know\", \"a\", \"man\", \"who\", \"Tom\", \"drives\", \"as\", \"drives\", \".\"]\n# ::lemmas [\"i\", \"know\", \"a\", \"man\", \"who\", \"Tom\", \"drive\", \"as\", \"drive\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 5-1.2.1.1.1.1.1 6-1.2.1 8-1.2.1.1\n(k / know-02~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (m / man~e.3\n            :ARG0-of (d / drive-01~e.6\n                        :ARG1-of (d2 / drive-01~e.8\n                                     :ARG0 (p / person\n                                              :name (n / name\n                                                       :op1 \"Tom\"~e.5))))))", [[0, 1], [2, 6], [7, 8], [9, 12], [13, 16], [17, 20], [21, 27], [28, 30], [31, 37], [37, 38]]], ["# ::snt Drowning cats, which is against the law, are hard to rescue.\n# ::tokens [\"Drowning\", \"cats\", \",\", \"which\", \"is\", \"against\", \"the\", \"law\", \",\", \"are\", \"hard\", \"to\", \"rescue\", \".\"]\n# ::lemmas [\"drown\", \"cat\", \",\", \"which\", \"be\", \"against\", \"the\", \"law\", \",\", \"be\", \"hard\", \"to\", \"rescue\", \".\"]\n# ::alignments 0-1.1.1.1 1-1.1.1 5-1.1.1.1.1 7-1.1.1.1.1.1 10-1 12-1.1\n(h / hard-02~e.10\n   :ARG1 (r / rescue-01~e.12\n            :ARG1 (c / cat~e.1\n                     :ARG1-of (d / drown-02~e.0\n                                 :manner (a / against~e.5\n                                            :op1 (l / law~e.7))))))", [[0, 8], [9, 13], [13, 14], [15, 20], [21, 23], [24, 31], [32, 35], [36, 39], [39, 40], [41, 44], [45, 49], [50, 52], [53, 59], [59, 60]]], ["# ::snt Muriel said nothing else than that she had been insulted.\n# ::tokens [\"Muriel\", \"said\", \"nothing\", \"else\", \"than\", \"that\", \"she\", \"had\", \"been\", \"insulted\", \".\"]\n# ::lemmas [\"Muriel\", \"say\", \"nothing\", \"else\", \"than\", \"that\", \"she\", \"have\", \"be\", \"insult\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2 3-1.2.1 9-1.2.2.1\n(s / say-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Muriel\"~e.0))\n   :ARG1 (n2 / nothing~e.2\n             :mod (e / else~e.3)\n             :ARG2-of (e2 / except-01\n                          :ARG1 (ii / insult-01~e.9\n                                    :ARG1 p))))", [[0, 6], [7, 11], [12, 19], [20, 24], [25, 29], [30, 34], [35, 38], [39, 42], [43, 47], [48, 56], [56, 57]]], ["# ::snt Himself is understood by Rutherford.\n# ::tokens [\"Himself\", \"is\", \"understood\", \"by\", \"Rutherford\", \".\"]\n# ::lemmas [\"himself\", \"be\", \"understand\", \"by\", \"Rutherford\", \".\"]\n# ::alignments 2-1 4-1.1.1.1\n(u / understand-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Rutherford\"~e.4))\n   :ARG1 p)", [[0, 7], [8, 10], [11, 21], [22, 24], [25, 35], [35, 36]]], ["# ::snt I feel that Arch will show up.\n# ::tokens [\"I\", \"feel\", \"that\", \"Arch\", \"will\", \"show\", \"up\", \".\"]\n# ::lemmas [\"i\", \"feel\", \"that\", \"Arch\", \"will\", \"show\", \"up\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1.1.1 5-1.2\n(f / feel-02~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (s / show-up-02~e.5\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Arch\"~e.3))))", [[0, 1], [2, 6], [7, 11], [12, 16], [17, 21], [22, 26], [27, 29], [29, 30]]], ["# ::snt The proof this set is recursive is difficult.\n# ::tokens [\"The\", \"proof\", \"this\", \"set\", \"is\", \"recursive\", \"is\", \"difficult\", \".\"]\n# ::lemmas [\"the\", \"proof\", \"this\", \"set\", \"be\", \"recursive\", \"be\", \"difficult\", \".\"]\n# ::alignments 2-1.1.1.1.1 3-1.1.1.1 5-1.1.1 7-1\n(d / difficult~e.7\n   :domain (p / prove-01\n              :ARG1 (r / recursive~e.5\n                       :domain (s / set~e.3\n                                  :mod (t / this~e.2)))))", [[0, 3], [4, 9], [10, 14], [15, 18], [19, 21], [22, 31], [32, 34], [35, 44], [44, 45]]], ["# ::snt The madrigals which Henry plays the lute and sings sound lousy.\n# ::tokens [\"The\", \"madrigals\", \"which\", \"Henry\", \"plays\", \"the\", \"lute\", \"and\", \"sings\", \"sound\", \"lousy\", \".\"]\n# ::lemmas [\"the\", \"madrigal\", \"which\", \"Henry\", \"play\", \"the\", \"lute\", \"and\", \"sing\", \"sound\", \"lousy\", \".\"]\n# ::alignments 1-1.1 3-1.1.1.1.1.1 4-1.1.1 6-1.1.1.2 8-1.1.2 9-1 10-1.2\n(s / sound-01~e.9\n   :ARG1 (m / madrigal~e.1\n            :ARG2-of (p / play-11~e.4\n                        :ARG0 (p2 / person\n                                  :name (n / name\n                                           :op1 \"Henry\"~e.3))\n                        :ARG1 (l / lute~e.6))\n            :ARG2-of (s2 / sing-01~e.8\n                         :ARG0 p2))\n   :ARG2 (l2 / lousy~e.10))", [[0, 3], [4, 13], [14, 19], [20, 25], [26, 31], [32, 35], [36, 40], [41, 44], [45, 50], [51, 56], [57, 62], [62, 63]]], ["# ::snt Tom picked these grapes, and I washed some turnips, and Suzie will prepare these grapes.\n# ::tokens [\"Tom\", \"picked\", \"these\", \"grapes\", \",\", \"and\", \"I\", \"washed\", \"some\", \"turnips\", \",\", \"and\", \"Suzie\", \"will\", \"prepare\", \"these\", \"grapes\", \".\"]\n# ::lemmas [\"Tom\", \"pick\", \"these\", \"grape\", \",\", \"and\", \"i\", \"wash\", \"some\", \"turnip\", \",\", \"and\", \"Suzie\", \"will\", \"prepare\", \"these\", \"grape\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 3-1.1.2 5-1 6-1.2.1 7-1.2 8-1.2.2.1 9-1.2.2 12-1.3.1.1.1 14-1.3 16-1.3.2\n(a / and~e.5\n   :op1 (p / pick-01~e.1\n           :ARG0 (p2 / person\n                     :name (n / name\n                              :op1 \"Tom\"~e.0))\n           :ARG1 (g / grape~e.3\n                    :mod (t / this)))\n   :op2 (w / wash-01~e.7\n           :ARG0 (ii / i~e.6)\n           :ARG1 (t2 / turnip~e.9\n                     :quant (s / some~e.8)))\n   :op3 (p3 / prepare-01~e.14\n            :ARG0 (p4 / person\n                      :name (n2 / name\n                                :op1 \"Suzie\"~e.12))\n            :ARG1 (g2 / grape~e.16\n                      :mod (t3 / this))))", [[0, 3], [4, 10], [11, 16], [17, 23], [23, 24], [25, 28], [29, 30], [31, 37], [38, 42], [43, 50], [50, 51], [52, 55], [56, 61], [62, 66], [67, 74], [75, 80], [81, 87], [87, 88]]], ["# ::snt Where did you go and who ate what?\n# ::tokens [\"Where\", \"did\", \"you\", \"go\", \"and\", \"who\", \"ate\", \"what\", \"?\"]\n# ::lemmas [\"where\", \"do\", \"you\", \"go\", \"and\", \"who\", \"eat\", \"what\", \"?\"]\n# ::alignments 2-1.1.1 3-1.1 4-1 6-1.2\n(a / and~e.4\n   :op1 (g / go-02~e.3\n           :ARG0 (y / you~e.2)\n           :ARG4 (a2 / amr-unknown))\n   :op2 (e / eat-01~e.6\n           :ARG0 (a3 / amr-unknown)\n           :ARG1 (a4 / amr-unknown)))", [[0, 5], [6, 9], [10, 13], [14, 16], [17, 20], [21, 24], [25, 28], [29, 33], [33, 34]]], ["# ::snt Which boy's did we elect guardian's employer president?\n# ::tokens [\"Which\", \"boy\", \"'s\", \"did\", \"we\", \"elect\", \"guardian\", \"'s\", \"employer\", \"president\", \"?\"]\n# ::lemmas [\"which\", \"boy\", \"be\", \"do\", \"we\", \"elect\", \"guardian\", \"'s\", \"employer\", \"president\", \"?\"]\n# ::alignments 1-1.2 4-1.1 5-1 6-1.3.1.1.1.1 8-1.3.1.1.1 9-1.3\n(e / elect-01~e.5\n   :ARG0 (w / we~e.4)\n   :ARG1 (b / boy~e.1\n            :mod (a / amr-unknown))\n   :ARG2 (p / president~e.9\n            :ARG2-of (h / have-org-role-91\n                        :ARG0 (p2 / person\n                                  :ARG0-of (e2 / employ-01~e.8\n                                               :ARG1 (g / guardian~e.6))))))", [[0, 5], [6, 9], [9, 11], [12, 15], [16, 18], [19, 24], [25, 33], [33, 35], [36, 44], [45, 54], [54, 55]]], ["# ::snt How sane is Peter?\n# ::tokens [\"How\", \"sane\", \"is\", \"Peter\", \"?\"]\n# ::lemmas [\"how\", \"sane\", \"be\", \"Peter\", \"?\"]\n# ::alignments 1-1 3-1.1.1.1\n(s / sane~e.1\n   :domain (p / person\n              :name (n / name\n                       :op1 \"Peter\"~e.3))\n   :degree (a / amr-unknown))", [[0, 3], [4, 8], [9, 11], [12, 17], [17, 18]]], ["# ::snt I live at the place where Route 150 crosses the River and my dad lives at the place where Route 150 crosses the Hudson River too.\n# ::tokens [\"I\", \"live\", \"at\", \"the\", \"place\", \"where\", \"Route\", \"150\", \"crosses\", \"the\", \"River\", \"and\", \"my\", \"dad\", \"lives\", \"at\", \"the\", \"place\", \"where\", \"Route\", \"150\", \"crosses\", \"the\", \"Hudson\", \"River\", \"too\", \".\"]\n# ::lemmas [\"i\", \"live\", \"at\", \"the\", \"place\", \"where\", \"Route\", \"150\", \"crosse\", \"the\", \"River\", \"and\", \"my\", \"dad\", \"live\", \"at\", \"the\", \"place\", \"where\", \"Route\", \"150\", \"crosse\", \"the\", \"Hudson\", \"River\", \"too\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 4-1.1.2 6-1.1.2.1.1 7-1.1.2.1.1.1 8-1.1.2.1 10-1.1.2.1.2 11-1 13-1.2.1.1.2 14-1.2 17-1.2.2 21-1.2.2.1 23-1.2.2.1.2.1.1 24-1.1.2.1.2.1.1 25-1.2.2.1.3\n(a / and~e.11\n   :op1 (l / live-01~e.1\n           :ARG0 (ii / i~e.0)\n           :location (p / place~e.4\n                        :location-of (c / cross-02~e.8\n                                        :ARG0 (r / Route~e.6\n                                                 :mod 150~e.7)\n                                        :ARG1 (r2 / river~e.10\n                                                  :name (n / name\n                                                           :op1 \"River\"~e.24)))))\n   :op2 (l2 / live-01~e.14\n            :ARG0 (p2 / person\n                      :ARG0-of (h / have-rel-role-91\n                                  :ARG1 ii\n                                  :ARG2 (d / dad~e.13)))\n            :location (p3 / place~e.17\n                          :location-of (c2 / cross-02~e.21\n                                           :ARG0 r\n                                           :ARG1 (r3 / river\n                                                     :name (n2 / name\n                                                               :op1 \"Hudson\"~e.23\n                                                               :op2 \"River\"))\n                                           :mod (t / too~e.25)))))", [[0, 1], [2, 6], [7, 9], [10, 13], [14, 19], [20, 25], [26, 31], [32, 35], [36, 43], [44, 47], [48, 53], [54, 57], [58, 60], [61, 64], [65, 70], [71, 73], [74, 77], [78, 83], [84, 89], [90, 95], [96, 99], [100, 107], [108, 111], [112, 118], [119, 124], [125, 128], [128, 129]]], ["# ::snt I live at the place where Route 150 crosses the Hudson River and my dad lives at it too.\n# ::tokens [\"I\", \"live\", \"at\", \"the\", \"place\", \"where\", \"Route\", \"150\", \"crosses\", \"the\", \"Hudson\", \"River\", \"and\", \"my\", \"dad\", \"lives\", \"at\", \"it\", \"too\", \".\"]\n# ::lemmas [\"i\", \"live\", \"at\", \"the\", \"place\", \"where\", \"Route\", \"150\", \"crosse\", \"the\", \"Hudson\", \"River\", \"and\", \"my\", \"dad\", \"live\", \"at\", \"it\", \"too\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 4-1.1.2 6-1.1.2.1.1.1.1 7-1.1.2.1.1.1.2 8-1.1.2.1 10-1.1.2.1.2.1.1 11-1.1.2.1.2 12-1 14-1.2.1.1.2 15-1.2 18-1.2.3\n(a / and~e.12\n   :op1 (l / live-01~e.1\n           :ARG0 (ii / i~e.0)\n           :location (p / place~e.4\n                        :location-of (c / cross-02~e.8\n                                        :ARG0 (r / road\n                                                 :name (n / name\n                                                          :op1 \"Route\"~e.6\n                                                          :op2 150~e.7))\n                                        :ARG1 (r2 / river~e.11\n                                                  :name (n2 / name\n                                                            :op1 \"Hudson\"~e.10\n                                                            :op2 \"River\")))))\n   :op2 (l2 / live-01~e.15\n            :ARG0 (p2 / person\n                      :ARG0-of (h / have-rel-role-91\n                                  :ARG1 ii\n                                  :ARG2 (d / dad~e.14)))\n            :location p\n            :mod (t / too~e.18)))", [[0, 1], [2, 6], [7, 9], [10, 13], [14, 19], [20, 25], [26, 31], [32, 35], [36, 43], [44, 47], [48, 54], [55, 60], [61, 64], [65, 67], [68, 71], [72, 77], [78, 80], [81, 83], [84, 87], [87, 88]]], ["# ::snt Who is she trying to make up to now?\n# ::tokens [\"Who\", \"is\", \"she\", \"trying\", \"to\", \"make\", \"up\", \"to\", \"now\", \"?\"]\n# ::lemmas [\"who\", \"be\", \"she\", \"try\", \"to\", \"make\", \"up\", \"to\", \"now\", \"?\"]\n# ::alignments 2-1.1 3-1 5-1.2 8-1.2.3\n(t / try-01~e.3\n   :ARG0 (s / she~e.2)\n   :ARG1 (m / make-up-10~e.5\n            :ARG0 s\n            :ARG1 (a / amr-unknown)\n            :time (n / now~e.8)))", [[0, 3], [4, 6], [7, 10], [11, 17], [18, 20], [21, 25], [26, 28], [29, 31], [32, 35], [35, 36]]], ["# ::snt Wind was gotten of a plot to negotiate an honorable end to the war in Vietnam.\n# ::tokens [\"Wind\", \"was\", \"gotten\", \"of\", \"a\", \"plot\", \"to\", \"negotiate\", \"an\", \"honorable\", \"end\", \"to\", \"the\", \"war\", \"in\", \"Vietnam\", \".\"]\n# ::lemmas [\"wind\", \"be\", \"get\", \"of\", \"a\", \"plot\", \"to\", \"negotiate\", \"an\", \"honorable\", \"end\", \"to\", \"the\", \"war\", \"in\", \"Vietnam\", \".\"]\n# ::alignments 0-1.1 2-1 5-1.2 7-1.2.1 9-1.2.1.1.2 10-1.2.1.1 13-1.2.1.1.1 15-1.2.1.1.1.1.1.1\n(g / get-01~e.2\n   :ARG1 (w / wind~e.0)\n   :ARG2 (p / plot-01~e.5\n            :ARG1 (n / negotiate-01~e.7\n                     :ARG2 (e / end-01~e.10\n                              :ARG1 (w2 / war~e.13\n                                        :location (c / country\n                                                     :name (n2 / name\n                                                               :op1 \"Vietnam\"~e.15)))\n                              :ARG1-of (h / honorable-03~e.9)))))", [[0, 4], [5, 8], [9, 15], [16, 18], [19, 20], [21, 25], [26, 28], [29, 38], [39, 41], [42, 51], [52, 55], [56, 58], [59, 62], [63, 66], [67, 69], [70, 77], [77, 78]]], ["# ::snt Mike talked about politics yesterday to my friends.\n# ::tokens [\"Mike\", \"talked\", \"about\", \"politics\", \"yesterday\", \"to\", \"my\", \"friends\", \".\"]\n# ::lemmas [\"Mike\", \"talk\", \"about\", \"politic\", \"yesterday\", \"to\", \"my\", \"friend\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 4-1.4 7-1.3.1.2\n(t / talk-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mike\"~e.0))\n   :ARG1 (p2 / politics~e.3)\n   :ARG2 (p3 / person\n             :ARG0-of (h / have-rel-role-91\n                         :ARG1 (ii / i)\n                         :ARG2 (f / friend~e.7)))\n   :time (y / yesterday~e.4))", [[0, 4], [5, 11], [12, 17], [18, 26], [27, 36], [37, 39], [40, 42], [43, 50], [50, 51]]], ["# ::snt It was expected by the reporters that the principal would fire some teacher.\n# ::tokens [\"It\", \"was\", \"expected\", \"by\", \"the\", \"reporters\", \"that\", \"the\", \"principal\", \"would\", \"fire\", \"some\", \"teacher\", \".\"]\n# ::lemmas [\"it\", \"be\", \"expect\", \"by\", \"the\", \"reporter\", \"that\", \"the\", \"principal\", \"would\", \"fire\", \"some\", \"teacher\", \".\"]\n# ::alignments 2-1 5-1.1.1 8-1.2.1 10-1.2 11-1.2.2.2 12-1.2.2.1\n(e / expect-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (r / report-01~e.5))\n   :ARG1 (f / fire-02~e.10\n            :ARG0 (p2 / principal~e.8)\n            :ARG1 (p3 / person\n                      :ARG0-of (t / teach-01~e.12)\n                      :mod (s / some~e.11))))", [[0, 2], [3, 6], [7, 15], [16, 18], [19, 22], [23, 32], [33, 37], [38, 41], [42, 51], [52, 57], [58, 62], [63, 67], [68, 75], [75, 76]]], ["# ::snt Which hat did Mike quip that she never wore?\n# ::tokens [\"Which\", \"hat\", \"did\", \"Mike\", \"quip\", \"that\", \"she\", \"never\", \"wore\", \"?\"]\n# ::lemmas [\"which\", \"hat\", \"do\", \"Mike\", \"quip\", \"that\", \"she\", \"never\", \"wear\", \"?\"]\n# ::alignments 1-1.2.3 3-1.1.1.1 4-1 6-1.2.2 8-1.2\n(q / quip-01~e.4\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mike\"~e.3))\n   :ARG1 (w / wear-01~e.8\n            :polarity -\n            :ARG0 (s / she~e.6)\n            :ARG1 (h / hat~e.1\n                     :mod (a / amr-unknown))\n            :time (e / ever)))", [[0, 5], [6, 9], [10, 13], [14, 18], [19, 23], [24, 28], [29, 32], [33, 38], [39, 43], [43, 44]]], ["# ::snt Which girl did Mike quip never wore this hat?\n# ::tokens [\"Which\", \"girl\", \"did\", \"Mike\", \"quip\", \"never\", \"wore\", \"this\", \"hat\", \"?\"]\n# ::lemmas [\"which\", \"girl\", \"do\", \"Mike\", \"quip\", \"never\", \"wear\", \"this\", \"hat\", \"?\"]\n# ::alignments 1-1.5 3-1.2.1.1 4-1.2.1.2 6-1 7-1.3.1 8-1.3\n(w / wear-01~e.6\n   :polarity -\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mike\"~e.3\n                     :op2 \"Quip\"~e.4))\n   :ARG1 (h / hat~e.8\n            :mod (t / this~e.7))\n   :time (e / ever)\n   :mod (g / girl~e.1\n           :mod (a / amr-unknown)))", [[0, 5], [6, 10], [11, 14], [15, 19], [20, 24], [25, 30], [31, 35], [36, 40], [41, 44], [44, 45]]], ["# ::snt We donated wire for the convicts to build cages with.\n# ::tokens [\"We\", \"donated\", \"wire\", \"for\", \"the\", \"convicts\", \"to\", \"build\", \"cages\", \"with\", \".\"]\n# ::lemmas [\"we\", \"donate\", \"wire\", \"for\", \"the\", \"convict\", \"to\", \"build\", \"cage\", \"with\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2 5-1.3.1 7-1.4 8-1.4.2\n(d / donate-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (w2 / wire~e.2)\n   :ARG2 (p / person\n            :ARG1-of (c / convict-01~e.5))\n   :purpose (b / build-01~e.7\n               :ARG0 p\n               :ARG1 (c2 / cage~e.8)\n               :ARG4 w2))", [[0, 2], [3, 10], [11, 15], [16, 19], [20, 23], [24, 32], [33, 35], [36, 41], [42, 47], [48, 52], [52, 53]]], ["# ::snt I won't have some money.\n# ::tokens [\"I\", \"wo\", \"n't\", \"have\", \"some\", \"money\", \".\"]\n# ::lemmas [\"i\", \"will\", \"not\", \"have\", \"some\", \"money\", \".\"]\n# ::alignments 0-1.2 3-1 4-1.3.1 5-1.3\n(h / have-03~e.3\n   :polarity -\n   :ARG0 (ii / i~e.0)\n   :ARG1 (m / money~e.5\n            :quant (s / some~e.4)))", [[0, 1], [2, 4], [4, 7], [8, 12], [13, 17], [18, 23], [23, 24]]], ["# ::snt Do you believe the claim that somebody was looking for something?\n# ::tokens [\"Do\", \"you\", \"believe\", \"the\", \"claim\", \"that\", \"somebody\", \"was\", \"looking\", \"for\", \"something\", \"?\"]\n# ::lemmas [\"do\", \"you\", \"believe\", \"the\", \"claim\", \"that\", \"somebody\", \"be\", \"look\", \"for\", \"something\", \"?\"]\n# ::alignments 1-1.2 2-1 4-1.3 6-1.3.1.1 8-1.3.1 10-1.3.1.2\n(b / believe-01~e.2\n   :polarity (a / amr-unknown)\n   :ARG0 (y / you~e.1)\n   :ARG1 (c / claim-01~e.4\n            :ARG1 (l / look-01~e.8\n                     :ARG0 (s / somebody~e.6)\n                     :ARG1 (s2 / something~e.10))))", [[0, 2], [3, 6], [7, 14], [15, 18], [19, 24], [25, 29], [30, 38], [39, 42], [43, 50], [51, 54], [55, 64], [64, 65]]], ["# ::snt I won't ask you to believe that he tried to force me to give her any money.\n# ::tokens [\"I\", \"wo\", \"n't\", \"ask\", \"you\", \"to\", \"believe\", \"that\", \"he\", \"tried\", \"to\", \"force\", \"me\", \"to\", \"give\", \"her\", \"any\", \"money\", \".\"]\n# ::lemmas [\"i\", \"will\", \"not\", \"ask\", \"you\", \"to\", \"believe\", \"that\", \"he\", \"try\", \"to\", \"force\", \"i\", \"to\", \"give\", \"she\", \"any\", \"money\", \".\"]\n# ::alignments 0-1.2 3-1 4-1.3.1 6-1.3 8-1.3.2.1 9-1.3.2 11-1.3.2.2 14-1.3.2.2.3 15-1.3.2.2.3.3 16-1.3.2.2.3.2.1 17-1.3.2.2.3.2\n(a / ask-02~e.3\n   :polarity -\n   :ARG0 (ii / i~e.0)\n   :ARG1 (b / believe-01~e.6\n            :ARG0 (y / you~e.4)\n            :ARG1 (t / try-01~e.9\n                     :ARG0 (h / he~e.8)\n                     :ARG1 (f / force-01~e.11\n                              :ARG0 h\n                              :ARG1 ii\n                              :ARG2 (g / give-01~e.14\n                                       :ARG0 ii\n                                       :ARG1 (m / money~e.17\n                                                :mod (a2 / any~e.16))\n                                       :ARG2 (s / she~e.15)))))\n   :ARG2 y)", [[0, 1], [2, 4], [4, 7], [8, 11], [12, 15], [16, 18], [19, 26], [27, 31], [32, 34], [35, 40], [41, 43], [44, 49], [50, 52], [53, 55], [56, 60], [61, 64], [65, 68], [69, 74], [74, 75]]], ["# ::snt That Sam sometimes didn't sleep must have pleased somebody.\n# ::tokens [\"That\", \"Sam\", \"sometimes\", \"did\", \"n't\", \"sleep\", \"must\", \"have\", \"pleased\", \"somebody\", \".\"]\n# ::lemmas [\"that\", \"Sam\", \"sometimes\", \"do\", \"not\", \"sleep\", \"must\", \"have\", \"please\", \"somebody\", \".\"]\n# ::alignments 1-1.1.1.2.1.1 2-1.1.1.3 5-1.1.1 8-1.1 9-1.1.2\n(o / obligate-01\n   :ARG2 (p / please-01~e.8\n            :ARG0 (s / sleep-01~e.5\n                     :polarity -\n                     :ARG0 (p2 / person\n                               :name (n / name\n                                        :op1 \"Sam\"~e.1))\n                     :frequency (s2 / sometimes~e.2))\n            :ARG1 (s3 / somebody~e.9)))", [[0, 4], [5, 8], [9, 18], [19, 22], [22, 25], [26, 31], [32, 36], [37, 41], [42, 49], [50, 58], [58, 59]]], ["# ::snt I talked to Winston about himself.\n# ::tokens [\"I\", \"talked\", \"to\", \"Winston\", \"about\", \"himself\", \".\"]\n# ::lemmas [\"i\", \"talk\", \"to\", \"Winston\", \"about\", \"himself\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1.1\n(t / talk-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Winston\"~e.3))\n   :ARG2 p)", [[0, 1], [2, 8], [9, 11], [12, 19], [20, 25], [26, 33], [33, 34]]], ["# ::snt That the fuzz wanted him worried John, but that the fuzz wanted her didn't worry Mary.\n# ::tokens [\"That\", \"the\", \"fuzz\", \"wanted\", \"him\", \"worried\", \"John\", \",\", \"but\", \"that\", \"the\", \"fuzz\", \"wanted\", \"her\", \"did\", \"n't\", \"worry\", \"Mary\", \".\"]\n# ::lemmas [\"that\", \"the\", \"fuzz\", \"want\", \"he\", \"worry\", \"John\", \",\", \"but\", \"that\", \"the\", \"fuzz\", \"want\", \"she\", \"do\", \"not\", \"worry\", \"Mary\", \".\"]\n# ::alignments 2-1.1.1 3-1.1 4-1.1.2.1 5-1.1.2 6-1.1.2.2.1.1 8-1 12-1.2.2 13-1.2.2.2 16-1.2 17-1.2.3.1.1\n(c / contrast-01~e.8\n   :ARG1 (w / want-01~e.3\n            :ARG0 (f / fuzz~e.2)\n            :ARG1 (w2 / worry-01~e.5\n                      :ARG0 (h / he~e.4)\n                      :ARG1 (p / person\n                               :name (n / name\n                                        :op1 \"John\"~e.6))))\n   :ARG2 (w3 / worry-01~e.16\n             :polarity -\n             :ARG0 (w4 / want-01~e.12\n                       :ARG0 f\n                       :ARG1 (s / she~e.13))\n             :ARG1 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Mary\"~e.17))))", [[0, 4], [5, 8], [9, 13], [14, 20], [21, 24], [25, 32], [33, 37], [37, 38], [39, 42], [43, 47], [48, 51], [52, 56], [57, 63], [64, 67], [68, 71], [71, 74], [75, 80], [81, 85], [85, 86]]], ["# ::snt I'll work on it if Sam will be working on it.\n# ::tokens [\"I\", \"'ll\", \"work\", \"on\", \"it\", \"if\", \"Sam\", \"will\", \"be\", \"working\", \"on\", \"it\", \".\"]\n# ::lemmas [\"i\", \"will\", \"work\", \"on\", \"it\", \"if\", \"Sam\", \"will\", \"be\", \"work\", \"on\", \"it\", \".\"]\n# ::alignments 0-1.1 2-1 4-1.2 6-1.3.1.1.1 9-1.3\n(w / work-01~e.2\n   :ARG0 (ii / i~e.0)\n   :ARG1 (ii2 / it~e.4)\n   :condition (w2 / work-01~e.9\n                  :ARG0 (p / person\n                           :name (n / name\n                                    :op1 \"Sam\"~e.6))\n                  :ARG1 ii2))", [[0, 1], [1, 4], [5, 9], [10, 12], [13, 15], [16, 18], [19, 22], [23, 27], [28, 30], [31, 38], [39, 41], [42, 44], [44, 45]]], ["# ::snt I'll work on it if I can.\n# ::tokens [\"I\", \"'ll\", \"work\", \"on\", \"it\", \"if\", \"I\", \"can\", \".\"]\n# ::lemmas [\"i\", \"will\", \"work\", \"on\", \"it\", \"if\", \"i\", \"can\", \".\"]\n# ::alignments 0-1.1 2-1 4-1.2\n(w / work-01~e.2\n   :ARG0 (ii / i~e.0)\n   :ARG1 (ii2 / it~e.4)\n   :condition (p / possible-01)\n   :ARG1-of p)", [[0, 1], [1, 4], [5, 9], [10, 12], [13, 15], [16, 18], [19, 20], [21, 24], [24, 25]]], ["# ::snt Here's a knife with which for you to cut up the onions.\n# ::tokens [\"Here\", \"'s\", \"a\", \"knife\", \"with\", \"which\", \"for\", \"you\", \"to\", \"cut\", \"up\", \"the\", \"onions\", \".\"]\n# ::lemmas [\"here\", \"be\", \"a\", \"knife\", \"with\", \"which\", \"for\", \"you\", \"to\", \"cut\", \"up\", \"the\", \"onion\", \".\"]\n# ::alignments 0-1.1 3-1 7-1.2.1 12-1.2.2\n(k / knife~e.3\n   :location (h / here~e.0)\n   :instrument-of (c / cut-up-06\n                     :ARG0 (y / you~e.7)\n                     :ARG1 (o / onion~e.12)))", [[0, 4], [4, 6], [7, 8], [9, 14], [15, 19], [20, 25], [26, 29], [30, 33], [34, 36], [37, 40], [41, 43], [44, 47], [48, 54], [54, 55]]], ["# ::snt Fluffy is sick, which not everybody knows.\n# ::tokens [\"Fluffy\", \"is\", \"sick\", \",\", \"which\", \"not\", \"everybody\", \"knows\", \".\"]\n# ::lemmas [\"Fluffy\", \"be\", \"sick\", \",\", \"which\", \"not\", \"everybody\", \"know\", \".\"]\n# ::alignments 0-1.1.1.1 2-1 5-1.2.1 6-1.2.2 7-1.2\n(s / sick-05~e.2\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Fluffy\"~e.0))\n   :ARG1-of (k / know-01~e.7\n               :polarity -~e.5\n               :ARG0 (e / everybody~e.6)))", [[0, 6], [7, 9], [10, 14], [14, 15], [16, 21], [22, 25], [26, 35], [36, 41], [41, 42]]], ["# ::snt Maxwell is quite a doctor.\n# ::tokens [\"Maxwell\", \"is\", \"quite\", \"a\", \"doctor\", \".\"]\n# ::lemmas [\"Maxwell\", \"be\", \"quite\", \"a\", \"doctor\", \".\"]\n# ::alignments 0-1.1.1.1 2-1.2 4-1\n(d / doctor~e.4\n   :domain (p / person\n              :name (n / name\n                       :op1 \"Maxwell\"~e.0))\n   :degree (q / quite~e.2))", [[0, 7], [8, 10], [11, 16], [17, 18], [19, 25], [25, 26]]], ["# ::snt The younger woman might have been tall and, and the older one definitely was, blond.\n# ::tokens [\"The\", \"younger\", \"woman\", \"might\", \"have\", \"been\", \"tall\", \"and\", \",\", \"and\", \"the\", \"older\", \"one\", \"definitely\", \"was\", \",\", \"blond\", \".\"]\n# ::lemmas [\"the\", \"young\", \"woman\", \"might\", \"have\", \"be\", \"tall\", \"and\", \",\", \"and\", \"the\", \"old\", \"one\", \"definitely\", \"be\", \",\", \"blond\", \".\"]\n# ::alignments 1-1.1.1.1.1.1 2-1.1.1.1 4-1.1.1.1.1 6-1.1.1 7-1 11-1.2.1.1.1 13-1.2.2 16-1.2\n(a / and~e.7\n   :op1 (p / possible-01\n           :ARG1 (t / tall~e.6\n                    :domain (w / woman~e.2\n                               :ARG1-of (h / have-degree-91~e.4\n                                           :ARG2 (y / young~e.1)\n                                           :ARG3 (m / more)))))\n   :op2 (b / blonde~e.16\n           :domain (w2 / woman\n                       :ARG1-of (h2 / have-degree-91\n                                    :ARG2 (o / old~e.11)\n                                    :ARG3 (m2 / more)))\n           :mod (d / definite~e.13)))", [[0, 3], [4, 11], [12, 17], [18, 23], [24, 28], [29, 33], [34, 38], [39, 42], [42, 43], [44, 47], [48, 51], [52, 57], [58, 61], [62, 72], [73, 76], [76, 77], [78, 83], [83, 84]]], ["# ::snt Sally is tall, and may be blond, and Sheila is short, and definitely is, blond.\n# ::tokens [\"Sally\", \"is\", \"tall\", \",\", \"and\", \"may\", \"be\", \"blond\", \",\", \"and\", \"Sheila\", \"is\", \"short\", \",\", \"and\", \"definitely\", \"is\", \",\", \"blond\", \".\"]\n# ::lemmas [\"Sally\", \"be\", \"tall\", \",\", \"and\", \"may\", \"be\", \"blond\", \",\", \"and\", \"Sheila\", \"be\", \"short\", \",\", \"and\", \"definitely\", \"be\", \",\", \"blond\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1 4-1 7-1.2.1 10-1.3.1.1.1 12-1.3.2 15-1.4.2 18-1.3\n(a / and~e.4\n   :op1 (t / tall~e.2\n           :domain (p / person\n                      :name (n / name\n                               :op1 \"Sally\"~e.0)))\n   :op2 (p2 / possible-01\n            :ARG1 (b / blonde~e.7\n                     :domain p))\n   :op3 (b2 / blonde~e.18\n            :domain (p3 / person\n                        :name (n2 / name\n                                  :op1 \"Sheila\"~e.10))\n            :ARG1-of (s / short-07~e.12))\n   :op4 (b3 / blonde\n            :domain p3\n            :mod (d / definite~e.15)))", [[0, 5], [6, 8], [9, 13], [13, 14], [15, 18], [19, 22], [23, 25], [26, 31], [31, 32], [33, 36], [37, 43], [44, 46], [47, 52], [52, 53], [54, 57], [58, 68], [69, 71], [71, 72], [73, 78], [78, 79]]], ["# ::snt I have to try to finish grading some papers.\n# ::tokens [\"I\", \"have\", \"to\", \"try\", \"to\", \"finish\", \"grading\", \"some\", \"papers\", \".\"]\n# ::lemmas [\"i\", \"have\", \"to\", \"try\", \"to\", \"finish\", \"grade\", \"some\", \"paper\", \".\"]\n# ::alignments 0-1.1 3-1.2 5-1.2.2 6-1.2.2.2 7-1.2.2.2.2.1 8-1.2.2.2.2\n(o / obligate-01\n   :ARG1 (ii / i~e.0)\n   :ARG2 (t / try-01~e.3\n            :ARG0 ii\n            :ARG1 (f / finish-01~e.5\n                     :ARG0 ii\n                     :ARG1 (g / grade-01~e.6\n                              :ARG0 ii\n                              :ARG1 (p / paper~e.8\n                                       :quant (s / some~e.7))))))", [[0, 1], [2, 6], [7, 9], [10, 13], [14, 16], [17, 23], [24, 31], [32, 36], [37, 43], [43, 44]]], ["# ::snt The socks are ready for for you to put on to be planned.\n# ::tokens [\"The\", \"socks\", \"are\", \"ready\", \"for\", \"for\", \"you\", \"to\", \"put\", \"on\", \"to\", \"be\", \"planned\", \".\"]\n# ::lemmas [\"the\", \"sock\", \"be\", \"ready\", \"for\", \"for\", \"you\", \"to\", \"put\", \"on\", \"to\", \"be\", \"plan\", \".\"]\n# ::alignments 1-1.1 3-1 6-1.2.1 12-1.2.2\n(r / ready-02~e.3\n   :ARG1 (s / sock~e.1)\n   :ARG2 (p / put-on-08\n            :ARG0 (y / you~e.6)\n            :ARG1-of (p2 / plan-01~e.12\n                         :ARG0 y)))", [[0, 3], [4, 9], [10, 13], [14, 19], [20, 23], [24, 27], [28, 31], [32, 34], [35, 38], [39, 41], [42, 44], [45, 47], [48, 55], [55, 56]]], ["# ::snt It is easy to play sonatas on this violin.\n# ::tokens [\"It\", \"is\", \"easy\", \"to\", \"play\", \"sonatas\", \"on\", \"this\", \"violin\", \".\"]\n# ::lemmas [\"it\", \"be\", \"easy\", \"to\", \"play\", \"sonata\", \"on\", \"this\", \"violin\", \".\"]\n# ::alignments 2-1 4-1.1 5-1.1.1 7-1.1.2.1 8-1.1.2\n(e / easy-05~e.2\n   :ARG1 (p / play-11~e.4\n            :ARG1 (s / sonatas~e.5)\n            :ARG2 (v / violin~e.8\n                     :mod (t / this~e.7))))", [[0, 2], [3, 5], [6, 10], [11, 13], [14, 18], [19, 26], [27, 29], [30, 34], [35, 41], [41, 42]]], ["# ::snt This violin is difficult to play sonatas on.\n# ::tokens [\"This\", \"violin\", \"is\", \"difficult\", \"to\", \"play\", \"sonatas\", \"on\", \".\"]\n# ::lemmas [\"this\", \"violin\", \"be\", \"difficult\", \"to\", \"play\", \"sonata\", \"on\", \".\"]\n# ::alignments 0-1.1.1.1 1-1.1.1 3-1 5-1.1 6-1.1.2\n(d / difficult~e.3\n   :domain (p / play-11~e.5\n              :ARG1 (v / violin~e.1\n                       :mod (t / this~e.0))\n              :ARG2 (s / sonatas~e.6)))", [[0, 4], [5, 11], [12, 14], [15, 24], [25, 27], [28, 32], [33, 40], [41, 43], [43, 44]]], ["# ::snt My mother is easy to please my father and.\n# ::tokens [\"My\", \"mother\", \"is\", \"easy\", \"to\", \"please\", \"my\", \"father\", \"and\", \".\"]\n# ::lemmas [\"my\", \"mother\", \"be\", \"easy\", \"to\", \"please\", \"my\", \"father\", \"and\", \".\"]\n# ::alignments 1-1.1.1.1.1.2 3-1 5-1.1 7-1.1.1.2.1.2 8-1.1.1\n(e / easy-05~e.3\n   :ARG1 (p / please-01~e.5\n            :ARG0 (a / and~e.8\n                     :op1 (p2 / person\n                              :ARG0-of (h / have-rel-role-91\n                                          :ARG1 (ii / i)\n                                          :ARG2 (m / mother~e.1)))\n                     :op2 (p3 / person\n                              :ARG0-of (h2 / have-rel-role-91\n                                           :ARG1 ii\n                                           :ARG2 (f / father~e.7))))\n            :ARG1 a))", [[0, 2], [3, 9], [10, 12], [13, 17], [18, 20], [21, 27], [28, 30], [31, 37], [38, 41], [41, 42]]], ["# ::snt Poor Bill, it had started to rain and he had no umbrella.\n# ::tokens [\"Poor\", \"Bill\", \",\", \"it\", \"had\", \"started\", \"to\", \"rain\", \"and\", \"he\", \"had\", \"no\", \"umbrella\", \".\"]\n# ::lemmas [\"Poor\", \"Bill\", \",\", \"it\", \"have\", \"start\", \"to\", \"rain\", \"and\", \"he\", \"have\", \"no\", \"umbrella\", \".\"]\n# ::alignments 0-1.1.2.2.2 1-1.1.2.2.1.1 4-1.1.2 5-1.1.1 7-1.1.1.1 8-1.1 11-1.1.2.1 12-1.1.2.3\n(s / say-01\n   :ARG1 (a / and~e.8\n            :op1 (s2 / start-01~e.5\n                     :ARG1 (r / rain-01~e.7))\n            :op2 (h / have-03~e.4\n                    :polarity -~e.11\n                    :ARG0 (p / person\n                             :name (n / name\n                                      :op1 \"Bill\"~e.1)\n                             :mod (p2 / poor~e.0))\n                    :ARG1 (u / umbrella~e.12)))\n   :ARG2 p)", [[0, 4], [5, 9], [9, 10], [11, 13], [14, 17], [18, 25], [26, 28], [29, 33], [34, 37], [38, 40], [41, 44], [45, 47], [48, 56], [56, 57]]], ["# ::snt That the cops spoke to the janitor about it yesterday is terrible, that robbery.\n# ::tokens [\"That\", \"the\", \"cops\", \"spoke\", \"to\", \"the\", \"janitor\", \"about\", \"it\", \"yesterday\", \"is\", \"terrible\", \",\", \"that\", \"robbery\", \".\"]\n# ::lemmas [\"that\", \"the\", \"cop\", \"speak\", \"to\", \"the\", \"janitor\", \"about\", \"it\", \"yesterday\", \"be\", \"terrible\", \",\", \"that\", \"robbery\", \".\"]\n# ::alignments 0-1.2.1.1 2-1.1.1 3-1.1 6-1.1.3 8-1.1.2 9-1.1.4 11-1\n(t / terrible-01~e.11\n   :ARG1 (s / speak-01~e.3\n            :ARG0 (c / cop~e.2)\n            :ARG1 (ii / it~e.8)\n            :ARG2 (j / janitor~e.6)\n            :time (y / yesterday~e.9))\n   :ARG1-of (c2 / cause-01\n                :ARG0 (r / rob-01\n                         :mod (t2 / that~e.0))))", [[0, 4], [5, 8], [9, 13], [14, 19], [20, 22], [23, 26], [27, 34], [35, 40], [41, 43], [44, 53], [54, 56], [57, 65], [65, 66], [67, 71], [72, 79], [79, 80]]], ["# ::snt Every student, and he wears socks, is a swinger.\n# ::tokens [\"Every\", \"student\", \",\", \"and\", \"he\", \"wears\", \"socks\", \",\", \"is\", \"a\", \"swinger\", \".\"]\n# ::lemmas [\"every\", \"student\", \",\", \"and\", \"he\", \"wear\", \"sock\", \",\", \"be\", \"a\", \"swinger\", \".\"]\n# ::alignments 0-1.2.1.2 1-1.2.1.1 3-1.2 5-1.2.2 6-1.2.2.2 10-1.1\n(p / person\n   :ARG0-of (s / swinger-01~e.10)\n   :domain (a / and~e.3\n              :op1 (p2 / person\n                       :ARG0-of (s2 / study-01~e.1)\n                       :mod (e / every~e.0))\n              :op2 (w / wear-01~e.5\n                      :ARG0 p2\n                      :ARG1 (s3 / sock~e.6))))", [[0, 5], [6, 13], [13, 14], [15, 18], [19, 21], [22, 27], [28, 33], [33, 34], [35, 37], [38, 39], [40, 47], [47, 48]]], ["# ::snt That girl was given my binoculars by him.\n# ::tokens [\"That\", \"girl\", \"was\", \"given\", \"my\", \"binoculars\", \"by\", \"him\", \".\"]\n# ::lemmas [\"that\", \"girl\", \"be\", \"give\", \"my\", \"binocular\", \"by\", \"he\", \".\"]\n# ::alignments 0-1.3.1 1-1.3 3-1 5-1.2 7-1.1\n(g / give-01~e.3\n   :ARG0 (h / he~e.7)\n   :ARG1 (b / binoculars~e.5\n            :poss (ii / i))\n   :ARG2 (g2 / girl~e.1\n             :mod (t / that~e.0)))", [[0, 4], [5, 9], [10, 13], [14, 19], [20, 22], [23, 33], [34, 36], [37, 40], [40, 41]]], ["# ::snt Bill didn't allege that Roger had eaten anything.\n# ::tokens [\"Bill\", \"did\", \"n't\", \"allege\", \"that\", \"Roger\", \"had\", \"eaten\", \"anything\", \".\"]\n# ::lemmas [\"Bill\", \"do\", \"not\", \"allege\", \"that\", \"Roger\", \"have\", \"eat\", \"anything\", \".\"]\n# ::alignments 0-1.2.1.1 3-1 5-1.3.1.1.1 7-1.3 8-1.3.2\n(a / allege-01~e.3\n   :polarity -\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bill\"~e.0))\n   :ARG1 (e / eat-01~e.7\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Roger\"~e.5))\n            :ARG1 (a2 / anything~e.8)))", [[0, 4], [5, 8], [8, 11], [12, 18], [19, 23], [24, 29], [30, 33], [34, 39], [40, 48], [48, 49]]], ["# ::snt Nobody who hates to eat anything should work in a delicatessen.\n# ::tokens [\"Nobody\", \"who\", \"hates\", \"to\", \"eat\", \"anything\", \"should\", \"work\", \"in\", \"a\", \"delicatessen\", \".\"]\n# ::lemmas [\"nobody\", \"who\", \"hate\", \"to\", \"eat\", \"anything\", \"should\", \"work\", \"in\", \"a\", \"delicatessen\", \".\"]\n# ::alignments 0-1.1.1 2-1.1.1.1 4-1.1.1.1.1 5-1.1.1.1.1.2 7-1.1 10-1.1.2\n(r / recommend-01\n   :ARG1 (w / work-01~e.7\n            :ARG0 (n / nobody~e.0\n                     :ARG0-of (h / hate-01~e.2\n                                 :ARG1 (e / eat-01~e.4\n                                          :ARG0 n\n                                          :ARG1 (a / anything~e.5))))\n            :location (d / delicatessen~e.10)))", [[0, 6], [7, 10], [11, 16], [17, 19], [20, 23], [24, 32], [33, 39], [40, 44], [45, 47], [48, 49], [50, 62], [62, 63]]], ["# ::snt Everybody around here who ever buys anything on credit talks in his sleep.\n# ::tokens [\"Everybody\", \"around\", \"here\", \"who\", \"ever\", \"buys\", \"anything\", \"on\", \"credit\", \"talks\", \"in\", \"his\", \"sleep\", \".\"]\n# ::lemmas [\"everybody\", \"around\", \"here\", \"who\", \"ever\", \"buy\", \"anything\", \"on\", \"credit\", \"talk\", \"in\", \"his\", \"sleep\", \".\"]\n# ::alignments 0-1 1-1.1 2-1.1.1 4-1.2.4 5-1.2 6-1.2.1 8-1.2.2.1 9-1.2.2 12-1.2.3\n(e / everybody~e.0\n   :location (a / around~e.1\n                :op1 (h / here~e.2))\n   :ARG0-of (b / buy-01~e.5\n               :ARG1 (a2 / anything~e.6)\n               :ARG3 (t / talk-01~e.9\n                        :mod (c / credit~e.8))\n               :time (s / sleep-01~e.12\n                        :ARG0 e)\n               :time (e2 / ever~e.4)))", [[0, 9], [10, 16], [17, 21], [22, 25], [26, 30], [31, 35], [36, 44], [45, 47], [48, 54], [55, 60], [61, 63], [64, 67], [68, 73], [73, 74]]], ["# ::snt I can't remember the name of somebody who had misgivings.\n# ::tokens [\"I\", \"ca\", \"n't\", \"remember\", \"the\", \"name\", \"of\", \"somebody\", \"who\", \"had\", \"misgivings\", \".\"]\n# ::lemmas [\"i\", \"can\", \"not\", \"remember\", \"the\", \"name\", \"of\", \"somebody\", \"who\", \"have\", \"misgiving\", \".\"]\n# ::alignments 0-1.2.1 3-1.2 5-1.2.2.1 7-1.2.2.1.1 10-1.2.2.1.1.1\n(p / possible-01\n   :polarity -\n   :ARG1 (r / remember-01~e.3\n            :ARG0 (ii / i~e.0)\n            :ARG1 (t / thing\n                     :ARG2-of (n / name-01~e.5\n                                 :ARG1 (s / somebody~e.7\n                                          :ARG0-of (m / misgiv-01~e.10))))))", [[0, 1], [2, 4], [4, 7], [8, 16], [17, 20], [21, 25], [26, 28], [29, 37], [38, 41], [42, 45], [46, 56], [56, 57]]], ["# ::snt No writer, and no playwright, meets in Vienna.\n# ::tokens [\"No\", \"writer\", \",\", \"and\", \"no\", \"playwright\", \",\", \"meets\", \"in\", \"Vienna\", \".\"]\n# ::lemmas [\"no\", \"writer\", \",\", \"and\", \"no\", \"playwright\", \",\", \"meet\", \"in\", \"Vienna\", \".\"]\n# ::alignments 0-1.1 1-1.2.1.1 3-1.2 5-1.2.2.1.1 7-1 9-1.3.1.1\n(m / meet-03~e.7\n   :polarity -~e.0\n   :ARG0 (a / and~e.3\n            :op1 (p / person\n                    :ARG0-of (w / write-01~e.1))\n            :op2 (p2 / person\n                     :ARG0-of (w2 / wright-01\n                                  :ARG1 (p3 / play-11~e.5))))\n   :location (c / city\n                :name (n / name\n                         :op1 \"Vienna\"~e.9)))", [[0, 2], [3, 9], [9, 10], [11, 14], [15, 17], [18, 28], [28, 29], [30, 35], [36, 38], [39, 45], [45, 46]]], ["# ::snt No writer, nor any playwright, meets in Vienna.\n# ::tokens [\"No\", \"writer\", \",\", \"nor\", \"any\", \"playwright\", \",\", \"meets\", \"in\", \"Vienna\", \".\"]\n# ::lemmas [\"no\", \"writer\", \",\", \"nor\", \"any\", \"playwright\", \",\", \"meet\", \"in\", \"Vienna\", \".\"]\n# ::alignments 0-1.1 1-1.2.1.1 5-1.2.3 7-1 9-1.3.1.1\n(m / meet-03~e.7\n   :polarity -~e.0\n   :ARG0 (o / or\n            :op1 (p / person\n                    :ARG0-of (w / write-01~e.1))\n            :op2 (p2 / person\n                     :ARG0-of w)\n            :mod (p3 / play-wright~e.5))\n   :location (c / city\n                :name (n / name\n                         :op1 \"Vienna\"~e.9)))", [[0, 2], [3, 9], [9, 10], [11, 14], [15, 18], [19, 29], [29, 30], [31, 36], [37, 39], [40, 46], [46, 47]]], ["# ::snt That you will marry any student is not certain.\n# ::tokens [\"That\", \"you\", \"will\", \"marry\", \"any\", \"student\", \"is\", \"not\", \"certain\", \".\"]\n# ::lemmas [\"that\", \"you\", \"will\", \"marry\", \"any\", \"student\", \"be\", \"not\", \"certain\", \".\"]\n# ::alignments 1-1.2.1 3-1.2 4-1.2.2.1 5-1.2.2.2 7-1.1 8-1\n(c / certain~e.8\n   :polarity -~e.7\n   :domain (m / marry-01~e.3\n              :ARG1 (y / you~e.1)\n              :ARG2 (p / person\n                       :mod (a / any~e.4)\n                       :ARG0-of (s / study-01~e.5))))", [[0, 4], [5, 8], [9, 13], [14, 19], [20, 23], [24, 31], [32, 34], [35, 38], [39, 46], [46, 47]]], ["# ::snt Felicia kicked the ball off the bench.\n# ::tokens [\"Felicia\", \"kicked\", \"the\", \"ball\", \"off\", \"the\", \"bench\", \".\"]\n# ::lemmas [\"Felicia\", \"kick\", \"the\", \"ball\", \"off\", \"the\", \"bench\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 6-1.3\n(k / kick-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Felicia\"~e.0))\n   :ARG1 (b / ball~e.3)\n   :source (b2 / bench~e.6))", [[0, 7], [8, 14], [15, 18], [19, 23], [24, 27], [28, 31], [32, 37], [37, 38]]], ["# ::snt I sent the package halfway around the world.\n# ::tokens [\"I\", \"sent\", \"the\", \"package\", \"halfway\", \"around\", \"the\", \"world\", \".\"]\n# ::lemmas [\"i\", \"send\", \"the\", \"package\", \"halfway\", \"around\", \"the\", \"world\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 4-1.3.2 5-1.3 7-1.3.1\n(s / send-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / package~e.3)\n   :ARG2 (a / around~e.5\n            :op1 (w / world~e.7)\n            :extent (h / halfway~e.4)))", [[0, 1], [2, 6], [7, 10], [11, 18], [19, 26], [27, 33], [34, 37], [38, 43], [43, 44]]], ["# ::snt Sam gave the ball out of the basket.\n# ::tokens [\"Sam\", \"gave\", \"the\", \"ball\", \"out\", \"of\", \"the\", \"basket\", \".\"]\n# ::lemmas [\"Sam\", \"give\", \"the\", \"ball\", \"out\", \"of\", \"the\", \"basket\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 7-1.3.1\n(g / give-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sam\"~e.0))\n   :ARG1 (b / ball~e.3)\n   :ARG2 (o / out-of\n            :op1 (b2 / basket~e.7)))", [[0, 3], [4, 8], [9, 12], [13, 17], [18, 21], [22, 24], [25, 28], [29, 35], [35, 36]]], ["# ::snt Sam offered the ball out of the basket.\n# ::tokens [\"Sam\", \"offered\", \"the\", \"ball\", \"out\", \"of\", \"the\", \"basket\", \".\"]\n# ::lemmas [\"Sam\", \"offer\", \"the\", \"ball\", \"out\", \"of\", \"the\", \"basket\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 7-1.3\n(o / offer-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sam\"~e.0))\n   :ARG1 (b / ball~e.3)\n   :source (b2 / basket~e.7))", [[0, 3], [4, 11], [12, 15], [16, 20], [21, 24], [25, 27], [28, 31], [32, 38], [38, 39]]], ["# ::snt Park Square has a festive air.\n# ::tokens [\"Park\", \"Square\", \"has\", \"a\", \"festive\", \"air\", \".\"]\n# ::lemmas [\"Park\", \"Square\", \"have\", \"a\", \"festive\", \"air\", \".\"]\n# ::alignments 0-1.1.1.1 1-1.1 2-1 4-1.2.1 5-1.2\n(h / have-03~e.2\n   :ARG0 (s / square~e.1\n            :name (n / name\n                     :op1 \"Park\"~e.0\n                     :op2 \"Square\"))\n   :ARG1 (a / air~e.5\n            :mod (f / festival~e.4\n                    :name n\n                    :op1 \"Christmas\")))", [[0, 4], [5, 11], [12, 15], [16, 17], [18, 25], [26, 29], [29, 30]]], ["# ::snt The worker will have a job.\n# ::tokens [\"The\", \"worker\", \"will\", \"have\", \"a\", \"job\", \".\"]\n# ::lemmas [\"the\", \"worker\", \"will\", \"have\", \"a\", \"job\", \".\"]\n# ::alignments 1-1.1.1 3-1 5-1.2\n(h / have-03~e.3\n   :ARG0 (p / person\n            :ARG0-of (w / work-01~e.1))\n   :ARG1 (j / job~e.5))", [[0, 3], [4, 10], [11, 15], [16, 20], [21, 22], [23, 26], [26, 27]]], ["# ::snt No one can forgive that comment to you.\n# ::tokens [\"No\", \"one\", \"can\", \"forgive\", \"that\", \"comment\", \"to\", \"you\", \".\"]\n# ::lemmas [\"no\", \"one\", \"can\", \"forgive\", \"that\", \"comment\", \"to\", \"you\", \".\"]\n# ::alignments 3-1.1 4-1.1.3.2 5-1.1.3.1 7-1.1.2\n(p / possible-01\n   :ARG1 (f / forgive-01~e.3\n            :ARG0 (n / no-one)\n            :ARG1 (y / you~e.7)\n            :ARG2 (t / thing\n                     :ARG1-of (c / comment-01~e.5)\n                     :mod (t2 / that~e.4)\n                     :beneficiary y)))", [[0, 2], [3, 6], [7, 10], [11, 18], [19, 23], [24, 31], [32, 34], [35, 38], [38, 39]]], ["# ::snt We launched the rocket to the moon, but it blew up before it got there.\n# ::tokens [\"We\", \"launched\", \"the\", \"rocket\", \"to\", \"the\", \"moon\", \",\", \"but\", \"it\", \"blew\", \"up\", \"before\", \"it\", \"got\", \"there\", \".\"]\n# ::lemmas [\"we\", \"launch\", \"the\", \"rocket\", \"to\", \"the\", \"moon\", \",\", \"but\", \"it\", \"blow\", \"up\", \"before\", \"it\", \"get\", \"there\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 6-1.3 10-1.4 12-1.4.2 14-1.4.2.1\n(l / launch-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (r / rocket~e.3)\n   :destination (m / moon~e.6)\n   :concession-of (b / blow-up-06~e.10\n                     :ARG1 r\n                     :time (b2 / before~e.12\n                               :op1 (g / get-05~e.14\n                                       :ARG1 r\n                                       :ARG2 m))))", [[0, 2], [3, 11], [12, 15], [16, 22], [23, 25], [26, 29], [30, 34], [34, 35], [36, 39], [40, 42], [43, 47], [48, 50], [51, 57], [58, 60], [61, 64], [65, 70], [70, 71]]], ["# ::snt Sarah promised Catherine her old car, but then gave it to her son instead.\n# ::tokens [\"Sarah\", \"promised\", \"Catherine\", \"her\", \"old\", \"car\", \",\", \"but\", \"then\", \"gave\", \"it\", \"to\", \"her\", \"son\", \"instead\", \".\"]\n# ::lemmas [\"Sarah\", \"promise\", \"Catherine\", \"her\", \"old\", \"car\", \",\", \"but\", \"then\", \"give\", \"it\", \"to\", \"her\", \"son\", \"instead\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 2-1.1.2.1.1 4-1.1.3.1 5-1.1.3 7-1 8-1.2.4 9-1.2 13-1.2.3.1.2 14-1.2.5\n(c / contrast-01~e.7\n   :ARG1 (p / promise-01~e.1\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Sarah\"~e.0))\n            :ARG1 (p3 / person\n                      :name (n2 / name\n                                :op1 \"Catherine\"~e.2))\n            :ARG2 (c2 / car~e.5\n                      :mod (o / old~e.4)\n                      :poss p3))\n   :ARG2 (g / give-01~e.9\n            :ARG0 p2\n            :ARG1 c2\n            :ARG2 (p4 / person\n                      :ARG0-of (h / have-rel-role-91\n                                  :ARG1 p2\n                                  :ARG2 (s / son~e.13)))\n            :time (t / then~e.8)\n            :ARG1-of (ii / instead-of-91~e.14)))", [[0, 5], [6, 14], [15, 24], [25, 28], [29, 32], [33, 36], [36, 37], [38, 41], [42, 46], [47, 51], [52, 54], [55, 57], [58, 61], [62, 65], [66, 73], [73, 74]]], ["# ::snt I lent the book partway to Tony.\n# ::tokens [\"I\", \"lent\", \"the\", \"book\", \"partway\", \"to\", \"Tony\", \".\"]\n# ::lemmas [\"i\", \"lend\", \"the\", \"book\", \"partway\", \"to\", \"Tony\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 4-1.4 6-1.3.1.1\n(l / lend-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (b / book~e.3)\n   :ARG2 (p / person\n            :name (n / name\n                     :op1 \"Tony\"~e.6))\n   :degree (p2 / partway~e.4))", [[0, 1], [2, 6], [7, 10], [11, 15], [16, 23], [24, 26], [27, 31], [31, 32]]], ["# ::snt The farmer loaded the cart with apples.\n# ::tokens [\"The\", \"farmer\", \"loaded\", \"the\", \"cart\", \"with\", \"apples\", \".\"]\n# ::lemmas [\"the\", \"farmer\", \"load\", \"the\", \"cart\", \"with\", \"apple\", \".\"]\n# ::alignments 1-1.1.1 2-1 4-1.2 6-1.3\n(l / load-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (f / farm-01~e.1))\n   :ARG1 (c / cart~e.4)\n   :ARG2 (a / apple~e.6))", [[0, 3], [4, 10], [11, 17], [18, 21], [22, 26], [27, 31], [32, 38], [38, 39]]], ["# ::snt The farmer dumped the cart with apples.\n# ::tokens [\"The\", \"farmer\", \"dumped\", \"the\", \"cart\", \"with\", \"apples\", \".\"]\n# ::lemmas [\"the\", \"farmer\", \"dump\", \"the\", \"cart\", \"with\", \"apple\", \".\"]\n# ::alignments 1-1.1.1 2-1 4-1.2 6-1.3\n(d / dump-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (f / farm-01~e.1))\n   :ARG1 (c / cart~e.4)\n   :ARG2 (a / apple~e.6))", [[0, 3], [4, 10], [11, 17], [18, 21], [22, 26], [27, 31], [32, 38], [38, 39]]], ["# ::snt Martha carved the baby a toy out of wood.\n# ::tokens [\"Martha\", \"carved\", \"the\", \"baby\", \"a\", \"toy\", \"out\", \"of\", \"wood\", \".\"]\n# ::lemmas [\"Martha\", \"carve\", \"the\", \"baby\", \"a\", \"toy\", \"out\", \"of\", \"wood\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.3 5-1.2 8-1.4\n(c / carve-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Martha\"~e.0))\n   :ARG1 (t / toy~e.5)\n   :ARG2 (b / baby~e.3)\n   :ARG3 (w / wood~e.8))", [[0, 6], [7, 13], [14, 17], [18, 22], [23, 24], [25, 28], [29, 32], [33, 35], [36, 40], [40, 41]]], ["# ::snt The bread cuts easily.\n# ::tokens [\"The\", \"bread\", \"cuts\", \"easily\", \".\"]\n# ::lemmas [\"the\", \"bread\", \"cut\", \"easily\", \".\"]\n# ::alignments 1-1.1 2-1\n(c / cut-02~e.2\n   :ARG1 (b / bread~e.1)\n   :ARG1-of (e / easy-05))", [[0, 3], [4, 9], [10, 14], [15, 21], [21, 22]]], ["# ::snt Janet broke Bill on the finger.\n# ::tokens [\"Janet\", \"broke\", \"Bill\", \"on\", \"the\", \"finger\", \".\"]\n# ::lemmas [\"Janet\", \"break\", \"Bill\", \"on\", \"the\", \"finger\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1 5-1.3\n(b / break-13~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Janet\"~e.0))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Bill\"~e.2))\n   :manner (f / finger~e.5))", [[0, 5], [6, 11], [12, 16], [17, 19], [20, 23], [24, 30], [30, 31]]], ["# ::snt Janet broke the cup.\n# ::tokens [\"Janet\", \"broke\", \"the\", \"cup\", \".\"]\n# ::lemmas [\"Janet\", \"break\", \"the\", \"cup\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2\n(b / break-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Janet\"~e.0))\n   :ARG1 (c / cup~e.3))", [[0, 5], [6, 11], [12, 15], [16, 19], [19, 20]]], ["# ::snt The visitor rang the bell.\n# ::tokens [\"The\", \"visitor\", \"rang\", \"the\", \"bell\", \".\"]\n# ::lemmas [\"the\", \"visitor\", \"ring\", \"the\", \"bell\", \".\"]\n# ::alignments 1-1.1.1 2-1 4-1.2\n(r / ring-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (v / visit-01~e.1))\n   :ARG1 (b / bell~e.4))", [[0, 3], [4, 11], [12, 16], [17, 20], [21, 25], [25, 26]]], ["# ::snt We pulled free.\n# ::tokens [\"We\", \"pulled\", \"free\", \".\"]\n# ::lemmas [\"we\", \"pull\", \"free\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2\n(p / pull-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1-of (f / free-04~e.2))", [[0, 2], [3, 9], [10, 14], [14, 15]]], ["# ::snt That movie always shocks people.\n# ::tokens [\"That\", \"movie\", \"always\", \"shocks\", \"people\", \".\"]\n# ::lemmas [\"that\", \"movie\", \"always\", \"shock\", \"people\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1.3 3-1\n(s / shock-01~e.3\n   :ARG0 (m / movie~e.1\n            :mod (t / that~e.0))\n   :ARG1 (p / person)\n   :time (a / always~e.2))", [[0, 4], [5, 10], [11, 17], [18, 24], [25, 31], [31, 32]]], ["# ::snt That movie always shocks.\n# ::tokens [\"That\", \"movie\", \"always\", \"shocks\", \".\"]\n# ::lemmas [\"that\", \"movie\", \"always\", \"shock\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1.2 3-1\n(s / shock-01~e.3\n   :ARG0 (m / movie~e.1\n            :mod (t / that~e.0))\n   :time (a / always~e.2))", [[0, 4], [5, 10], [11, 17], [18, 24], [24, 25]]], ["# ::snt Sharon came the room.\n# ::tokens [\"Sharon\", \"came\", \"the\", \"room\", \".\"]\n# ::lemmas [\"Sharon\", \"come\", \"the\", \"room\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2\n(c / come-01~e.1\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sharon\"~e.0))\n   :ARG4 (r / room~e.3))", [[0, 6], [7, 11], [12, 15], [16, 20], [20, 21]]], ["# ::snt Bill sent a package to Tom.\n# ::tokens [\"Bill\", \"sent\", \"a\", \"package\", \"to\", \"Tom\", \".\"]\n# ::lemmas [\"Bill\", \"send\", \"a\", \"package\", \"to\", \"Tom\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 5-1.3.1.1\n(s / send-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bill\"~e.0))\n   :ARG1 (p2 / package~e.3)\n   :ARG2 (p3 / person\n             :name (n2 / name\n                       :op1 \"Tom\"~e.5)))", [[0, 4], [5, 9], [10, 11], [12, 19], [20, 22], [23, 26], [26, 27]]], ["# ::snt That acorn will grow into an oak tree.\n# ::tokens [\"That\", \"acorn\", \"will\", \"grow\", \"into\", \"an\", \"oak\", \"tree\", \".\"]\n# ::lemmas [\"that\", \"acorn\", \"will\", \"grow\", \"into\", \"an\", \"oak\", \"tree\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 3-1 6-1.2.1 7-1.2\n(g / grow-03~e.3\n   :ARG1 (a / acorn~e.1\n            :mod (t / that~e.0))\n   :ARG4 (t2 / tree~e.7\n             :mod (o / oak~e.6)))", [[0, 4], [5, 10], [11, 15], [16, 20], [21, 25], [26, 28], [29, 32], [33, 37], [37, 38]]], ["# ::snt He turned into a frog.\n# ::tokens [\"He\", \"turned\", \"into\", \"a\", \"frog\", \".\"]\n# ::lemmas [\"he\", \"turn\", \"into\", \"a\", \"frog\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2\n(t / turn-02~e.1\n   :ARG1 (h / he~e.0)\n   :ARG2 (f / frog~e.4))", [[0, 2], [3, 9], [10, 14], [15, 16], [17, 21], [21, 22]]], ["# ::snt I mixed the sugar into the butter.\n# ::tokens [\"I\", \"mixed\", \"the\", \"sugar\", \"into\", \"the\", \"butter\", \".\"]\n# ::lemmas [\"i\", \"mix\", \"the\", \"sugar\", \"into\", \"the\", \"butter\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 6-1.3\n(m / mix-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (s / sugar~e.3)\n   :ARG2 (b / butter~e.6))", [[0, 1], [2, 7], [8, 11], [12, 17], [18, 22], [23, 26], [27, 33], [33, 34]]], ["# ::snt Brian threw the fence with the stick.\n# ::tokens [\"Brian\", \"threw\", \"the\", \"fence\", \"with\", \"the\", \"stick\", \".\"]\n# ::lemmas [\"Brian\", \"throw\", \"the\", \"fence\", \"with\", \"the\", \"stick\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 6-1.3\n(t / throw-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Brian\"~e.0))\n   :ARG1 (f / fence~e.3)\n   :ARG2 (s / stick~e.6))", [[0, 5], [6, 11], [12, 15], [16, 21], [22, 26], [27, 30], [31, 36], [36, 37]]], ["# ::snt Mira condemned Terry for the accident.\n# ::tokens [\"Mira\", \"condemned\", \"Terry\", \"for\", \"the\", \"accident\", \".\"]\n# ::lemmas [\"Mira\", \"condemn\", \"Terry\", \"for\", \"the\", \"accident\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1 5-1.3\n(c / condemn-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mira\"~e.0))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Terry\"~e.2))\n   :ARG2 (a / accident~e.5))", [[0, 4], [5, 14], [15, 20], [21, 24], [25, 28], [29, 37], [37, 38]]], ["# ::snt We investigated the area for bombs.\n# ::tokens [\"We\", \"investigated\", \"the\", \"area\", \"for\", \"bombs\", \".\"]\n# ::lemmas [\"we\", \"investigate\", \"the\", \"area\", \"for\", \"bomb\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 5-1.3\n(ii / investigate-01~e.1\n    :ARG0 (w / we~e.0)\n    :ARG1 (a / area~e.3)\n    :ARG2 (b / bomb~e.5))", [[0, 2], [3, 15], [16, 19], [20, 24], [25, 28], [29, 34], [34, 35]]], ["# ::snt I sensed his eagerness.\n# ::tokens [\"I\", \"sensed\", \"his\", \"eagerness\", \".\"]\n# ::lemmas [\"i\", \"sense\", \"his\", \"eagerness\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2\n(s / sense-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (e / eager-01~e.3\n            :ARG0 (h / he)))", [[0, 1], [2, 8], [9, 12], [13, 22], [22, 23]]], ["# ::snt They praised the dedication in the volunteers.\n# ::tokens [\"They\", \"praised\", \"the\", \"dedication\", \"in\", \"the\", \"volunteers\", \".\"]\n# ::lemmas [\"they\", \"praise\", \"the\", \"dedication\", \"in\", \"the\", \"volunteer\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 6-1.2.1.1\n(p / praise-01~e.1\n   :ARG0 (t / they~e.0)\n   :ARG1 (d / dedicate-01~e.3\n            :ARG0 (p2 / person\n                      :ARG0-of (v / volunteer-01~e.6))))", [[0, 4], [5, 12], [13, 16], [17, 27], [28, 30], [31, 34], [35, 45], [45, 46]]], ["# ::snt The earth was believed to be round.\n# ::tokens [\"The\", \"earth\", \"was\", \"believed\", \"to\", \"be\", \"round\", \".\"]\n# ::lemmas [\"the\", \"earth\", \"be\", \"believe\", \"to\", \"be\", \"round\", \".\"]\n# ::alignments 1-1.1.1 3-1 6-1.1\n(b / believe-01~e.3\n   :ARG1 (r / round-03~e.6\n            :ARG1 (e / earth~e.1)))", [[0, 3], [4, 9], [10, 13], [14, 22], [23, 25], [26, 28], [29, 34], [34, 35]]], ["# ::snt Sarah smiled a charming smile.\n# ::tokens [\"Sarah\", \"smiled\", \"a\", \"charming\", \"smile\", \".\"]\n# ::lemmas [\"Sarah\", \"smile\", \"a\", \"charming\", \"smile\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1 4-1.2\n(s / smile-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sarah\"~e.0))\n   :ARG1 (s2 / smile-01~e.4\n             :ARG0-of (c / charm-01~e.3)))", [[0, 5], [6, 12], [13, 14], [15, 23], [24, 29], [29, 30]]], ["# ::snt Sandra beamed a cheerful welcome.\n# ::tokens [\"Sandra\", \"beamed\", \"a\", \"cheerful\", \"welcome\", \".\"]\n# ::lemmas [\"Sandra\", \"beam\", \"a\", \"cheerful\", \"welcome\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1 4-1.2\n(b / beam-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sandra\"~e.0))\n   :ARG1 (w / welcome-01~e.4\n            :mod (c / cheerful~e.3)))", [[0, 6], [7, 13], [14, 15], [16, 24], [25, 32], [32, 33]]], ["# ::snt You've really lived it up.\n# ::tokens [\"You\", \"'ve\", \"really\", \"lived\", \"it\", \"up\", \".\"]\n# ::lemmas [\"you\", \"'ve\", \"really\", \"live\", \"it\", \"up\", \".\"]\n# ::alignments 0-1.1 2-1.3 3-1 4-1.2\n(l / live-up-04~e.3\n   :ARG0 (y / you~e.0)\n   :ARG1 (ii / it~e.4)\n   :ARG1-of (r / real-04~e.2))", [[0, 3], [3, 6], [7, 13], [14, 19], [20, 22], [23, 25], [25, 26]]], ["# ::snt Paperback books lift onto the table easily.\n# ::tokens [\"Paperback\", \"books\", \"lift\", \"onto\", \"the\", \"table\", \"easily\", \".\"]\n# ::lemmas [\"paperback\", \"book\", \"lift\", \"onto\", \"the\", \"table\", \"easily\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1 5-1.2\n(l / lift-01~e.2\n   :ARG1 (b / book~e.1\n            :mod (p / paperback~e.0))\n   :ARG4 (t / table~e.5)\n   :ARG1-of (e / easy-05))", [[0, 9], [10, 15], [16, 20], [21, 25], [26, 29], [30, 35], [36, 42], [42, 43]]], ["# ::snt The books lifted onto the table.\n# ::tokens [\"The\", \"books\", \"lifted\", \"onto\", \"the\", \"table\", \".\"]\n# ::lemmas [\"the\", \"book\", \"lift\", \"onto\", \"the\", \"table\", \".\"]\n# ::alignments 1-1.1 2-1 5-1.2\n(l / lift-01~e.2\n   :ARG1 (b / book~e.1)\n   :ARG4 (t / table~e.5))", [[0, 3], [4, 9], [10, 16], [17, 21], [22, 25], [26, 31], [31, 32]]], ["# ::snt Jessica loaded boxes under the wagon.\n# ::tokens [\"Jessica\", \"loaded\", \"boxes\", \"under\", \"the\", \"wagon\", \".\"]\n# ::lemmas [\"Jessica\", \"load\", \"box\", \"under\", \"the\", \"wagon\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2 3-1.3 5-1.3.1\n(l / load-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jessica\"~e.0))\n   :ARG1 (b / box~e.2)\n   :ARG2 (u / under~e.3\n            :op1 (w / wagon~e.5)))", [[0, 7], [8, 14], [15, 20], [21, 26], [27, 30], [31, 36], [36, 37]]], ["# ::snt Jessica loaded boxes on the wagon.\n# ::tokens [\"Jessica\", \"loaded\", \"boxes\", \"on\", \"the\", \"wagon\", \".\"]\n# ::lemmas [\"Jessica\", \"load\", \"box\", \"on\", \"the\", \"wagon\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.3 5-1.2\n(l / load-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jessica\"~e.0))\n   :ARG1 (w / wagon~e.5)\n   :ARG2 (b / box~e.2))", [[0, 7], [8, 14], [15, 20], [21, 23], [24, 27], [28, 33], [33, 34]]], ["# ::snt Jessica crammed boxes at the truck.\n# ::tokens [\"Jessica\", \"crammed\", \"boxes\", \"at\", \"the\", \"truck\", \".\"]\n# ::lemmas [\"Jessica\", \"cram\", \"box\", \"at\", \"the\", \"truck\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2 5-1.3\n(c / cram-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jessica\"~e.0))\n   :ARG1 (b / box~e.2)\n   :ARG2 (t / truck~e.5))", [[0, 7], [8, 15], [16, 21], [22, 24], [25, 28], [29, 34], [34, 35]]], ["# ::snt Lora buttered at the toast.\n# ::tokens [\"Lora\", \"buttered\", \"at\", \"the\", \"toast\", \".\"]\n# ::lemmas [\"Lora\", \"butter\", \"at\", \"the\", \"toast\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.2\n(b / butter-00~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lora\"~e.0))\n   :subevent-of (t / toast-01~e.4))", [[0, 4], [5, 13], [14, 16], [17, 20], [21, 26], [26, 27]]], ["# ::snt Carla shoveled the walk.\n# ::tokens [\"Carla\", \"shoveled\", \"the\", \"walk\", \".\"]\n# ::lemmas [\"Carla\", \"shovel\", \"the\", \"walk\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2\n(s / shovel-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carla\"~e.0))\n   :ARG1 (w / walk-01~e.3))", [[0, 5], [6, 14], [15, 18], [19, 23], [23, 24]]], ["# ::snt Nora sent the book.\n# ::tokens [\"Nora\", \"sent\", \"the\", \"book\", \".\"]\n# ::lemmas [\"Nora\", \"send\", \"the\", \"book\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2\n(s / send-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nora\"~e.0))\n   :ARG1 (b / book~e.3))", [[0, 4], [5, 9], [10, 13], [14, 18], [18, 19]]], ["# ::snt Nora sent Peter the book.\n# ::tokens [\"Nora\", \"sent\", \"Peter\", \"the\", \"book\", \".\"]\n# ::lemmas [\"Nora\", \"send\", \"Peter\", \"the\", \"book\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.3.1.1 4-1.2\n(s / send-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Nora\"~e.0))\n   :ARG1 (b / book~e.4)\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Peter\"~e.2)))", [[0, 4], [5, 9], [10, 15], [16, 19], [20, 24], [24, 25]]], ["# ::snt Carla slid the book.\n# ::tokens [\"Carla\", \"slid\", \"the\", \"book\", \".\"]\n# ::lemmas [\"Carla\", \"slide\", \"the\", \"book\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2\n(s / slide-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carla\"~e.0))\n   :ARG1 (b / book~e.3))", [[0, 5], [6, 10], [11, 14], [15, 19], [19, 20]]], ["# ::snt Carla slid at the book.\n# ::tokens [\"Carla\", \"slid\", \"at\", \"the\", \"book\", \".\"]\n# ::lemmas [\"Carla\", \"slide\", \"at\", \"the\", \"book\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.2\n(s / slide-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carla\"~e.0))\n   :direction (b / book~e.4))", [[0, 5], [6, 10], [11, 13], [14, 17], [18, 22], [22, 23]]], ["# ::snt Amanda carried the package to Pamela.\n# ::tokens [\"Amanda\", \"carried\", \"the\", \"package\", \"to\", \"Pamela\", \".\"]\n# ::lemmas [\"Amanda\", \"carry\", \"the\", \"package\", \"to\", \"Pamela\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 5-1.3.1.1\n(c / carry-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Amanda\"~e.0))\n   :ARG1 (p2 / package~e.3)\n   :ARG2 (p3 / person\n             :name (n2 / name\n                       :op1 \"Pamela\"~e.5)))", [[0, 6], [7, 14], [15, 18], [19, 26], [27, 29], [30, 36], [36, 37]]], ["# ::snt Packages drive easily to New York.\n# ::tokens [\"Packages\", \"drive\", \"easily\", \"to\", \"New\", \"York\", \".\"]\n# ::lemmas [\"package\", \"drive\", \"easily\", \"to\", \"New\", \"York\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2.1.1 5-1.2.1.2\n(d / drive-01~e.1\n   :ARG0 (p / package~e.0)\n   :ARG1 (c / city\n            :name (n / name\n                     :op1 \"New\"~e.4\n                     :op2 \"York\"~e.5))\n   :ARG1-of (e / easy-05))", [[0, 8], [9, 14], [15, 21], [22, 24], [25, 28], [29, 33], [33, 34]]], ["# ::snt The chair pushed.\n# ::tokens [\"The\", \"chair\", \"pushed\", \".\"]\n# ::lemmas [\"the\", \"chair\", \"push\", \".\"]\n# ::alignments 1-1.1 2-1\n(p / push-01~e.2\n   :ARG0 (c / chair~e.1))", [[0, 3], [4, 9], [10, 16], [16, 17]]], ["# ::snt We offered a job to her.\n# ::tokens [\"We\", \"offered\", \"a\", \"job\", \"to\", \"her\", \".\"]\n# ::lemmas [\"we\", \"offer\", \"a\", \"job\", \"to\", \"she\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 5-1.3\n(o / offer-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (j / job~e.3)\n   :ARG3 (s / she~e.5))", [[0, 2], [3, 10], [11, 12], [13, 16], [17, 19], [20, 23], [23, 24]]], ["# ::snt A job offered.\n# ::tokens [\"A\", \"job\", \"offered\", \".\"]\n# ::lemmas [\"a\", \"job\", \"offer\", \".\"]\n# ::alignments 1-1 2-1.1\n(j / job~e.1\n   :ARG1-of (o / offer-01~e.2))", [[0, 1], [2, 5], [6, 13], [13, 14]]], ["# ::snt Brown presented a plaque to Jones.\n# ::tokens [\"Brown\", \"presented\", \"a\", \"plaque\", \"to\", \"Jones\", \".\"]\n# ::lemmas [\"Brown\", \"present\", \"a\", \"plaque\", \"to\", \"Jones\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 5-1.3.1.1\n(p / present-01~e.1\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Brown\"~e.0))\n   :ARG1 (p3 / plaque~e.3)\n   :ARG2 (p4 / person\n             :name (n2 / name\n                       :op1 \"Jones\"~e.5)))", [[0, 5], [6, 15], [16, 17], [18, 24], [25, 27], [28, 33], [33, 34]]], ["# ::snt Carmen bought Mary a dress.\n# ::tokens [\"Carmen\", \"bought\", \"Mary\", \"a\", \"dress\", \".\"]\n# ::lemmas [\"carman\", \"buy\", \"Mary\", \"a\", \"dress\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.3.1.1 4-1.2\n(b / buy-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carmen\"~e.0))\n   :ARG1 (d / dress~e.4)\n   :ARG4 (p2 / person\n             :name (n2 / name\n                       :op1 \"Mary\"~e.2)))", [[0, 6], [7, 13], [14, 18], [19, 20], [21, 26], [26, 27]]], ["# ::snt Carmen obtained the spare part at the hardware store.\n# ::tokens [\"Carmen\", \"obtained\", \"the\", \"spare\", \"part\", \"at\", \"the\", \"hardware\", \"store\", \".\"]\n# ::lemmas [\"carman\", \"obtain\", \"the\", \"spare\", \"part\", \"at\", \"the\", \"hardware\", \"store\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1 4-1.2 7-1.3.1 8-1.3\n(o / obtain-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carmen\"~e.0))\n   :ARG1 (p2 / part~e.4\n             :ARG1-of (s / spare-02~e.3))\n   :location (s2 / store~e.8\n                 :mod (h / hardware~e.7)))", [[0, 6], [7, 15], [16, 19], [20, 25], [26, 30], [31, 33], [34, 37], [38, 46], [47, 52], [52, 53]]], ["# ::snt Michelle kept the desk with the papers.\n# ::tokens [\"Michelle\", \"kept\", \"the\", \"desk\", \"with\", \"the\", \"papers\", \".\"]\n# ::lemmas [\"Michelle\", \"keep\", \"the\", \"desk\", \"with\", \"the\", \"paper\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1 6-1.2.2\n(k / keep-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Michelle\"~e.0))\n   :ARG1 (a / and\n            :op1 (d / desk~e.3)\n            :op2 (p2 / paper~e.6)))", [[0, 8], [9, 13], [14, 17], [18, 22], [23, 27], [28, 31], [32, 38], [38, 39]]], ["# ::snt Frances hid the presents in the drawer.\n# ::tokens [\"Frances\", \"hid\", \"the\", \"presents\", \"in\", \"the\", \"drawer\", \".\"]\n# ::lemmas [\"france\", \"hide\", \"the\", \"present\", \"in\", \"the\", \"drawer\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 6-1.3\n(h / hide-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Frances\"~e.0))\n   :ARG1 (p2 / present~e.3)\n   :location (d / drawer~e.6))", [[0, 7], [8, 11], [12, 15], [16, 24], [25, 27], [28, 31], [32, 38], [38, 39]]], ["# ::snt The needle poked the cloth.\n# ::tokens [\"The\", \"needle\", \"poked\", \"the\", \"cloth\", \".\"]\n# ::lemmas [\"the\", \"needle\", \"poke\", \"the\", \"cloth\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2\n(p / poke-01~e.2\n   :ARG0 (n / needle~e.1)\n   :ARG1 (c / cloth~e.4))", [[0, 3], [4, 10], [11, 16], [17, 20], [21, 26], [26, 27]]], ["# ::snt Carrie touched that cat.\n# ::tokens [\"Carrie\", \"touched\", \"that\", \"cat\", \".\"]\n# ::lemmas [\"Carrie\", \"touch\", \"that\", \"cat\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1 3-1.2\n(t / touch-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Carrie\"~e.0))\n   :ARG1 (c / cat~e.3\n            :mod (t2 / that~e.2)))", [[0, 6], [7, 14], [15, 19], [20, 23], [23, 24]]], ["# ::snt Herman whipped the sugar and the cream.\n# ::tokens [\"Herman\", \"whipped\", \"the\", \"sugar\", \"and\", \"the\", \"cream\", \".\"]\n# ::lemmas [\"Herman\", \"whip\", \"the\", \"sugar\", \"and\", \"the\", \"cream\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1 4-1.2 6-1.2.2\n(w / whip-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Herman\"~e.0))\n   :ARG1 (a / and~e.4\n            :op1 (s / sugar~e.3)\n            :op2 (c / cream~e.6)))", [[0, 6], [7, 14], [15, 18], [19, 24], [25, 28], [29, 32], [33, 38], [38, 39]]], ["# ::snt Linda taped the picture to the wall.\n# ::tokens [\"Linda\", \"taped\", \"the\", \"picture\", \"to\", \"the\", \"wall\", \".\"]\n# ::lemmas [\"Linda\", \"tape\", \"the\", \"picture\", \"to\", \"the\", \"wall\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 6-1.3\n(t / tape-02~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Linda\"~e.0))\n   :ARG1 (p2 / picture~e.3)\n   :ARG2 (w / wall~e.6))", [[0, 5], [6, 11], [12, 15], [16, 23], [24, 26], [27, 30], [31, 35], [35, 36]]], ["# ::snt Linda taped the picture onto the wall.\n# ::tokens [\"Linda\", \"taped\", \"the\", \"picture\", \"onto\", \"the\", \"wall\", \".\"]\n# ::lemmas [\"Linda\", \"tape\", \"the\", \"picture\", \"onto\", \"the\", \"wall\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 6-1.3\n(t / tape-02~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Linda\"~e.0))\n   :ARG1 (p2 / picture~e.3)\n   :ARG2 (w / wall~e.6))", [[0, 5], [6, 11], [12, 15], [16, 23], [24, 28], [29, 32], [33, 37], [37, 38]]], ["# ::snt The child and her mother clung together.\n# ::tokens [\"The\", \"child\", \"and\", \"her\", \"mother\", \"clung\", \"together\", \".\"]\n# ::lemmas [\"the\", \"child\", \"and\", \"her\", \"mother\", \"cling\", \"together\", \".\"]\n# ::alignments 1-1.1.1 2-1.1 4-1.1.2.1.2 5-1 6-1.2\n(c / cling-01~e.5\n   :ARG0 (a / and~e.2\n            :op1 (c2 / child~e.1)\n            :op2 (p / person\n                    :ARG0-of (h / have-rel-role-91\n                                :ARG1 c2\n                                :ARG2 (m / mother~e.4))))\n   :manner (t / together~e.6))", [[0, 3], [4, 9], [10, 13], [14, 17], [18, 24], [25, 30], [31, 39], [39, 40]]], ["# ::snt This flyer and that flyer differ.\n# ::tokens [\"This\", \"flyer\", \"and\", \"that\", \"flyer\", \"differ\", \".\"]\n# ::lemmas [\"this\", \"flyer\", \"and\", \"that\", \"flyer\", \"differ\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 3-1.2.1 4-1.2 5-1\n(d / differ-02~e.5\n   :ARG1 (f / flyer~e.1\n            :mod (t / this~e.0))\n   :ARG2 (f2 / flyer~e.4\n             :mod (t2 / that~e.3)))", [[0, 4], [5, 10], [11, 14], [15, 19], [20, 25], [26, 32], [32, 33]]], ["# ::snt This flyer and that flyer differ apart.\n# ::tokens [\"This\", \"flyer\", \"and\", \"that\", \"flyer\", \"differ\", \"apart\", \".\"]\n# ::lemmas [\"this\", \"flyer\", \"and\", \"that\", \"flyer\", \"differ\", \"apart\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 3-1.2.1 4-1.2 5-1 6-1.3\n(d / differ-02~e.5\n   :ARG1 (f / flyer~e.1\n            :mod (t / this~e.0))\n   :ARG2 (f2 / flyer~e.4\n             :mod (t2 / that~e.3))\n   :ARG3 (a / apart~e.6))", [[0, 4], [5, 10], [11, 14], [15, 19], [20, 25], [26, 32], [33, 38], [38, 39]]], ["# ::snt The jeweller scribbled the contract with his name.\n# ::tokens [\"The\", \"jeweller\", \"scribbled\", \"the\", \"contract\", \"with\", \"his\", \"name\", \".\"]\n# ::lemmas [\"the\", \"jeweller\", \"scribble\", \"the\", \"contract\", \"with\", \"his\", \"name\", \".\"]\n# ::alignments 1-1.1.2 2-1 4-1.2 7-1.3\n(s / scribble-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (s2 / sell-01)\n            :mod (j / jeweller~e.1))\n   :ARG1 (c / contract~e.4)\n   :ARG2 (n / name~e.7\n            :poss p))", [[0, 3], [4, 12], [13, 22], [23, 26], [27, 35], [36, 40], [41, 44], [45, 49], [49, 50]]], ["# ::snt The gardener grew that acorn into an oak tree.\n# ::tokens [\"The\", \"gardener\", \"grew\", \"that\", \"acorn\", \"into\", \"an\", \"oak\", \"tree\", \".\"]\n# ::lemmas [\"the\", \"gardener\", \"grow\", \"that\", \"acorn\", \"into\", \"an\", \"oak\", \"tree\", \".\"]\n# ::alignments 1-1.1.1 2-1 3-1.2.1 4-1.2 7-1.3.1 8-1.3\n(g / grow-03~e.2\n   :ARG0 (p / person\n            :ARG0-of (g2 / garden-01~e.1))\n   :ARG1 (a / acorn~e.4\n            :mod (t / that~e.3))\n   :ARG4 (t2 / tree~e.8\n             :mod (o / oak~e.7)))", [[0, 3], [4, 12], [13, 17], [18, 22], [23, 28], [29, 33], [34, 36], [37, 40], [41, 45], [45, 46]]], ["# ::snt I shaped a loaf.\n# ::tokens [\"I\", \"shaped\", \"a\", \"loaf\", \".\"]\n# ::lemmas [\"i\", \"shape\", \"a\", \"loaf\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2\n(s / shape-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (l / loaf~e.3))", [[0, 1], [2, 8], [9, 10], [11, 15], [15, 16]]], ["# ::snt The children amused.\n# ::tokens [\"The\", \"children\", \"amused\", \".\"]\n# ::lemmas [\"the\", \"child\", \"amuse\", \".\"]\n# ::alignments 1-1.1 2-1\n(a / amuse-01~e.2\n   :ARG1 (c / child~e.1))", [[0, 3], [4, 12], [13, 19], [19, 20]]], ["# ::snt Susan whispered the news.\n# ::tokens [\"Susan\", \"whispered\", \"the\", \"news\", \".\"]\n# ::lemmas [\"Susan\", \"whisper\", \"the\", \"news\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2\n(w / whisper-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Susan\"~e.0))\n   :ARG1 (n2 / news~e.3))", [[0, 5], [6, 15], [16, 19], [20, 24], [24, 25]]], ["# ::snt Susan whispered at Rachel.\n# ::tokens [\"Susan\", \"whispered\", \"at\", \"Rachel\", \".\"]\n# ::lemmas [\"Susan\", \"whisper\", \"at\", \"Rachel\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1.1\n(w / whisper-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Susan\"~e.0))\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Rachel\"~e.3)))", [[0, 5], [6, 15], [16, 18], [19, 25], [25, 26]]], ["# ::snt Ellen said that melons were selling well.\n# ::tokens [\"Ellen\", \"said\", \"that\", \"melons\", \"were\", \"selling\", \"well\", \".\"]\n# ::lemmas [\"Ellen\", \"say\", \"that\", \"melon\", \"be\", \"sell\", \"well\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1 5-1.2 6-1.2.2\n(s / say-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Ellen\"~e.0))\n   :ARG1 (s2 / sell-01~e.5\n             :ARG1 (m / melon~e.3)\n             :ARG1-of (w / well-09~e.6)))", [[0, 5], [6, 10], [11, 15], [16, 22], [23, 27], [28, 35], [36, 40], [40, 41]]], ["# ::snt Ellen said about the present conditions.\n# ::tokens [\"Ellen\", \"said\", \"about\", \"the\", \"present\", \"conditions\", \".\"]\n# ::lemmas [\"Ellen\", \"say\", \"about\", \"the\", \"present\", \"condition\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.2.1 5-1.2\n(s / say-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Ellen\"~e.0))\n   :ARG1 (c / condition~e.5\n            :time (p2 / present~e.4)))", [[0, 5], [6, 10], [11, 16], [17, 20], [21, 28], [29, 39], [39, 40]]], ["# ::snt Ellen warned Helen against skating on thin ice.\n# ::tokens [\"Ellen\", \"warned\", \"Helen\", \"against\", \"skating\", \"on\", \"thin\", \"ice\", \".\"]\n# ::lemmas [\"Ellen\", \"warn\", \"Helen\", \"against\", \"skate\", \"on\", \"thin\", \"ice\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.2.1.1 4-1.2 6-1.2.3.1 7-1.2.3\n(w / warn-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Ellen\"~e.0))\n   :ARG1 (s / skate-01~e.4\n            :polarity -\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Helen\"~e.2))\n            :location (ii / ice~e.7\n                          :ARG1-of (t / thin-03~e.6)))\n   :ARG2 p2)", [[0, 5], [6, 12], [13, 18], [19, 26], [27, 34], [35, 37], [38, 42], [43, 46], [46, 47]]], ["# ::snt Cynthia nibbled on the carrot .\n# ::tokens [\"Cynthia\", \"nibbled\", \"on\", \"the\", \"carrot\", \".\"]\n# ::lemmas [\"Cynthia\", \"nibble\", \"on\", \"the\", \"carrot\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.2\n(n / nibble-01~e.1\n   :ARG0 (p / person\n            :name (n2 / name\n                      :op1 \"Cynthia\"~e.0))\n   :ARG1 (c / carrot~e.4))", [[0, 7], [8, 15], [16, 18], [19, 22], [23, 29], [30, 31]]], ["# ::snt Cynthia chewed.\n# ::tokens [\"Cynthia\", \"chewed\", \".\"]\n# ::lemmas [\"Cynthia\", \"chew\", \".\"]\n# ::alignments 0-1.1.1.1 1-1\n(c / chew-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Cynthia\"~e.0)))", [[0, 7], [8, 14], [14, 15]]], ["# ::snt Paul laughed at Mary.\n# ::tokens [\"Paul\", \"laughed\", \"at\", \"Mary\", \".\"]\n# ::lemmas [\"Paul\", \"laugh\", \"at\", \"Mary\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1.1\n(l / laugh-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Paul\"~e.0))\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Mary\"~e.3)))", [[0, 4], [5, 12], [13, 15], [16, 20], [20, 21]]], ["# ::snt Linda winked her lip.\n# ::tokens [\"Linda\", \"winked\", \"her\", \"lip\", \".\"]\n# ::lemmas [\"Linda\", \"wink\", \"her\", \"lip\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.1.2\n(w / wink-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Linda\"~e.0)\n            :part (l / lip~e.3))\n   :extent l)", [[0, 5], [6, 12], [13, 16], [17, 20], [20, 21]]], ["# ::snt My heart is pounding me.\n# ::tokens [\"My\", \"heart\", \"is\", \"pounding\", \"me\", \".\"]\n# ::lemmas [\"my\", \"heart\", \"be\", \"pound\", \"i\", \".\"]\n# ::alignments 1-1.1 3-1 4-1.1.1\n(p / pound-02~e.3\n   :ARG0 (h / heart~e.1\n            :part-of (ii / i~e.4))\n   :ARG1 ii)", [[0, 2], [3, 8], [9, 11], [12, 20], [21, 23], [23, 24]]], ["# ::snt Sharon fainted from hunger.\n# ::tokens [\"Sharon\", \"fainted\", \"from\", \"hunger\", \".\"]\n# ::lemmas [\"Sharon\", \"faint\", \"from\", \"hunger\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1 3-1.1\n(f / fainted-01~e.1\n   :ARG0 (h / hunger-01~e.3\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Sharon\"~e.0)))\n   :ARG1 p)", [[0, 6], [7, 14], [15, 19], [20, 26], [26, 27]]], ["# ::snt The witch poisoned the children.\n# ::tokens [\"The\", \"witch\", \"poisoned\", \"the\", \"children\", \".\"]\n# ::lemmas [\"the\", \"witch\", \"poison\", \"the\", \"child\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2\n(p / poison-01~e.2\n   :ARG0 (w / witch~e.1)\n   :ARG1 (c / child~e.4))", [[0, 3], [4, 9], [10, 18], [19, 22], [23, 31], [31, 32]]], ["# ::snt A grandfather clock ticked in the hallway.\n# ::tokens [\"A\", \"grandfather\", \"clock\", \"ticked\", \"in\", \"the\", \"hallway\", \".\"]\n# ::lemmas [\"a\", \"grandfather\", \"clock\", \"tick\", \"in\", \"the\", \"hallway\", \".\"]\n# ::alignments 1-1.1.1.1.1 2-1.1 3-1 6-1.2\n(t / tick-01~e.3\n   :ARG1 (c / clock~e.2\n            :poss (p / person\n                     :ARG0-of (h / have-rel-role-91\n                                 :ARG2 (g / grandfather~e.1))))\n   :location (h2 / hallway~e.6))", [[0, 1], [2, 13], [14, 19], [20, 26], [27, 29], [30, 33], [34, 41], [41, 42]]], ["# ::snt I squeaked the door.\n# ::tokens [\"I\", \"squeaked\", \"the\", \"door\", \".\"]\n# ::lemmas [\"i\", \"squeak\", \"the\", \"door\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2\n(s / squeak-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (d / door~e.3))", [[0, 1], [2, 10], [11, 14], [15, 19], [19, 20]]], ["# ::snt Over the fire there bubbled a fragrant stew.\n# ::tokens [\"Over\", \"the\", \"fire\", \"there\", \"bubbled\", \"a\", \"fragrant\", \"stew\", \".\"]\n# ::lemmas [\"over\", \"the\", \"fire\", \"there\", \"bubble\", \"a\", \"fragrant\", \"stew\", \".\"]\n# ::alignments 0-1.2 2-1.2.1 4-1 6-1.1.1 7-1.1\n(b / bubble-01~e.4\n   :ARG1 (s / stew~e.7\n            :mod (f / fragrant~e.6))\n   :location (o / over~e.0\n                :op1 (f2 / fire~e.2)))", [[0, 4], [5, 8], [9, 13], [14, 19], [20, 27], [28, 29], [30, 38], [39, 43], [43, 44]]], ["# ::snt Soaring temperatures are predicted for this weekend.\n# ::tokens [\"Soaring\", \"temperatures\", \"are\", \"predicted\", \"for\", \"this\", \"weekend\", \".\"]\n# ::lemmas [\"soar\", \"temperature\", \"be\", \"predict\", \"for\", \"this\", \"weekend\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 3-1 5-1.2.1 6-1.2\n(p / predict-01~e.3\n   :ARG1 (t / temperature~e.1\n            :ARG1-of (s / soar-01~e.0))\n   :time (w / weekend~e.6\n            :mod (t2 / this~e.5)))", [[0, 7], [8, 20], [21, 24], [25, 34], [35, 38], [39, 43], [44, 51], [51, 52]]], ["# ::snt The fort fluttered with many flags.\n# ::tokens [\"The\", \"fort\", \"fluttered\", \"with\", \"many\", \"flags\", \".\"]\n# ::lemmas [\"the\", \"fort\", \"flutter\", \"with\", \"many\", \"flag\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2.1 5-1.2\n(f / flutter-01~e.2\n   :ARG1 (f2 / fort~e.1)\n   :accompanier (f3 / flag~e.5\n                    :quant (m / many~e.4)))", [[0, 3], [4, 8], [9, 18], [19, 23], [24, 28], [29, 34], [34, 35]]], ["# ::snt The voices echoed in the hall.\n# ::tokens [\"The\", \"voices\", \"echoed\", \"in\", \"the\", \"hall\", \".\"]\n# ::lemmas [\"the\", \"voice\", \"echo\", \"in\", \"the\", \"hall\", \".\"]\n# ::alignments 1-1.1 2-1 5-1.2\n(e / echo-01~e.2\n   :ARG1 (v / voice~e.1)\n   :location (h / hall~e.5))", [[0, 3], [4, 10], [11, 17], [18, 20], [21, 24], [25, 29], [29, 30]]], ["# ::snt The stream twists through the valley.\n# ::tokens [\"The\", \"stream\", \"twists\", \"through\", \"the\", \"valley\", \".\"]\n# ::lemmas [\"the\", \"stream\", \"twist\", \"through\", \"the\", \"valley\", \".\"]\n# ::alignments 1-1.1 2-1 5-1.2\n(t / twist-01~e.2\n   :ARG1 (s / stream~e.1)\n   :path (v / valley~e.5))", [[0, 3], [4, 10], [11, 17], [18, 25], [26, 29], [30, 36], [36, 37]]], ["# ::snt There presented itself a wonderful opportunity yesterday.\n# ::tokens [\"There\", \"presented\", \"itself\", \"a\", \"wonderful\", \"opportunity\", \"yesterday\", \".\"]\n# ::lemmas [\"there\", \"present\", \"itself\", \"a\", \"wonderful\", \"opportunity\", \"yesterday\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2.1 5-1.2 6-1.3\n(p / present-01~e.1\n   :ARG0 (t / there~e.0)\n   :ARG1 (o / opportunity~e.5\n            :ARG1-of (w / wonderful-03~e.4))\n   :time (y / yesterday~e.6))", [[0, 5], [6, 15], [16, 22], [23, 24], [25, 34], [35, 46], [47, 56], [56, 57]]], ["# ::snt A wonderful opportunity presented itself to him yesterday.\n# ::tokens [\"A\", \"wonderful\", \"opportunity\", \"presented\", \"itself\", \"to\", \"him\", \"yesterday\", \".\"]\n# ::lemmas [\"a\", \"wonderful\", \"opportunity\", \"present\", \"itself\", \"to\", \"he\", \"yesterday\", \".\"]\n# ::alignments 1-1.1.1 2-1.1 3-1 6-1.2 7-1.3\n(p / present-01~e.3\n   :ARG1 (o / opportunity~e.2\n            :ARG1-of (w / wonderful-03~e.1))\n   :ARG2 (h / he~e.6)\n   :time (y / yesterday~e.7))", [[0, 1], [2, 11], [12, 23], [24, 33], [34, 40], [41, 43], [44, 47], [48, 57], [57, 58]]], ["# ::snt Out of the box jumped a little white rabbit.\n# ::tokens [\"Out\", \"of\", \"the\", \"box\", \"jumped\", \"a\", \"little\", \"white\", \"rabbit\", \".\"]\n# ::lemmas [\"out\", \"of\", \"the\", \"box\", \"jump\", \"a\", \"little\", \"white\", \"rabbit\", \".\"]\n# ::alignments 3-1.1.1 4-1 6-1.2.1 7-1.2.2 8-1.2\n(j / jump-03~e.4\n   :ARG0 (t / thing\n            :ARG1-of (b / box-01~e.3))\n   :ARG1 (r / rabbit~e.8\n            :mod (l / little~e.6)\n            :ARG1-of (w / white-03~e.7)))", [[0, 3], [4, 6], [7, 10], [11, 14], [15, 21], [22, 23], [24, 30], [31, 36], [37, 43], [43, 44]]], ["# ::snt Penny skated around the rink.\n# ::tokens [\"Penny\", \"skated\", \"around\", \"the\", \"rink\", \".\"]\n# ::lemmas [\"penny\", \"skate\", \"around\", \"the\", \"rink\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2 4-1.2.1\n(s / skate-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Penny\"~e.0))\n   :location (a / around~e.2\n                :op1 (r / rink~e.4)))", [[0, 5], [6, 12], [13, 19], [20, 23], [24, 28], [28, 29]]], ["# ::snt Jackie accompanied Rose.\n# ::tokens [\"Jackie\", \"accompanied\", \"Rose\", \".\"]\n# ::lemmas [\"Jackie\", \"accompany\", \"Rose\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1\n(a / accompany-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jackie\"~e.0))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Rose\"~e.2)))", [[0, 6], [7, 18], [19, 23], [23, 24]]], ["# ::snt many information was provided.\n# ::tokens [\"many\", \"information\", \"was\", \"provided\", \".\"]\n# ::lemmas [\"many\", \"information\", \"be\", \"provide\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 3-1\n(p / provide-01~e.3\n   :ARG1 (ii / information~e.1\n             :quant (m / many~e.0)))", [[0, 4], [5, 16], [17, 20], [21, 29], [29, 30]]], ["# ::snt John offers many advice.\n# ::tokens [\"John\", \"offers\", \"many\", \"advice\", \".\"]\n# ::lemmas [\"John\", \"offer\", \"many\", \"advice\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1 3-1.2\n(o / offer-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (a / advise-01~e.3\n            :quant (m / many~e.2)))", [[0, 4], [5, 11], [12, 16], [17, 23], [23, 24]]], ["# ::snt The cake that Jones got was more delicious than the one that Smith got.\n# ::tokens [\"The\", \"cake\", \"that\", \"Jones\", \"got\", \"was\", \"more\", \"delicious\", \"than\", \"the\", \"one\", \"that\", \"Smith\", \"got\", \".\"]\n# ::lemmas [\"the\", \"cake\", \"that\", \"Jones\", \"get\", \"be\", \"more\", \"delicious\", \"than\", \"the\", \"one\", \"that\", \"Smith\", \"get\", \".\"]\n# ::alignments 1-1.1 3-1.1.1.1.1.1 4-1.1.1 6-1.3 7-1.2 12-1.4.1.1.1.1 13-1.4.1\n(h / have-degree-91\n   :ARG1 (c / cake~e.1\n            :ARG1-of (g / get-01~e.4\n                        :ARG0 (p / person\n                                 :name (n / name\n                                          :op1 \"Jones\"~e.3))))\n   :ARG2 (d / delicious~e.7)\n   :ARG3 (m / more~e.6)\n   :ARG4 (c2 / cake\n             :ARG1-of (g2 / get-01~e.13\n                          :ARG0 (p2 / person\n                                    :name (n2 / name\n                                              :op1 \"Smith\"~e.12)))))", [[0, 3], [4, 8], [9, 13], [14, 19], [20, 23], [24, 27], [28, 32], [33, 42], [43, 47], [48, 51], [52, 55], [56, 60], [61, 66], [67, 70], [70, 71]]], ["# ::snt We recommend to eat less cake and pastry.\n# ::tokens [\"We\", \"recommend\", \"to\", \"eat\", \"less\", \"cake\", \"and\", \"pastry\", \".\"]\n# ::lemmas [\"we\", \"recommend\", \"to\", \"eat\", \"less\", \"cake\", \"and\", \"pastry\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 4-1.2.2.3 5-1.2.2.1 6-1.2.2 7-1.2.2.2\n(r / recommend-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (e / eat-01~e.3\n            :ARG0 (y / you)\n            :ARG1 (a / and~e.6\n                     :op1 (c / cake~e.5)\n                     :op2 (p / pastry~e.7)\n                     :mod (l / less~e.4))))", [[0, 2], [3, 12], [13, 15], [16, 19], [20, 24], [25, 29], [30, 33], [34, 40], [40, 41]]], ["# ::snt I saw that gas can explode.\n# ::tokens [\"I\", \"saw\", \"that\", \"gas\", \"can\", \"explode\", \".\"]\n# ::lemmas [\"i\", \"see\", \"that\", \"gas\", \"can\", \"explode\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1.1.1 3-1.2.1.1 5-1.2.1\n(s / see-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / possible-01\n            :ARG1 (e / explode-01~e.5\n                     :ARG1 (g / gas~e.3\n                              :mod (t / that~e.2)))))", [[0, 1], [2, 5], [6, 10], [11, 14], [15, 18], [19, 26], [26, 27]]], ["# ::snt He washed her.\n# ::tokens [\"He\", \"washed\", \"her\", \".\"]\n# ::lemmas [\"he\", \"wash\", \"she\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2\n(w / wash-01~e.1\n   :ARG0 (h / he~e.0)\n   :ARG1 (s / she~e.2))", [[0, 2], [3, 9], [10, 13], [13, 14]]], ["# ::snt Wash you!\n# ::tokens [\"Wash\", \"you\", \"!\"]\n# ::lemmas [\"wash\", \"you\", \"!\"]\n# ::alignments 0-1 1-1.2\n(w / wash-01~e.0\n   :mode imperative\n   :ARG0 (y / you~e.1)\n   :mode expressive)", [[0, 4], [5, 8], [8, 9]]], ["# ::snt They have no in.\n# ::tokens [\"They\", \"have\", \"no\", \"in\", \".\"]\n# ::lemmas [\"they\", \"have\", \"no\", \"in\", \".\"]\n# ::alignments 0-1.1 1-1\n(h / have-03~e.1\n   :ARG0 (t / they~e.0)\n   :ARG1 (n / no-in))", [[0, 4], [5, 9], [10, 12], [13, 15], [15, 16]]], ["# ::snt Some my jobs are in jeopardy.\n# ::tokens [\"Some\", \"my\", \"jobs\", \"are\", \"in\", \"jeopardy\", \".\"]\n# ::lemmas [\"some\", \"my\", \"job\", \"be\", \"in\", \"jeopardy\", \".\"]\n# ::alignments 0-1.1.2 2-1.1 5-1\n(j / jeopardize-01~e.5\n   :ARG1 (j2 / job~e.2\n             :poss (ii / i)\n             :quant (s / some~e.0)))", [[0, 4], [5, 7], [8, 12], [13, 16], [17, 19], [20, 28], [28, 29]]], ["# ::snt It was the policeman met that several young students in the park last night.\n# ::tokens [\"It\", \"was\", \"the\", \"policeman\", \"met\", \"that\", \"several\", \"young\", \"students\", \"in\", \"the\", \"park\", \"last\", \"night\", \".\"]\n# ::lemmas [\"it\", \"be\", \"the\", \"policeman\", \"meet\", \"that\", \"several\", \"young\", \"student\", \"in\", \"the\", \"park\", \"last\", \"night\", \".\"]\n# ::alignments 3-1.1 4-1 6-1.2.2 7-1.2.1 8-1.2.3 11-1.3 13-1.4.1\n(m / meet-02~e.4\n   :ARG0 (p / policeman~e.3)\n   :ARG1 (p2 / person\n             :mod (y / young~e.7)\n             :quant (s / several~e.6)\n             :ARG0-of (s2 / study-01~e.8))\n   :location (p3 / park~e.11)\n   :time (d / date-entity\n            :dayperiod (n / night~e.13)\n            :mod (y2 / yesterday)))", [[0, 2], [3, 6], [7, 10], [11, 20], [21, 24], [25, 29], [30, 37], [38, 43], [44, 52], [53, 55], [56, 59], [60, 64], [65, 69], [70, 75], [75, 76]]], ["# ::snt did the policeman meet in the park?\n# ::tokens [\"did\", \"the\", \"policeman\", \"meet\", \"in\", \"the\", \"park\", \"?\"]\n# ::lemmas [\"do\", \"the\", \"policeman\", \"meet\", \"in\", \"the\", \"park\", \"?\"]\n# ::alignments 2-1.2 3-1 6-1.3\n(m / meet-03~e.3\n   :polarity (a / amr-unknown)\n   :ARG0 (p / policeman~e.2)\n   :location (p2 / park~e.6))", [[0, 3], [4, 7], [8, 17], [18, 22], [23, 25], [26, 29], [30, 34], [34, 35]]], ["# ::snt John put old books in the box.\n# ::tokens [\"John\", \"put\", \"old\", \"books\", \"in\", \"the\", \"box\", \".\"]\n# ::lemmas [\"John\", \"put\", \"old\", \"book\", \"in\", \"the\", \"box\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1 3-1.2 6-1.3\n(p / put-01~e.1\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"John\"~e.0))\n   :ARG1 (b / book~e.3\n            :mod (o / old~e.2))\n   :ARG2 (b2 / box~e.6))", [[0, 4], [5, 8], [9, 12], [13, 18], [19, 21], [22, 25], [26, 29], [29, 30]]], ["# ::snt The monkeys proud of their leader.\n# ::tokens [\"The\", \"monkeys\", \"proud\", \"of\", \"their\", \"leader\", \".\"]\n# ::lemmas [\"the\", \"monkey\", \"proud\", \"of\", \"their\", \"leader\", \".\"]\n# ::alignments 1-1.1 5-1.2.1\n(p / pride-01\n   :ARG0 (m / monkey~e.1)\n   :ARG1 (p2 / person\n             :ARG0-of (l / lead-02~e.5\n                         :ARG1 m)))", [[0, 3], [4, 11], [12, 17], [18, 20], [21, 26], [27, 33], [33, 34]]], ["# ::snt John sounded very.\n# ::tokens [\"John\", \"sounded\", \"very\", \".\"]\n# ::lemmas [\"John\", \"sound\", \"very\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2\n(s / sound-01~e.1\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG2 (v / very~e.2))", [[0, 4], [5, 12], [13, 17], [17, 18]]], ["# ::snt I don't know if I should agree.\n# ::tokens [\"I\", \"do\", \"n't\", \"know\", \"if\", \"I\", \"should\", \"agree\", \".\"]\n# ::lemmas [\"i\", \"do\", \"not\", \"know\", \"if\", \"i\", \"should\", \"agree\", \".\"]\n# ::alignments 0-1.2 3-1 7-1.3.1.1\n(k / know-01~e.3\n   :polarity -\n   :ARG0 (ii / i~e.0)\n   :ARG1 (t / truth-value\n            :polarity-of (r / recommend-01\n                            :ARG1 (a / agree-01~e.7\n                                     :ARG0 ii))))", [[0, 1], [2, 4], [4, 7], [8, 12], [13, 15], [16, 17], [18, 24], [25, 30], [30, 31]]], ["# ::snt John bought a book on the table.\n# ::tokens [\"John\", \"bought\", \"a\", \"book\", \"on\", \"the\", \"table\", \".\"]\n# ::lemmas [\"John\", \"buy\", \"a\", \"book\", \"on\", \"the\", \"table\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 6-1.2.1\n(b / buy-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (b2 / book~e.3\n             :location (t / table~e.6)))", [[0, 4], [5, 11], [12, 13], [14, 18], [19, 21], [22, 25], [26, 31], [31, 32]]], ["# ::snt John called the president a fool.\n# ::tokens [\"John\", \"called\", \"the\", \"president\", \"a\", \"fool\", \".\"]\n# ::lemmas [\"John\", \"call\", \"the\", \"president\", \"a\", \"fool\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1.1 5-1.3\n(c / call-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (p2 / person\n             :ARG0-of (h / have-org-role-91\n                         :ARG2 (p3 / president~e.3)))\n   :ARG2 (f / fool~e.5))", [[0, 4], [5, 11], [12, 15], [16, 25], [26, 27], [28, 32], [32, 33]]], ["# ::snt I forgot how good beer tastes.\n# ::tokens [\"I\", \"forgot\", \"how\", \"good\", \"beer\", \"tastes\", \".\"]\n# ::lemmas [\"i\", \"forget\", \"how\", \"good\", \"beer\", \"taste\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1 4-1.2.1.1\n(f / forget-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (t / thing\n            :degree-of (g / good-02~e.3\n                          :ARG1 (b / beer~e.4))))", [[0, 1], [2, 8], [9, 12], [13, 17], [18, 22], [23, 29], [29, 30]]], ["# ::snt This teacher is a genius.\n# ::tokens [\"This\", \"teacher\", \"is\", \"a\", \"genius\", \".\"]\n# ::lemmas [\"this\", \"teacher\", \"be\", \"a\", \"genius\", \".\"]\n# ::alignments 0-1.1.2 1-1.1.1 4-1\n(g / genius~e.4\n   :domain (p / person\n              :ARG0-of (t / teach-01~e.1)\n              :mod (t2 / this~e.0)))", [[0, 4], [5, 12], [13, 15], [16, 17], [18, 24], [24, 25]]], ["# ::snt A good friend is remained to me by him.\n# ::tokens [\"A\", \"good\", \"friend\", \"is\", \"remained\", \"to\", \"me\", \"by\", \"him\", \".\"]\n# ::lemmas [\"a\", \"good\", \"friend\", \"be\", \"remain\", \"to\", \"i\", \"by\", \"he\", \".\"]\n# ::alignments 1-1.1.1.1.1 2-1.1.1.1 4-1 6-1.2\n(r / remain-01~e.4\n   :ARG1 (p / person\n            :ARG0-of (h / have-rel-role-91\n                        :ARG2 (f / friend~e.2\n                                 :ARG1-of (g / good-02~e.1))))\n   :ARG3 (ii / i~e.6))", [[0, 1], [2, 6], [7, 13], [14, 16], [17, 25], [26, 28], [29, 31], [32, 34], [35, 38], [38, 39]]], ["# ::snt John ate his noodle quietly.\n# ::tokens [\"John\", \"ate\", \"his\", \"noodle\", \"quietly\", \".\"]\n# ::lemmas [\"John\", \"eat\", \"his\", \"noodle\", \"quietly\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 4-1.3\n(e / eat-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (n2 / noodle~e.3\n             :poss p)\n   :ARG1-of (q / quiet-04~e.4))", [[0, 4], [5, 8], [9, 12], [13, 19], [20, 27], [27, 28]]], ["# ::snt A smith hammered the metal.\n# ::tokens [\"A\", \"smith\", \"hammered\", \"the\", \"metal\", \".\"]\n# ::lemmas [\"a\", \"smith\", \"hammer\", \"the\", \"metal\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2\n(h / hammer-01~e.2\n   :ARG0 (s / smith~e.1)\n   :ARG1 (m / metal~e.4))", [[0, 1], [2, 7], [8, 16], [17, 20], [21, 26], [26, 27]]], ["# ::snt Sandy removed her ballet shoes.\n# ::tokens [\"Sandy\", \"removed\", \"her\", \"ballet\", \"shoes\", \".\"]\n# ::lemmas [\"Sandy\", \"remove\", \"her\", \"ballet\", \"shoe\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1 4-1.2\n(r / remove-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sandy\"~e.0))\n   :ARG1 (s / shoe~e.4\n            :mod (b / ballet~e.3)\n            :poss p))", [[0, 5], [6, 13], [14, 17], [18, 24], [25, 30], [30, 31]]], ["# ::snt This week will be a difficult one for us.\n# ::tokens [\"This\", \"week\", \"will\", \"be\", \"a\", \"difficult\", \"one\", \"for\", \"us\", \".\"]\n# ::lemmas [\"This\", \"week\", \"will\", \"be\", \"a\", \"difficult\", \"one\", \"for\", \"we\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 5-1 8-1.2\n(d / difficult~e.5\n   :domain (w / week~e.1\n              :mod (t / this~e.0))\n   :prep-for (w2 / we~e.8))", [[0, 4], [5, 9], [10, 14], [15, 17], [18, 19], [20, 29], [30, 33], [34, 37], [38, 40], [40, 41]]], ["# ::snt Benny worked in a shoe factory when he was a student.\n# ::tokens [\"Benny\", \"worked\", \"in\", \"a\", \"shoe\", \"factory\", \"when\", \"he\", \"was\", \"a\", \"student\", \".\"]\n# ::lemmas [\"Benny\", \"work\", \"in\", \"a\", \"shoe\", \"factory\", \"when\", \"he\", \"be\", \"a\", \"student\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.2.1 5-1.2 10-1.3.1\n(w / work-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Benny\"~e.0))\n   :ARG2 (f / factory~e.5\n            :mod (s / shoe~e.4))\n   :time (p2 / person\n             :ARG0-of (s2 / study-01~e.10)\n             :domain p))", [[0, 5], [6, 12], [13, 15], [16, 17], [18, 22], [23, 30], [31, 35], [36, 38], [39, 42], [43, 44], [45, 52], [52, 53]]], ["# ::snt Everyone hoped that she would sing.\n# ::tokens [\"Everyone\", \"hoped\", \"that\", \"she\", \"would\", \"sing\", \".\"]\n# ::lemmas [\"everyone\", \"hope\", \"that\", \"she\", \"would\", \"sing\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1 5-1.2\n(h / hope-01~e.1\n   :ARG0 (e / everyone~e.0)\n   :ARG1 (s / sing-01~e.5\n            :ARG0 (s2 / she~e.3)))", [[0, 8], [9, 14], [15, 19], [20, 23], [24, 29], [30, 34], [34, 35]]], ["# ::snt This proved a decisive factor.\n# ::tokens [\"This\", \"proved\", \"a\", \"decisive\", \"factor\", \".\"]\n# ::lemmas [\"this\", \"prove\", \"a\", \"decisive\", \"factor\", \".\"]\n# ::alignments 0-1.1.2 1-1 3-1.1.1 4-1.1\n(p / prove-01~e.1\n   :ARG1 (f / factor~e.4\n            :mod (d / decisive~e.3)\n            :domain (t / this~e.0)))", [[0, 4], [5, 11], [12, 13], [14, 22], [23, 29], [29, 30]]], ["# ::snt The crocodile devoured the doughnut.\n# ::tokens [\"The\", \"crocodile\", \"devoured\", \"the\", \"doughnut\", \".\"]\n# ::lemmas [\"the\", \"crocodile\", \"devour\", \"the\", \"doughnut\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2\n(d / devour-01~e.2\n   :ARG0 (c / crocodile~e.1)\n   :ARG1 (d2 / doughnut~e.4))", [[0, 3], [4, 13], [14, 22], [23, 26], [27, 35], [35, 36]]], ["# ::snt John is afraid of Bill.\n# ::tokens [\"John\", \"is\", \"afraid\", \"of\", \"Bill\", \".\"]\n# ::lemmas [\"John\", \"be\", \"afraid\", \"of\", \"Bill\", \".\"]\n# ::alignments 0-1.1.1.1 4-1.2.1.1\n(f / fear-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Bill\"~e.4)))", [[0, 4], [5, 7], [8, 14], [15, 17], [18, 22], [22, 23]]], ["# ::snt John put under the bathtub.\n# ::tokens [\"John\", \"put\", \"under\", \"the\", \"bathtub\", \".\"]\n# ::lemmas [\"John\", \"put\", \"under\", \"the\", \"bathtub\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.3 4-1.3.1\n(p / put-01~e.1\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"John\"~e.0))\n   :ARG1 p2\n   :ARG2 (u / under~e.2\n            :op1 (b / bathtub~e.4)))", [[0, 4], [5, 8], [9, 14], [15, 18], [19, 26], [26, 27]]], ["# ::snt John placed Kim behind the garage.\n# ::tokens [\"John\", \"placed\", \"Kim\", \"behind\", \"the\", \"garage\", \".\"]\n# ::lemmas [\"John\", \"place\", \"Kim\", \"behind\", \"the\", \"garage\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1 3-1.3 5-1.3.1\n(p / place-01~e.1\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"John\"~e.0))\n   :ARG1 (p3 / person\n             :name (n2 / name\n                       :op1 \"Kim\"~e.2))\n   :ARG2 (b / behind~e.3\n            :op1 (g / garage~e.5)))", [[0, 4], [5, 11], [12, 15], [16, 22], [23, 26], [27, 33], [33, 34]]], ["# ::snt Kim depends for Sandy.\n# ::tokens [\"Kim\", \"depends\", \"for\", \"Sandy\", \".\"]\n# ::lemmas [\"Kim\", \"depend\", \"for\", \"Sandy\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1.1\n(d / depend-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kim\"~e.0))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Sandy\"~e.3)))", [[0, 3], [4, 11], [12, 15], [16, 21], [21, 22]]], ["# ::snt John put the book in the box.\n# ::tokens [\"John\", \"put\", \"the\", \"book\", \"in\", \"the\", \"box\", \".\"]\n# ::lemmas [\"John\", \"put\", \"the\", \"book\", \"in\", \"the\", \"box\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 6-1.3\n(p / put-01~e.1\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"John\"~e.0))\n   :ARG1 (b / book~e.3)\n   :ARG2 (b2 / box~e.6))", [[0, 4], [5, 8], [9, 12], [13, 17], [18, 20], [21, 24], [25, 28], [28, 29]]], ["# ::snt John taught English Syntax to new students.\n# ::tokens [\"John\", \"taught\", \"English\", \"Syntax\", \"to\", \"new\", \"students\", \".\"]\n# ::lemmas [\"John\", \"teach\", \"English\", \"Syntax\", \"to\", \"new\", \"student\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1 5-1.3.2 6-1.3.1\n(t / teach-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (l / language\n            :name (n2 / name\n                      :op1 \"English\"~e.2))\n   :ARG2 (p2 / person\n             :ARG0-of (s / study-01~e.6)\n             :ARG1-of (n3 / new-01~e.5)))", [[0, 4], [5, 11], [12, 19], [20, 26], [27, 29], [30, 33], [34, 42], [42, 43]]], ["# ::snt John regards Bill as a good friend.\n# ::tokens [\"John\", \"regards\", \"Bill\", \"as\", \"a\", \"good\", \"friend\", \".\"]\n# ::lemmas [\"John\", \"regard\", \"Bill\", \"as\", \"a\", \"good\", \"friend\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1 5-1.3.1 6-1.3\n(r / regard-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Bill\"~e.2))\n   :ARG2 (f / friend~e.6\n            :ARG1-of (g / good-02~e.5)))", [[0, 4], [5, 12], [13, 17], [18, 20], [21, 22], [23, 27], [28, 34], [34, 35]]], ["# ::snt Kim put in the box.\n# ::tokens [\"Kim\", \"put\", \"in\", \"the\", \"box\", \".\"]\n# ::lemmas [\"Kim\", \"put\", \"in\", \"the\", \"box\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.2\n(p / put-01~e.1\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Kim\"~e.0))\n   :ARG1 (b / box~e.4))", [[0, 3], [4, 7], [8, 10], [11, 14], [15, 18], [18, 19]]], ["# ::snt The chickens seem fond of the farmer.\n# ::tokens [\"The\", \"chickens\", \"seem\", \"fond\", \"of\", \"the\", \"farmer\", \".\"]\n# ::lemmas [\"the\", \"chicken\", \"seem\", \"fond\", \"of\", \"the\", \"farmer\", \".\"]\n# ::alignments 1-1.1.1 2-1 6-1.1.2.1\n(s / seem-01~e.2\n   :ARG1 (l / like-01\n            :ARG0 (c / chicken~e.1)\n            :ARG1 (p / person\n                     :ARG0-of (f / farm-01~e.6))))", [[0, 3], [4, 12], [13, 17], [18, 22], [23, 25], [26, 29], [30, 36], [36, 37]]], ["# ::snt The rules require that the executives be polite.\n# ::tokens [\"The\", \"rules\", \"require\", \"that\", \"the\", \"executives\", \"be\", \"polite\", \".\"]\n# ::lemmas [\"the\", \"rule\", \"require\", \"that\", \"the\", \"executive\", \"be\", \"polite\", \".\"]\n# ::alignments 1-1.1 2-1 5-1.2.1.1.1 7-1.2\n(r / require-01~e.2\n   :ARG0 (r2 / rule~e.1)\n   :ARG1 (p / polite-01~e.7\n            :ARG1 (p2 / person\n                      :ARG0-of (h / have-org-role-91\n                                  :ARG2 (e / executive~e.5)))))", [[0, 3], [4, 9], [10, 17], [18, 22], [23, 26], [27, 37], [38, 40], [41, 47], [47, 48]]], ["# ::snt That Fred was unpopular nominated Bill.\n# ::tokens [\"That\", \"Fred\", \"was\", \"unpopular\", \"nominated\", \"Bill\", \".\"]\n# ::lemmas [\"that\", \"Fred\", \"be\", \"unpopular\", \"nominated\", \"Bill\", \".\"]\n# ::alignments 1-1.2.1.1 3-1.2.2 4-1.1 5-1.1.1.1.1\n(p / person\n   :ARG1-of (n / nominate-01~e.4\n               :ARG2 (p2 / person\n                         :name (n2 / name\n                                   :op1 \"Bill\"~e.5)))\n   :domain (p3 / person\n               :name (n3 / name\n                         :op1 \"Fred\"~e.1)\n               :ARG1-of (p4 / popular-02~e.3\n                            :polarity -)))", [[0, 4], [5, 9], [10, 13], [14, 23], [24, 33], [34, 38], [38, 39]]], ["# ::snt They were taking a hard look at possible FTA.\n# ::tokens [\"They\", \"were\", \"taking\", \"a\", \"hard\", \"look\", \"at\", \"possible\", \"FTA\", \".\"]\n# ::lemmas [\"they\", \"be\", \"take\", \"a\", \"hard\", \"look\", \"at\", \"possible\", \"FTA\", \".\"]\n# ::alignments 0-1.1 4-1.3 5-1 7-1.2\n(l / look-01~e.5\n   :ARG0 (t / they~e.0)\n   :ARG1 (p / possible-01~e.7\n            :ARG1 (f / free-01\n                     :ARG3 (t2 / trade-01)))\n   :ARG1-of (h / hard-02~e.4))", [[0, 4], [5, 9], [10, 16], [17, 18], [19, 23], [24, 28], [29, 31], [32, 40], [41, 44], [44, 45]]], ["# ::snt John paid me against the book.\n# ::tokens [\"John\", \"paid\", \"me\", \"against\", \"the\", \"book\", \".\"]\n# ::lemmas [\"John\", \"pay\", \"i\", \"against\", \"the\", \"book\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2 3-1.3 5-1.3.1\n(p / pay-01~e.1\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"John\"~e.0))\n   :ARG2 (ii / i~e.2)\n   :ARG3 (a / against~e.3\n            :op1 (b / book~e.5)))", [[0, 4], [5, 9], [10, 12], [13, 20], [21, 24], [25, 29], [29, 30]]], ["# ::snt The committee will study the feasibility of setting up a national computer network.\n# ::tokens [\"The\", \"committee\", \"will\", \"study\", \"the\", \"feasibility\", \"of\", \"setting\", \"up\", \"a\", \"national\", \"computer\", \"network\", \".\"]\n# ::lemmas [\"the\", \"committee\", \"will\", \"study\", \"the\", \"feasibility\", \"of\", \"set\", \"up\", \"a\", \"national\", \"computer\", \"network\", \".\"]\n# ::alignments 1-1.1 3-1 5-1.2 10-1.2.1.1.2 11-1.2.1.1.1 12-1.2.1.1\n(s / study-01~e.3\n   :ARG0 (c / committee~e.1)\n   :ARG1 (f / feasibility~e.5\n            :mod (s2 / set-up-03\n                     :ARG1 (n / network~e.12\n                              :mod (c2 / computer~e.11)\n                              :mod (n2 / nation~e.10)))))", [[0, 3], [4, 13], [14, 18], [19, 24], [25, 28], [29, 40], [41, 43], [44, 51], [52, 54], [55, 56], [57, 65], [66, 74], [75, 82], [82, 83]]], ["# ::snt We made them be rude.\n# ::tokens [\"We\", \"made\", \"them\", \"be\", \"rude\", \".\"]\n# ::lemmas [\"we\", \"make\", \"they\", \"be\", \"rude\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1 4-1.2\n(m / make-02~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (r / rude-01~e.4\n            :ARG1 (t / they~e.2)))", [[0, 2], [3, 7], [8, 12], [13, 15], [16, 20], [20, 21]]], ["# ::snt After reading the pamphlet, Judy threw it into the garbage can.\n# ::tokens [\"After\", \"reading\", \"the\", \"pamphlet\", \",\", \"Judy\", \"threw\", \"it\", \"into\", \"the\", \"garbage\", \"can\", \".\"]\n# ::lemmas [\"after\", \"read\", \"the\", \"pamphlet\", \",\", \"Judy\", \"throw\", \"it\", \"into\", \"the\", \"garbage\", \"can\", \".\"]\n# ::alignments 0-1.4 1-1.4.1 3-1.2 5-1.1.1.1 6-1 10-1.3.1 11-1.3\n(t / throw-01~e.6\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Judy\"~e.5))\n   :ARG1 (p2 / pamphlet~e.3)\n   :ARG2 (c / can~e.11\n            :mod (g / garbage~e.10))\n   :time (a / after~e.0\n            :op1 (r / read-01~e.1\n                    :ARG0 p\n                    :ARG1 p2)))", [[0, 5], [6, 13], [14, 17], [18, 26], [26, 27], [28, 32], [33, 38], [39, 41], [42, 46], [47, 50], [51, 58], [59, 62], [62, 63]]], ["# ::snt Students studying English reads Conrad's Heart of Darkness while at university.\n# ::tokens [\"Students\", \"studying\", \"English\", \"reads\", \"Conrad\", \"'s\", \"Heart\", \"of\", \"Darkness\", \"while\", \"at\", \"university\", \".\"]\n# ::lemmas [\"student\", \"study\", \"English\", \"read\", \"Conrad\", \"'s\", \"heart\", \"of\", \"Darkness\", \"while\", \"at\", \"university\", \".\"]\n# ::alignments 1-1.1.1 2-1.1.1.1.1.1 3-1 4-1.2.2.1.1 6-1.2.1.1 7-1.2.1.2 11-1.3.2\n(r / read-01~e.3\n   :ARG0 (p / person\n            :ARG0-of (s / study-01~e.1\n                        :ARG1 (l / language\n                                 :name (n / name\n                                          :op1 \"English\"~e.2))))\n   :ARG1 (b / book\n            :name (n2 / name\n                      :op1 \"Heart\"~e.6\n                      :op2 \"of\"~e.7\n                      :op3 \" Darkness\")\n            :source (p2 / person\n                        :name (n3 / name\n                                  :op1 \"Conrad\"~e.4)))\n   :time (b2 / be-located-at-91\n             :ARG1 p\n             :ARG2 (u / university~e.11)))", [[0, 8], [9, 17], [18, 25], [26, 31], [32, 38], [38, 40], [41, 46], [47, 49], [50, 58], [59, 64], [65, 67], [68, 78], [78, 79]]], ["# ::snt I read some of the book.\n# ::tokens [\"I\", \"read\", \"some\", \"of\", \"the\", \"book\", \".\"]\n# ::lemmas [\"i\", \"read\", \"some\", \"of\", \"the\", \"book\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1 3-1.2.2 5-1.2\n(r / read-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (b / book~e.5\n            :quant (s / some~e.2)\n            :ARG1-of (ii2 / include-91~e.3\n                          :ARG2 (b2 / book))))", [[0, 1], [2, 6], [7, 11], [12, 14], [15, 18], [19, 23], [23, 24]]], ["# ::snt Most of the fruit is rotten.\n# ::tokens [\"Most\", \"of\", \"the\", \"fruit\", \"is\", \"rotten\", \".\"]\n# ::lemmas [\"most\", \"of\", \"the\", \"fruit\", \"be\", \"rotten\", \".\"]\n# ::alignments 0-1.1.1 3-1.1\n(r / rot-01\n   :ARG1 (f / fruit~e.3\n            :mod (m / most~e.0)))", [[0, 4], [5, 7], [8, 11], [12, 17], [18, 20], [21, 27], [27, 28]]], ["# ::snt Neither of students failed.\n# ::tokens [\"Neither\", \"of\", \"students\", \"failed\", \".\"]\n# ::lemmas [\"neither\", \"of\", \"student\", \"fail\", \".\"]\n# ::alignments 2-1.2.1 3-1\n(f / fail-01~e.3\n   :polarity -\n   :ARG1 (p / person\n            :ARG0-of (s / study-01~e.2)))", [[0, 7], [8, 10], [11, 19], [20, 26], [26, 27]]], ["# ::snt I drank some of water.\n# ::tokens [\"I\", \"drank\", \"some\", \"of\", \"water\", \".\"]\n# ::lemmas [\"i\", \"drink\", \"some\", \"of\", \"water\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1 4-1.2\n(d / drink-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (w / water~e.4\n            :quant (s / some~e.2)))", [[0, 1], [2, 7], [8, 12], [13, 15], [16, 21], [21, 22]]], ["# ::snt It is a golden hair.\n# ::tokens [\"It\", \"is\", \"a\", \"golden\", \"hair\", \".\"]\n# ::lemmas [\"it\", \"be\", \"a\", \"golden\", \"hair\", \".\"]\n# ::alignments 0-1.2 3-1.1 4-1\n(h / hair~e.4\n   :mod (g / golden~e.3)\n   :domain (ii / it~e.0))", [[0, 2], [3, 5], [6, 7], [8, 14], [15, 19], [19, 20]]], ["# ::snt The boy in the doorway waved to his father.\n# ::tokens [\"The\", \"boy\", \"in\", \"the\", \"doorway\", \"waved\", \"to\", \"his\", \"father\", \".\"]\n# ::lemmas [\"the\", \"boy\", \"in\", \"the\", \"doorway\", \"waved\", \"to\", \"his\", \"father\", \".\"]\n# ::alignments 1-1.1 4-1.1.1 5-1 8-1.2.1.2\n(w / wave-01~e.5\n   :ARG0 (b / boy~e.1\n            :location (d / doorway~e.4))\n   :ARG2 (p / person\n            :ARG0-of (h / have-rel-role-91\n                        :ARG1 b\n                        :ARG2 (f / father~e.8))))", [[0, 3], [4, 7], [8, 10], [11, 14], [15, 22], [23, 28], [29, 31], [32, 35], [36, 42], [42, 43]]], ["# ::snt That dog is so ferocious, it even tried to bite itself.\n# ::tokens [\"That\", \"dog\", \"is\", \"so\", \"ferocious\", \",\", \"it\", \"even\", \"tried\", \"to\", \"bite\", \"itself\", \".\"]\n# ::lemmas [\"that\", \"dog\", \"be\", \"so\", \"ferocious\", \",\", \"it\", \"even\", \"try\", \"to\", \"bite\", \"itself\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 3-1.3 4-1.2 7-1.4.3 8-1.4 10-1.4.2\n(h / have-degree-91\n   :ARG1 (d / dog~e.1\n            :mod (t / that~e.0))\n   :ARG2 (f / ferocious~e.4)\n   :ARG3 (s / so~e.3)\n   :ARG6 (t2 / try-01~e.8\n             :ARG0 d\n             :ARG1 (b / bite-01~e.10\n                      :ARG0 d\n                      :ARG1 d)\n             :mod (e / even~e.7)))", [[0, 4], [5, 8], [9, 11], [12, 14], [15, 24], [24, 25], [26, 28], [29, 33], [34, 39], [40, 42], [43, 47], [48, 54], [54, 55]]], ["# ::snt He washed yourself.\n# ::tokens [\"He\", \"washed\", \"yourself\", \".\"]\n# ::lemmas [\"he\", \"wash\", \"yourself\", \".\"]\n# ::alignments 0-1.1 1-1\n(w / wash-01~e.1\n   :ARG0 (h / he~e.0)\n   :ARG1 (y / you))", [[0, 2], [3, 9], [10, 18], [18, 19]]], ["# ::snt John is easy to please Kim.\n# ::tokens [\"John\", \"is\", \"easy\", \"to\", \"please\", \"Kim\", \".\"]\n# ::lemmas [\"John\", \"be\", \"easy\", \"to\", \"please\", \"Kim\", \".\"]\n# ::alignments 0-1.1.2.1.1 2-1 4-1.1 5-1.1.1.1.1\n(e / easy-05~e.2\n   :ARG1 (p / please-01~e.4\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Kim\"~e.5))\n            :ARG1 (p3 / person\n                      :name (n2 / name\n                                :op1 \"John\"~e.0))))", [[0, 4], [5, 7], [8, 12], [13, 15], [16, 22], [23, 26], [26, 27]]], ["# ::snt There seemed to be intelligent.\n# ::tokens [\"There\", \"seemed\", \"to\", \"be\", \"intelligent\", \".\"]\n# ::lemmas [\"there\", \"seem\", \"to\", \"be\", \"intelligent\", \".\"]\n# ::alignments 1-1 4-1.1\n(s / seem-01~e.1\n   :ARG1 (ii / intelligent-01~e.4))", [[0, 5], [6, 12], [13, 15], [16, 18], [19, 30], [30, 31]]], ["# ::snt John tried to please Stephen.\n# ::tokens [\"John\", \"tried\", \"to\", \"please\", \"Stephen\", \".\"]\n# ::lemmas [\"John\", \"try\", \"to\", \"please\", \"Stephen\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 4-1.2.2.1.1\n(t / try-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (p2 / please-01~e.3\n             :ARG0 p\n             :ARG1 (p3 / person\n                       :name (n2 / name\n                                 :op1 \"Stephen\"~e.4))))", [[0, 4], [5, 10], [11, 13], [14, 20], [21, 28], [28, 29]]], ["# ::snt We believed John to be a fountain in the park.\n# ::tokens [\"We\", \"believed\", \"John\", \"to\", \"be\", \"a\", \"fountain\", \"in\", \"the\", \"park\", \".\"]\n# ::lemmas [\"we\", \"believe\", \"John\", \"to\", \"be\", \"a\", \"fountain\", \"in\", \"the\", \"park\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.2.1.1 6-1.2 9-1.2.1\n(b / believe-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (f / fountain~e.6\n            :location (p / park~e.9)\n            :domain (p2 / person\n                        :name (n / name\n                                 :op1 \"John\"~e.2))))", [[0, 2], [3, 11], [12, 16], [17, 19], [20, 22], [23, 24], [25, 33], [34, 36], [37, 40], [41, 45], [45, 46]]], ["# ::snt It tries to leave the country.\n# ::tokens [\"It\", \"tries\", \"to\", \"leave\", \"the\", \"country\", \".\"]\n# ::lemmas [\"it\", \"try\", \"to\", \"leave\", \"the\", \"country\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 5-1.2.2\n(t / try-01~e.1\n   :ARG0 (ii / it~e.0)\n   :ARG1 (l / leave-11~e.3\n            :ARG0 ii\n            :ARG1 (c / country~e.5)))", [[0, 2], [3, 8], [9, 11], [12, 17], [18, 21], [22, 29], [29, 30]]], ["# ::snt John tries to leave the country.\n# ::tokens [\"John\", \"tries\", \"to\", \"leave\", \"the\", \"country\", \".\"]\n# ::lemmas [\"John\", \"try\", \"to\", \"leave\", \"the\", \"country\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 5-1.2.2\n(t / try-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (l / leave-11~e.3\n            :ARG0 p\n            :ARG1 (c / country~e.5)))", [[0, 4], [5, 10], [11, 13], [14, 19], [20, 23], [24, 31], [31, 32]]], ["# ::snt Under the bed seems to be a fun place to hide.\n# ::tokens [\"Under\", \"the\", \"bed\", \"seems\", \"to\", \"be\", \"a\", \"fun\", \"place\", \"to\", \"hide\", \".\"]\n# ::lemmas [\"under\", \"the\", \"bed\", \"seem\", \"to\", \"be\", \"a\", \"fun\", \"place\", \"to\", \"hide\", \".\"]\n# ::alignments 0-1.1.3 2-1.1.3.1 3-1 7-1.1.2 8-1.1 10-1.1.1\n(s / seem-01~e.3\n   :ARG1 (p / place~e.8\n            :ARG1-of (h / hide-01~e.10)\n            :ARG1-of (f / fun-01~e.7)\n            :domain (u / under~e.0\n                       :op1 (b / bed~e.2))))", [[0, 5], [6, 9], [10, 13], [14, 19], [20, 22], [23, 25], [26, 27], [28, 31], [32, 37], [38, 40], [41, 45], [45, 46]]], ["# ::snt There is believed to be sheep in the park.\n# ::tokens [\"There\", \"is\", \"believed\", \"to\", \"be\", \"sheep\", \"in\", \"the\", \"park\", \".\"]\n# ::lemmas [\"there\", \"be\", \"believe\", \"to\", \"be\", \"sheep\", \"in\", \"the\", \"park\", \".\"]\n# ::alignments 2-1 5-1.1 8-1.1.1\n(b / believe-01~e.2\n   :ARG1 (s / sheep~e.5\n            :location (p / park~e.8)))", [[0, 5], [6, 8], [9, 17], [18, 20], [21, 23], [24, 29], [30, 32], [33, 36], [37, 41], [41, 42]]], ["# ::snt I hope to would study in France.\n# ::tokens [\"I\", \"hope\", \"to\", \"would\", \"study\", \"in\", \"France\", \".\"]\n# ::lemmas [\"i\", \"hope\", \"to\", \"would\", \"study\", \"in\", \"France\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2 6-1.2.2.1.1\n(h / hope-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (s / study-01~e.4\n            :ARG0 ii\n            :location (c / country\n                         :name (n / name\n                                  :op1 \"France\"~e.6))))", [[0, 1], [2, 6], [7, 9], [10, 15], [16, 21], [22, 24], [25, 31], [31, 32]]], ["# ::snt John can kick the ball.\n# ::tokens [\"John\", \"can\", \"kick\", \"the\", \"ball\", \".\"]\n# ::lemmas [\"John\", \"can\", \"kick\", \"the\", \"ball\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1 4-1.1.2\n(p / possible-01\n   :ARG1 (k / kick-01~e.2\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"John\"~e.0))\n            :ARG1 (b / ball~e.4)))", [[0, 4], [5, 8], [9, 13], [14, 17], [18, 22], [22, 23]]], ["# ::snt John will rain tomorrow.\n# ::tokens [\"John\", \"will\", \"rain\", \"tomorrow\", \".\"]\n# ::lemmas [\"John\", \"will\", \"rain\", \"tomorrow\", \".\"]\n# ::alignments 0-1.1.1.1 2-1 3-1.2\n(r / rain-01~e.2\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :time (t / tomorrow~e.3))", [[0, 4], [5, 9], [10, 14], [15, 23], [23, 24]]], ["# ::snt We expect there to will rain.\n# ::tokens [\"We\", \"expect\", \"there\", \"to\", \"will\", \"rain\", \".\"]\n# ::lemmas [\"we\", \"expect\", \"there\", \"to\", \"will\", \"rain\", \".\"]\n# ::alignments 0-1.1 1-1 5-1.2\n(e / expect-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (r / rain-01~e.5))", [[0, 2], [3, 9], [10, 15], [16, 18], [19, 23], [24, 28], [28, 29]]], ["# ::snt John was found in the office.\n# ::tokens [\"John\", \"was\", \"found\", \"in\", \"the\", \"office\", \".\"]\n# ::lemmas [\"John\", \"be\", \"find\", \"in\", \"the\", \"office\", \".\"]\n# ::alignments 0-1.1.1.1 2-1 5-1.2\n(f / find-01~e.2\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :location (o / office~e.5))", [[0, 4], [5, 8], [9, 14], [15, 17], [18, 21], [22, 28], [28, 29]]], ["# ::snt Did the child be in the school?\n# ::tokens [\"Did\", \"the\", \"child\", \"be\", \"in\", \"the\", \"school\", \"?\"]\n# ::lemmas [\"do\", \"the\", \"child\", \"be\", \"in\", \"the\", \"school\", \"?\"]\n# ::alignments 2-1.2 6-1.3\n(b / be-located-at-91\n   :polarity (a / amr-unknown)\n   :ARG1 (c / child~e.2)\n   :ARG2 (s / school~e.6))", [[0, 3], [4, 7], [8, 13], [14, 16], [17, 19], [20, 23], [24, 30], [30, 31]]], ["# ::snt It did not rain.\n# ::tokens [\"It\", \"did\", \"not\", \"rain\", \".\"]\n# ::lemmas [\"it\", \"do\", \"not\", \"rain\", \".\"]\n# ::alignments 2-1.1 3-1\n(r / rain-01~e.3\n   :polarity -~e.2)", [[0, 2], [3, 6], [7, 10], [11, 15], [15, 16]]], ["# ::snt John wants not to leave the town.\n# ::tokens [\"John\", \"wants\", \"not\", \"to\", \"leave\", \"the\", \"town\", \".\"]\n# ::lemmas [\"John\", \"want\", \"not\", \"to\", \"leave\", \"the\", \"town\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1 4-1.2 6-1.2.3\n(w / want-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (l / leave-11~e.4\n            :polarity -~e.2\n            :ARG0 p\n            :ARG1 (t / town~e.6)))", [[0, 4], [5, 10], [11, 14], [15, 17], [18, 23], [24, 27], [28, 32], [32, 33]]], ["# ::snt Mary likes to tour art galleries, but Bill hates to.\n# ::tokens [\"Mary\", \"likes\", \"to\", \"tour\", \"art\", \"galleries\", \",\", \"but\", \"Bill\", \"hates\", \"to\", \".\"]\n# ::lemmas [\"Mary\", \"like\", \"to\", \"tour\", \"art\", \"gallery\", \",\", \"but\", \"Bill\", \"hate\", \"to\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 3-1.1.2 4-1.1.2.2.1 5-1.1.2.2 7-1 8-1.2.1.1.1 9-1.2\n(c / contrast-01~e.7\n   :ARG1 (l / like-01~e.1\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Mary\"~e.0))\n            :ARG1 (t / tour-01~e.3\n                     :ARG0 p\n                     :ARG1 (g / gallery~e.5\n                              :mod (a / art~e.4))))\n   :ARG2 (h / hate-01~e.9\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Bill\"~e.8))\n            :ARG1 t))", [[0, 4], [5, 10], [11, 13], [14, 18], [19, 22], [23, 32], [32, 33], [34, 37], [38, 42], [43, 48], [49, 51], [51, 52]]], ["# ::snt They needn't take this exam.\n# ::tokens [\"They\", \"need\", \"n't\", \"take\", \"this\", \"exam\", \".\"]\n# ::lemmas [\"they\", \"need\", \"not\", \"take\", \"this\", \"exam\", \".\"]\n# ::alignments 0-1.2 1-1 3-1.3 4-1.3.2.1 5-1.3.2\n(n / need-01~e.1\n   :polarity -\n   :ARG0 (t / they~e.0)\n   :ARG1 (t2 / take-01~e.3\n             :ARG0 t\n             :ARG1 (e / exam~e.5\n                      :mod (t3 / this~e.4))))", [[0, 4], [5, 9], [9, 12], [13, 17], [18, 22], [23, 27], [27, 28]]], ["# ::snt Ann may spend her vacation in Italy.\n# ::tokens [\"Ann\", \"may\", \"spend\", \"her\", \"vacation\", \"in\", \"Italy\", \".\"]\n# ::lemmas [\"Ann\", \"may\", \"spend\", \"her\", \"vacation\", \"in\", \"Italy\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1 4-1.1.2 6-1.1.2.2.1.1\n(p / possible-01\n   :ARG1 (s / spend-02~e.2\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"Ann\"~e.0))\n            :ARG1 (v / vacation-01~e.4\n                     :ARG0 p2\n                     :ARG1 (c / country\n                              :name (n2 / name\n                                        :op1 \"Italy\"~e.6)))))", [[0, 3], [4, 7], [8, 13], [14, 17], [18, 26], [27, 29], [30, 35], [35, 36]]], ["# ::snt They love to play golf, but I do not.\n# ::tokens [\"They\", \"love\", \"to\", \"play\", \"golf\", \",\", \"but\", \"I\", \"do\", \"not\", \".\"]\n# ::lemmas [\"they\", \"love\", \"to\", \"play\", \"golf\", \",\", \"but\", \"i\", \"do\", \"not\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 3-1.1.2 4-1.1.2.2 6-1 7-1.2.2 9-1.2.1\n(c / contrast-01~e.6\n   :ARG1 (l / love-01~e.1\n            :ARG0 (t / they~e.0)\n            :ARG1 (p / play-01~e.3\n                     :ARG0 t\n                     :ARG1 (g / golf~e.4)))\n   :ARG2 (p2 / play-01\n             :polarity -~e.9\n             :ARG0 (ii / i~e.7)\n             :ARG1 g))", [[0, 4], [5, 9], [10, 12], [13, 17], [18, 22], [22, 23], [24, 27], [28, 29], [30, 32], [33, 36], [36, 37]]], ["# ::snt George has spent a lot of money, hasn't he?\n# ::tokens [\"George\", \"has\", \"spent\", \"a\", \"lot\", \"of\", \"money\", \",\", \"has\", \"n't\", \"he\", \"?\"]\n# ::lemmas [\"George\", \"have\", \"spend\", \"a\", \"lot\", \"of\", \"money\", \",\", \"have\", \"not\", \"he\", \"?\"]\n# ::alignments 0-1.1.1.1 2-1 4-1.2.1 6-1.2\n(s / spend-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"George\"~e.0))\n   :ARG3 (m / money~e.6\n            :quant (l / lot~e.4))\n   :ARG1-of (r / request-confirmation-91))", [[0, 6], [7, 10], [11, 16], [17, 18], [19, 22], [23, 25], [26, 31], [31, 32], [33, 36], [36, 39], [40, 42], [42, 43]]], ["# ::snt As a statesman, scarcely could he do anything worth mentioning.\n# ::tokens [\"As\", \"a\", \"statesman\", \",\", \"scarcely\", \"could\", \"he\", \"do\", \"anything\", \"worth\", \"mentioning\", \".\"]\n# ::lemmas [\"as\", \"a\", \"statesman\", \",\", \"scarcely\", \"could\", \"he\", \"do\", \"anything\", \"worth\", \"mention\", \".\"]\n# ::alignments 2-1.3 6-1.2.1 7-1.2 8-1.2.2 9-1.2.2.1 10-1.2.2.1.1\n(p / possible-01\n   :polarity -\n   :ARG1 (d / do-02~e.7\n            :ARG0 (h / he~e.6)\n            :ARG1 (a / anything~e.8\n                     :ARG1-of (w / worth-02~e.9\n                                 :ARG2 (m / mention-01~e.10\n                                          :ARG1 a))))\n   :manner (s / statesman~e.2))", [[0, 2], [3, 4], [5, 14], [14, 15], [16, 24], [25, 30], [31, 33], [34, 36], [37, 45], [46, 51], [52, 62], [62, 63]]], ["# ::snt We never found any of the unicorns.\n# ::tokens [\"We\", \"never\", \"found\", \"any\", \"of\", \"the\", \"unicorns\", \".\"]\n# ::lemmas [\"we\", \"never\", \"find\", \"any\", \"of\", \"the\", \"unicorn\", \".\"]\n# ::alignments 0-1.2 2-1 3-1.3.1 6-1.3\n(f / find-01~e.2\n   :polarity -\n   :ARG0 (w / we~e.0)\n   :ARG1 (u / unicorn~e.6\n            :mod (a / any~e.3))\n   :time (e / ever))", [[0, 2], [3, 8], [9, 14], [15, 18], [19, 21], [22, 25], [26, 34], [34, 35]]], ["# ::snt One of Korea's most famous poets wrote these lines.\n# ::tokens [\"One\", \"of\", \"Korea\", \"'s\", \"most\", \"famous\", \"poets\", \"wrote\", \"these\", \"lines\", \".\"]\n# ::lemmas [\"One\", \"of\", \"Korea\", \"'s\", \"most\", \"famous\", \"poet\", \"write\", \"these\", \"line\", \".\"]\n# ::alignments 0-1.1.1 1-1.1.2 2-1.1.2.1.1.3.1.1.1 4-1.1.2.1.1.2 6-1.1 7-1 9-1.2\n(w / write-01~e.7\n   :ARG0 (p / poet~e.6\n            :quant 1~e.0\n            :ARG1-of (ii / include-91~e.1\n                         :ARG2 (p2 / poet\n                                   :ARG1-of (h / have-degree-91\n                                               :ARG2 (f / fame-01\n                                                        :ARG1 p2)\n                                               :ARG3 (m / most~e.4)\n                                               :ARG5 (p3 / poet\n                                                         :location (c / country\n                                                                      :name (n / name\n                                                                               :op1 \"Korea\"~e.2)))))))\n   :ARG1 (l / line~e.9\n            :mod (t / this)))", [[0, 3], [4, 6], [7, 12], [12, 14], [15, 19], [20, 26], [27, 32], [33, 38], [39, 44], [45, 50], [50, 51]]], ["# ::snt Somebody apparently struck the unidentified victim during the early morning hours.\n# ::tokens [\"Somebody\", \"apparently\", \"struck\", \"the\", \"unidentified\", \"victim\", \"during\", \"the\", \"early\", \"morning\", \"hours\", \".\"]\n# ::lemmas [\"somebody\", \"apparently\", \"strike\", \"the\", \"unidentified\", \"victim\", \"during\", \"the\", \"early\", \"morning\", \"hours\", \".\"]\n# ::alignments 0-1.1 2-1 4-1.2.1 5-1.2 8-1.4.1 9-1.4.2 10-1.4\n(s / strike-01~e.2\n   :ARG0 (s2 / somebody~e.0)\n   :ARG1 (v / victim~e.5\n            :ARG1-of (ii / identify-01~e.4\n                         :polarity -))\n   :ARG1-of (a / appear-02)\n   :time (h / hour~e.10\n            :mod (e / early~e.8)\n            :mod (m / morning~e.9)))", [[0, 8], [9, 19], [20, 26], [27, 30], [31, 43], [44, 50], [51, 57], [58, 61], [62, 67], [68, 75], [76, 81], [81, 82]]], ["# ::snt The car was driven.\n# ::tokens [\"The\", \"car\", \"was\", \"driven\", \".\"]\n# ::lemmas [\"the\", \"car\", \"be\", \"drive\", \".\"]\n# ::alignments 1-1.1 3-1\n(d / drive-01~e.3\n   :ARG1 (c / car~e.1))", [[0, 3], [4, 7], [8, 11], [12, 18], [18, 19]]], ["# ::snt Ricky can be relied on.\n# ::tokens [\"Ricky\", \"can\", \"be\", \"relied\", \"on\", \".\"]\n# ::lemmas [\"Ricky\", \"can\", \"be\", \"rely\", \"on\", \".\"]\n# ::alignments 3-1.1\n(p / possible-01\n   :ARG1 (r / rely-01~e.3\n            :ARG1 (h / horse)))", [[0, 5], [6, 9], [10, 12], [13, 19], [20, 22], [22, 23]]], ["# ::snt The bed was slept in.\n# ::tokens [\"The\", \"bed\", \"was\", \"slept\", \"in\", \".\"]\n# ::lemmas [\"the\", \"bed\", \"be\", \"sleep\", \"in\", \".\"]\n# ::alignments 1-1.1 3-1\n(s / sleep-01~e.3\n   :location (b / bed~e.1))", [[0, 3], [4, 7], [8, 11], [12, 17], [18, 20], [20, 21]]], ["# ::snt A pound was weighed by the book.\n# ::tokens [\"A\", \"pound\", \"was\", \"weighed\", \"by\", \"the\", \"book\", \".\"]\n# ::lemmas [\"a\", \"pound\", \"be\", \"weigh\", \"by\", \"the\", \"book\", \".\"]\n# ::alignments 1-1.1.2 3-1 6-1.2\n(w / weigh-01~e.3\n   :ARG1 (m / mass-quantity\n            :quant 1\n            :unit (p / pound~e.1))\n   :ARG3 (b / book~e.6))", [[0, 1], [2, 7], [8, 11], [12, 19], [20, 22], [23, 26], [27, 31], [31, 32]]], ["# ::snt Who do you think Tom saw?\n# ::tokens [\"Who\", \"do\", \"you\", \"think\", \"Tom\", \"saw\", \"?\"]\n# ::lemmas [\"who\", \"do\", \"you\", \"think\", \"Tom\", \"see\", \"?\"]\n# ::alignments 2-1.1 3-1 4-1.2.1.1.1 5-1.2\n(t / think-01~e.3\n   :ARG0 (y / you~e.2)\n   :ARG1 (s / see-01~e.5\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Tom\"~e.4))\n            :ARG1 (a / amr-unknown)))", [[0, 3], [4, 6], [7, 10], [11, 16], [17, 20], [21, 24], [24, 25]]], ["# ::snt he had spent five thousand dollars.\n# ::tokens [\"he\", \"had\", \"spent\", \"five\", \"thousand\", \"dollars\", \".\"]\n# ::lemmas [\"he\", \"have\", \"spend\", \"five\", \"thousand\", \"dollars\", \".\"]\n# ::alignments 0-1.1 2-1 5-1.2.2\n(s / spend-01~e.2\n   :ARG0 (h / he~e.0)\n   :ARG3 (m / monetary-quantity\n            :quant 5000\n            :unit (d / dollar~e.5)))", [[0, 2], [3, 6], [7, 12], [13, 17], [18, 26], [27, 34], [34, 35]]], ["# ::snt Fed knows which politician her to vote for.\n# ::tokens [\"Fed\", \"knows\", \"which\", \"politician\", \"her\", \"to\", \"vote\", \"for\", \".\"]\n# ::lemmas [\"Fed\", \"know\", \"which\", \"politician\", \"she\", \"to\", \"vote\", \"for\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 4-1.2.1.1 6-1.2.1\n(k / know-01~e.1\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"Fed\"~e.0))\n   :ARG1 (p / politician~e.3\n            :ARG1-of (v / vote-01~e.6\n                        :ARG0 (s / she~e.4))))", [[0, 3], [4, 9], [10, 15], [16, 26], [27, 30], [31, 33], [34, 38], [39, 42], [42, 43]]], ["# ::snt How did you guess that he fixed the computer?\n# ::tokens [\"How\", \"did\", \"you\", \"guess\", \"that\", \"he\", \"fixed\", \"the\", \"computer\", \"?\"]\n# ::lemmas [\"how\", \"do\", \"you\", \"guess\", \"that\", \"he\", \"fix\", \"the\", \"computer\", \"?\"]\n# ::alignments 2-1.1 3-1 5-1.2.1 6-1.2 8-1.2.2\n(g / guess-01~e.3\n   :ARG0 (y / you~e.2)\n   :ARG1 (f / fix-02~e.6\n            :ARG0 (h / he~e.5)\n            :ARG1 (c / computer~e.8))\n   :manner (a / amr-unknown))", [[0, 3], [4, 7], [8, 11], [12, 17], [18, 22], [23, 25], [26, 31], [32, 35], [36, 44], [44, 45]]], ["# ::snt The committee knows whose efforts to achieve peace the world should honor.\n# ::tokens [\"The\", \"committee\", \"knows\", \"whose\", \"efforts\", \"to\", \"achieve\", \"peace\", \"the\", \"world\", \"should\", \"honor\", \".\"]\n# ::lemmas [\"the\", \"committee\", \"know\", \"whose\", \"effort\", \"to\", \"achieve\", \"peace\", \"the\", \"world\", \"should\", \"honor\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2.1 6-1.2.1.1 7-1.2.1.1.2 9-1.2.1.1.3.1 11-1.2.1.1.3\n(k / know-01~e.2\n   :ARG0 (c / committee~e.1)\n   :ARG1 (p / person\n            :ARG0-of (e / effort-01~e.4\n                        :ARG1 (a / achieve-01~e.6\n                                 :ARG0 p\n                                 :ARG1 (p2 / peace~e.7)\n                                 :ARG1-of (h / honor-01~e.11\n                                             :ARG0 (w / world~e.9)\n                                             :ARG1-of (r / recommend-01))))))", [[0, 3], [4, 13], [14, 19], [20, 25], [26, 33], [34, 36], [37, 44], [45, 50], [51, 54], [55, 60], [61, 67], [68, 73], [73, 74]]], ["# ::snt Which house does your friend live?\n# ::tokens [\"Which\", \"house\", \"does\", \"your\", \"friend\", \"live\", \"?\"]\n# ::lemmas [\"which\", \"house\", \"do\", \"your\", \"friend\", \"live\", \"?\"]\n# ::alignments 1-1.2 4-1.1.1.2 5-1\n(l / live-01~e.5\n   :ARG0 (p / person\n            :ARG0-of (h / have-rel-role-91\n                        :ARG1 (y / you)\n                        :ARG2 (f / friend~e.4)))\n   :location (h2 / house~e.1\n                 :mod (a / amr-unknown)))", [[0, 5], [6, 11], [12, 16], [17, 21], [22, 28], [29, 33], [33, 34]]], ["# ::snt the baker from whom I bought these bagels left.\n# ::tokens [\"the\", \"baker\", \"from\", \"whom\", \"I\", \"bought\", \"these\", \"bagels\", \"left\", \".\"]\n# ::lemmas [\"the\", \"baker\", \"from\", \"whom\", \"i\", \"buy\", \"these\", \"bagel\", \"leave\", \".\"]\n# ::alignments 1-1.1.1 4-1.1.2.1 5-1.1.2 7-1.1.2.2 8-1\n(l / leave-17~e.8\n   :ARG0 (p / person\n            :ARG0-of (b / bake-01~e.1)\n            :ARG2-of (b2 / buy-01~e.5\n                         :ARG0 (ii / i~e.4)\n                         :ARG1 (b3 / bagel~e.7\n                                   :mod (t / this)))))", [[0, 3], [4, 9], [10, 14], [15, 19], [20, 21], [22, 28], [29, 34], [35, 41], [42, 46], [46, 47]]], ["# ::snt I found the place where we can relax.\n# ::tokens [\"I\", \"found\", \"the\", \"place\", \"where\", \"we\", \"can\", \"relax\", \".\"]\n# ::lemmas [\"i\", \"find\", \"the\", \"place\", \"where\", \"we\", \"can\", \"relax\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 5-1.2.1.1.1 7-1.2.1.1\n(f / find-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / place~e.3\n            :location-of (p2 / possible-01\n                             :ARG1 (r / relax-01~e.7\n                                      :ARG0 (w / we~e.5)))))", [[0, 1], [2, 7], [8, 11], [12, 17], [18, 23], [24, 26], [27, 30], [31, 36], [36, 37]]], ["# ::snt Jack is the person with whom Jenny fell in love with.\n# ::tokens [\"Jack\", \"is\", \"the\", \"person\", \"with\", \"whom\", \"Jenny\", \"fell\", \"in\", \"love\", \"with\", \".\"]\n# ::lemmas [\"Jack\", \"be\", \"the\", \"person\", \"with\", \"whom\", \"Jenny\", \"fall\", \"in\", \"love\", \"with\", \".\"]\n# ::alignments 0-1.1.1 3-1 6-1.2.1.1.1 7-1.2.2 9-1.2\n(p / person~e.3\n   :name (n / name\n            :op1 \"Jack\"~e.0)\n   :ARG1-of (l / love-01~e.9\n               :ARG0 (p2 / person\n                         :name (n2 / name\n                                   :op1 \"Jenny\"~e.6))\n               :ARG1-of (f / fall-07~e.7\n                           :ARG2 p2)))", [[0, 4], [5, 7], [8, 11], [12, 18], [19, 23], [24, 28], [29, 34], [35, 39], [40, 42], [43, 47], [48, 52], [52, 53]]], ["# ::snt There is a bench to sit on.\n# ::tokens [\"There\", \"is\", \"a\", \"bench\", \"to\", \"sit\", \"on\", \".\"]\n# ::lemmas [\"there\", \"be\", \"a\", \"bench\", \"to\", \"sit\", \"on\", \".\"]\n# ::alignments 3-1.1 5-1\n(s / sit-01~e.5\n   :ARG1 (b / bench~e.3))", [[0, 5], [6, 8], [9, 10], [11, 16], [17, 19], [20, 23], [24, 26], [26, 27]]], ["# ::snt I met the man who grows peaches.\n# ::tokens [\"I\", \"met\", \"the\", \"man\", \"who\", \"grows\", \"peaches\", \".\"]\n# ::lemmas [\"i\", \"meet\", \"the\", \"man\", \"who\", \"grow\", \"peach\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 5-1.2.1 6-1.2.1.1\n(m / meet-02~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (m2 / man~e.3\n             :ARG0-of (g / grow-03~e.5\n                         :ARG1 (p / peache~e.6))))", [[0, 1], [2, 5], [6, 9], [10, 13], [14, 17], [18, 23], [24, 31], [31, 32]]], ["# ::snt Which topic did you choose without getting his approval?\n# ::tokens [\"Which\", \"topic\", \"did\", \"you\", \"choose\", \"without\", \"getting\", \"his\", \"approval\", \"?\"]\n# ::lemmas [\"which\", \"topic\", \"do\", \"you\", \"choose\", \"without\", \"get\", \"his\", \"approval\", \"?\"]\n# ::alignments 1-1.2 3-1.1 4-1 8-1.3\n(c / choose-01~e.4\n   :ARG0 (y / you~e.3)\n   :ARG1 (t / topic~e.1\n            :mod (a / amr-unknown))\n   :manner (a2 / approve-01~e.8\n               :polarity -\n               :ARG0 (h / he)\n               :ARG1 y))", [[0, 5], [6, 11], [12, 15], [16, 19], [20, 26], [27, 34], [35, 42], [43, 46], [47, 55], [55, 56]]], ["# ::snt Which topic did you get bored because Mary talked about?\n# ::tokens [\"Which\", \"topic\", \"did\", \"you\", \"get\", \"bored\", \"because\", \"Mary\", \"talked\", \"about\", \"?\"]\n# ::lemmas [\"which\", \"topic\", \"do\", \"you\", \"get\", \"bored\", \"because\", \"Mary\", \"talk\", \"about\", \"?\"]\n# ::alignments 1-1.3.r 3-1.2 5-1 7-1.1.1.1.1 8-1.1\n(b / bore-02~e.5\n   :ARG0 (t / talk-01~e.8\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Mary\"~e.7)))\n   :ARG1 (y / you~e.3)\n   :topic~e.1 (a / amr-unknown))", [[0, 5], [6, 11], [12, 15], [16, 19], [20, 23], [24, 29], [30, 37], [38, 42], [43, 49], [50, 55], [55, 56]]], ["# ::snt That is the reason why he resigned.\n# ::tokens [\"That\", \"is\", \"the\", \"reason\", \"why\", \"he\", \"resigned\", \".\"]\n# ::lemmas [\"that\", \"be\", \"the\", \"reason\", \"why\", \"he\", \"resign\", \".\"]\n# ::alignments 0-1.1 5-1.2.1 6-1.2\n(c / cause-01\n   :ARG0 (t / that~e.0)\n   :ARG1 (r / resign-01~e.6\n            :ARG0 (h / he~e.5)))", [[0, 4], [5, 7], [8, 11], [12, 18], [19, 22], [23, 25], [26, 34], [34, 35]]], ["# ::snt It bothers me that John coughs.\n# ::tokens [\"It\", \"bothers\", \"me\", \"that\", \"John\", \"coughs\", \".\"]\n# ::lemmas [\"it\", \"bother\", \"i\", \"that\", \"John\", \"cough\", \".\"]\n# ::alignments 1-1 2-1.2 4-1.1.1.1.1 5-1.1\n(b / bother-01~e.1\n   :ARG0 (c / cough-01~e.5\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"John\"~e.4)))\n   :ARG1 (ii / i~e.2))", [[0, 2], [3, 10], [11, 13], [14, 18], [19, 23], [24, 30], [30, 31]]], ["# ::snt To please John is easy.\n# ::tokens [\"To\", \"please\", \"John\", \"is\", \"easy\", \".\"]\n# ::lemmas [\"to\", \"please\", \"John\", \"be\", \"easy\", \".\"]\n# ::alignments 1-1.1 2-1.1.1.1.1 4-1\n(e / easy-05~e.4\n   :ARG1 (p / please-01~e.1\n            :ARG1 (p2 / person\n                      :name (n / name\n                               :op1 \"John\"~e.2))))", [[0, 2], [3, 9], [10, 14], [15, 17], [18, 22], [22, 23]]], ["# ::snt Kim is eager to please Tom.\n# ::tokens [\"Kim\", \"is\", \"eager\", \"to\", \"please\", \"Tom\", \".\"]\n# ::lemmas [\"Kim\", \"be\", \"eager\", \"to\", \"please\", \"Tom\", \".\"]\n# ::alignments 0-1.1.1.1 2-1 4-1.2 5-1.2.2.1.1\n(e / eager-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kim\"~e.0))\n   :ARG1 (p2 / please-01~e.4\n             :ARG0 p\n             :ARG1 (p3 / person\n                       :name (n2 / name\n                                 :op1 \"Tom\"~e.5))))", [[0, 3], [4, 6], [7, 12], [13, 15], [16, 22], [23, 26], [26, 27]]], ["# ::snt That we invaded Iraq really bites.\n# ::tokens [\"That\", \"we\", \"invaded\", \"Iraq\", \"really\", \"bites\", \".\"]\n# ::lemmas [\"that\", \"we\", \"invade\", \"Iraq\", \"really\", \"bite\", \".\"]\n# ::alignments 1-1.1.1 2-1.1 3-1.1.2.1.1 4-1.2 5-1\n(b / bite-01~e.5\n   :ARG0 (ii / invade-01~e.2\n             :ARG0 (w / we~e.1)\n             :ARG1 (c / country\n                      :name (n / name\n                               :op1 \"Iraq\"~e.3)))\n   :ARG1-of (r / real-04~e.4))", [[0, 4], [5, 7], [8, 15], [16, 20], [21, 27], [28, 33], [33, 34]]], ["# ::snt It annoys me that Fido barks.\n# ::tokens [\"It\", \"annoys\", \"me\", \"that\", \"Fido\", \"barks\", \".\"]\n# ::lemmas [\"it\", \"annoy\", \"i\", \"that\", \"Fido\", \"bark\", \".\"]\n# ::alignments 1-1 2-1.2 4-1.1.1.1.1 5-1.1\n(a / annoy-01~e.1\n   :ARG0 (b / barks-01~e.5\n            :ARG0 (a2 / animal\n                      :name (n / name\n                               :op1 \"Fido\"~e.4)))\n   :ARG1 (ii / i~e.2))", [[0, 2], [3, 9], [10, 12], [13, 17], [18, 22], [23, 28], [28, 29]]], ["# ::snt Who achieved the best result was Angela.\n# ::tokens [\"Who\", \"achieved\", \"the\", \"best\", \"result\", \"was\", \"Angela\", \".\"]\n# ::lemmas [\"who\", \"achieve\", \"the\", \"good\", \"result\", \"be\", \"Angela\", \".\"]\n# ::alignments 1-1 3-1.2.2.1 4-1.2.1 6-1.1.1.1\n(a / achieve-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Angela\"~e.6))\n   :ARG1 (t / thing\n            :ARG2-of (r / result-01~e.4)\n            :ARG1-of (h / have-degree-91\n                        :ARG2 (g / good-02~e.3\n                                 :ARG1 t)\n                        :ARG3 (m / most))))", [[0, 3], [4, 12], [13, 16], [17, 21], [22, 28], [29, 32], [33, 39], [39, 40]]], ["# ::snt It was the peasant girl who got it.\n# ::tokens [\"It\", \"was\", \"the\", \"peasant\", \"girl\", \"who\", \"got\", \"it\", \".\"]\n# ::lemmas [\"it\", \"be\", \"the\", \"peasant\", \"girl\", \"who\", \"get\", \"it\", \".\"]\n# ::alignments 0-1.2 3-1.1.1 4-1.1 6-1\n(g / get-01~e.6\n   :ARG0 (g2 / girl~e.4\n             :mod (p / peasant~e.3))\n   :ARG1 (ii / it~e.0))", [[0, 2], [3, 6], [7, 10], [11, 18], [19, 23], [24, 27], [28, 31], [32, 34], [34, 35]]], ["# ::snt That kind of person is hard to find anyone to look after.\n# ::tokens [\"That\", \"kind\", \"of\", \"person\", \"is\", \"hard\", \"to\", \"find\", \"anyone\", \"to\", \"look\", \"after\", \".\"]\n# ::lemmas [\"that\", \"kind\", \"of\", \"person\", \"be\", \"hard\", \"to\", \"find\", \"anyone\", \"to\", \"look\", \"after\", \".\"]\n# ::alignments 0-1.2.1.1 1-1.2.1 3-1.2 5-1 7-1.1 8-1.1.1 10-1.1.1.1\n(h / hard-02~e.5\n   :ARG1 (f / find-01~e.7\n            :ARG1 (a / anyone~e.8\n                     :ARG1-of (l / look-after-07~e.10)))\n   :ARG2 (p / person~e.3\n            :mod (k / kind~e.1\n                    :mod (t / that~e.0))))", [[0, 4], [5, 9], [10, 12], [13, 19], [20, 22], [23, 27], [28, 30], [31, 35], [36, 42], [43, 45], [46, 50], [51, 56], [56, 57]]], ["# ::snt A sick owl doesn't hunt mice.\n# ::tokens [\"A\", \"sick\", \"owl\", \"does\", \"n't\", \"hunt\", \"mice\", \".\"]\n# ::lemmas [\"a\", \"sick\", \"owl\", \"do\", \"not\", \"hunt\", \"mouse\", \".\"]\n# ::alignments 1-1.2.1 2-1.2 5-1 6-1.3\n(h / hunt-01~e.5\n   :polarity -\n   :ARG0 (o / owl~e.2\n            :ARG1-of (s / sick-05~e.1))\n   :ARG1 (m / mouse~e.6))", [[0, 1], [2, 6], [7, 10], [11, 15], [15, 18], [19, 23], [24, 28], [28, 29]]], ["# ::snt Each candidate who has interest in semantics will be admitted to the department.\n# ::tokens [\"Each\", \"candidate\", \"who\", \"has\", \"interest\", \"in\", \"semantics\", \"will\", \"be\", \"admitted\", \"to\", \"the\", \"department\", \".\"]\n# ::lemmas [\"each\", \"candidate\", \"who\", \"have\", \"interest\", \"in\", \"semantic\", \"will\", \"be\", \"admit\", \"to\", \"the\", \"department\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 4-1.1.2 6-1.1.2.1 9-1 12-1.2\n(a / admit-01~e.9\n   :ARG1 (c / candidate~e.1\n            :mod (e / each~e.0)\n            :ARG0-of (ii / interest-01~e.4\n                         :ARG2 (s / semantics~e.6))\n            :ARG1-of ii)\n   :ARG2 (d / department~e.12))", [[0, 4], [5, 14], [15, 18], [19, 22], [23, 31], [32, 34], [35, 44], [45, 49], [50, 52], [53, 61], [62, 64], [65, 68], [69, 79], [79, 80]]], ["# ::snt Each author whose contribution is written in any language other than English will provide a summary in English.\n# ::tokens [\"Each\", \"author\", \"whose\", \"contribution\", \"is\", \"written\", \"in\", \"any\", \"language\", \"other\", \"than\", \"English\", \"will\", \"provide\", \"a\", \"summary\", \"in\", \"English\", \".\"]\n# ::lemmas [\"each\", \"author\", \"whose\", \"contribution\", \"be\", \"write\", \"in\", \"any\", \"language\", \"other\", \"than\", \"English\", \"will\", \"provide\", \"a\", \"summary\", \"in\", \"English\", \".\"]\n# ::alignments 0-1.1.2 1-1.1.1 3-1.1.3 7-1.1.3.1.1 8-1.1.3.1 11-1.1.3.1.2.1.1.1 13-1 15-1.2\n(p / provide-01~e.13\n   :ARG0 (p2 / person\n             :ARG0-of (a / author-01~e.1)\n             :mod (e / each~e.0)\n             :ARG0-of (c / contribute-01~e.3\n                         :manner (l / language~e.8\n                                    :mod (a2 / any~e.7)\n                                    :ARG2-of (e2 / except-01\n                                                 :ARG1 (l2 / language\n                                                           :name (n / name\n                                                                    :op1 \"English\"~e.11))))))\n   :ARG1 (s / summarize-01~e.15\n            :medium l2))", [[0, 4], [5, 11], [12, 17], [18, 30], [31, 33], [34, 41], [42, 44], [45, 48], [49, 57], [58, 63], [64, 68], [69, 76], [77, 81], [82, 89], [90, 91], [92, 99], [100, 102], [103, 110], [110, 111]]], ["# ::snt I'm sure we even got these tickets!\n# ::tokens [\"I\", \"'m\", \"sure\", \"we\", \"even\", \"got\", \"these\", \"tickets\", \"!\"]\n# ::lemmas [\"i\", \"be\", \"sure\", \"we\", \"even\", \"get\", \"these\", \"ticket\", \"!\"]\n# ::alignments 0-1.1 2-1 3-1.2.1 4-1.2.3 5-1.2 7-1.2.2\n(s / sure-02~e.2\n   :ARG0 (ii / i~e.0)\n   :ARG1 (g / get-01~e.5\n            :ARG0 (w / we~e.3)\n            :ARG1 (t / ticket~e.7\n                     :mod (t2 / this))\n            :mod (e / even~e.4)))", [[0, 1], [1, 3], [4, 8], [9, 11], [12, 16], [17, 20], [21, 26], [27, 34], [34, 35]]], ["# ::snt I'm even sure we got these tickets!\n# ::tokens [\"I\", \"'m\", \"even\", \"sure\", \"we\", \"got\", \"these\", \"tickets\", \"!\"]\n# ::lemmas [\"i\", \"be\", \"even\", \"sure\", \"we\", \"get\", \"these\", \"ticket\", \"!\"]\n# ::alignments 0-1.1 2-1.3 3-1 4-1.2.1 5-1.2 7-1.2.2\n(s / sure-02~e.3\n   :ARG0 (ii / i~e.0)\n   :ARG1 (g / get-01~e.5\n            :ARG0 (w / we~e.4)\n            :ARG1 (t / ticket~e.7\n                     :mod (t2 / this)))\n   :mod (e / even~e.2))", [[0, 1], [1, 3], [4, 8], [9, 13], [14, 16], [17, 20], [21, 26], [27, 34], [34, 35]]], ["# ::snt It's not because I have any sympathy for urban guerillas that I helped him.\n# ::tokens [\"It\", \"'s\", \"not\", \"because\", \"I\", \"have\", \"any\", \"sympathy\", \"for\", \"urban\", \"guerillas\", \"that\", \"I\", \"helped\", \"him\", \".\"]\n# ::lemmas [\"it\", \"be\", \"not\", \"because\", \"i\", \"have\", \"any\", \"sympathy\", \"for\", \"urban\", \"guerilla\", \"that\", \"i\", \"help\", \"he\", \".\"]\n# ::alignments 2-1.1 3-1 4-1.2.1 6-1.2.3 7-1.2 9-1.2.2.1 10-1.2.2 13-1.3 14-1.3.2\n(c / cause-01~e.3\n   :polarity -~e.2\n   :ARG0 (s / sympathize-01~e.7\n            :ARG0 (ii / i~e.4)\n            :ARG1 (g / guerrilla~e.10\n                     :mod (u / urban~e.9))\n            :mod (a / any~e.6))\n   :ARG1 (h / help-01~e.13\n            :ARG0 ii\n            :ARG1 (h2 / he~e.14)))", [[0, 2], [2, 4], [5, 8], [9, 16], [17, 18], [19, 23], [24, 27], [28, 36], [37, 40], [41, 46], [47, 56], [57, 61], [62, 63], [64, 70], [71, 74], [74, 75]]], ["# ::snt It isn't because Sue said anything bad about me that I'm angry.\n# ::tokens [\"It\", \"is\", \"n't\", \"because\", \"Sue\", \"said\", \"anything\", \"bad\", \"about\", \"me\", \"that\", \"I\", \"'m\", \"angry\", \".\"]\n# ::lemmas [\"it\", \"be\", \"not\", \"because\", \"Sue\", \"say\", \"anything\", \"bad\", \"about\", \"i\", \"that\", \"i\", \"be\", \"angry\", \".\"]\n# ::alignments 3-1 4-1.2.1.1.1 5-1.2 6-1.2.2 7-1.2.2.1 9-1.2.3\n(c / cause-01~e.3\n   :polarity -\n   :ARG0 (s / say-01~e.5\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Sue\"~e.4))\n            :ARG1 (a / anything~e.6\n                     :ARG1-of (b / bad-07~e.7))\n            :ARG3 (ii / i~e.9))\n   :ARG1 (a2 / anger-01\n             :ARG1 ii))", [[0, 2], [3, 5], [5, 8], [9, 16], [17, 20], [21, 25], [26, 34], [35, 38], [39, 44], [45, 47], [48, 52], [53, 54], [54, 56], [57, 62], [62, 63]]], ["# ::snt That he was hungry, John whined.\n# ::tokens [\"That\", \"he\", \"was\", \"hungry\", \",\", \"John\", \"whined\", \".\"]\n# ::lemmas [\"that\", \"he\", \"be\", \"hungry\", \",\", \"John\", \"whine\", \".\"]\n# ::alignments 3-1.2 5-1.1.1.1 6-1\n(w / whine-01~e.6\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.5))\n   :ARG1 (h / hunger-01~e.3\n            :ARG0 p))", [[0, 4], [5, 7], [8, 11], [12, 18], [18, 19], [20, 24], [25, 31], [31, 32]]], ["# ::snt 1 gave Mary after the party a book.\n# ::tokens [\"1\", \"gave\", \"Mary\", \"after\", \"the\", \"party\", \"a\", \"book\", \".\"]\n# ::lemmas [\"1\", \"give\", \"Mary\", \"after\", \"the\", \"party\", \"a\", \"book\", \".\"]\n# ::alignments 1-1 2-1.3.1.1 3-1.4 5-1.4.1 7-1.2\n(g / give-01~e.1\n   :ARG0 (ii / i)\n   :ARG1 (b / book~e.7)\n   :ARG2 (p / person\n            :name (n / name\n                     :op1 \"Mary\"~e.2))\n   :time (a / after~e.3\n            :op1 (p2 / party~e.5)))", [[0, 1], [2, 6], [7, 11], [12, 17], [18, 21], [22, 27], [28, 29], [30, 34], [34, 35]]], ["# ::snt Because she's so pleasant, as for Mary I really like her.\n# ::tokens [\"Because\", \"she\", \"'s\", \"so\", \"pleasant\", \",\", \"as\", \"for\", \"Mary\", \"I\", \"really\", \"like\", \"her\", \".\"]\n# ::lemmas [\"because\", \"she\", \"be\", \"so\", \"pleasant\", \",\", \"as\", \"for\", \"Mary\", \"i\", \"really\", \"like\", \"she\", \".\"]\n# ::alignments 0-1 1-1.1.1 3-1.1.2 4-1.1 9-1.2.1 10-1.2.3 11-1.2\n(c / cause-01~e.0\n   :ARG0 (p / pleasant-02~e.4\n            :ARG1 (s / she~e.1)\n            :degree (s2 / so~e.3))\n   :ARG1 (l / like-01~e.11\n            :ARG0 (ii / i~e.9)\n            :ARG1 s\n            :degree (r / really~e.10)))", [[0, 7], [8, 11], [11, 13], [14, 16], [17, 25], [25, 26], [27, 29], [30, 33], [34, 38], [39, 40], [41, 47], [48, 52], [53, 56], [56, 57]]], ["# ::snt Though he may hate those that criticize Carter, it doesn't matter.\n# ::tokens [\"Though\", \"he\", \"may\", \"hate\", \"those\", \"that\", \"criticize\", \"Carter\", \",\", \"it\", \"does\", \"n't\", \"matter\", \".\"]\n# ::lemmas [\"though\", \"he\", \"may\", \"hate\", \"those\", \"that\", \"criticize\", \"Carter\", \",\", \"it\", \"do\", \"not\", \"matter\", \".\"]\n# ::alignments 1-1.3.1.1 3-1.3.1 6-1.3.1.2.1 7-1.3.1.2.1.1.1.1 9-1.2 12-1\n(m / matter-01~e.12\n   :polarity -\n   :ARG1 (ii / it~e.9)\n   :concession (p / possible-01\n                  :ARG1 (h / hate-01~e.3\n                           :ARG0 (h2 / he~e.1)\n                           :ARG1 (p2 / person\n                                     :ARG0-of (c / criticize-01~e.6\n                                                 :ARG1 (p3 / person\n                                                           :name (n / name\n                                                                    :op1 \"Carter\"~e.7)))))))", [[0, 6], [7, 9], [10, 13], [14, 18], [19, 24], [25, 29], [30, 39], [40, 46], [46, 47], [48, 50], [51, 55], [55, 58], [59, 65], [65, 66]]], ["# ::snt With no job would John be happy.\n# ::tokens [\"With\", \"no\", \"job\", \"would\", \"John\", \"be\", \"happy\", \".\"]\n# ::lemmas [\"with\", \"no\", \"job\", \"would\", \"John\", \"be\", \"happy\", \".\"]\n# ::alignments 1-1.1.1 2-1.1 4-1.2.1.1 6-1\n(h / happy-01~e.6\n   :ARG0 (j / job~e.2\n            :polarity -~e.1)\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.4)))", [[0, 4], [5, 7], [8, 11], [12, 17], [18, 22], [23, 25], [26, 31], [31, 32]]], ["# ::snt I have much of the manuscript left to type.\n# ::tokens [\"I\", \"have\", \"much\", \"of\", \"the\", \"manuscript\", \"left\", \"to\", \"type\", \".\"]\n# ::lemmas [\"i\", \"have\", \"much\", \"of\", \"the\", \"manuscript\", \"leave\", \"to\", \"type\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2 5-1.2.1 6-1.2.2 8-1.2.2.1\n(h / have-03~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (m / much~e.2\n            :part-of (m2 / manuscript~e.5)\n            :ARG1-of (l / leave-17~e.6\n                        :ARG2 (t / type-01~e.8\n                                 :ARG0 ii))))", [[0, 1], [2, 6], [7, 11], [12, 14], [15, 18], [19, 29], [30, 34], [35, 37], [38, 42], [42, 43]]], ["# ::snt He's a more reliable man.\n# ::tokens [\"He\", \"'s\", \"a\", \"more\", \"reliable\", \"man\", \".\"]\n# ::lemmas [\"he\", \"be\", \"a\", \"more\", \"reliable\", \"man\", \".\"]\n# ::alignments 0-1.1 3-1.2.2 5-1\n(m / man~e.5\n   :domain (h / he~e.0)\n   :ARG1-of (h2 / have-degree-91\n                :ARG2 (r / rely-01\n                         :ARG1 m)\n                :ARG3 (m2 / more~e.3)))", [[0, 2], [2, 4], [5, 6], [7, 11], [12, 20], [21, 24], [24, 25]]], ["# ::snt Any trouble is what I don't want.\n# ::tokens [\"Any\", \"trouble\", \"is\", \"what\", \"I\", \"do\", \"n't\", \"want\", \".\"]\n# ::lemmas [\"any\", \"trouble\", \"be\", \"what\", \"i\", \"do\", \"not\", \"want\", \".\"]\n# ::alignments 0-1.3.1 1-1.3 4-1.2 7-1\n(w / want-01~e.7\n   :polarity -\n   :ARG0 (ii / i~e.4)\n   :ARG1 (t / trouble-05~e.1\n            :mod (a / any~e.0)))", [[0, 3], [4, 11], [12, 14], [15, 19], [20, 21], [22, 24], [24, 27], [28, 32], [32, 33]]], ["# ::snt They may grow as high as bamboo.\n# ::tokens [\"They\", \"may\", \"grow\", \"as\", \"high\", \"as\", \"bamboo\", \".\"]\n# ::lemmas [\"they\", \"may\", \"grow\", \"as\", \"high\", \"as\", \"bamboo\", \".\"]\n# ::alignments 0-1.1.1 2-1.1 4-1.1.2 6-1.1.2.1.3\n(p / possible-01\n   :ARG1 (g / grow-01~e.2\n            :ARG1 (t / they~e.0)\n            :ARG2 (h / high-02~e.4\n                     :ARG2-of (h2 / have-degree-91\n                                  :ARG1 t\n                                  :ARG3 (e / equal)\n                                  :ARG4 (b / bamboo~e.6)))))", [[0, 4], [5, 8], [9, 13], [14, 16], [17, 21], [22, 24], [25, 31], [31, 32]]], ["# ::snt Some of them made as many errors as 20.\n# ::tokens [\"Some\", \"of\", \"them\", \"made\", \"as\", \"many\", \"errors\", \"as\", \"20\", \".\"]\n# ::lemmas [\"some\", \"of\", \"they\", \"make\", \"as\", \"many\", \"error\", \"as\", \"20\", \".\"]\n# ::alignments 0-1.1.2 1-1.1.1 5-1.2.1 8-1.1.1.1.1\n(e / err-01\n   :ARG0 (p / person\n            :ARG1-of (ii / include-91~e.1\n                         :ARG2 (p2 / person\n                                   :quant 20~e.8))\n            :quant (s / some~e.0))\n   :ARG1-of (h / have-quant-91\n               :ARG2 (m / many~e.5)\n               :ARG3 (e2 / equal)\n               :ARG4 p2))", [[0, 4], [5, 7], [8, 12], [13, 17], [18, 20], [21, 25], [26, 32], [33, 35], [36, 38], [38, 39]]], ["# ::snt Sally kissed himself.\n# ::tokens [\"Sally\", \"kissed\", \"himself\", \".\"]\n# ::lemmas [\"Sally\", \"kiss\", \"himself\", \".\"]\n# ::alignments 0-1.1.1.1 1-1\n(k / kiss-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sally\"~e.0))\n   :ARG1 p)", [[0, 5], [6, 12], [13, 20], [20, 21]]], ["# ::snt Drew believes I think Rosie loves magazine ads.\n# ::tokens [\"Drew\", \"believes\", \"I\", \"think\", \"Rosie\", \"loves\", \"magazine\", \"ads\", \".\"]\n# ::lemmas [\"Drew\", \"believe\", \"i\", \"think\", \"Rosie\", \"love\", \"magazine\", \"ad\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1 3-1.2 4-1.2.2.1.1.1 5-1.2.2 6-1.2.2.2.1\n(b / believe-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Drew\"~e.0))\n   :ARG1 (t / think-01~e.3\n            :ARG0 (ii / i~e.2)\n            :ARG1 (l / love-01~e.5\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Rosie\"~e.4))\n                     :ARG1 (a / advertise-01\n                              :ARG0 (m / magazine~e.6)))))", [[0, 4], [5, 13], [14, 15], [16, 21], [22, 27], [28, 33], [34, 42], [43, 46], [46, 47]]], ["# ::snt Dave, Dan, Erin, Jaime, and Alina left.\n# ::tokens [\"Dave\", \",\", \"Dan\", \",\", \"Erin\", \",\", \"Jaime\", \",\", \"and\", \"Alina\", \"left\", \".\"]\n# ::lemmas [\"Dave\", \",\", \"Dan\", \",\", \"Erin\", \",\", \"Jaime\", \",\", \"and\", \"Alina\", \"leave\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1.2.1.1 4-1.1.3.1.1 6-1.1.4.1.1 8-1.1 9-1.1.5.1.1 10-1\n(l / leave-11~e.10\n   :ARG0 (a / and~e.8\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Dave\"~e.0))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Dan\"~e.2))\n            :op3 (p3 / person\n                     :name (n3 / name\n                               :op1 \"Erin\"~e.4))\n            :op4 (p4 / person\n                     :name (n4 / name\n                               :op1 \"Jaime\"~e.6))\n            :op5 (p5 / person\n                     :name (n5 / name\n                               :op1 \"Alina\"~e.9))))", [[0, 4], [4, 5], [6, 9], [9, 10], [11, 15], [15, 16], [17, 22], [22, 23], [24, 27], [28, 33], [34, 38], [38, 39]]], ["# ::snt Hopefully, we'll make it through the winter without snow.\n# ::tokens [\"Hopefully\", \",\", \"we\", \"'ll\", \"make\", \"it\", \"through\", \"the\", \"winter\", \"without\", \"snow\", \".\"]\n# ::lemmas [\"hopefully\", \",\", \"we\", \"will\", \"make\", \"it\", \"through\", \"the\", \"winter\", \"without\", \"snow\", \".\"]\n# ::alignments 0-1 2-1.1.1 4-1.1 6-1.1.2 8-1.1.2.1.1 10-1.1.3\n(h / hope-01~e.0\n   :ARG1 (m / make-18~e.4\n            :ARG0 (w / we~e.2)\n            :ARG1 (t / through~e.6\n                     :op1 (d / date-entity\n                             :season (w2 / winter~e.8)))\n            :prep-without (s / snow~e.10)))", [[0, 9], [9, 10], [11, 13], [13, 16], [17, 21], [22, 24], [25, 32], [33, 36], [37, 43], [44, 51], [52, 56], [56, 57]]], ["# ::snt Blue leather shows herself that Betsy is pretty.\n# ::tokens [\"Blue\", \"leather\", \"shows\", \"herself\", \"that\", \"Betsy\", \"is\", \"pretty\", \".\"]\n# ::lemmas [\"blue\", \"leather\", \"show\", \"herself\", \"that\", \"Betsy\", \"be\", \"pretty\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1 5-1.2.1.1.1 7-1.2\n(s / show-01~e.2\n   :ARG0 (l / leather~e.1\n            :ARG1-of (b / blue-03~e.0))\n   :ARG1 (p / pretty~e.7\n            :domain (p2 / person\n                        :name (n / name\n                                 :op1 \"Betsy\"~e.5)))\n   :ARG2 p2)", [[0, 4], [5, 12], [13, 18], [19, 26], [27, 31], [32, 37], [38, 40], [41, 47], [47, 48]]], ["# ::snt Gwen hit the baseball.\n# ::tokens [\"Gwen\", \"hit\", \"the\", \"baseball\", \".\"]\n# ::lemmas [\"Gwen\", \"hit\", \"the\", \"baseball\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2\n(h / hit-02~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Gwen\"~e.0))\n   :ARG1 (b / baseball~e.3))", [[0, 4], [5, 8], [9, 12], [13, 21], [21, 22]]], ["# ::snt I hit that you knew the answer.\n# ::tokens [\"I\", \"hit\", \"that\", \"you\", \"knew\", \"the\", \"answer\", \".\"]\n# ::lemmas [\"i\", \"hit\", \"that\", \"you\", \"know\", \"the\", \"answer\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1 4-1.2 6-1.2.2.1\n(h / hit-02~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (k / know-01~e.4\n            :ARG0 (y / you~e.3)\n            :ARG1 (t / thing\n                     :ARG2-of (a / answer-01~e.6))))", [[0, 1], [2, 5], [6, 10], [11, 14], [15, 19], [20, 23], [24, 30], [30, 31]]], ["# ::snt I've lost my wallet or I've lost my mind.\n# ::tokens [\"I\", \"'ve\", \"lost\", \"my\", \"wallet\", \"or\", \"I\", \"'ve\", \"lost\", \"my\", \"mind\", \".\"]\n# ::lemmas [\"i\", \"'ve\", \"lose\", \"my\", \"wallet\", \"or\", \"i\", \"'ve\", \"lose\", \"my\", \"mind\", \".\"]\n# ::alignments 0-1.1.1 2-1.1 4-1.1.2 5-1 8-1.2 10-1.1.1.1\n(o / or~e.5\n   :op1 (l / lose-02~e.2\n           :ARG0 (ii / i~e.0\n                     :part (m / mind~e.10))\n           :ARG1 (w / wallet~e.4\n                    :poss ii))\n   :op2 (l2 / lose-02~e.8\n            :ARG0 ii\n            :ARG1 m))", [[0, 1], [1, 4], [5, 9], [10, 12], [13, 19], [20, 22], [23, 24], [24, 27], [28, 32], [33, 35], [36, 40], [40, 41]]], ["# ::snt It was a brand new car that he bought.\n# ::tokens [\"It\", \"was\", \"a\", \"brand\", \"new\", \"car\", \"that\", \"he\", \"bought\", \".\"]\n# ::lemmas [\"it\", \"be\", \"a\", \"brand\", \"new\", \"car\", \"that\", \"he\", \"buy\", \".\"]\n# ::alignments 3-1.1.1 4-1.1 5-1 7-1.2.1 8-1.2\n(c / car~e.5\n   :ARG1-of (n / new-01~e.4\n               :mod (b / brand~e.3))\n   :ARG1-of (b2 / buy-01~e.8\n                :ARG0 (h / he~e.7)))", [[0, 2], [3, 6], [7, 8], [9, 14], [15, 18], [19, 22], [23, 27], [28, 30], [31, 37], [37, 38]]], ["# ::snt He likes cookies and he hates crumb cake.\n# ::tokens [\"He\", \"likes\", \"cookies\", \"and\", \"he\", \"hates\", \"crumb\", \"cake\", \".\"]\n# ::lemmas [\"he\", \"like\", \"cookie\", \"and\", \"he\", \"hate\", \"crumb\", \"cake\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1.1.2 3-1 5-1.2 6-1.2.2.1 7-1.2.2\n(a / and~e.3\n   :op1 (l / like-01~e.1\n           :ARG0 (h / he~e.0)\n           :ARG1 (c / cookie~e.2))\n   :op2 (h2 / hate-01~e.5\n            :ARG0 h\n            :ARG1 (c2 / cake~e.7\n                      :mod (c3 / crumb~e.6))))", [[0, 2], [3, 8], [9, 16], [17, 20], [21, 23], [24, 29], [30, 35], [36, 40], [40, 41]]], ["# ::snt They chased the man with the car.\n# ::tokens [\"They\", \"chased\", \"the\", \"man\", \"with\", \"the\", \"car\", \".\"]\n# ::lemmas [\"they\", \"chase\", \"the\", \"man\", \"with\", \"the\", \"car\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 6-1.3\n(c / chase-01~e.1\n   :ARG0 (t / they~e.0)\n   :ARG1 (m / man~e.3)\n   :instrument (c2 / car~e.6))", [[0, 4], [5, 11], [12, 15], [16, 19], [20, 24], [25, 28], [29, 32], [32, 33]]], ["# ::snt I didn't have a red cent.\n# ::tokens [\"I\", \"did\", \"n't\", \"have\", \"a\", \"red\", \"cent\", \".\"]\n# ::lemmas [\"i\", \"do\", \"not\", \"have\", \"a\", \"red\", \"cent\", \".\"]\n# ::alignments 0-1.2 3-1 5-1.3.1 6-1.3\n(h / have-03~e.3\n   :polarity -\n   :ARG0 (ii / i~e.0)\n   :ARG1 (c / cent~e.6\n            :ARG1-of (r / red-02~e.5)))", [[0, 1], [2, 5], [5, 8], [9, 13], [14, 15], [16, 19], [20, 24], [24, 25]]], ["# ::snt the book of poems and from Blackwell takes a very long time to read.\n# ::tokens [\"the\", \"book\", \"of\", \"poems\", \"and\", \"from\", \"Blackwell\", \"takes\", \"a\", \"very\", \"long\", \"time\", \"to\", \"read\", \".\"]\n# ::lemmas [\"the\", \"book\", \"of\", \"poem\", \"and\", \"from\", \"Blackwell\", \"take\", \"a\", \"very\", \"long\", \"time\", \"to\", \"read\", \".\"]\n# ::alignments 1-1.1.1.1 3-1.1.1.1.1 4-1.1.1 6-1.1.1.2.1.1.1 7-1 9-1.2.1.1 10-1.2.1 11-1.2 13-1.1\n(t / take-10~e.7\n   :ARG0 (r / read-01~e.13\n            :ARG1 (a / and~e.4\n                     :op1 (b / book~e.1\n                             :consist-of (p / poem~e.3))\n                     :op2 (b2 / book\n                              :source (p2 / person\n                                          :name (n / name\n                                                   :op1 \"Blackwell\"~e.6)))))\n   :ARG1 (t2 / time~e.11\n             :ARG1-of (l / long-03~e.10\n                         :degree (v / very~e.9))))", [[0, 3], [4, 8], [9, 11], [12, 17], [18, 21], [22, 26], [27, 36], [37, 42], [43, 44], [45, 49], [50, 54], [55, 59], [60, 62], [63, 67], [67, 68]]], ["# ::snt the one with a red cover takes a very long time to read.\n# ::tokens [\"the\", \"one\", \"with\", \"a\", \"red\", \"cover\", \"takes\", \"a\", \"very\", \"long\", \"time\", \"to\", \"read\", \".\"]\n# ::lemmas [\"the\", \"one\", \"with\", \"a\", \"red\", \"cover\", \"take\", \"a\", \"very\", \"long\", \"time\", \"to\", \"read\", \".\"]\n# ::alignments 1-1.1.1 4-1.1.1.1.1.1 5-1.1.1.1.1 6-1 8-1.2.1.1 9-1.2.1 10-1.2 12-1.1\n(t / take-10~e.6\n   :ARG0 (r / read-01~e.12\n            :ARG0 (o / one~e.1\n                     :ARG0-of (h / have-03\n                                 :ARG1 (c / cover~e.5\n                                          :ARG1-of (r2 / red-02~e.4)))))\n   :ARG1 (t2 / time~e.10\n             :ARG1-of (l / long-03~e.9\n                         :degree (v / very~e.8))))", [[0, 3], [4, 7], [8, 12], [13, 14], [15, 18], [19, 24], [25, 30], [31, 32], [33, 37], [38, 42], [43, 47], [48, 50], [51, 55], [55, 56]]], ["# ::snt John has a fear of dogs.\n# ::tokens [\"John\", \"has\", \"a\", \"fear\", \"of\", \"dogs\", \".\"]\n# ::lemmas [\"John\", \"have\", \"a\", \"fear\", \"of\", \"dog\", \".\"]\n# ::alignments 0-1.1.1.1 3-1 5-1.2\n(f / fear-01~e.3\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (d / dog~e.5))", [[0, 4], [5, 8], [9, 10], [11, 15], [16, 18], [19, 23], [23, 24]]], ["# ::snt The building's the roof is leaking.\n# ::tokens [\"The\", \"building\", \"'s\", \"the\", \"roof\", \"is\", \"leaking\", \".\"]\n# ::lemmas [\"the\", \"building\", \"'s\", \"the\", \"roof\", \"be\", \"leak\", \".\"]\n# ::alignments 1-1.1.1 4-1.1 6-1\n(l / leak-01~e.6\n   :ARG1 (r / roof~e.4\n            :part-of (b / building~e.1)))", [[0, 3], [4, 12], [12, 14], [15, 18], [19, 23], [24, 26], [27, 34], [34, 35]]], ["# ::snt the panther's the coat is dark black.\n# ::tokens [\"the\", \"panther\", \"'s\", \"the\", \"coat\", \"is\", \"dark\", \"black\", \".\"]\n# ::lemmas [\"the\", \"panther\", \"'s\", \"the\", \"coat\", \"be\", \"dark\", \"black\", \".\"]\n# ::alignments 1-1.1 4-1 6-1.3 7-1.2\n(c / coat~e.4\n   :poss (p / panther~e.1)\n   :ARG1-of (b / black-04~e.7)\n   :ARG1-of (d / dark-02~e.6))", [[0, 3], [4, 11], [11, 13], [14, 17], [18, 22], [23, 25], [26, 30], [31, 36], [36, 37]]], ["# ::snt Colin asked if they could get a mortgage.\n# ::tokens [\"Colin\", \"asked\", \"if\", \"they\", \"could\", \"get\", \"a\", \"mortgage\", \".\"]\n# ::lemmas [\"Colin\", \"ask\", \"if\", \"they\", \"could\", \"get\", \"a\", \"mortgage\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1.1 5-1.2.1 7-1.2.1.2\n(a / ask-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Colin\"~e.0))\n   :ARG1 (p2 / possible-01\n             :ARG1 (g / get-01~e.5\n                      :ARG0 (t / they~e.3)\n                      :ARG1 (m / mortgage-01~e.7))))", [[0, 5], [6, 11], [12, 14], [15, 19], [20, 25], [26, 29], [30, 31], [32, 40], [40, 41]]], ["# ::snt The man I saw get into the cab robbed the bank.\n# ::tokens [\"The\", \"man\", \"I\", \"saw\", \"get\", \"into\", \"the\", \"cab\", \"robbed\", \"the\", \"bank\", \".\"]\n# ::lemmas [\"the\", \"man\", \"i\", \"see\", \"get\", \"into\", \"the\", \"cab\", \"rob\", \"the\", \"bank\", \".\"]\n# ::alignments 1-1.1 2-1.1.1.1 3-1.1.1 4-1.1.2 7-1.1.2.1 8-1 10-1.2\n(r / rob-01~e.8\n   :ARG0 (m / man~e.1\n            :ARG1-of (s / see-01~e.3\n                        :ARG0 (ii / i~e.2))\n            :ARG0-of (g / get-05~e.4\n                        :ARG1 (c / cab~e.7)))\n   :ARG1 (b / bank~e.10))", [[0, 3], [4, 7], [8, 9], [10, 13], [14, 17], [18, 22], [23, 26], [27, 30], [31, 37], [38, 41], [42, 46], [46, 47]]], ["# ::snt I know you eat asparagus.\n# ::tokens [\"I\", \"know\", \"you\", \"eat\", \"asparagus\", \".\"]\n# ::lemmas [\"i\", \"know\", \"you\", \"eat\", \"asparagus\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1 3-1.2 4-1.2.2\n(k / know-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (e / eat-01~e.3\n            :ARG0 (y / you~e.2)\n            :ARG1 (a / asparagus~e.4)))", [[0, 1], [2, 6], [7, 10], [11, 14], [15, 24], [24, 25]]], ["# ::snt John's drum will always bother me.\n# ::tokens [\"John\", \"'s\", \"drum\", \"will\", \"always\", \"bother\", \"me\", \".\"]\n# ::lemmas [\"John\", \"'s\", \"drum\", \"will\", \"always\", \"bother\", \"i\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1 4-1.3 5-1 6-1.2\n(b / bother-01~e.5\n   :ARG0 (d / drum~e.2\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"John\"~e.0)))\n   :ARG1 (ii / i~e.6)\n   :time (a / always~e.4))", [[0, 4], [4, 6], [7, 11], [12, 16], [17, 23], [24, 30], [31, 33], [33, 34]]], ["# ::snt An evil thought struck Dave.\n# ::tokens [\"An\", \"evil\", \"thought\", \"struck\", \"Dave\", \".\"]\n# ::lemmas [\"an\", \"evil\", \"thought\", \"strike\", \"Dave\", \".\"]\n# ::alignments 1-1.1.2 3-1 4-1.2.1.1\n(s / strike-01~e.3\n   :ARG0 (t / thing\n            :ARG1-of (t2 / think-01)\n            :mod (e / evil~e.1))\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Dave\"~e.4)))", [[0, 2], [3, 7], [8, 15], [16, 22], [23, 27], [27, 28]]], ["# ::snt In the classroom John put the book on the table.\n# ::tokens [\"In\", \"the\", \"classroom\", \"John\", \"put\", \"the\", \"book\", \"on\", \"the\", \"table\", \".\"]\n# ::lemmas [\"in\", \"the\", \"classroom\", \"John\", \"put\", \"the\", \"book\", \"on\", \"the\", \"table\", \".\"]\n# ::alignments 2-1.4 3-1.1.1.1 4-1 6-1.2 9-1.3\n(p / put-01~e.4\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"John\"~e.3))\n   :ARG1 (b / book~e.6)\n   :ARG2 (t / table~e.9)\n   :location (c / classroom~e.2))", [[0, 2], [3, 6], [7, 16], [17, 21], [22, 25], [26, 29], [30, 34], [35, 37], [38, 41], [42, 47], [47, 48]]], ["# ::snt Phillip gave the medal to the soldier.\n# ::tokens [\"Phillip\", \"gave\", \"the\", \"medal\", \"to\", \"the\", \"soldier\", \".\"]\n# ::lemmas [\"Phillip\", \"give\", \"the\", \"medal\", \"to\", \"the\", \"soldier\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 6-1.3\n(g / give-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Phillip\"~e.0))\n   :ARG1 (m / medal~e.3)\n   :ARG2 (s / soldier~e.6))", [[0, 7], [8, 12], [13, 16], [17, 22], [23, 25], [26, 29], [30, 37], [37, 38]]], ["# ::snt Heidi thinks that Andy to eat salmon flavored candy bars.\n# ::tokens [\"Heidi\", \"thinks\", \"that\", \"Andy\", \"to\", \"eat\", \"salmon\", \"flavored\", \"candy\", \"bars\", \".\"]\n# ::lemmas [\"Heidi\", \"think\", \"that\", \"Andy\", \"to\", \"eat\", \"salmon\", \"flavor\", \"candy\", \"bar\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1.1.1 5-1.2 6-1.2.2.2.1 7-1.2.2.2 8-1.2.2.1 9-1.2.2\n(t / think-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Heidi\"~e.0))\n   :ARG1 (e / eat-01~e.5\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Andy\"~e.3))\n            :ARG1 (b / bar~e.9\n                     :mod (c / candy~e.8)\n                     :ARG1-of (f / flavor-01~e.7\n                                 :ARG2 (s / salmon~e.6)))))", [[0, 5], [6, 12], [13, 17], [18, 22], [23, 25], [26, 29], [30, 36], [37, 45], [46, 51], [52, 56], [56, 57]]], ["# ::snt Heidi thinks that Andy should eat salmon flavored candy bars.\n# ::tokens [\"Heidi\", \"thinks\", \"that\", \"Andy\", \"should\", \"eat\", \"salmon\", \"flavored\", \"candy\", \"bars\", \".\"]\n# ::lemmas [\"Heidi\", \"think\", \"that\", \"Andy\", \"should\", \"eat\", \"salmon\", \"flavor\", \"candy\", \"bar\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1.1.1.1 5-1.2.1 6-1.2.1.2.2.1 7-1.2.1.2.2 8-1.2.1.2.1 9-1.2.1.2\n(t / think-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Heidi\"~e.0))\n   :ARG1 (r / recommend-01\n            :ARG1 (e / eat-01~e.5\n                     :ARG0 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Andy\"~e.3))\n                     :ARG1 (b / bar~e.9\n                              :mod (c / candy~e.8)\n                              :ARG1-of (f / flavor-01~e.7\n                                          :ARG2 (s / salmon~e.6))))))", [[0, 5], [6, 12], [13, 17], [18, 22], [23, 29], [30, 33], [34, 40], [41, 49], [50, 55], [56, 60], [60, 61]]], ["# ::snt He danced.\n# ::tokens [\"He\", \"danced\", \".\"]\n# ::lemmas [\"he\", \"dance\", \".\"]\n# ::alignments 0-1.1 1-1\n(d / dance-01~e.1\n   :ARG0 (h / he~e.0))", [[0, 2], [3, 9], [9, 10]]], ["# ::snt Did Calvin his homework?\n# ::tokens [\"Did\", \"Calvin\", \"his\", \"homework\", \"?\"]\n# ::lemmas [\"do\", \"Calvin\", \"his\", \"homework\", \"?\"]\n# ::alignments 1-1.2.1.1 3-1\n(h / homework~e.3\n   :polarity (a / amr-unknown)\n   :poss (p / person\n            :name (n / name\n                     :op1 \"Calvin\"~e.1)))", [[0, 3], [4, 10], [11, 14], [15, 23], [23, 24]]], ["# ::snt Sylvia was slapping Jeff upside the head in martial arts class.\n# ::tokens [\"Sylvia\", \"was\", \"slapping\", \"Jeff\", \"upside\", \"the\", \"head\", \"in\", \"martial\", \"arts\", \"class\", \".\"]\n# ::lemmas [\"Sylvia\", \"be\", \"slap\", \"Jeff\", \"upside\", \"the\", \"head\", \"in\", \"martial\", \"art\", \"class\", \".\"]\n# ::alignments 0-1.1.1.1 2-1 3-1.2.1.1 4-1.3 6-1.2.2 8-1.4.1.1 9-1.4.1 10-1.4\n(s / slap-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sylvia\"~e.0))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Jeff\"~e.3)\n             :part (h / head~e.6))\n   :manner (u / upside~e.4\n              :op1 h)\n   :subevent-of (c / class~e.10\n                   :mod (a / art~e.9\n                           :mod (m / martial~e.8))))", [[0, 6], [7, 10], [11, 19], [20, 24], [25, 31], [32, 35], [36, 40], [41, 43], [44, 51], [52, 56], [57, 62], [62, 63]]], ["# ::snt If I am a rich man, I'd buy a diamond ring.\n# ::tokens [\"If\", \"I\", \"am\", \"a\", \"rich\", \"man\", \",\", \"I\", \"'d\", \"buy\", \"a\", \"diamond\", \"ring\", \".\"]\n# ::lemmas [\"if\", \"i\", \"be\", \"a\", \"rich\", \"man\", \",\", \"i\", \"would\", \"buy\", \"a\", \"diamond\", \"ring\", \".\"]\n# ::alignments 1-1.1 4-1.3.1 5-1.3 9-1 11-1.2.1 12-1.2\n(b / buy-01~e.9\n   :ARG0 (ii / i~e.1)\n   :ARG1 (r / ring~e.12\n            :mod (d / diamond~e.11))\n   :condition (m / man~e.5\n                 :mod (r2 / rich~e.4)\n                 :domain ii))", [[0, 2], [3, 4], [5, 7], [8, 9], [10, 14], [15, 18], [18, 19], [20, 21], [21, 23], [24, 27], [28, 29], [30, 37], [38, 42], [42, 43]]], ["# ::snt If he were a rich man, he'd buy a diamond ring.\n# ::tokens [\"If\", \"he\", \"were\", \"a\", \"rich\", \"man\", \",\", \"he\", \"'d\", \"buy\", \"a\", \"diamond\", \"ring\", \".\"]\n# ::lemmas [\"if\", \"he\", \"be\", \"a\", \"rich\", \"man\", \",\", \"he\", \"would\", \"buy\", \"a\", \"diamond\", \"ring\", \".\"]\n# ::alignments 1-1.1 4-1.3.1 5-1.3 9-1 11-1.2.1 12-1.2\n(b / buy-01~e.9\n   :ARG0 (h / he~e.1)\n   :ARG1 (r / ring~e.12\n            :mod (d / diamond~e.11))\n   :condition (m / man~e.5\n                 :mod (r2 / rich~e.4)\n                 :domain h))", [[0, 2], [3, 5], [6, 10], [11, 12], [13, 17], [18, 21], [21, 22], [23, 25], [25, 27], [28, 31], [32, 33], [34, 41], [42, 46], [46, 47]]], ["# ::snt John is likely to leave.\n# ::tokens [\"John\", \"is\", \"likely\", \"to\", \"leave\", \".\"]\n# ::lemmas [\"John\", \"be\", \"likely\", \"to\", \"leave\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1 4-1.1\n(l / likely-01~e.2\n   :ARG1 (l2 / leave-11~e.4\n             :ARG0 (p / person\n                      :name (n / name\n                               :op1 \"John\"~e.0))))", [[0, 4], [5, 7], [8, 14], [15, 17], [18, 23], [23, 24]]], ["# ::snt The manager laughed.\n# ::tokens [\"The\", \"manager\", \"laughed\", \".\"]\n# ::lemmas [\"the\", \"manager\", \"laugh\", \".\"]\n# ::alignments 1-1.1.1 2-1\n(l / laugh-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (m / manage-01~e.1)))", [[0, 3], [4, 11], [12, 19], [19, 20]]], ["# ::snt Was sunk.\n# ::tokens [\"Was\", \"sunk\", \".\"]\n# ::lemmas [\"be\", \"sink\", \".\"]\n# ::alignments 1-1\n(s / sink-01~e.1)", [[0, 3], [4, 8], [8, 9]]], ["# ::snt Who did you think kissed the gorilla?\n# ::tokens [\"Who\", \"did\", \"you\", \"think\", \"kissed\", \"the\", \"gorilla\", \"?\"]\n# ::lemmas [\"who\", \"do\", \"you\", \"think\", \"kiss\", \"the\", \"gorilla\", \"?\"]\n# ::alignments 2-1.1 3-1 4-1.2 6-1.2.2\n(t / think-01~e.3\n   :ARG0 (y / you~e.2)\n   :ARG1 (k / kiss-01~e.4\n            :ARG0 (a / amr-unknown)\n            :ARG1 (g / gorilla~e.6)))", [[0, 3], [4, 7], [8, 11], [12, 17], [18, 24], [25, 28], [29, 36], [36, 37]]], ["# ::snt Have you seen my model airplane collection?\n# ::tokens [\"Have\", \"you\", \"seen\", \"my\", \"model\", \"airplane\", \"collection\", \"?\"]\n# ::lemmas [\"have\", \"you\", \"see\", \"my\", \"model\", \"airplane\", \"collection\", \"?\"]\n# ::alignments 1-1.1 2-1 4-1.2.2.1 5-1.2.2 6-1.2\n(s / see-01~e.2\n   :ARG0 (y / you~e.1)\n   :ARG1 (c / collect-01~e.6\n            :ARG0 (ii / i)\n            :ARG1 (a / airplane~e.5\n                     :mod (m / model~e.4)))\n   :polarity (a2 / amr-unknown))", [[0, 4], [5, 8], [9, 13], [14, 16], [17, 22], [23, 31], [32, 42], [42, 43]]], ["# ::snt It seems that Lucy was mugged.\n# ::tokens [\"It\", \"seems\", \"that\", \"Lucy\", \"was\", \"mugged\", \".\"]\n# ::lemmas [\"it\", \"seem\", \"that\", \"Lucy\", \"be\", \"mug\", \".\"]\n# ::alignments 1-1 3-1.1.1.1.1 5-1.1\n(s / seem-01~e.1\n   :ARG1 (m / mug-01~e.5\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Lucy\"~e.3))))", [[0, 2], [3, 8], [9, 13], [14, 18], [19, 22], [23, 29], [29, 30]]], ["# ::snt I ate a salad that was filled with lima beans.\n# ::tokens [\"I\", \"ate\", \"a\", \"salad\", \"that\", \"was\", \"filled\", \"with\", \"lima\", \"beans\", \".\"]\n# ::lemmas [\"i\", \"eat\", \"a\", \"salad\", \"that\", \"be\", \"fill\", \"with\", \"lima\", \"bean\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 6-1.2.1 8-1.2.1.1.1 9-1.2.1.1\n(e / eat-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (s / salad~e.3\n            :ARG1-of (f / fill-01~e.6\n                        :ARG2 (b / bean~e.9\n                                 :mod (l / lima~e.8)))))", [[0, 1], [2, 5], [6, 7], [8, 13], [14, 18], [19, 22], [23, 29], [30, 34], [35, 39], [40, 45], [45, 46]]], ["# ::snt There were four men arriving at the station when I pulled up.\n# ::tokens [\"There\", \"were\", \"four\", \"men\", \"arriving\", \"at\", \"the\", \"station\", \"when\", \"I\", \"pulled\", \"up\", \".\"]\n# ::lemmas [\"there\", \"be\", \"four\", \"man\", \"arrive\", \"at\", \"the\", \"station\", \"when\", \"i\", \"pull\", \"up\", \".\"]\n# ::alignments 2-1.1.1 3-1.1 4-1 7-1.2 9-1.3.1 10-1.3\n(a / arrive-01~e.4\n   :ARG1 (m / man~e.3\n            :quant 4~e.2)\n   :ARG4 (s / station~e.7)\n   :time (p / pull-01~e.10\n            :ARG0 (ii / i~e.9)\n            :ARG1 ii))", [[0, 5], [6, 10], [11, 15], [16, 19], [20, 28], [29, 31], [32, 35], [36, 43], [44, 48], [49, 50], [51, 57], [58, 60], [60, 61]]], ["# ::snt Jean is reluctant to dance.\n# ::tokens [\"Jean\", \"is\", \"reluctant\", \"to\", \"dance\", \".\"]\n# ::lemmas [\"Jean\", \"be\", \"reluctant\", \"to\", \"dance\", \".\"]\n# ::alignments 0-1.1.1.1 2-1 4-1.2\n(r / reluctant-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jean\"~e.0))\n   :ARG1 (d / dance-01~e.4\n            :ARG0 p))", [[0, 4], [5, 7], [8, 17], [18, 20], [21, 26], [26, 27]]], ["# ::snt I want her to dance.\n# ::tokens [\"I\", \"want\", \"her\", \"to\", \"dance\", \".\"]\n# ::lemmas [\"i\", \"want\", \"she\", \"to\", \"dance\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1 4-1.2\n(w / want-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (d / dance-01~e.4\n            :ARG0 (s / she~e.2)))", [[0, 1], [2, 6], [7, 10], [11, 13], [14, 19], [19, 20]]], ["# ::snt Jean persuaded Robert.\n# ::tokens [\"Jean\", \"persuaded\", \"Robert\", \".\"]\n# ::lemmas [\"Jean\", \"persuade\", \"Robert\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1\n(p / persuade-01~e.1\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Jean\"~e.0))\n   :ARG1 (p3 / person\n             :name (n2 / name\n                       :op1 \"Robert\"~e.2)))", [[0, 4], [5, 14], [15, 21], [21, 22]]], ["# ::snt Jean wants Bill to do the Macarena.\n# ::tokens [\"Jean\", \"wants\", \"Bill\", \"to\", \"do\", \"the\", \"Macarena\", \".\"]\n# ::lemmas [\"Jean\", \"want\", \"Bill\", \"to\", \"do\", \"the\", \"Macarena\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1.1 4-1.2 6-1.2.2.1.1\n(w / want-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jean\"~e.0))\n   :ARG1 (d / do-02~e.4\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Bill\"~e.2))\n            :ARG1 (p3 / program\n                      :name (n3 / name\n                                :op1 \"Macarena\"~e.6))))", [[0, 4], [5, 10], [11, 15], [16, 18], [19, 21], [22, 25], [26, 34], [34, 35]]], ["# ::snt The children admire their mother.\n# ::tokens [\"The\", \"children\", \"admire\", \"their\", \"mother\", \".\"]\n# ::lemmas [\"the\", \"child\", \"admire\", \"their\", \"mother\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2.1.2\n(a / admire-01~e.2\n   :ARG0 (c / child~e.1)\n   :ARG1 (p / person\n            :ARG0-of (h / have-rel-role-91\n                        :ARG1 c\n                        :ARG2 (m / mother~e.4))))", [[0, 3], [4, 12], [13, 19], [20, 25], [26, 32], [32, 33]]], ["# ::snt Who has Peter talked with?\n# ::tokens [\"Who\", \"has\", \"Peter\", \"talked\", \"with\", \"?\"]\n# ::lemmas [\"who\", \"have\", \"Peter\", \"talk\", \"with\", \"?\"]\n# ::alignments 2-1.1.1.1 3-1\n(t / talk-01~e.3\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Peter\"~e.2))\n   :ARG2 (a / amr-unknown))", [[0, 3], [4, 7], [8, 13], [14, 20], [21, 25], [25, 26]]], ["# ::snt Heidi likes her violin.\n# ::tokens [\"Heidi\", \"likes\", \"her\", \"violin\", \".\"]\n# ::lemmas [\"Heidi\", \"like\", \"her\", \"violin\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2\n(l / like-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Heidi\"~e.0))\n   :ARG1 (v / violin~e.3\n            :poss p))", [[0, 5], [6, 11], [12, 15], [16, 22], [22, 23]]], ["# ::snt John thinks that Mary loves himself.\n# ::tokens [\"John\", \"thinks\", \"that\", \"Mary\", \"loves\", \"himself\", \".\"]\n# ::lemmas [\"John\", \"think\", \"that\", \"Mary\", \"love\", \"himself\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1.1.1 4-1.2\n(t / think-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (l / love-01~e.4\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Mary\"~e.3))\n            :ARG1 p))", [[0, 4], [5, 11], [12, 16], [17, 21], [22, 27], [28, 35], [35, 36]]], ["# ::snt Which pictures of himself does John like?\n# ::tokens [\"Which\", \"pictures\", \"of\", \"himself\", \"does\", \"John\", \"like\", \"?\"]\n# ::lemmas [\"which\", \"picture\", \"of\", \"himself\", \"do\", \"John\", \"like\", \"?\"]\n# ::alignments 1-1.2 5-1.1.1.1 6-1\n(l / like-01~e.6\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.5))\n   :ARG1 (p2 / picture~e.1\n             :topic p\n             :mod (a / amr-unknown)))", [[0, 5], [6, 14], [15, 17], [18, 25], [26, 30], [31, 35], [36, 40], [40, 41]]], ["# ::snt Any owl hunts mice.\n# ::tokens [\"Any\", \"owl\", \"hunts\", \"mice\", \".\"]\n# ::lemmas [\"any\", \"owl\", \"hunt\", \"mouse\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1 3-1.2\n(h / hunt-01~e.2\n   :ARG0 (o / owl~e.1\n            :mod (a / any~e.0))\n   :ARG1 (m / mouse~e.3))", [[0, 3], [4, 7], [8, 13], [14, 18], [18, 19]]], ["# ::snt Any man didn't eat dinner.\n# ::tokens [\"Any\", \"man\", \"did\", \"n't\", \"eat\", \"dinner\", \".\"]\n# ::lemmas [\"any\", \"man\", \"do\", \"not\", \"eat\", \"dinner\", \".\"]\n# ::alignments 0-1.2.1 1-1.2 4-1 5-1.3\n(e / eat-01~e.4\n   :polarity -\n   :ARG0 (m / man~e.1\n            :mod (a / any~e.0))\n   :ARG1 (d / dinner~e.5))", [[0, 3], [4, 7], [8, 11], [11, 14], [15, 18], [19, 25], [25, 26]]], ["# ::snt A pilot could be flying this plane.\n# ::tokens [\"A\", \"pilot\", \"could\", \"be\", \"flying\", \"this\", \"plane\", \".\"]\n# ::lemmas [\"a\", \"pilot\", \"could\", \"be\", \"fly\", \"this\", \"plane\", \".\"]\n# ::alignments 1-1.1.1.1 4-1.1 5-1.1.2.1 6-1.1.2\n(p / possible-01\n   :ARG1 (f / fly-01~e.4\n            :ARG0 (p2 / person\n                      :ARG0-of (p3 / pilot-01~e.1))\n            :ARG2 (p4 / plane~e.6\n                      :mod (t / this~e.5))))", [[0, 1], [2, 7], [8, 13], [14, 16], [17, 23], [24, 28], [29, 34], [34, 35]]], ["# ::snt Everybody who attended last week's huge rally, whoever they were, signed the petition.\n# ::tokens [\"Everybody\", \"who\", \"attended\", \"last\", \"week\", \"'s\", \"huge\", \"rally\", \",\", \"whoever\", \"they\", \"were\", \",\", \"signed\", \"the\", \"petition\", \".\"]\n# ::lemmas [\"everybody\", \"who\", \"attend\", \"last\", \"week\", \"'s\", \"huge\", \"rally\", \",\", \"whoever\", \"they\", \"be\", \",\", \"sign\", \"the\", \"petition\", \".\"]\n# ::alignments 0-1.1 2-1.1.1 3-1.1.1.1.2.1 4-1.1.1.1.2 6-1.1.1.1.1 7-1.1.1.1 13-1 15-1.2\n(s / sign-01~e.13\n   :ARG0 (e / everybody~e.0\n            :ARG0-of (a / attend-01~e.2\n                        :ARG1 (r / rally-01~e.7\n                                 :mod (h / huge~e.6)\n                                 :time (w / week~e.4\n                                          :mod (l / last~e.3))))\n            :domain (a2 / amr-unknown)\n            :domain-of a2)\n   :ARG1 (p / petition~e.15))", [[0, 9], [10, 13], [14, 22], [23, 27], [28, 32], [32, 34], [35, 39], [40, 45], [45, 46], [47, 54], [55, 59], [60, 64], [64, 65], [66, 72], [73, 76], [77, 85], [85, 86]]], ["# ::snt Anybody who attended last week's huge rally signed the petition.\n# ::tokens [\"Anybody\", \"who\", \"attended\", \"last\", \"week\", \"'s\", \"huge\", \"rally\", \"signed\", \"the\", \"petition\", \".\"]\n# ::lemmas [\"anybody\", \"who\", \"attend\", \"last\", \"week\", \"'s\", \"huge\", \"rally\", \"sign\", \"the\", \"petition\", \".\"]\n# ::alignments 0-1.1 2-1.1.1 3-1.1.1.1.2.1 4-1.1.1.1.2 6-1.1.1.1.1 7-1.1.1.1 8-1 10-1.2\n(s / sign-01~e.8\n   :ARG0 (a / anybody~e.0\n            :ARG0-of (a2 / attend-01~e.2\n                         :ARG1 (r / rally-01~e.7\n                                  :mod (h / huge~e.6)\n                                  :time (w / week~e.4\n                                           :mod (l / last~e.3)))))\n   :ARG1 (p / petition~e.10))", [[0, 7], [8, 11], [12, 20], [21, 25], [26, 30], [30, 32], [33, 37], [38, 43], [44, 50], [51, 54], [55, 63], [63, 64]]], ["# ::snt Any tiger has orange fur, marked with black stripes.\n# ::tokens [\"Any\", \"tiger\", \"has\", \"orange\", \"fur\", \",\", \"marked\", \"with\", \"black\", \"stripes\", \".\"]\n# ::lemmas [\"any\", \"tiger\", \"have\", \"orange\", \"fur\", \",\", \"mark\", \"with\", \"black\", \"stripe\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1 3-1.2.1 4-1.2 6-1.2.2 8-1.2.2.1.1 9-1.2.2.1\n(h / have-03~e.2\n   :ARG0 (t / tiger~e.1\n            :mod (a / any~e.0))\n   :ARG1 (f / fur~e.4\n            :mod (o / orange~e.3)\n            :ARG1-of (m / mark-02~e.6\n                        :ARG2 (s / stripe~e.9\n                                 :ARG1-of (b / black-04~e.8)))))", [[0, 3], [4, 9], [10, 13], [14, 20], [21, 24], [24, 25], [26, 32], [33, 37], [38, 43], [44, 51], [51, 52]]], ["# ::snt Any albino tiger has orange fur, marked with black stripes.\n# ::tokens [\"Any\", \"albino\", \"tiger\", \"has\", \"orange\", \"fur\", \",\", \"marked\", \"with\", \"black\", \"stripes\", \".\"]\n# ::lemmas [\"any\", \"albino\", \"tiger\", \"have\", \"orange\", \"fur\", \",\", \"mark\", \"with\", \"black\", \"stripe\", \".\"]\n# ::alignments 0-1.1.2 1-1.1.1.1.1 2-1.1 3-1 4-1.2.1 5-1.2 7-1.2.2 9-1.2.2.1.1 10-1.2.2.1\n(h / have-03~e.3\n   :ARG0 (t / tiger~e.2\n            :mod (s / species\n                    :name (n / name\n                             :op1 \"Albino\"~e.1))\n            :mod (a / any~e.0))\n   :ARG1 (f / fur~e.5\n            :mod (o / orange~e.4)\n            :ARG1-of (m / mark-02~e.7\n                        :ARG2 (s2 / stripe~e.10\n                                  :ARG1-of (b / black-04~e.9)))))", [[0, 3], [4, 10], [11, 16], [17, 20], [21, 27], [28, 31], [31, 32], [33, 39], [40, 44], [45, 50], [51, 58], [58, 59]]], ["# ::snt You must pick any flower you see.\n# ::tokens [\"You\", \"must\", \"pick\", \"any\", \"flower\", \"you\", \"see\", \".\"]\n# ::lemmas [\"you\", \"must\", \"pick\", \"any\", \"flower\", \"you\", \"see\", \".\"]\n# ::alignments 0-1.1 2-1.2 3-1.2.2.1 4-1.2.2 6-1.2.2.2\n(o / obligate-01\n   :ARG1 (y / you~e.0)\n   :ARG2 (p / pick-01~e.2\n            :ARG0 y\n            :ARG1 (f / flower~e.4\n                     :mod (a / any~e.3)\n                     :ARG1-of (s / see-01~e.6\n                                 :ARG0 y))))", [[0, 3], [4, 8], [9, 13], [14, 17], [18, 24], [25, 28], [29, 32], [32, 33]]], ["# ::snt Any pilot on duty today could be flying this plane.\n# ::tokens [\"Any\", \"pilot\", \"on\", \"duty\", \"today\", \"could\", \"be\", \"flying\", \"this\", \"plane\", \".\"]\n# ::lemmas [\"any\", \"pilot\", \"on\", \"duty\", \"today\", \"could\", \"be\", \"fly\", \"this\", \"plane\", \".\"]\n# ::alignments 0-1.1.1.2 1-1.1.1.1 3-1.1.1.3 4-1.1.1.4 7-1.1 8-1.1.2.1 9-1.1.2\n(p / possible-01\n   :ARG1 (f / fly-01~e.7\n            :ARG0 (p2 / person\n                      :ARG0-of (p3 / pilot-01~e.1)\n                      :mod (a / any~e.0)\n                      :prep-on (d / duty~e.3)\n                      :time (t / today~e.4))\n            :ARG2 (p4 / plane~e.9\n                      :mod (t2 / this~e.8))))", [[0, 3], [4, 9], [10, 12], [13, 17], [18, 23], [24, 29], [30, 32], [33, 39], [40, 44], [45, 50], [50, 51]]], ["# ::snt You may pick every flower, but leave a few for Mary.\n# ::tokens [\"You\", \"may\", \"pick\", \"every\", \"flower\", \",\", \"but\", \"leave\", \"a\", \"few\", \"for\", \"Mary\", \".\"]\n# ::lemmas [\"you\", \"may\", \"pick\", \"every\", \"flower\", \",\", \"but\", \"leave\", \"a\", \"few\", \"for\", \"Mary\", \".\"]\n# ::alignments 0-1.1.1.1 2-1.1.1 3-1.1.1.2.1 4-1.1.1.2 6-1 7-1.2 9-1.2.2.1 11-1.2.3.1.1\n(c / contrast-01~e.6\n   :ARG1 (p / permit-01\n            :ARG1 (p2 / pick-01~e.2\n                      :ARG0 (y / you~e.0)\n                      :ARG1 (f / flower~e.4\n                               :mod (e / every~e.3)))\n            :ARG2 y)\n   :ARG2 (l / leave-01~e.7\n            :ARG0 y\n            :ARG1 (f2 / flower\n                      :quant (f3 / few~e.9))\n            :ARG2 (p3 / person\n                      :name (n / name\n                               :op1 \"Mary\"~e.11))))", [[0, 3], [4, 7], [8, 12], [13, 18], [19, 25], [25, 26], [27, 30], [31, 36], [37, 38], [39, 42], [43, 46], [47, 51], [51, 52]]], ["# ::snt The Dodgers beat the Red Sox and were beaten by the Giants.\n# ::tokens [\"The\", \"Dodgers\", \"beat\", \"the\", \"Red\", \"Sox\", \"and\", \"were\", \"beaten\", \"by\", \"the\", \"Giants\", \".\"]\n# ::lemmas [\"the\", \"Dodgers\", \"beat\", \"the\", \"Red\", \"Sox\", \"and\", \"be\", \"beat\", \"by\", \"the\", \"Giants\", \".\"]\n# ::alignments 1-1.1.1.1.1 2-1.1 4-1.1.2.1.1 5-1.1.2.1.2 6-1 8-1.2 11-1.2.1.1.1\n(a / and~e.6\n   :op1 (b / beat-03~e.2\n           :ARG0 (t / team\n                    :name (n / name\n                             :op1 \"Dodgers\"~e.1))\n           :ARG1 (t2 / team\n                     :name (n2 / name\n                               :op1 \"Red\"~e.4\n                               :op2 \"Sox\"~e.5)))\n   :op2 (b2 / beat-03~e.8\n            :ARG0 (t3 / team\n                      :name (n3 / name\n                                :op1 \"Giants\"~e.11))\n            :ARG1 t))", [[0, 3], [4, 11], [12, 16], [17, 20], [21, 24], [25, 28], [29, 32], [33, 37], [38, 44], [45, 47], [48, 51], [52, 58], [58, 59]]], ["# ::snt In which car was the man seen?\n# ::tokens [\"In\", \"which\", \"car\", \"was\", \"the\", \"man\", \"seen\", \"?\"]\n# ::lemmas [\"in\", \"which\", \"car\", \"be\", \"the\", \"man\", \"see\", \"?\"]\n# ::alignments 2-1.1.1 5-1.1 6-1\n(s / see-01~e.6\n   :ARG1 (m / man~e.5\n            :location (c / car~e.2\n                         :mod (a / amr-unknown))))", [[0, 2], [3, 8], [9, 12], [13, 16], [17, 20], [21, 24], [25, 29], [29, 30]]], ["# ::snt The man who Mary loves and Sally hates computed my tax.\n# ::tokens [\"The\", \"man\", \"who\", \"Mary\", \"loves\", \"and\", \"Sally\", \"hates\", \"computed\", \"my\", \"tax\", \".\"]\n# ::lemmas [\"the\", \"man\", \"who\", \"Mary\", \"love\", \"and\", \"Sally\", \"hate\", \"compute\", \"my\", \"tax\", \".\"]\n# ::alignments 1-1.1 3-1.1.1.1.1.1.1 4-1.1.1 5-1.1.1.1 6-1.1.1.1.2.1.1 8-1 10-1.2\n(c / compute-01~e.8\n   :ARG0 (m / man~e.1\n            :ARG1-of (l / love-01~e.4\n                        :ARG0 (a / and~e.5\n                                 :op1 (p / person\n                                         :name (n / name\n                                                  :op1 \"Mary\"~e.3))\n                                 :op2 (p2 / person\n                                          :name (n2 / name\n                                                    :op1 \"Sally\"~e.6)))))\n   :ARG1 (t / tax-01~e.10\n            :ARG2 (ii / i)))", [[0, 3], [4, 7], [8, 11], [12, 16], [17, 22], [23, 26], [27, 32], [33, 38], [39, 47], [48, 50], [51, 54], [54, 55]]], ["# ::snt The kennel which Mary made and Fido sleeps has been stolen.\n# ::tokens [\"The\", \"kennel\", \"which\", \"Mary\", \"made\", \"and\", \"Fido\", \"sleeps\", \"has\", \"been\", \"stolen\", \".\"]\n# ::lemmas [\"the\", \"kennel\", \"which\", \"Mary\", \"make\", \"and\", \"Fido\", \"sleep\", \"have\", \"be\", \"steal\", \".\"]\n# ::alignments 1-1.1 3-1.1.1.1.1.1.1 5-1.1.1.1 6-1.1.1.1.2.1.1 7-1.1.1 10-1\n(s / steal-01~e.10\n   :ARG1 (k / kennel~e.1\n            :ARG1-of (s2 / sleep-01~e.7\n                         :ARG0 (a / and~e.5\n                                  :op1 (p / person\n                                          :name (n / name\n                                                   :op1 \"Mary\"~e.3))\n                                  :op2 (p2 / person\n                                           :name (n2 / name\n                                                     :op1 \"Fido\"~e.6))))))", [[0, 3], [4, 10], [11, 16], [17, 21], [22, 26], [27, 30], [31, 35], [36, 42], [43, 46], [47, 51], [52, 58], [58, 59]]], ["# ::snt Tom said he would and Bill actually did eat a raw eggplant.\n# ::tokens [\"Tom\", \"said\", \"he\", \"would\", \"and\", \"Bill\", \"actually\", \"did\", \"eat\", \"a\", \"raw\", \"eggplant\", \".\"]\n# ::lemmas [\"Tom\", \"say\", \"he\", \"would\", \"and\", \"Bill\", \"actually\", \"do\", \"eat\", \"a\", \"raw\", \"eggplant\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 4-1 5-1.2.1.1.1 6-1.2.3 7-1.1.2 8-1.2 10-1.2.2.1 11-1.2.2\n(a / and~e.4\n   :op1 (s / say-01~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Tom\"~e.0))\n           :ARG1 (d / do-02~e.7\n                    :ARG0 p))\n   :op2 (e / eat-01~e.8\n           :ARG0 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Bill\"~e.5))\n           :ARG1 (e2 / eggplant~e.11\n                     :mod (r / raw~e.10))\n           :ARG1-of (a2 / actual-02~e.6)))", [[0, 3], [4, 8], [9, 11], [12, 17], [18, 21], [22, 26], [27, 35], [36, 39], [40, 43], [44, 45], [46, 49], [50, 58], [58, 59]]], ["# ::snt The wealthy young man bought that piano for his secret fianc\u00e9e.\n# ::tokens [\"The\", \"wealthy\", \"young\", \"man\", \"bought\", \"that\", \"piano\", \"for\", \"his\", \"secret\", \"fianc\\u00e9e\", \".\"]\n# ::lemmas [\"the\", \"wealthy\", \"young\", \"man\", \"buy\", \"that\", \"piano\", \"for\", \"his\", \"secret\", \"fianc\\u00e9e\", \".\"]\n# ::alignments 1-1.1.2 2-1.1.1 3-1.1 4-1 5-1.2.1 6-1.2 9-1.3.2 10-1.3.1.2\n(b / buy-01~e.4\n   :ARG0 (m / man~e.3\n            :mod (y / young~e.2)\n            :mod (w / wealth~e.1))\n   :ARG1 (p / piano~e.6\n            :mod (t / that~e.5))\n   :ARG4 (p2 / person\n             :ARG0-of (h / have-rel-role-91\n                         :ARG1 m\n                         :ARG2 (f / fiancee~e.10))\n             :mod (s / secret~e.9)))", [[0, 3], [4, 11], [12, 17], [18, 21], [22, 28], [29, 33], [34, 39], [40, 43], [44, 47], [48, 54], [55, 62], [62, 63]]], ["# ::snt The dog stole the turkey.\n# ::tokens [\"The\", \"dog\", \"stole\", \"the\", \"turkey\", \".\"]\n# ::lemmas [\"the\", \"dog\", \"steal\", \"the\", \"turkey\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2\n(s / steal-01~e.2\n   :ARG0 (d / dog~e.1)\n   :ARG1 (t / turkey~e.4))", [[0, 3], [4, 7], [8, 13], [14, 17], [18, 24], [24, 25]]], ["# ::snt a tall building.\n# ::tokens [\"a\", \"tall\", \"building\", \".\"]\n# ::lemmas [\"a\", \"tall\", \"building\", \".\"]\n# ::alignments 1-1.1 2-1\n(b / building~e.2\n   :mod (t / tall~e.1))", [[0, 1], [2, 6], [7, 15], [15, 16]]], ["# ::snt This building is tall.\n# ::tokens [\"This\", \"building\", \"is\", \"tall\", \".\"]\n# ::lemmas [\"this\", \"building\", \"be\", \"tall\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 3-1\n(t / tall~e.3\n   :domain (b / building~e.1\n              :mod (t2 / this~e.0)))", [[0, 4], [5, 13], [14, 16], [17, 21], [21, 22]]], ["# ::snt I like the book which you gave me.\n# ::tokens [\"I\", \"like\", \"the\", \"book\", \"which\", \"you\", \"gave\", \"me\", \".\"]\n# ::lemmas [\"i\", \"like\", \"the\", \"book\", \"which\", \"you\", \"give\", \"i\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 5-1.2.1.1 6-1.2.1\n(l / like-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (b / book~e.3\n            :ARG1-of (g / give-01~e.6\n                        :ARG0 (y / you~e.5)\n                        :ARG2 ii)))", [[0, 1], [2, 6], [7, 10], [11, 15], [16, 21], [22, 25], [26, 30], [31, 33], [33, 34]]], ["# ::snt Captain Wentworth wrote a letter to Anne Elliott.\n# ::tokens [\"Captain\", \"Wentworth\", \"wrote\", \"a\", \"letter\", \"to\", \"Anne\", \"Elliott\", \".\"]\n# ::lemmas [\"Captain\", \"Wentworth\", \"write\", \"a\", \"letter\", \"to\", \"Anne\", \"Elliott\", \".\"]\n# ::alignments 0-1.1.1.1 1-1.1.1.2 2-1 4-1.2 6-1.3.1.1 7-1.3.1.2\n(w / write-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Captain\"~e.0\n                     :op2 \"Wentworth\"~e.1))\n   :ARG1 (l / letter~e.4)\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Anne\"~e.6\n                       :op2 \"Elliott\"~e.7)))", [[0, 7], [8, 17], [18, 23], [24, 25], [26, 32], [33, 35], [36, 40], [41, 48], [48, 49]]], ["# ::snt She asked was Alison coming to the party.\n# ::tokens [\"She\", \"asked\", \"was\", \"Alison\", \"coming\", \"to\", \"the\", \"party\", \".\"]\n# ::lemmas [\"she\", \"ask\", \"be\", \"Alison\", \"come\", \"to\", \"the\", \"party\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1.1.1 4-1.2 7-1.2.2\n(a / ask-01~e.1\n   :ARG0 (s / she~e.0)\n   :ARG1 (c / come-01~e.4\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Alison\"~e.3))\n            :ARG4 (p2 / party~e.7)))", [[0, 3], [4, 9], [10, 13], [14, 20], [21, 27], [28, 30], [31, 34], [35, 40], [40, 41]]], ["# ::snt They realised that never had Sir Thomas been so offended.\n# ::tokens [\"They\", \"realised\", \"that\", \"never\", \"had\", \"Sir\", \"Thomas\", \"been\", \"so\", \"offended\", \".\"]\n# ::lemmas [\"they\", \"realise\", \"that\", \"never\", \"have\", \"Sir\", \"Thomas\", \"be\", \"so\", \"offend\", \".\"]\n# ::alignments 0-1.1 1-1 5-1.2.2.1.1 6-1.2.2.1.2 8-1.2.4 9-1.2\n(r / realize-01~e.1\n   :ARG0 (t / they~e.0)\n   :ARG1 (o / offend-01~e.9\n            :polarity -\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Sir\"~e.5\n                              :op2 \"Thomas\"~e.6))\n            :time (e / ever)\n            :degree (s / so~e.8)))", [[0, 4], [5, 13], [14, 18], [19, 24], [25, 28], [29, 32], [33, 39], [40, 44], [45, 47], [48, 56], [56, 57]]], ["# ::snt Fanny regretted having to talk to Aunt Norris.\n# ::tokens [\"Fanny\", \"regretted\", \"having\", \"to\", \"talk\", \"to\", \"Aunt\", \"Norris\", \".\"]\n# ::lemmas [\"fanny\", \"regret\", \"have\", \"to\", \"talk\", \"to\", \"Aunt\", \"Norris\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.2.2 6-1.2.2.2.1.1 7-1.2.2.2.1.2\n(r / regret-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Fanny\"~e.0))\n   :ARG1 (o / obligate-01\n            :ARG1 p\n            :ARG2 (t / talk-01~e.4\n                     :ARG0 p\n                     :ARG2 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Aunt\"~e.6\n                                         :op2 \"Norris\"~e.7)))))", [[0, 5], [6, 15], [16, 22], [23, 25], [26, 30], [31, 33], [34, 38], [39, 45], [45, 46]]], ["# ::snt Knowing the country well, he took a short cut.\n# ::tokens [\"Knowing\", \"the\", \"country\", \"well\", \",\", \"he\", \"took\", \"a\", \"short\", \"cut\", \".\"]\n# ::lemmas [\"know\", \"the\", \"country\", \"well\", \",\", \"he\", \"take\", \"a\", \"short\", \"cut\", \".\"]\n# ::alignments 0-1.3 2-1.3.2 3-1.3.3 5-1.1 6-1 8-1.2\n(t / take-01~e.6\n   :ARG0 (h / he~e.5)\n   :ARG1 (s / shortcut~e.8)\n   :manner (k / know-01~e.0\n              :ARG0 h\n              :ARG1 (c / country~e.2)\n              :mod (w / well~e.3)))", [[0, 7], [8, 11], [12, 19], [20, 24], [24, 25], [26, 28], [29, 33], [34, 35], [36, 41], [42, 45], [45, 46]]], ["# ::snt He left the train with somebody else's wallet in his pocket.\n# ::tokens [\"He\", \"left\", \"the\", \"train\", \"with\", \"somebody\", \"else\", \"'s\", \"wallet\", \"in\", \"his\", \"pocket\", \".\"]\n# ::lemmas [\"he\", \"leave\", \"the\", \"train\", \"with\", \"somebody\", \"else\", \"'s\", \"wallet\", \"in\", \"his\", \"pocket\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 5-1.3.1 6-1.3.1.1 8-1.3 11-1.3.2\n(l / leave-11~e.1\n   :ARG0 (h / he~e.0)\n   :ARG1 (t / train~e.3)\n   :manner (w / wallet~e.8\n              :poss (s / somebody~e.5\n                       :mod (e / else~e.6))\n              :location (p / pocket~e.11\n                           :poss h)))", [[0, 2], [3, 7], [8, 11], [12, 17], [18, 22], [23, 31], [32, 36], [36, 38], [39, 45], [46, 48], [49, 52], [53, 59], [59, 60]]], ["# ::snt Magnus went to Ireland.\n# ::tokens [\"Magnus\", \"went\", \"to\", \"Ireland\", \".\"]\n# ::lemmas [\"Magnus\", \"go\", \"to\", \"Ireland\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1.1\n(g / go-02~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Magnus\"~e.0))\n   :ARG4 (c / country\n            :name (n2 / name\n                      :op1 \"Ireland\"~e.3)))", [[0, 6], [7, 11], [12, 14], [15, 22], [22, 23]]], ["# ::snt Who did John send the book?\n# ::tokens [\"Who\", \"did\", \"John\", \"send\", \"the\", \"book\", \"?\"]\n# ::lemmas [\"who\", \"do\", \"John\", \"send\", \"the\", \"book\", \"?\"]\n# ::alignments 2-1.1.1.1 3-1 5-1.2\n(s / send-01~e.3\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.2))\n   :ARG1 (b / book~e.5)\n   :ARG2 (a / amr-unknown))", [[0, 3], [4, 7], [8, 12], [13, 17], [18, 21], [22, 26], [26, 27]]], ["# ::snt The idea dismayed the Prime Minister that the Dome was dull.\n# ::tokens [\"The\", \"idea\", \"dismayed\", \"the\", \"Prime\", \"Minister\", \"that\", \"the\", \"Dome\", \"was\", \"dull\", \".\"]\n# ::lemmas [\"the\", \"idea\", \"dismay\", \"the\", \"Prime\", \"Minister\", \"that\", \"the\", \"Dome\", \"be\", \"dull\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2.1.1.1 5-1.2.1.1 8-1.3.1 10-1.3\n(d / dismay-01~e.2\n   :ARG0 (ii / idea~e.1)\n   :ARG1 (p / person\n            :ARG0-of (h / have-org-role-91\n                        :ARG2 (m / minister~e.5\n                                 :mod (p2 / prime~e.4))))\n   :ARG2 (d2 / dull-04~e.10\n             :ARG1 (d3 / Dome~e.8)))", [[0, 3], [4, 8], [9, 17], [18, 21], [22, 27], [28, 36], [37, 41], [42, 45], [46, 50], [51, 54], [55, 59], [59, 60]]], ["# ::snt Came right in he did without so much as a knock.\n# ::tokens [\"Came\", \"right\", \"in\", \"he\", \"did\", \"without\", \"so\", \"much\", \"as\", \"a\", \"knock\", \".\"]\n# ::lemmas [\"come\", \"right\", \"in\", \"he\", \"do\", \"without\", \"so\", \"much\", \"as\", \"a\", \"knock\", \".\"]\n# ::alignments 0-1.1 1-1.2 3-1.1.1 6-1.1.2.3.1 7-1.1.2.3 10-1.1.2\n(c / cause-01\n   :ARG0 (c2 / come-in-07~e.0\n             :ARG1 (h / he~e.3)\n             :manner (k / knock-01~e.10\n                        :polarity -\n                        :ARG0 h\n                        :mod (m / much~e.7\n                                :degree (s / so~e.6))))\n   :ARG1 (r / right-06~e.1\n            :ARG1 h))", [[0, 4], [5, 10], [11, 13], [14, 16], [17, 20], [21, 28], [29, 31], [32, 36], [37, 39], [40, 41], [42, 47], [47, 48]]], ["# ::snt Harriet admired Mr Knightley.\n# ::tokens [\"Harriet\", \"admired\", \"Mr\", \"Knightley\", \".\"]\n# ::lemmas [\"Harriet\", \"admire\", \"Mr\", \"Knightley\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1 3-1.2.1.2\n(a / admire-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Harriet\"~e.0))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Mr\"~e.2\n                       :op2 \"Knightley\"~e.3)))", [[0, 7], [8, 15], [16, 18], [19, 28], [28, 29]]], ["# ::snt The book is boring.\n# ::tokens [\"The\", \"book\", \"is\", \"boring\", \".\"]\n# ::lemmas [\"the\", \"book\", \"be\", \"boring\", \".\"]\n# ::alignments 1-1.1\n(b / bore-02\n   :ARG0 (b2 / book~e.1))", [[0, 3], [4, 8], [9, 11], [12, 18], [18, 19]]], ["# ::snt Ethel wishes to ask you some awkward questions.\n# ::tokens [\"Ethel\", \"wishes\", \"to\", \"ask\", \"you\", \"some\", \"awkward\", \"questions\", \".\"]\n# ::lemmas [\"Ethel\", \"wish\", \"to\", \"ask\", \"you\", \"some\", \"awkward\", \"question\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 4-1.2.3 5-1.2.2.2 6-1.2.2.1 7-1.2.2\n(w / wish-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Ethel\"~e.0))\n   :ARG1 (a / ask-01~e.3\n            :ARG0 p\n            :ARG1 (q / question~e.7\n                     :mod (a2 / awkward~e.6)\n                     :quant (s / some~e.5))\n            :ARG2 (y / you~e.4)))", [[0, 5], [6, 12], [13, 15], [16, 19], [20, 23], [24, 28], [29, 36], [37, 46], [46, 47]]], ["# ::snt Emma made Harriet some food.\n# ::tokens [\"Emma\", \"made\", \"Harriet\", \"some\", \"food\", \".\"]\n# ::lemmas [\"Emma\", \"make\", \"Harriet\", \"some\", \"food\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.3.1.1 3-1.2.1 4-1.2\n(m / make-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Emma\"~e.0))\n   :ARG1 (f / food~e.4\n            :quant (s / some~e.3))\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Harriet\"~e.2)))", [[0, 4], [5, 9], [10, 17], [18, 22], [23, 27], [27, 28]]], ["# ::snt The window was broken with a hammer.\n# ::tokens [\"The\", \"window\", \"was\", \"broken\", \"with\", \"a\", \"hammer\", \".\"]\n# ::lemmas [\"the\", \"window\", \"be\", \"break\", \"with\", \"a\", \"hammer\", \".\"]\n# ::alignments 1-1.1 3-1 6-1.2\n(b / break-01~e.3\n   :ARG1 (w / window~e.1)\n   :ARG2 (h / hammer~e.6))", [[0, 3], [4, 10], [11, 14], [15, 21], [22, 26], [27, 28], [29, 35], [35, 36]]], ["# ::snt The fugitive lay motionless in order to avoid discovery.\n# ::tokens [\"The\", \"fugitive\", \"lay\", \"motionless\", \"in\", \"order\", \"to\", \"avoid\", \"discovery\", \".\"]\n# ::lemmas [\"the\", \"fugitive\", \"lie\", \"motionless\", \"in\", \"order\", \"to\", \"avoid\", \"discovery\", \".\"]\n# ::alignments 1-1.1 2-1 3-1.2 7-1.3 8-1.3.2\n(l / lay-01~e.2\n   :ARG1 (f / fugitive~e.1)\n   :ARG2 (m / motionless~e.3)\n   :purpose (a / avoid-01~e.7\n               :ARG0 f\n               :ARG1 (d / discover-01~e.8\n                        :ARG0 f)))", [[0, 3], [4, 12], [13, 16], [17, 27], [28, 30], [31, 36], [37, 39], [40, 45], [46, 55], [55, 56]]], ["# ::snt The guard marched the prisoners round the yard.\n# ::tokens [\"The\", \"guard\", \"marched\", \"the\", \"prisoners\", \"round\", \"the\", \"yard\", \".\"]\n# ::lemmas [\"the\", \"guard\", \"march\", \"the\", \"prisoner\", \"round\", \"the\", \"yard\", \".\"]\n# ::alignments 1-1.1 2-1 5-1.3 7-1.3.1\n(m / march-01~e.2\n   :ARG0 (g / guard~e.1)\n   :ARG1 (p / person\n            :ARG1-of (ii / imprison-01))\n   :path (r / round~e.5\n            :op1 (y / yard~e.7)))", [[0, 3], [4, 9], [10, 17], [18, 21], [22, 31], [32, 37], [38, 41], [42, 46], [46, 47]]], ["# ::snt Frank Churchill crossed the street.\n# ::tokens [\"Frank\", \"Churchill\", \"crossed\", \"the\", \"street\", \".\"]\n# ::lemmas [\"Frank\", \"Churchill\", \"cross\", \"the\", \"street\", \".\"]\n# ::alignments 0-1.1.1.1 1-1.1.1.2 2-1 4-1.2\n(c / cross-02~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Frank\"~e.0\n                     :op2 \"Churchill\"~e.1))\n   :ARG1 (s / street~e.4))", [[0, 5], [6, 15], [16, 23], [24, 27], [28, 34], [34, 35]]], ["# ::snt Emma and Harriet were attacked yesterday.\n# ::tokens [\"Emma\", \"and\", \"Harriet\", \"were\", \"attacked\", \"yesterday\", \".\"]\n# ::lemmas [\"Emma\", \"and\", \"Harriet\", \"be\", \"attack\", \"yesterday\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 2-1.1.2.1.1 4-1 5-1.2\n(a / attack-01~e.4\n   :ARG1 (a2 / and~e.1\n             :op1 (p / person\n                     :name (n / name\n                              :op1 \"Emma\"~e.0))\n             :op2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Harriet\"~e.2)))\n   :time (y / yesterday~e.5))", [[0, 4], [5, 8], [9, 16], [17, 21], [22, 30], [31, 40], [40, 41]]], ["# ::snt Fiona might be here by 5 o'clock.\n# ::tokens [\"Fiona\", \"might\", \"be\", \"here\", \"by\", \"5\", \"o'clock\", \".\"]\n# ::lemmas [\"Fiona\", \"might\", \"be\", \"here\", \"by\", \"5\", \"o'clock\", \".\"]\n# ::alignments 0-1.1.1.1.1 3-1.1.2 4-1.1.3\n(p / possible-01\n   :ARG1 (b / be-located-at-91\n            :ARG1 (p2 / person\n                      :name (n / name\n                               :op1 \"Fiona\"~e.0))\n            :ARG2 (h / here~e.3)\n            :time (b2 / by~e.4\n                      :op1 (d / date-entity\n                              :time \"5:00\"))))", [[0, 5], [6, 11], [12, 14], [15, 19], [20, 22], [23, 24], [25, 32], [32, 33]]], ["# ::snt I am both expecting to get the job and of the opinion that it is a desirable one.\n# ::tokens [\"I\", \"am\", \"both\", \"expecting\", \"to\", \"get\", \"the\", \"job\", \"and\", \"of\", \"the\", \"opinion\", \"that\", \"it\", \"is\", \"a\", \"desirable\", \"one\", \".\"]\n# ::lemmas [\"i\", \"be\", \"both\", \"expect\", \"to\", \"get\", \"the\", \"job\", \"and\", \"of\", \"the\", \"opinion\", \"that\", \"it\", \"be\", \"a\", \"desirable\", \"one\", \".\"]\n# ::alignments 0-1.1.1 3-1.1 5-1.1.2 7-1.1.2.2 8-1 11-1.2 16-1.2.2.1\n(a / and~e.8\n   :op1 (e / expect-01~e.3\n           :ARG0 (ii / i~e.0)\n           :ARG1 (g / get-01~e.5\n                    :ARG0 ii\n                    :ARG1 (j / job~e.7)))\n   :op2 (o / opine-01~e.11\n           :ARG0 ii\n           :ARG1 (j2 / job\n                     :ARG1-of (d / desirable-02~e.16)\n                     :domain j)))", [[0, 1], [2, 4], [5, 9], [10, 19], [20, 22], [23, 26], [27, 30], [31, 34], [35, 38], [39, 41], [42, 45], [46, 53], [54, 58], [59, 61], [62, 64], [65, 66], [67, 76], [77, 80], [80, 81]]], ["# ::snt Pat was awarded the Golden Fleece Award and very upset about it.\n# ::tokens [\"Pat\", \"was\", \"awarded\", \"the\", \"Golden\", \"Fleece\", \"Award\", \"and\", \"very\", \"upset\", \"about\", \"it\", \".\"]\n# ::lemmas [\"Pat\", \"be\", \"award\", \"the\", \"Golden\", \"Fleece\", \"Award\", \"and\", \"very\", \"upset\", \"about\", \"it\", \".\"]\n# ::alignments 0-1.1.2.1.1 2-1.1 4-1.1.1.1.1 5-1.1.1.1.2 6-1.1.1 7-1 8-1.2.3 9-1.2\n(a / and~e.7\n   :op1 (a2 / award-01~e.2\n            :ARG1 (a3 / award~e.6\n                      :name (n / name\n                               :op1 \"Golden\"~e.4\n                               :op2 \"Fleece\"~e.5\n                               :op3 \"Award\"))\n            :ARG2 (p / person\n                     :name (n2 / name\n                               :op1 \"Pat\"~e.0)))\n   :op2 (u / upset-01~e.9\n           :ARG0 a3\n           :ARG1 p\n           :degree (v / very~e.8)))", [[0, 3], [4, 7], [8, 15], [16, 19], [20, 26], [27, 33], [34, 39], [40, 43], [44, 48], [49, 54], [55, 60], [61, 63], [63, 64]]], ["# ::snt Kim alienated cats and beating his dog.\n# ::tokens [\"Kim\", \"alienated\", \"cats\", \"and\", \"beating\", \"his\", \"dog\", \".\"]\n# ::lemmas [\"Kim\", \"alienate\", \"cat\", \"and\", \"beat\", \"his\", \"dog\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 2-1.1.2 3-1 4-1.2 6-1.2.2\n(a / and~e.3\n   :op1 (a2 / alienate-01~e.1\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Kim\"~e.0))\n            :ARG1 (c / cat~e.2))\n   :op2 (b / beat-01~e.4\n           :ARG0 p\n           :ARG1 (d / dog~e.6\n                    :poss p)))", [[0, 3], [4, 13], [14, 18], [19, 22], [23, 30], [31, 34], [35, 38], [38, 39]]], ["# ::snt They knew that pictures of each other would be on sale.\n# ::tokens [\"They\", \"knew\", \"that\", \"pictures\", \"of\", \"each\", \"other\", \"would\", \"be\", \"on\", \"sale\", \".\"]\n# ::lemmas [\"they\", \"know\", \"that\", \"picture\", \"of\", \"each\", \"other\", \"would\", \"be\", \"on\", \"sale\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1 5-1.2.1.1.1 6-1.2.1.1\n(k / know-01~e.1\n   :ARG0 (t / they~e.0)\n   :ARG1 (s / sell-01\n            :ARG1 (p / picture~e.3\n                     :topic (o / other~e.6\n                               :mod (e / each~e.5)))))", [[0, 4], [5, 9], [10, 14], [15, 23], [24, 26], [27, 31], [32, 37], [38, 43], [44, 46], [47, 49], [50, 54], [54, 55]]], ["# ::snt Which article did Terry file papers without reading?\n# ::tokens [\"Which\", \"article\", \"did\", \"Terry\", \"file\", \"papers\", \"without\", \"reading\", \"?\"]\n# ::lemmas [\"which\", \"article\", \"do\", \"Terry\", \"file\", \"paper\", \"without\", \"read\", \"?\"]\n# ::alignments 1-1.3.3 3-1.1.1.1 4-1 5-1.2 7-1.3\n(f / file-01~e.4\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Terry\"~e.3))\n   :ARG1 (p2 / paper~e.5\n             :mod (a / amr-unknown))\n   :manner (r / read-01~e.7\n              :polarity -\n              :ARG0 p\n              :ARG1 (a2 / article~e.1)))", [[0, 5], [6, 13], [14, 17], [18, 23], [24, 28], [29, 35], [36, 43], [44, 51], [51, 52]]], ["# ::snt I want to try and buy some whiskey.\n# ::tokens [\"I\", \"want\", \"to\", \"try\", \"and\", \"buy\", \"some\", \"whiskey\", \".\"]\n# ::lemmas [\"i\", \"want\", \"to\", \"try\", \"and\", \"buy\", \"some\", \"whiskey\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1 4-1.2 5-1.2.2 6-1.2.1.2.1 7-1.2.1.2\n(w / want-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (a / and~e.4\n            :op1 (t / try-01~e.3\n                    :ARG0 ii\n                    :ARG1 (w2 / whiskey~e.7\n                              :quant (s / some~e.6)))\n            :op2 (b / buy-01~e.5\n                    :ARG0 ii\n                    :ARG1 w2)))", [[0, 1], [2, 6], [7, 9], [10, 13], [14, 17], [18, 21], [22, 26], [27, 34], [34, 35]]], ["# ::snt She goes and buying some whiskey.\n# ::tokens [\"She\", \"goes\", \"and\", \"buying\", \"some\", \"whiskey\", \".\"]\n# ::lemmas [\"she\", \"go\", \"and\", \"buy\", \"some\", \"whiskey\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1 3-1.2 4-1.2.2.1 5-1.2.2\n(a / and~e.2\n   :op1 (g / go-02~e.1\n           :ARG0 (s / she~e.0))\n   :op2 (b / buy-01~e.3\n           :ARG0 s\n           :ARG1 (w / whiskey~e.5\n                    :quant (s2 / some~e.4))))", [[0, 3], [4, 8], [9, 12], [13, 19], [20, 24], [25, 32], [32, 33]]], ["# ::snt Kim and Terry is happy.\n# ::tokens [\"Kim\", \"and\", \"Terry\", \"is\", \"happy\", \".\"]\n# ::lemmas [\"Kim\", \"and\", \"Terry\", \"be\", \"happy\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 2-1.1.2.1.1 4-1\n(h / happy-01~e.4\n   :ARG1 (a / and~e.1\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"Kim\"~e.0))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Terry\"~e.2))))", [[0, 3], [4, 7], [8, 13], [14, 16], [17, 22], [22, 23]]], ["# ::snt Kim gave a dollar to Bobbie and a dime to Jean.\n# ::tokens [\"Kim\", \"gave\", \"a\", \"dollar\", \"to\", \"Bobbie\", \"and\", \"a\", \"dime\", \"to\", \"Jean\", \".\"]\n# ::lemmas [\"Kim\", \"give\", \"a\", \"dollar\", \"to\", \"Bobbie\", \"and\", \"a\", \"dime\", \"to\", \"Jean\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 3-1.1.2 5-1.1.3.1.1 6-1 10-1.2.3.1.1\n(a / and~e.6\n   :op1 (g / give-01~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Kim\"~e.0))\n           :ARG1 (d / dollar~e.3)\n           :ARG2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Bobbie\"~e.5)))\n   :op2 (g2 / give-01\n            :ARG0 p\n            :ARG1 (m / monetary-quantity\n                     :quant 10\n                     :unit (c / cent))\n            :ARG2 (p3 / person\n                      :name (n3 / name\n                                :op1 \"Jean\"~e.10))))", [[0, 3], [4, 8], [9, 10], [11, 17], [18, 20], [21, 27], [28, 31], [32, 33], [34, 38], [39, 41], [42, 46], [46, 47]]], ["# ::snt This girl in the red coat will put a picture of Bill in the mailbox and on your desk before tomorrow.\n# ::tokens [\"This\", \"girl\", \"in\", \"the\", \"red\", \"coat\", \"will\", \"put\", \"a\", \"picture\", \"of\", \"Bill\", \"in\", \"the\", \"mailbox\", \"and\", \"on\", \"your\", \"desk\", \"before\", \"tomorrow\", \".\"]\n# ::lemmas [\"this\", \"girl\", \"in\", \"the\", \"red\", \"coat\", \"will\", \"put\", \"a\", \"picture\", \"of\", \"Bill\", \"in\", \"the\", \"mailbox\", \"and\", \"on\", \"your\", \"desk\", \"before\", \"tomorrow\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 4-1.1.2.1.1 5-1.1.2.1 7-1 9-1.2 11-1.2.1.1.1 14-1.3.1 15-1.3 18-1.3.2 19-1.4 20-1.4.1\n(p / put-01~e.7\n   :ARG0 (g / girl~e.1\n            :mod (t / this~e.0)\n            :ARG0-of (w / wear-01\n                        :ARG1 (c / coat~e.5\n                                 :ARG1-of (r / red-02~e.4))))\n   :ARG1 (p2 / picture-01~e.9\n             :ARG1 (p3 / person\n                       :name (n / name\n                                :op1 \"Bill\"~e.11)))\n   :ARG2 (a / and~e.15\n            :op1 (m / mailbox~e.14)\n            :op2 (d / desk~e.18\n                    :poss (y / you)))\n   :time (b / before~e.19\n            :op1 (t2 / tomorrow~e.20)))", [[0, 4], [5, 9], [10, 12], [13, 16], [17, 20], [21, 25], [26, 30], [31, 34], [35, 36], [37, 44], [45, 47], [48, 52], [53, 55], [56, 59], [60, 67], [68, 71], [72, 74], [75, 79], [80, 84], [85, 91], [92, 100], [100, 101]]], ["# ::snt Put a picture of Bill on your desk before tomorrow, this girl in the red coat will put a picture of Bill on your desk before tomorrow.\n# ::tokens [\"Put\", \"a\", \"picture\", \"of\", \"Bill\", \"on\", \"your\", \"desk\", \"before\", \"tomorrow\", \",\", \"this\", \"girl\", \"in\", \"the\", \"red\", \"coat\", \"will\", \"put\", \"a\", \"picture\", \"of\", \"Bill\", \"on\", \"your\", \"desk\", \"before\", \"tomorrow\", \".\"]\n# ::lemmas [\"put\", \"a\", \"picture\", \"of\", \"Bill\", \"on\", \"your\", \"desk\", \"before\", \"tomorrow\", \",\", \"this\", \"girl\", \"in\", \"the\", \"red\", \"coat\", \"will\", \"put\", \"a\", \"picture\", \"of\", \"Bill\", \"on\", \"your\", \"desk\", \"before\", \"tomorrow\", \".\"]\n# ::alignments 0-1.1 2-1.1.2 4-1.1.2.1.1.1 7-1.1.3 8-1.1.4 9-1.1.4.1 11-1.1.1.1 12-1.1.1 15-1.1.1.2.1.1 16-1.1.1.2.1 18-1.2 20-1.2.2 26-1.2.4\n(a / and\n   :op1 (p / put-01~e.0\n           :ARG0 (g / girl~e.12\n                    :mod (t / this~e.11)\n                    :ARG0-of (w / wear-01\n                                :ARG1 (c / coat~e.16\n                                         :ARG1-of (r / red-02~e.15))))\n           :ARG1 (p2 / picture~e.2\n                     :topic (p3 / person\n                                :name (n / name\n                                         :op1 \"Bill\"~e.4)))\n           :ARG2 (d / desk~e.7\n                    :poss (y / you))\n           :time (b / before~e.8\n                    :op1 (t2 / tomorrow~e.9)))\n   :op2 (p4 / put-01~e.18\n            :ARG0 g\n            :ARG1 (p5 / picture~e.20\n                      :topic p3)\n            :ARG2 d\n            :time (b2 / before~e.26\n                      :op1 t2)))", [[0, 3], [4, 5], [6, 13], [14, 16], [17, 21], [22, 24], [25, 29], [30, 34], [35, 41], [42, 50], [50, 51], [52, 56], [57, 61], [62, 64], [65, 68], [69, 72], [73, 77], [78, 82], [83, 86], [87, 88], [89, 96], [97, 99], [100, 104], [105, 107], [108, 112], [113, 117], [118, 124], [125, 133], [133, 134]]], ["# ::snt Picture of Bill, this girl in the red coat will put a picture of Bill on your desk before tomorrow.\n# ::tokens [\"Picture\", \"of\", \"Bill\", \",\", \"this\", \"girl\", \"in\", \"the\", \"red\", \"coat\", \"will\", \"put\", \"a\", \"picture\", \"of\", \"Bill\", \"on\", \"your\", \"desk\", \"before\", \"tomorrow\", \".\"]\n# ::lemmas [\"picture\", \"of\", \"Bill\", \",\", \"this\", \"girl\", \"in\", \"the\", \"red\", \"coat\", \"will\", \"put\", \"a\", \"picture\", \"of\", \"Bill\", \"on\", \"your\", \"desk\", \"before\", \"tomorrow\", \".\"]\n# ::alignments 0-1.1 2-1.1.1.1.1 4-1.2.1.1 5-1.2.1 8-1.2.1.2.1.1 9-1.2.1.2.1 11-1.2 13-1.2.2 18-1.2.3 19-1.2.4 20-1.2.4.1\n(m / multi-sentence\n   :snt1 (p / picture~e.0\n            :topic (p2 / person\n                       :name (n / name\n                                :op1 \"Bill\"~e.2)))\n   :snt2 (p3 / put-01~e.11\n             :ARG0 (g / girl~e.5\n                      :mod (t / this~e.4)\n                      :ARG0-of (w / wear-01\n                                  :ARG1 (c / coat~e.9\n                                           :ARG1-of (r / red-02~e.8))))\n             :ARG1 (p4 / picture~e.13\n                       :topic p2)\n             :ARG2 (d / desk~e.18\n                      :poss (y / you))\n             :time (b / before~e.19\n                      :op1 (t2 / tomorrow~e.20))))", [[0, 7], [8, 10], [11, 15], [15, 16], [17, 21], [22, 26], [27, 29], [30, 33], [34, 37], [38, 42], [43, 47], [48, 51], [52, 53], [54, 61], [62, 64], [65, 69], [70, 72], [73, 77], [78, 82], [83, 89], [90, 98], [98, 99]]], ["# ::snt Ann bought a first edition of Richard III for $1000.\n# ::tokens [\"Ann\", \"bought\", \"a\", \"first\", \"edition\", \"of\", \"Richard\", \"III\", \"for\", \"$\", \"1000\", \".\"]\n# ::lemmas [\"Ann\", \"buy\", \"a\", \"first\", \"edition\", \"of\", \"Richard\", \"III\", \"for\", \"$\", \"1000\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.2 6-1.2.2.1.1 7-1.2.2.1.2 10-1.3.1\n(b / buy-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Ann\"~e.0))\n   :ARG1 (e / edition~e.4\n            :ord (o / ordinal-entity\n                    :value 1)\n            :mod (m / music\n                    :name (n2 / name\n                              :op1 \"Richard\"~e.6\n                              :op2 \"III\"~e.7)))\n   :ARG3 (m2 / monetary-quantity\n             :quant 1000~e.10\n             :unit (d / dollar)))", [[0, 3], [4, 10], [11, 12], [13, 18], [19, 26], [27, 29], [30, 37], [38, 41], [42, 45], [46, 47], [47, 51], [51, 52]]], ["# ::snt John became deadly afraid of flying.\n# ::tokens [\"John\", \"became\", \"deadly\", \"afraid\", \"of\", \"flying\", \".\"]\n# ::lemmas [\"John\", \"become\", \"deadly\", \"afraid\", \"of\", \"fly\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 5-1.2.2\n(b / become-01~e.1\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG2 (f / fear-01\n            :ARG0 p\n            :ARG1 (f2 / fly-01~e.5\n                      :ARG1 p)\n            :ARG0-of (k / kill-01)))", [[0, 4], [5, 11], [12, 18], [19, 25], [26, 28], [29, 35], [35, 36]]], ["# ::snt What John promised is to be gentle.\n# ::tokens [\"What\", \"John\", \"promised\", \"is\", \"to\", \"be\", \"gentle\", \".\"]\n# ::lemmas [\"what\", \"John\", \"promise\", \"be\", \"to\", \"be\", \"gentle\", \".\"]\n# ::alignments 1-1.1.1.1 2-1 6-1.2\n(p / promise-01~e.2\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"John\"~e.1))\n   :ARG2 (g / gentle-01~e.6\n            :ARG1 (y / you)))", [[0, 4], [5, 9], [10, 18], [19, 21], [22, 24], [25, 27], [28, 34], [34, 35]]], ["# ::snt Henri wants to buy which books about cooking?\n# ::tokens [\"Henri\", \"wants\", \"to\", \"buy\", \"which\", \"books\", \"about\", \"cooking\", \"?\"]\n# ::lemmas [\"Henri\", \"want\", \"to\", \"buy\", \"which\", \"book\", \"about\", \"cook\", \"?\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 5-1.2.2 7-1.2.2.1\n(w / want-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Henri\"~e.0))\n   :ARG1 (b / buy-01~e.3\n            :ARG0 p\n            :ARG1 (b2 / book~e.5\n                      :topic (c / cook-01~e.7)\n                      :mod (a / amr-unknown))))", [[0, 5], [6, 11], [12, 14], [15, 18], [19, 24], [25, 30], [31, 36], [37, 44], [44, 45]]], ["# ::snt I will fix the computer for Carol.\n# ::tokens [\"I\", \"will\", \"fix\", \"the\", \"computer\", \"for\", \"Carol\", \".\"]\n# ::lemmas [\"i\", \"will\", \"fix\", \"the\", \"computer\", \"for\", \"Carol\", \".\"]\n# ::alignments 0-1.1 2-1 4-1.2 6-1.3.1.1\n(f / fix-02~e.2\n   :ARG0 (ii / i~e.0)\n   :ARG1 (c / computer~e.4)\n   :beneficiary (p / person\n                   :name (n / name\n                            :op1 \"Carol\"~e.6)))", [[0, 1], [2, 6], [7, 10], [11, 14], [15, 23], [24, 27], [28, 33], [33, 34]]], ["# ::snt Smith loaned a valuable collection of manuscripts to the library.\n# ::tokens [\"Smith\", \"loaned\", \"a\", \"valuable\", \"collection\", \"of\", \"manuscripts\", \"to\", \"the\", \"library\", \".\"]\n# ::lemmas [\"Smith\", \"loan\", \"a\", \"valuable\", \"collection\", \"of\", \"manuscript\", \"to\", \"the\", \"library\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1 4-1.2 6-1.2.2 9-1.3\n(l / loan-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Smith\"~e.0))\n   :ARG1 (c / collection~e.4\n            :ARG1-of (v / value-02~e.3)\n            :consist-of (m / manuscripts~e.6))\n   :ARG2 (l2 / library~e.9))", [[0, 5], [6, 12], [13, 14], [15, 23], [24, 34], [35, 37], [38, 49], [50, 52], [53, 56], [57, 64], [64, 65]]], ["# ::snt The paper is cut by Mary.\n# ::tokens [\"The\", \"paper\", \"is\", \"cut\", \"by\", \"Mary\", \".\"]\n# ::lemmas [\"the\", \"paper\", \"be\", \"cut\", \"by\", \"Mary\", \".\"]\n# ::alignments 1-1.2 3-1 5-1.1.1.1\n(c / cut-01~e.3\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mary\"~e.5))\n   :ARG1 (p2 / paper~e.1))", [[0, 3], [4, 9], [10, 12], [13, 16], [17, 19], [20, 24], [24, 25]]], ["# ::snt It was from six to nine or it took place from six to nine.\n# ::tokens [\"It\", \"was\", \"from\", \"six\", \"to\", \"nine\", \"or\", \"it\", \"took\", \"place\", \"from\", \"six\", \"to\", \"nine\", \".\"]\n# ::lemmas [\"it\", \"be\", \"from\", \"six\", \"to\", \"nine\", \"or\", \"it\", \"take\", \"place\", \"from\", \"six\", \"to\", \"nine\", \".\"]\n# ::alignments 0-1.1.1 3-1.1.2.1 5-1.1.3.1 6-1 11-1.2.2.1\n(o / or~e.6\n   :op1 (r / range-01\n           :ARG1 (ii / it~e.0)\n           :ARG3 (p / percentage-entity\n                    :value 6~e.3)\n           :ARG4 (p2 / percentage-entity\n                     :value 9~e.5))\n   :op2 (r2 / range-01\n            :ARG1 ii\n            :ARG3 (p3 / percentage-entity\n                      :value 6~e.11)\n            :ARG4 p2))", [[0, 2], [3, 6], [7, 11], [12, 15], [16, 18], [19, 23], [24, 26], [27, 29], [30, 34], [35, 40], [41, 45], [46, 49], [50, 52], [53, 57], [57, 58]]], ["# ::snt Suddenly, there arrived two inspectors from the INS.\n# ::tokens [\"Suddenly\", \",\", \"there\", \"arrived\", \"two\", \"inspectors\", \"from\", \"the\", \"INS\", \".\"]\n# ::lemmas [\"suddenly\", \",\", \"there\", \"arrive\", \"two\", \"inspector\", \"from\", \"the\", \"INS\", \".\"]\n# ::alignments 0-1.2 3-1 4-1.1.1 5-1.1.2\n(a / arrive-01~e.3\n   :ARG1 (p / person\n            :quant 2~e.4\n            :ARG0-of (ii / inspect-01~e.5)\n            :ARG0-of (h / have-org-role-91\n                        :ARG1 (g / government-organization\n                                 :name (n / name\n                                          :op1 \" INS\"))))\n   :manner (s / sudden~e.0))", [[0, 8], [8, 9], [10, 15], [16, 23], [24, 27], [28, 38], [39, 43], [44, 47], [48, 51], [51, 52]]], ["# ::snt The soup cooks, thickens.\n# ::tokens [\"The\", \"soup\", \"cooks\", \",\", \"thickens\", \".\"]\n# ::lemmas [\"the\", \"soup\", \"cook\", \",\", \"thicken\", \".\"]\n# ::alignments 1-1.1.1 2-1.1 4-1.2\n(a / and\n   :op1 (c / cook-01~e.2\n           :ARG1 (s / soup~e.1))\n   :op2 (t / thicken-01~e.4\n           :ARG1 s))", [[0, 3], [4, 8], [9, 14], [14, 15], [16, 24], [24, 25]]], ["# ::snt I gave money to the charity.\n# ::tokens [\"I\", \"gave\", \"money\", \"to\", \"the\", \"charity\", \".\"]\n# ::lemmas [\"i\", \"give\", \"money\", \"to\", \"the\", \"charity\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2 5-1.3\n(g / give-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (m / money~e.2)\n   :ARG2 (c / charity~e.5))", [[0, 1], [2, 6], [7, 12], [13, 15], [16, 19], [20, 27], [27, 28]]], ["# ::snt John asked.\n# ::tokens [\"John\", \"asked\", \".\"]\n# ::lemmas [\"John\", \"ask\", \".\"]\n# ::alignments 0-1.1.1.1 1-1\n(a / ask-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0)))", [[0, 4], [5, 10], [10, 11]]], ["# ::snt I saw even the student.\n# ::tokens [\"I\", \"saw\", \"even\", \"the\", \"student\", \".\"]\n# ::lemmas [\"i\", \"see\", \"even\", \"the\", \"student\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.2 4-1.2.1\n(s / see-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person\n            :ARG0-of (s2 / study-01~e.4)\n            :mod (e / even~e.2)))", [[0, 1], [2, 5], [6, 10], [11, 14], [15, 22], [22, 23]]], ["# ::snt John whispered Mary left.\n# ::tokens [\"John\", \"whispered\", \"Mary\", \"left\", \".\"]\n# ::lemmas [\"John\", \"whisper\", \"Mary\", \"leave\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1.1 3-1.2\n(w / whisper-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (l / leave-11~e.3\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Mary\"~e.2)))\n   :ARG2 p)", [[0, 4], [5, 14], [15, 19], [20, 24], [24, 25]]], ["# ::snt Mary wonders that Bill will come.\n# ::tokens [\"Mary\", \"wonders\", \"that\", \"Bill\", \"will\", \"come\", \".\"]\n# ::lemmas [\"Mary\", \"wonder\", \"that\", \"Bill\", \"will\", \"come\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1.1.1 5-1.2\n(w / wonder-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mary\"~e.0))\n   :ARG1 (c / come-01~e.5\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Bill\"~e.3))))", [[0, 4], [5, 12], [13, 17], [18, 22], [23, 27], [28, 32], [32, 33]]], ["# ::snt Sophie will theater.\n# ::tokens [\"Sophie\", \"will\", \"theater\", \".\"]\n# ::lemmas [\"Sophie\", \"will\", \"theater\", \".\"]\n# ::alignments 0-1.1.1.1 2-1\n(t / theater~e.2\n   :domain (p / person\n              :name (n / name\n                       :op1 \"Sophie\"~e.0)))", [[0, 6], [7, 11], [12, 19], [19, 20]]], ["# ::snt John finished the cake and drank the lemonade.\n# ::tokens [\"John\", \"finished\", \"the\", \"cake\", \"and\", \"drank\", \"the\", \"lemonade\", \".\"]\n# ::lemmas [\"John\", \"finish\", \"the\", \"cake\", \"and\", \"drink\", \"the\", \"lemonade\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 3-1.1.2 4-1 5-1.2 7-1.2.2\n(a / and~e.4\n   :op1 (f / finish-01~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"John\"~e.0))\n           :ARG1 (c / cake~e.3))\n   :op2 (d / drink-01~e.5\n           :ARG0 p\n           :ARG1 (l / lemonade~e.7)))", [[0, 4], [5, 13], [14, 17], [18, 22], [23, 26], [27, 32], [33, 36], [37, 45], [45, 46]]], ["# ::snt Herself likes Mary's mother.\n# ::tokens [\"Herself\", \"likes\", \"Mary\", \"'s\", \"mother\", \".\"]\n# ::lemmas [\"herself\", \"like\", \"Mary\", \"'s\", \"mother\", \".\"]\n# ::alignments 1-1 2-1.2.1.1.1.1 4-1.2.1.2\n(l / like-01~e.1\n   :ARG0 (s / she)\n   :ARG1 (p / person\n            :ARG0-of (h / have-rel-role-91\n                        :ARG1 (p2 / person\n                                  :name (n / name\n                                           :op1 \"Mary\"~e.2))\n                        :ARG2 (m / mother~e.4))))", [[0, 7], [8, 13], [14, 18], [18, 20], [21, 27], [27, 28]]], ["# ::snt Each of the boys fought with some of the other boys.\n# ::tokens [\"Each\", \"of\", \"the\", \"boys\", \"fought\", \"with\", \"some\", \"of\", \"the\", \"other\", \"boys\", \".\"]\n# ::lemmas [\"each\", \"of\", \"the\", \"boy\", \"fight\", \"with\", \"some\", \"of\", \"the\", \"other\", \"boy\", \".\"]\n# ::alignments 0-1.1.1 1-1.2.2 3-1.1 4-1 6-1.2.1 9-1.2.2.1.1 10-1.2\n(f / fight-01~e.4\n   :ARG0 (b / boy~e.3\n            :mod (e / each~e.0))\n   :ARG1 (b2 / boy~e.10\n             :mod (s / some~e.6)\n             :ARG1-of (ii / include-91~e.1\n                          :ARG2 (b3 / boy\n                                    :mod (o / other~e.9)))))", [[0, 4], [5, 7], [8, 11], [12, 16], [17, 23], [24, 28], [29, 33], [34, 36], [37, 40], [41, 46], [47, 51], [51, 52]]], ["# ::snt John's mother likes himself.\n# ::tokens [\"John\", \"'s\", \"mother\", \"likes\", \"himself\", \".\"]\n# ::lemmas [\"John\", \"'s\", \"mother\", \"like\", \"himself\", \".\"]\n# ::alignments 0-1.1.1.1.1.1 2-1.1.1.2 3-1\n(l / like-01~e.3\n   :ARG0 (p / person\n            :ARG0-of (h / have-rel-role-91\n                        :ARG1 (p2 / person\n                                  :name (n / name\n                                           :op1 \"John\"~e.0))\n                        :ARG2 (m / mother~e.2)))\n   :ARG1 p)", [[0, 4], [4, 6], [7, 13], [14, 19], [20, 27], [27, 28]]], ["# ::snt Mary revealed himself to John.\n# ::tokens [\"Mary\", \"revealed\", \"himself\", \"to\", \"John\", \".\"]\n# ::lemmas [\"Mary\", \"reveal\", \"himself\", \"to\", \"John\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.3.1.1\n(r / reveal-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mary\"~e.0))\n   :ARG1 p\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"John\"~e.4)))", [[0, 4], [5, 13], [14, 21], [22, 24], [25, 29], [29, 30]]], ["# ::snt Mary believes that Bill saw himself.\n# ::tokens [\"Mary\", \"believes\", \"that\", \"Bill\", \"saw\", \"himself\", \".\"]\n# ::lemmas [\"Mary\", \"believe\", \"that\", \"Bill\", \"see\", \"himself\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1.1.1 4-1.2\n(b / believe-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mary\"~e.0))\n   :ARG1 (s / see-01~e.4\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Bill\"~e.3))\n            :ARG1 p2))", [[0, 4], [5, 13], [14, 18], [19, 23], [24, 27], [28, 35], [35, 36]]], ["# ::snt John heard that they criticized themselves.\n# ::tokens [\"John\", \"heard\", \"that\", \"they\", \"criticized\", \"themselves\", \".\"]\n# ::lemmas [\"John\", \"hear\", \"that\", \"they\", \"criticize\", \"themselves\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1 4-1.2\n(h / hear-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (c / criticize-01~e.4\n            :ARG0 (t / they~e.3)\n            :ARG1 t))", [[0, 4], [5, 10], [11, 15], [16, 20], [21, 31], [32, 42], [42, 43]]], ["# ::snt Mary thinks that she is smart.\n# ::tokens [\"Mary\", \"thinks\", \"that\", \"she\", \"is\", \"smart\", \".\"]\n# ::lemmas [\"Mary\", \"think\", \"that\", \"she\", \"be\", \"smart\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 5-1.2\n(t / think-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mary\"~e.0))\n   :ARG1 (s / smart-06~e.5\n            :ARG1 p))", [[0, 4], [5, 11], [12, 16], [17, 20], [21, 23], [24, 29], [29, 30]]], ["# ::snt Henry found that Bill is sad.\n# ::tokens [\"Henry\", \"found\", \"that\", \"Bill\", \"is\", \"sad\", \".\"]\n# ::lemmas [\"Henry\", \"find\", \"that\", \"Bill\", \"be\", \"sad\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1.1.1 5-1.2\n(f / find-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Henry\"~e.0))\n   :ARG1 (s / sad-02~e.5\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Bill\"~e.3))))", [[0, 5], [6, 11], [12, 16], [17, 21], [22, 24], [25, 28], [28, 29]]], ["# ::snt John considers himself proud of Mary.\n# ::tokens [\"John\", \"considers\", \"himself\", \"proud\", \"of\", \"Mary\", \".\"]\n# ::lemmas [\"John\", \"consider\", \"himself\", \"proud\", \"of\", \"Mary\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 5-1.2.2.1.1\n(c / consider-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (p2 / pride-01\n             :ARG0 p\n             :ARG1 (p3 / person\n                       :name (n2 / name\n                                 :op1 \"Mary\"~e.5))))", [[0, 4], [5, 14], [15, 22], [23, 28], [29, 31], [32, 36], [36, 37]]], ["# ::snt You should sit before there.\n# ::tokens [\"You\", \"should\", \"sit\", \"before\", \"there\", \".\"]\n# ::lemmas [\"you\", \"should\", \"sit\", \"before\", \"there\", \".\"]\n# ::alignments 0-1.1.1 2-1.1 3-1.1.2 4-1.1.2.1\n(r / recommend-01\n   :ARG1 (s / sit-01~e.2\n            :ARG1 (y / you~e.0)\n            :time (b / before~e.3\n                     :op1 (t / there~e.4)))\n   :ARG2 y)", [[0, 3], [4, 10], [11, 14], [15, 21], [22, 27], [27, 28]]], ["# ::snt There is a nurse available.\n# ::tokens [\"There\", \"is\", \"a\", \"nurse\", \"available\", \".\"]\n# ::lemmas [\"there\", \"be\", \"a\", \"nurse\", \"available\", \".\"]\n# ::alignments 3-1.1 4-1\n(a / available-02~e.4\n   :ARG2 (n / nurse~e.3))", [[0, 5], [6, 8], [9, 10], [11, 16], [17, 26], [26, 27]]], ["# ::snt Everyone hopes everyone to sleep.\n# ::tokens [\"Everyone\", \"hopes\", \"everyone\", \"to\", \"sleep\", \".\"]\n# ::lemmas [\"everyone\", \"hope\", \"everyone\", \"to\", \"sleep\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1 4-1.2\n(h / hope-01~e.1\n   :ARG0 (e / everyone~e.0)\n   :ARG1 (s / sleep-01~e.4\n            :ARG0 (e2 / everyone~e.2)))", [[0, 8], [9, 14], [15, 23], [24, 26], [27, 32], [32, 33]]], ["# ::snt Everyone hopes that he will sleep.\n# ::tokens [\"Everyone\", \"hopes\", \"that\", \"he\", \"will\", \"sleep\", \".\"]\n# ::lemmas [\"everyone\", \"hope\", \"that\", \"he\", \"will\", \"sleep\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1 5-1.2\n(h / hope-01~e.1\n   :ARG0 (e / everyone~e.0)\n   :ARG1 (s / sleep-01~e.5\n            :ARG0 (h2 / he~e.3)))", [[0, 8], [9, 14], [15, 19], [20, 22], [23, 27], [28, 33], [33, 34]]], ["# ::snt Only Churchill remembered Churchill giving the Blood, Sweat and Tears speech.\n# ::tokens [\"Only\", \"Churchill\", \"remembered\", \"Churchill\", \"giving\", \"the\", \"Blood\", \",\", \"Sweat\", \"and\", \"Tears\", \"speech\", \".\"]\n# ::lemmas [\"only\", \"Churchill\", \"remember\", \"Churchill\", \"give\", \"the\", \"Blood\", \",\", \"sweat\", \"and\", \"Tears\", \"speech\", \".\"]\n# ::alignments 0-1.1.2 1-1.1.1.1 2-1 6-1.2.2.1 8-1.2.2.2 9-1.2.2 10-1.2.2.3 11-1.2\n(r / remember-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Churchill\"~e.1)\n            :mod (o / only~e.0))\n   :ARG1 (s / speak-01~e.11\n            :ARG0 p\n            :ARG1 (a / and~e.9\n                     :op1 (b / blood~e.6)\n                     :op2 (s2 / sweat-01~e.8)\n                     :op3 (t / tear-01~e.10))))", [[0, 4], [5, 14], [15, 25], [26, 35], [36, 42], [43, 46], [47, 52], [52, 53], [54, 59], [60, 63], [64, 69], [70, 76], [76, 77]]], ["# ::snt John promise Mary to shave himself.\n# ::tokens [\"John\", \"promise\", \"Mary\", \"to\", \"shave\", \"himself\", \".\"]\n# ::lemmas [\"John\", \"promise\", \"Mary\", \"to\", \"shave\", \"himself\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1 4-1.3\n(p / promise-01~e.1\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"John\"~e.0))\n   :ARG1 (p3 / person\n             :name (n2 / name\n                       :op1 \"Mary\"~e.2))\n   :ARG2 (s / shave-01~e.4\n            :ARG0 p3\n            :ARG1 p3))", [[0, 4], [5, 12], [13, 17], [18, 20], [21, 26], [27, 34], [34, 35]]], ["# ::snt John convinced Bill that Mary should sleep.\n# ::tokens [\"John\", \"convinced\", \"Bill\", \"that\", \"Mary\", \"should\", \"sleep\", \".\"]\n# ::lemmas [\"John\", \"convince\", \"Bill\", \"that\", \"Mary\", \"should\", \"sleep\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1 4-1.3.1.1.1.1 6-1.3.1\n(c / convince-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Bill\"~e.2))\n   :ARG2 (r / recommend-01\n            :ARG1 (s / sleep-01~e.6\n                     :ARG0 (p3 / person\n                               :name (n3 / name\n                                         :op1 \"Mary\"~e.4)))))", [[0, 4], [5, 14], [15, 19], [20, 24], [25, 29], [30, 36], [37, 42], [42, 43]]], ["# ::snt I saw Bill while you did so Mary.\n# ::tokens [\"I\", \"saw\", \"Bill\", \"while\", \"you\", \"did\", \"so\", \"Mary\", \".\"]\n# ::lemmas [\"i\", \"see\", \"Bill\", \"while\", \"you\", \"do\", \"so\", \"Mary\", \".\"]\n# ::alignments 0-1.1 1-1.2 2-1.2.2.1.1 5-1.2.3 6-1.2.3.2 7-1.2.3.1.1.1\n(s / say-01\n   :ARG0 (ii / i~e.0)\n   :ARG1 (s2 / see-01~e.1\n             :ARG0 ii\n             :ARG1 (p / person\n                      :name (n / name\n                               :op1 \"Bill\"~e.2))\n             :time (d / do-02~e.5\n                      :ARG0 (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Mary\"~e.7))\n                      :ARG1 (s3 / so~e.6)))\n   :ARG2 p2)", [[0, 1], [2, 5], [6, 10], [11, 16], [17, 20], [21, 24], [25, 27], [28, 32], [32, 33]]], ["# ::snt What Mary did Bill was give a book.\n# ::tokens [\"What\", \"Mary\", \"did\", \"Bill\", \"was\", \"give\", \"a\", \"book\", \".\"]\n# ::lemmas [\"what\", \"Mary\", \"do\", \"Bill\", \"be\", \"give\", \"a\", \"book\", \".\"]\n# ::alignments 1-1.3.1.1.1 2-1.3 3-1.1.1.1 5-1 7-1.2\n(g / give-01~e.5\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bill\"~e.3))\n   :ARG1 (b / book~e.7)\n   :ARG1-of (d / do-02~e.2\n               :ARG0 (p2 / person\n                         :name (n2 / name\n                                   :op1 \"Mary\"~e.1))))", [[0, 4], [5, 9], [10, 13], [14, 18], [19, 22], [23, 27], [28, 29], [30, 34], [34, 35]]], ["# ::snt The bears sniffed\n# ::tokens [\"The\", \"bears\", \"sniffed\"]\n# ::lemmas [\"the\", \"bear\", \"sniff\"]\n# ::alignments 1-1.1 2-1\n(s / sniff-01~e.2\n   :ARG0 (b / bear~e.1))", [[0, 3], [4, 9], [10, 17]]], ["# ::snt to steal talismans from witches is dangerous\n# ::tokens [\"to\", \"steal\", \"talismans\", \"from\", \"witches\", \"is\", \"dangerous\"]\n# ::lemmas [\"to\", \"steal\", \"talisman\", \"from\", \"witch\", \"be\", \"dangerous\"]\n# ::alignments 1-1.1 2-1.1.1 4-1.1.2 6-1\n(d / dangerous~e.6\n   :domain (s / steal-01~e.1\n              :ARG1 (t / talisman~e.2)\n              :ARG2 (w / witch~e.4)))", [[0, 2], [3, 8], [9, 18], [19, 23], [24, 31], [32, 34], [35, 44]]], ["# ::snt Anson demonized\n# ::tokens [\"Anson\", \"demonized\"]\n# ::lemmas [\"Anson\", \"demonize\"]\n# ::alignments 0-1.1.1.1 1-1\n(d / demonize-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Anson\"~e.0)))", [[0, 5], [6, 15]]], ["# ::snt You kicked yourselves\n# ::tokens [\"You\", \"kicked\", \"yourselves\"]\n# ::lemmas [\"you\", \"kick\", \"yourself\"]\n# ::alignments 0-1.1 1-1\n(k / kick-01~e.1\n   :ARG0 (y / you~e.0)\n   :ARG1 y)", [[0, 3], [4, 10], [11, 21]]], ["# ::snt The book that I said that I'd never read.\n# ::tokens [\"The\", \"book\", \"that\", \"I\", \"said\", \"that\", \"I\", \"'d\", \"never\", \"read\", \".\"]\n# ::lemmas [\"the\", \"book\", \"that\", \"i\", \"say\", \"that\", \"i\", \"would\", \"never\", \"read\", \".\"]\n# ::alignments 1-1 3-1.1.2 4-1.1.4 9-1.1\n(b / book~e.1\n   :ARG1-of (r / read-01~e.9\n               :polarity -\n               :ARG0 (ii / i~e.3)\n               :time (e / ever)\n               :ARG1-of (s / say-01~e.4\n                           :ARG0 ii)))", [[0, 3], [4, 8], [9, 13], [14, 15], [16, 20], [21, 25], [26, 27], [27, 29], [30, 35], [36, 40], [40, 41]]], ["# ::snt Anson demonized up the Khyber\n# ::tokens [\"Anson\", \"demonized\", \"up\", \"the\", \"Khyber\"]\n# ::lemmas [\"Anson\", \"demonize\", \"up\", \"the\", \"Khyber\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.2.1.1\n(d / demonize-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Anson\"~e.0))\n   :ARG1 (e / ethnic-group\n            :name (n2 / name\n                      :op1 \"Khyber\"~e.4)))", [[0, 5], [6, 15], [16, 18], [19, 22], [23, 29]]], ["# ::snt It is not true that I might be going to the party.\n# ::tokens [\"It\", \"is\", \"not\", \"true\", \"that\", \"I\", \"might\", \"be\", \"going\", \"to\", \"the\", \"party\", \".\"]\n# ::lemmas [\"it\", \"be\", \"not\", \"true\", \"that\", \"i\", \"might\", \"be\", \"go\", \"to\", \"the\", \"party\", \".\"]\n# ::alignments 2-1.1 3-1 5-1.2.1.1 8-1.2.1 11-1.2.1.2\n(t / true-01~e.3\n   :polarity -~e.2\n   :ARG1 (p / possible-01\n            :ARG1 (g / go-02~e.8\n                     :ARG0 (ii / i~e.5)\n                     :ARG4 (p2 / party~e.11))))", [[0, 2], [3, 5], [6, 9], [10, 14], [15, 19], [20, 21], [22, 27], [28, 30], [31, 36], [37, 39], [40, 43], [44, 49], [49, 50]]], ["# ::snt Kick you!\n# ::tokens [\"Kick\", \"you\", \"!\"]\n# ::lemmas [\"Kick\", \"you\", \"!\"]\n# ::alignments 0-1 1-1.2\n(k / kick-01~e.0\n   :mode imperative\n   :ARG0 (y / you~e.1))", [[0, 4], [5, 8], [8, 9]]], ["# ::snt Jason persuaded the doctor to treat Medea\n# ::tokens [\"Jason\", \"persuaded\", \"the\", \"doctor\", \"to\", \"treat\", \"Medea\"]\n# ::lemmas [\"Jason\", \"persuade\", \"the\", \"doctor\", \"to\", \"treat\", \"Medea\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 5-1.3 6-1.3.2.1.1\n(p / persuade-01~e.1\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Jason\"~e.0))\n   :ARG1 (d / doctor~e.3)\n   :ARG2 (t / treat-03~e.5\n            :ARG0 d\n            :ARG1 (p3 / person\n                      :name (n2 / name\n                                :op1 \"Medea\"~e.6))))", [[0, 5], [6, 15], [16, 19], [20, 26], [27, 29], [30, 35], [36, 41]]], ["# ::snt Who did you get an accurate description of?\n# ::tokens [\"Who\", \"did\", \"you\", \"get\", \"an\", \"accurate\", \"description\", \"of\", \"?\"]\n# ::lemmas [\"who\", \"do\", \"you\", \"get\", \"an\", \"accurate\", \"description\", \"of\", \"?\"]\n# ::alignments 2-1.1 3-1 5-1.2.2 6-1.2\n(g / get-02~e.3\n   :ARG0 (y / you~e.2)\n   :ARG1 (d / describe-01~e.6\n            :ARG0 (a / amr-unknown)\n            :mod (a2 / accurate~e.5)))", [[0, 3], [4, 7], [8, 11], [12, 15], [16, 18], [19, 27], [28, 39], [40, 42], [42, 43]]], ["# ::snt The Peter we all like was at the party\n# ::tokens [\"The\", \"Peter\", \"we\", \"all\", \"like\", \"was\", \"at\", \"the\", \"party\"]\n# ::lemmas [\"the\", \"Peter\", \"we\", \"all\", \"like\", \"be\", \"at\", \"the\", \"party\"]\n# ::alignments 1-1.1.1.1 2-1.1.2.1 3-1.1.2.1.1 4-1.1.2 8-1.2\n(b / be-located-at-91\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Peter\"~e.1)\n            :ARG1-of (l / like-01~e.4\n                        :ARG0 (w / we~e.2\n                                 :mod (a / all~e.3))))\n   :ARG2 (p2 / party~e.8))", [[0, 3], [4, 9], [10, 12], [13, 16], [17, 21], [22, 25], [26, 28], [29, 32], [33, 38]]], ["# ::snt The government's imposition of a fine.\n# ::tokens [\"The\", \"government\", \"'s\", \"imposition\", \"of\", \"a\", \"fine\", \".\"]\n# ::lemmas [\"the\", \"government\", \"'s\", \"imposition\", \"of\", \"a\", \"fine\", \".\"]\n# ::alignments 1-1.1 3-1 6-1.2\n(ii / impose-01~e.3\n    :ARG0 (g / government-organization~e.1\n             :ARG0-of (g2 / govern-01))\n    :ARG1 (f / fine-01~e.6))", [[0, 3], [4, 14], [14, 16], [17, 27], [28, 30], [31, 32], [33, 37], [37, 38]]], ["# ::snt Did Athena help us?\n# ::tokens [\"Did\", \"Athena\", \"help\", \"us\", \"?\"]\n# ::lemmas [\"do\", \"Athena\", \"help\", \"we\", \"?\"]\n# ::alignments 1-1.1.1.1 2-1 3-1.2\n(h / help-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Athena\"~e.1))\n   :ARG2 (w / we~e.3)\n   :polarity (a / amr-unknown))", [[0, 3], [4, 10], [11, 15], [16, 18], [18, 19]]], ["# ::snt You wanted to meet the man I saw.\n# ::tokens [\"You\", \"wanted\", \"to\", \"meet\", \"the\", \"man\", \"I\", \"saw\", \".\"]\n# ::lemmas [\"you\", \"want\", \"to\", \"meet\", \"the\", \"man\", \"i\", \"see\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 5-1.2.2 6-1.2.2.1.1 7-1.2.2.1\n(w / want-01~e.1\n   :ARG0 (y / you~e.0)\n   :ARG1 (m / meet-02~e.3\n            :ARG0 y\n            :ARG1 (m2 / man~e.5\n                      :ARG1-of (s / see-01~e.7\n                                  :ARG0 (ii / i~e.6)))))", [[0, 3], [4, 10], [11, 13], [14, 18], [19, 22], [23, 26], [27, 28], [29, 32], [32, 33]]], ["# ::snt Anson demonized David every day\n# ::tokens [\"Anson\", \"demonized\", \"David\", \"every\", \"day\"]\n# ::lemmas [\"Anson\", \"demonize\", \"David\", \"every\", \"day\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1 4-1.3.1.2\n(d / demonize-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Anson\"~e.0))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"David\"~e.2))\n   :frequency (r / rate-entity-91\n                 :ARG3 (t / temporal-quantity\n                          :quant 1\n                          :unit (d2 / day~e.4))))", [[0, 5], [6, 15], [16, 21], [22, 27], [28, 31]]], ["# ::snt There is a programme about Euripides on a Radio 4 tonight?\n# ::tokens [\"There\", \"is\", \"a\", \"programme\", \"about\", \"Euripides\", \"on\", \"a\", \"Radio\", \"4\", \"tonight\", \"?\"]\n# ::lemmas [\"there\", \"be\", \"a\", \"programme\", \"about\", \"Euripides\", \"on\", \"a\", \"Radio\", \"4\", \"tonight\", \"?\"]\n# ::alignments 5-1.2.1 8-1.3 9-1.3.1\n(b / broadcast-program\n   :polarity (a / amr-unknown)\n   :name (n / name\n            :op1 \"Euripides\"~e.5)\n   :medium (r / radio~e.8\n              :mod 4~e.9)\n   :time (d / date-entity\n            :dayperiod (n2 / night)\n            :mod (t / today)))", [[0, 5], [6, 8], [9, 10], [11, 20], [21, 26], [27, 36], [37, 39], [40, 41], [42, 47], [48, 49], [50, 57], [57, 58]]], ["# ::snt Medea denied poisoning the phoenix.\n# ::tokens [\"Medea\", \"denied\", \"poisoning\", \"the\", \"phoenix\", \".\"]\n# ::lemmas [\"Medea\", \"deny\", \"poison\", \"the\", \"phoenix\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2 4-1.2.1.1.1\n(d / deny-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Medea\"~e.0))\n   :ARG1 (p2 / poison-01~e.2\n             :ARG1 (p3 / person\n                       :name (n2 / name\n                                 :op1 \"Phoenix\"~e.4))))", [[0, 5], [6, 12], [13, 22], [23, 26], [27, 34], [34, 35]]], ["# ::snt The elixir was hidden in a hole in the ground\n# ::tokens [\"The\", \"elixir\", \"was\", \"hidden\", \"in\", \"a\", \"hole\", \"in\", \"the\", \"ground\"]\n# ::lemmas [\"the\", \"elixir\", \"be\", \"hide\", \"in\", \"a\", \"hole\", \"in\", \"the\", \"ground\"]\n# ::alignments 1-1.1 3-1 6-1.2 9-1.2.1\n(h / hide-01~e.3\n   :ARG1 (e / elixir~e.1)\n   :location (h2 / hole~e.6\n                 :location (g / ground~e.9)))", [[0, 3], [4, 10], [11, 14], [15, 21], [22, 24], [25, 26], [27, 31], [32, 34], [35, 38], [39, 45]]], ["# ::snt Extremely frantically, Anson danced at Trade\n# ::tokens [\"Extremely\", \"frantically\", \",\", \"Anson\", \"danced\", \"at\", \"Trade\"]\n# ::lemmas [\"extremely\", \"frantically\", \",\", \"Anson\", \"dance\", \"at\", \"Trade\"]\n# ::alignments 0-1.3.1 1-1.3 3-1.1.1.1 4-1 6-1.2\n(d / dance-01~e.4\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Anson\"~e.3))\n   :location (t / trade~e.6)\n   :manner (f / frantic~e.1\n              :degree (e / extreme~e.0)))", [[0, 9], [10, 21], [21, 22], [23, 28], [29, 35], [36, 38], [39, 44]]], ["# ::snt What did you ask who Medea gave?\n# ::tokens [\"What\", \"did\", \"you\", \"ask\", \"who\", \"Medea\", \"gave\", \"?\"]\n# ::lemmas [\"what\", \"do\", \"you\", \"ask\", \"who\", \"Medea\", \"give\", \"?\"]\n# ::alignments 2-1.1 3-1 5-1.2.1.1.1.1 6-1.2.1\n(a / ask-01~e.3\n   :ARG0 (y / you~e.2)\n   :ARG1 (t / thing\n            :ARG1-of (g / give-01~e.6\n                        :ARG0 (p / person\n                                 :name (n / name\n                                          :op1 \"Medea\"~e.5))))\n   :ARG2 p)", [[0, 4], [5, 8], [9, 12], [13, 16], [17, 20], [21, 26], [27, 31], [31, 32]]], ["# ::snt It's Anson that I like\n# ::tokens [\"It\", \"'s\", \"Anson\", \"that\", \"I\", \"like\"]\n# ::lemmas [\"it\", \"be\", \"Anson\", \"that\", \"i\", \"like\"]\n# ::alignments 2-1.2.1.1 4-1.1 5-1\n(l / like-01~e.5\n   :ARG0 (ii / i~e.4)\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Anson\"~e.2)))", [[0, 2], [2, 4], [5, 10], [11, 15], [16, 17], [18, 22]]], ["# ::snt Medea tried the nurse to poison her children.\n# ::tokens [\"Medea\", \"tried\", \"the\", \"nurse\", \"to\", \"poison\", \"her\", \"children\", \".\"]\n# ::lemmas [\"Medea\", \"try\", \"the\", \"nurse\", \"to\", \"poison\", \"her\", \"child\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1 5-1.2 7-1.2.2.1.2\n(t / try-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Medea\"~e.0))\n   :ARG1 (p2 / poison-01~e.5\n             :ARG0 (n2 / nurse~e.3)\n             :ARG1 (p3 / person\n                       :ARG0-of (h / have-rel-role-91\n                                   :ARG1 p\n                                   :ARG2 (c / child~e.7))))\n   :ARG2 n2)", [[0, 5], [6, 11], [12, 15], [16, 21], [22, 24], [25, 31], [32, 35], [36, 44], [44, 45]]], ["# ::snt I felt that I know you.\n# ::tokens [\"I\", \"felt\", \"that\", \"I\", \"know\", \"you\", \".\"]\n# ::lemmas [\"i\", \"feel\", \"that\", \"i\", \"know\", \"you\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2 5-1.2.2\n(f / feel-02~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (k / know-02~e.4\n            :ARG0 ii\n            :ARG1 (y / you~e.5)))", [[0, 1], [2, 6], [7, 11], [12, 13], [14, 18], [19, 22], [22, 23]]], ["# ::snt Will he can do it?\n# ::tokens [\"Will\", \"he\", \"can\", \"do\", \"it\", \"?\"]\n# ::lemmas [\"will\", \"he\", \"can\", \"do\", \"it\", \"?\"]\n# ::alignments 1-1.2.1 3-1.2 4-1.2.2\n(p / possible-01\n   :polarity (a / amr-unknown)\n   :ARG1 (d / do-02~e.3\n            :ARG0 (h / he~e.1)\n            :ARG1 (ii / it~e.4)))", [[0, 4], [5, 7], [8, 11], [12, 14], [15, 17], [17, 18]]], ["# ::snt I ate that she was happy\n# ::tokens [\"I\", \"ate\", \"that\", \"she\", \"was\", \"happy\"]\n# ::lemmas [\"i\", \"eat\", \"that\", \"she\", \"be\", \"happy\"]\n# ::alignments 0-1.1.1 1-1.1 2-1.1.2 3-1.2 5-1\n(h / happy-01~e.5\n   :ARG0 (e / eat-01~e.1\n            :ARG0 (ii / i~e.0)\n            :ARG1 (t / that~e.2))\n   :ARG1 (s / she~e.3))", [[0, 1], [2, 5], [6, 10], [11, 14], [15, 18], [19, 24]]], ["# ::snt Anson believed himself to be handsome.\n# ::tokens [\"Anson\", \"believed\", \"himself\", \"to\", \"be\", \"handsome\", \".\"]\n# ::lemmas [\"Anson\", \"believe\", \"himself\", \"to\", \"be\", \"handsome\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 5-1.2\n(b / believe-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Anson\"~e.0))\n   :ARG1 (h / handsome~e.5\n            :domain p))", [[0, 5], [6, 14], [15, 22], [23, 25], [26, 28], [29, 37], [37, 38]]], ["# ::snt We arrived about six o'clock\n# ::tokens [\"We\", \"arrived\", \"about\", \"six\", \"o'clock\"]\n# ::lemmas [\"we\", \"arrive\", \"about\", \"six\", \"o'clock\"]\n# ::alignments 0-1.1 1-1 2-1.2\n(a / arrive-01~e.1\n   :ARG1 (w / we~e.0)\n   :time (a2 / about~e.2\n             :op1 (d / date-entity\n                     :time \"6:00\")))", [[0, 2], [3, 10], [11, 16], [17, 20], [21, 28]]], ["# ::snt Gilgamesh is having fought the dragon.\n# ::tokens [\"Gilgamesh\", \"is\", \"having\", \"fought\", \"the\", \"dragon\", \".\"]\n# ::lemmas [\"gilgamesh\", \"be\", \"having\", \"fight\", \"the\", \"dragon\", \".\"]\n# ::alignments 0-1.1.1.1 3-1 5-1.2\n(f / fight-01~e.3\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Gilgamesh\"~e.0))\n   :ARG1 (d / dragon~e.5))", [[0, 9], [10, 12], [13, 19], [20, 26], [27, 30], [31, 37], [37, 38]]], ["# ::snt Anson thought that himself was happy.\n# ::tokens [\"Anson\", \"thought\", \"that\", \"himself\", \"was\", \"happy\", \".\"]\n# ::lemmas [\"Anson\", \"think\", \"that\", \"himself\", \"be\", \"happy\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 5-1.2\n(t / think-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Anson\"~e.0))\n   :ARG1 (h / happy-01~e.5\n            :ARG1 p))", [[0, 5], [6, 13], [14, 18], [19, 26], [27, 30], [31, 36], [36, 37]]], ["# ::snt Fortunately Hermione passed biology\n# ::tokens [\"Fortunately\", \"Hermione\", \"passed\", \"biology\"]\n# ::lemmas [\"fortunately\", \"Hermione\", \"pass\", \"biology\"]\n# ::alignments 0-1.3 1-1.1.1.1 2-1 3-1.2\n(p / pass-07~e.2\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Hermione\"~e.1))\n   :ARG1 (b / biology~e.3)\n   :ARG2-of (f / fortunate-01~e.0))", [[0, 11], [12, 20], [21, 27], [28, 35]]], ["# ::snt I might be not going to the party but washing my hair\n# ::tokens [\"I\", \"might\", \"be\", \"not\", \"going\", \"to\", \"the\", \"party\", \"but\", \"washing\", \"my\", \"hair\"]\n# ::lemmas [\"i\", \"might\", \"be\", \"not\", \"go\", \"to\", \"the\", \"party\", \"but\", \"wash\", \"my\", \"hair\"]\n# ::alignments 0-1.1.1.2 3-1.1.1.1 4-1.1.1 7-1.1.1.2.1.r 8-1.1 9-1.1.2 11-1.1.1.2.1\n(p / possible-01\n   :ARG1 (c / contrast-01~e.8\n            :ARG1 (g / go-02~e.4\n                     :polarity -~e.3\n                     :ARG0 (ii / i~e.0\n                               :part~e.7 (h / hair~e.11))\n                     :ARG4 (p2 / party))\n            :ARG2 (w / wash-01~e.9\n                     :ARG0 ii\n                     :ARG1 h)))", [[0, 1], [2, 7], [8, 10], [11, 14], [15, 20], [21, 23], [24, 27], [28, 33], [34, 37], [38, 45], [46, 48], [49, 53]]], ["# ::snt I thought he liked myself\n# ::tokens [\"I\", \"thought\", \"he\", \"liked\", \"myself\"]\n# ::lemmas [\"i\", \"think\", \"he\", \"like\", \"myself\"]\n# ::alignments 0-1.1 1-1 2-1.2.1 3-1.2\n(t / think-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (l / like-01~e.3\n            :ARG0 (h / he~e.2)\n            :ARG1 ii))", [[0, 1], [2, 9], [10, 12], [13, 18], [19, 25]]], ["# ::snt The butler sent the poison to Dinah.\n# ::tokens [\"The\", \"butler\", \"sent\", \"the\", \"poison\", \"to\", \"Dinah\", \".\"]\n# ::lemmas [\"the\", \"butler\", \"send\", \"the\", \"poison\", \"to\", \"Dinah\", \".\"]\n# ::alignments 1-1.1.1.1 2-1 4-1.2 6-1.3.1.1\n(s / send-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (h / have-org-role-91\n                        :ARG2 (b / butler~e.1)))\n   :ARG1 (p2 / poison~e.4)\n   :ARG2 (p3 / person\n             :name (n / name\n                      :op1 \"Dinah\"~e.6)))", [[0, 3], [4, 10], [11, 15], [16, 19], [20, 26], [27, 29], [30, 35], [35, 36]]], ["# ::snt Jason happens to appear to seem to be sick.\n# ::tokens [\"Jason\", \"happens\", \"to\", \"appear\", \"to\", \"seem\", \"to\", \"be\", \"sick\", \".\"]\n# ::lemmas [\"Jason\", \"happen\", \"to\", \"appear\", \"to\", \"seem\", \"to\", \"be\", \"sick\", \".\"]\n# ::alignments 0-1.2.1.1.1 3-1 8-1.2\n(a / appear-02~e.3\n   :ARG1 a\n   :ARG1 (s / sick-05~e.8\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Jason\"~e.0))))", [[0, 5], [6, 13], [14, 16], [17, 23], [24, 26], [27, 31], [32, 34], [35, 37], [38, 42], [42, 43]]], ["# ::snt What did you ask who saw?\n# ::tokens [\"What\", \"did\", \"you\", \"ask\", \"who\", \"saw\", \"?\"]\n# ::lemmas [\"what\", \"do\", \"you\", \"ask\", \"who\", \"see\", \"?\"]\n# ::alignments 2-1.1 3-1 5-1.2.1\n(a / ask-01~e.3\n   :ARG0 (y / you~e.2)\n   :ARG1 (t / thing\n            :ARG1-of (s / see-01~e.5\n                        :ARG0 (a2 / amr-unknown)))\n   :ARG2 (p / person))", [[0, 4], [5, 8], [9, 12], [13, 16], [17, 20], [21, 24], [24, 25]]], ["# ::snt We linguists love to argue\n# ::tokens [\"We\", \"linguists\", \"love\", \"to\", \"argue\"]\n# ::lemmas [\"we\", \"linguist\", \"love\", \"to\", \"argue\"]\n# ::alignments 0-1.1.1 1-1.1 2-1 4-1.2\n(l / love-01~e.2\n   :ARG0 (l2 / linguist~e.1\n             :domain (w / we~e.0))\n   :ARG1 (a / argue-01~e.4\n            :ARG0 l2))", [[0, 2], [3, 12], [13, 17], [18, 20], [21, 26]]], ["# ::snt He can will go\n# ::tokens [\"He\", \"can\", \"will\", \"go\"]\n# ::lemmas [\"he\", \"can\", \"will\", \"go\"]\n# ::alignments 0-1.1.1 3-1.1\n(p / possible-01\n   :ARG1 (g / go-02~e.3\n            :ARG0 (h / he~e.0)))", [[0, 2], [3, 6], [7, 11], [12, 14]]], ["# ::snt How fierce the battle?\n# ::tokens [\"How\", \"fierce\", \"the\", \"battle\", \"?\"]\n# ::lemmas [\"how\", \"fierce\", \"the\", \"battle\", \"?\"]\n# ::alignments 1-1 3-1.2\n(f / fierce~e.1\n   :degree (a / amr-unknown)\n   :domain (b / battle-01~e.3))", [[0, 3], [4, 10], [11, 14], [15, 21], [21, 22]]], ["# ::snt Which king did you ask which city invaded?\n# ::tokens [\"Which\", \"king\", \"did\", \"you\", \"ask\", \"which\", \"city\", \"invaded\", \"?\"]\n# ::lemmas [\"which\", \"king\", \"do\", \"you\", \"ask\", \"which\", \"city\", \"invade\", \"?\"]\n# ::alignments 1-1.3 3-1.1 4-1 6-1.2.1.1 7-1.2.1\n(a / ask-01~e.4\n   :ARG0 (y / you~e.3)\n   :ARG1 (a2 / amr-unknown\n             :ARG1-of (ii / invade-01~e.7\n                          :ARG0 (c / city~e.6)))\n   :ARG2 (k / king~e.1\n            :mod a2))", [[0, 5], [6, 10], [11, 14], [15, 18], [19, 22], [23, 28], [29, 33], [34, 41], [41, 42]]], ["# ::snt It is some disgruntled old pigs in those ditches that humans love to eat.\n# ::tokens [\"It\", \"is\", \"some\", \"disgruntled\", \"old\", \"pigs\", \"in\", \"those\", \"ditches\", \"that\", \"humans\", \"love\", \"to\", \"eat\", \".\"]\n# ::lemmas [\"it\", \"be\", \"some\", \"disgruntle\", \"old\", \"pig\", \"in\", \"those\", \"ditch\", \"that\", \"human\", \"love\", \"to\", \"eat\", \".\"]\n# ::alignments 2-1.1.3 3-1.1.2 4-1.1.1 5-1.1 8-1.2 9-1.2.1 10-1.3.1 11-1.3.2 13-1.3\n(b / be-located-at-91\n   :ARG1 (p / pig~e.5\n            :mod (o / old~e.4)\n            :ARG1-of (d / disgruntle-01~e.3)\n            :quant (s / some~e.2))\n   :ARG2 (d2 / ditch~e.8\n             :mod (t / that~e.9))\n   :ARG1-of (e / eat-01~e.13\n               :ARG0 (h / human~e.10)\n               :ARG1-of (l / love-01~e.11\n                           :ARG0 h)))", [[0, 2], [3, 5], [6, 10], [11, 22], [23, 26], [27, 31], [32, 34], [35, 40], [41, 48], [49, 53], [54, 60], [61, 65], [66, 68], [69, 72], [72, 73]]], ["# ::snt That banana is eating the monkey.\n# ::tokens [\"That\", \"banana\", \"is\", \"eating\", \"the\", \"monkey\", \".\"]\n# ::lemmas [\"that\", \"banana\", \"be\", \"eat\", \"the\", \"monkey\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 3-1 5-1.2\n(e / eat-01~e.3\n   :ARG0 (b / banana~e.1\n            :mod (t / that~e.0))\n   :ARG1 (m / monkey~e.5))", [[0, 4], [5, 11], [12, 14], [15, 21], [22, 25], [26, 32], [32, 33]]], ["# ::snt Burn them!\n# ::tokens [\"Burn\", \"them\", \"!\"]\n# ::lemmas [\"burn\", \"they\", \"!\"]\n# ::alignments 0-1 1-1.3\n(b / burn-01~e.0\n   :mode imperative\n   :ARG0 (y / you)\n   :ARG1 (t / they~e.1))", [[0, 4], [5, 9], [9, 10]]], ["# ::snt It stinks that Aphrodite is omnipotent.\n# ::tokens [\"It\", \"stinks\", \"that\", \"Aphrodite\", \"is\", \"omnipotent\", \".\"]\n# ::lemmas [\"it\", \"stink\", \"that\", \"Aphrodite\", \"be\", \"omnipotent\", \".\"]\n# ::alignments 1-1 3-1.1.1.1.1 5-1.1\n(s / stink-01~e.1\n   :ARG1 (o / omnipotent~e.5\n            :domain (p / person\n                       :name (n / name\n                                :op1 \"Aphrodite\"~e.3))))", [[0, 2], [3, 9], [10, 14], [15, 24], [25, 27], [28, 38], [38, 39]]], ["# ::snt Agamemnon seems to be a maniac\n# ::tokens [\"Agamemnon\", \"seems\", \"to\", \"be\", \"a\", \"maniac\"]\n# ::lemmas [\"Agamemnon\", \"seem\", \"to\", \"be\", \"a\", \"maniac\"]\n# ::alignments 0-1.1.1.1.1 1-1 5-1.1\n(s / seem-01~e.1\n   :ARG1 (m / maniac~e.5\n            :domain (p / person\n                       :name (n / name\n                                :op1 \"Agamemnon\"~e.0))))", [[0, 9], [10, 15], [16, 18], [19, 21], [22, 23], [24, 30]]], ["# ::snt Will Anson come to the party?\n# ::tokens [\"Will\", \"Anson\", \"come\", \"to\", \"the\", \"party\", \"?\"]\n# ::lemmas [\"Will\", \"Anson\", \"come\", \"to\", \"the\", \"party\", \"?\"]\n# ::alignments 1-1.1.1.1 2-1 5-1.2\n(c / come-01~e.2\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Anson\"~e.1))\n   :ARG4 (p2 / party~e.5)\n   :polarity (a / amr-unknown))", [[0, 4], [5, 10], [11, 15], [16, 18], [19, 22], [23, 28], [28, 29]]], ["# ::snt I wondered who Medea had poisoned.\n# ::tokens [\"I\", \"wondered\", \"who\", \"Medea\", \"had\", \"poisoned\", \".\"]\n# ::lemmas [\"i\", \"wonder\", \"who\", \"Medea\", \"have\", \"poison\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1.1.1 5-1.2.1\n(w / wonder-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person\n            :ARG1-of (p2 / poison-01~e.5\n                         :name (n / name\n                                  :op1 \"Medea\"~e.3))\n            :ARG0-of p2))", [[0, 1], [2, 10], [11, 14], [15, 20], [21, 24], [25, 33], [33, 34]]], ["# ::snt I inquired when could we leave.\n# ::tokens [\"I\", \"inquired\", \"when\", \"could\", \"we\", \"leave\", \".\"]\n# ::lemmas [\"i\", \"inquire\", \"when\", \"could\", \"we\", \"leave\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2.1.1.1 5-1.2.1.1\n(ii / inquire-01~e.1\n    :ARG0 (ii2 / i~e.0)\n    :ARG1 (t / time\n             :time-of (p / possible-01\n                         :ARG1 (l / leave-11~e.5\n                                  :ARG0 (w / we~e.4)))))", [[0, 1], [2, 10], [11, 15], [16, 21], [22, 24], [25, 30], [30, 31]]], ["# ::snt They kicked them\n# ::tokens [\"They\", \"kicked\", \"them\"]\n# ::lemmas [\"they\", \"kick\", \"they\"]\n# ::alignments 0-1.1 1-1 2-1.2\n(k / kick-01~e.1\n   :ARG0 (t / they~e.0)\n   :ARG1 (t2 / they~e.2))", [[0, 4], [5, 11], [12, 16]]], ["# ::snt The monkey is ate the banana\n# ::tokens [\"The\", \"monkey\", \"is\", \"ate\", \"the\", \"banana\"]\n# ::lemmas [\"the\", \"monkey\", \"be\", \"eat\", \"the\", \"banana\"]\n# ::alignments 1-1.2 3-1 5-1.1\n(e / eat-01~e.3\n   :ARG1 (b / banana~e.5)\n   :ARG2 (m / monkey~e.1))", [[0, 3], [4, 10], [11, 13], [14, 17], [18, 21], [22, 28]]], ["# ::snt I would like to could swim\n# ::tokens [\"I\", \"would\", \"like\", \"to\", \"could\", \"swim\"]\n# ::lemmas [\"i\", \"would\", \"like\", \"to\", \"could\", \"swim\"]\n# ::alignments 0-1.1 2-1 5-1.2.1\n(l / like-02~e.2\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / possible-01\n            :ARG1 (s / swim-01~e.5\n                     :ARG0 ii)))", [[0, 1], [2, 7], [8, 12], [13, 15], [16, 21], [22, 26]]], ["# ::snt I kicked myself\n# ::tokens [\"I\", \"kicked\", \"myself\"]\n# ::lemmas [\"i\", \"kick\", \"myself\"]\n# ::alignments 0-1.1 1-1\n(k / kick-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 ii)", [[0, 1], [2, 8], [9, 15]]], ["# ::snt The bookcase ran\n# ::tokens [\"The\", \"bookcase\", \"ran\"]\n# ::lemmas [\"the\", \"bookcase\", \"run\"]\n# ::alignments 1-1.1 2-1\n(r / run-01~e.2\n   :ARG1 (b / bookcase~e.1))", [[0, 3], [4, 12], [13, 16]]], ["# ::snt I shaved myself.\n# ::tokens [\"I\", \"shaved\", \"myself\", \".\"]\n# ::lemmas [\"i\", \"shave\", \"myself\", \".\"]\n# ::alignments 0-1.1 1-1\n(s / shave-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 ii)", [[0, 1], [2, 8], [9, 15], [15, 16]]], ["# ::snt Anson became a muscle bound.\n# ::tokens [\"Anson\", \"became\", \"a\", \"muscle\", \"bound\", \".\"]\n# ::lemmas [\"Anson\", \"become\", \"a\", \"muscle\", \"bind\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1 4-1.2\n(b / become-01~e.1\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Anson\"~e.0))\n   :ARG2 (b2 / bind-01~e.4\n             :ARG1 (m / muscle~e.3)))", [[0, 5], [6, 12], [13, 14], [15, 21], [22, 27], [27, 28]]], ["# ::snt Somebody just left - guess who.\n# ::tokens [\"Somebody\", \"just\", \"left\", \"-\", \"guess\", \"who\", \".\"]\n# ::lemmas [\"somebody\", \"just\", \"left\", \"-\", \"guess\", \"who\", \".\"]\n# ::alignments 0-1.1.1 1-1.1.2 4-1.2\n(m / multi-sentence\n   :snt1 (l / leave-11\n            :ARG0 (s / somebody~e.0)\n            :mod (j / just~e.1))\n   :snt2 (g / guess-01~e.4\n            :mode imperative\n            :ARG0 (y / you)\n            :ARG1 (p / person)))", [[0, 8], [9, 13], [14, 18], [19, 20], [21, 26], [27, 30], [30, 31]]], ["# ::snt They claimed they had settled on something, but it wasn't clear what they had settled on.\n# ::tokens [\"They\", \"claimed\", \"they\", \"had\", \"settled\", \"on\", \"something\", \",\", \"but\", \"it\", \"was\", \"n't\", \"clear\", \"what\", \"they\", \"had\", \"settled\", \"on\", \".\"]\n# ::lemmas [\"they\", \"claim\", \"they\", \"have\", \"settle\", \"on\", \"something\", \",\", \"but\", \"it\", \"be\", \"not\", \"clear\", \"what\", \"they\", \"have\", \"settle\", \"on\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 4-1.1.2 6-1.1.2.2 8-1 12-1.2 16-1.2.2\n(c / contrast-01~e.8\n   :ARG1 (c2 / claim-01~e.1\n             :ARG0 (t / they~e.0)\n             :ARG1 (s / settle-02~e.4\n                      :ARG0 t\n                      :ARG1 (s2 / something~e.6)))\n   :ARG2 (c3 / clear-06~e.12\n             :polarity -\n             :ARG1 (s3 / settle-02~e.16\n                       :ARG0 t\n                       :ARG1 (t2 / thing))))", [[0, 4], [5, 12], [13, 17], [18, 21], [22, 29], [30, 32], [33, 42], [42, 43], [44, 47], [48, 50], [51, 54], [54, 57], [58, 63], [64, 68], [69, 73], [74, 77], [78, 85], [86, 88], [88, 89]]], ["# ::snt If Sam was going, Sally would know where.\n# ::tokens [\"If\", \"Sam\", \"was\", \"going\", \",\", \"Sally\", \"would\", \"know\", \"where\", \".\"]\n# ::lemmas [\"if\", \"Sam\", \"be\", \"go\", \",\", \"Sally\", \"would\", \"know\", \"where\", \".\"]\n# ::alignments 1-1.3.1.1.1 3-1.3 5-1.1.1.1 7-1\n(k / know-01~e.7\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sally\"~e.5))\n   :ARG1 (l / location)\n   :condition (g / go-02~e.3\n                 :ARG0 (p2 / person\n                           :name (n2 / name\n                                     :op1 \"Sam\"~e.1))))", [[0, 2], [3, 6], [7, 10], [11, 16], [16, 17], [18, 23], [24, 29], [30, 34], [35, 40], [40, 41]]], ["# ::snt They're going to serve the guests something, but it's unclear what.\n# ::tokens [\"They\", \"'re\", \"going\", \"to\", \"serve\", \"the\", \"guests\", \"something\", \",\", \"but\", \"it\", \"'s\", \"unclear\", \"what\", \".\"]\n# ::lemmas [\"they\", \"be\", \"go\", \"to\", \"serve\", \"the\", \"guest\", \"something\", \",\", \"but\", \"it\", \"be\", \"unclear\", \"what\", \".\"]\n# ::alignments 0-1.1.1 4-1.1 6-1.1.3 7-1.1.2 9-1 12-1.2\n(c / contrast-01~e.9\n   :ARG1 (s / serve-02~e.4\n            :ARG0 (t / they~e.0)\n            :ARG1 (s2 / something~e.7)\n            :ARG2 (g / guest~e.6))\n   :ARG2 (c2 / clear-06~e.12\n             :polarity -\n             :ARG1 (t2 / thing)))", [[0, 4], [4, 7], [8, 13], [14, 16], [17, 22], [23, 26], [27, 33], [34, 43], [43, 44], [45, 48], [49, 51], [51, 53], [54, 61], [62, 66], [66, 67]]], ["# ::snt She's reading. I can't imagine what.\n# ::tokens [\"She\", \"'s\", \"reading\", \".\", \"I\", \"ca\", \"n't\", \"imagine\", \"what\", \".\"]\n# ::lemmas [\"she\", \"be\", \"reading\", \".\", \"i\", \"can\", \"not\", \"imagine\", \"what\", \".\"]\n# ::alignments 0-1.1.1 2-1.1 4-1.2.2.1 7-1.2.2\n(m / multi-sentence\n   :snt1 (r / read-01~e.2\n            :ARG0 (s / she~e.0))\n   :snt2 (p / possible-01\n            :polarity -\n            :ARG1 (ii / imagine-01~e.7\n                      :ARG0 (ii2 / i~e.4)\n                      :ARG1 (t / thing))))", [[0, 3], [3, 5], [6, 13], [13, 14], [15, 16], [17, 19], [19, 22], [23, 30], [31, 35], [35, 36]]], ["# ::snt John said Joan saw someone from her graduating class.\n# ::tokens [\"John\", \"said\", \"Joan\", \"saw\", \"someone\", \"from\", \"her\", \"graduating\", \"class\", \".\"]\n# ::lemmas [\"John\", \"say\", \"Joan\", \"see\", \"someone\", \"from\", \"her\", \"graduating\", \"class\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1.1 3-1.2 4-1.2.2 7-1.2.2.1.1 8-1.2.2.1\n(s / say-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (s2 / see-01~e.3\n             :ARG0 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Joan\"~e.2))\n             :ARG1 (s3 / someone~e.4\n                       :source (c / class~e.8\n                                  :ARG1-of (g / graduate-01~e.7)\n                                  :poss p2))))", [[0, 4], [5, 9], [10, 14], [15, 18], [19, 26], [27, 31], [32, 35], [36, 46], [47, 52], [52, 53]]], ["# ::snt John ate dinner but I don't know who.\n# ::tokens [\"John\", \"ate\", \"dinner\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"who\", \".\"]\n# ::lemmas [\"John\", \"eat\", \"dinner\", \"but\", \"i\", \"do\", \"not\", \"know\", \"who\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 2-1.1.2 3-1 4-1.2.2 7-1.2\n(c / contrast-01~e.3\n   :ARG1 (e / eat-01~e.1\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"John\"~e.0))\n            :ARG1 (d / dinner~e.2))\n   :ARG2 (k / know-01~e.7\n            :polarity -\n            :ARG0 (ii / i~e.4)\n            :ARG1 (p2 / person)))", [[0, 4], [5, 8], [9, 15], [16, 19], [20, 21], [22, 24], [24, 27], [28, 32], [33, 36], [36, 37]]], ["# ::snt She mailed John a letter, but I don't know to whom.\n# ::tokens [\"She\", \"mailed\", \"John\", \"a\", \"letter\", \",\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"to\", \"whom\", \".\"]\n# ::lemmas [\"she\", \"mail\", \"John\", \"a\", \"letter\", \",\", \"but\", \"i\", \"do\", \"not\", \"know\", \"to\", \"whom\", \".\"]\n# ::alignments 0-1.3 1-1.1.3.1 2-1.1.3.1.2.1.1 4-1.1.3.1.1 7-1.1.2 10-1.1\n(h / have-concession-91\n   :ARG1 (k / know-01~e.10\n            :polarity -\n            :ARG0 (ii / i~e.7)\n            :ARG1 (p / person\n                     :ARG0-of (m / mail-01~e.1\n                                 :ARG1 (l / letter~e.4)\n                                 :ARG2 (p2 / person\n                                           :name (n / name\n                                                    :op1 \"John\"~e.2)))))\n   :ARG2 m\n   :ARG0 (s / she~e.0)\n   :ARG1 l\n   :ARG2 p2)", [[0, 3], [4, 10], [11, 15], [16, 17], [18, 24], [24, 25], [26, 29], [30, 31], [32, 34], [34, 37], [38, 42], [43, 45], [46, 50], [50, 51]]], ["# ::snt I served leek soup to my guests.\n# ::tokens [\"I\", \"served\", \"leek\", \"soup\", \"to\", \"my\", \"guests\", \".\"]\n# ::lemmas [\"i\", \"serve\", \"leek\", \"soup\", \"to\", \"my\", \"guest\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1 3-1.2 6-1.3\n(s / serve-02~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (s2 / soup~e.3\n             :mod (l / leek~e.2))\n   :ARG2 (g / guest~e.6\n            :poss ii))", [[0, 1], [2, 8], [9, 13], [14, 18], [19, 21], [22, 24], [25, 31], [31, 32]]], ["# ::snt I served my guests.\n# ::tokens [\"I\", \"served\", \"my\", \"guests\", \".\"]\n# ::lemmas [\"i\", \"serve\", \"my\", \"guest\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2\n(s / serve-02~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG2 (g / guest~e.3\n            :poss ii))", [[0, 1], [2, 8], [9, 11], [12, 18], [18, 19]]], ["# ::snt She was bathing, but I couldn't make out who.\n# ::tokens [\"She\", \"was\", \"bathing\", \",\", \"but\", \"I\", \"could\", \"n't\", \"make\", \"out\", \"who\", \".\"]\n# ::lemmas [\"she\", \"be\", \"bathe\", \",\", \"but\", \"i\", \"could\", \"not\", \"make\", \"out\", \"who\", \".\"]\n# ::alignments 0-1.1.1 2-1.1 4-1 5-1.2.2.1 8-1.2.2\n(c / contrast-01~e.4\n   :ARG1 (b / bathe-01~e.2\n            :ARG0 (s / she~e.0))\n   :ARG2 (p / possible-01\n            :polarity -\n            :ARG1 (m / make-out-23~e.8\n                     :ARG0 (ii / i~e.5)\n                     :ARG1 (p2 / person))))", [[0, 3], [4, 7], [8, 15], [15, 16], [17, 20], [21, 22], [23, 28], [28, 31], [32, 36], [37, 40], [41, 44], [44, 45]]], ["# ::snt She knew French for Tom.\n# ::tokens [\"She\", \"knew\", \"French\", \"for\", \"Tom\", \".\"]\n# ::lemmas [\"she\", \"know\", \"French\", \"for\", \"Tom\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1.1 4-1.3.1.1\n(k / know-02~e.1\n   :ARG0 (s / she~e.0)\n   :ARG1 (l / language\n            :name (n / name\n                     :op1 \"French\"~e.2))\n   :ARG2 (l2 / language\n             :name (n2 / name\n                       :op1 \"Tom\"~e.4)))", [[0, 3], [4, 8], [9, 15], [16, 19], [20, 23], [23, 24]]], ["# ::snt John is tall on several occasions.\n# ::tokens [\"John\", \"is\", \"tall\", \"on\", \"several\", \"occasions\", \".\"]\n# ::lemmas [\"John\", \"be\", \"tall\", \"on\", \"several\", \"occasion\", \".\"]\n# ::alignments 0-1.1.1.1 2-1 4-1.2.1 5-1.2\n(t / tall~e.2\n   :domain (p / person\n              :name (n / name\n                       :op1 \"John\"~e.0))\n   :frequency (o / occasion-02~e.5\n                 :quant (s / several~e.4)))", [[0, 4], [5, 7], [8, 12], [13, 15], [16, 23], [24, 33], [33, 34]]], ["# ::snt The ship sank, but I don't know with what.\n# ::tokens [\"The\", \"ship\", \"sank\", \",\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"with\", \"what\", \".\"]\n# ::lemmas [\"the\", \"ship\", \"sink\", \",\", \"but\", \"i\", \"do\", \"not\", \"know\", \"with\", \"what\", \".\"]\n# ::alignments 1-1.1.1 2-1.1 4-1 5-1.2.2 8-1.2\n(c / contrast-01~e.4\n   :ARG1 (s / sink-01~e.2\n            :ARG1 (s2 / ship~e.1))\n   :ARG2 (k / know-01~e.8\n            :polarity -\n            :ARG0 (ii / i~e.5)\n            :ARG1 (t / thing)))", [[0, 3], [4, 8], [9, 13], [13, 14], [15, 18], [19, 20], [21, 23], [23, 26], [27, 31], [32, 36], [37, 41], [41, 42]]], ["# ::snt They noticed the painting, but I don't know for how long.\n# ::tokens [\"They\", \"noticed\", \"the\", \"painting\", \",\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"for\", \"how\", \"long\", \".\"]\n# ::lemmas [\"they\", \"notice\", \"the\", \"painting\", \",\", \"but\", \"i\", \"do\", \"not\", \"know\", \"for\", \"how\", \"long\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 6-1.3.2 9-1.3 12-1.3.3.1\n(n / notice-01~e.1\n   :ARG0 (t / they~e.0)\n   :ARG1 (p / paint-02~e.3)\n   :concession-of (k / know-01~e.9\n                     :polarity -\n                     :ARG0 (ii / i~e.6)\n                     :ARG1 (t2 / temporal-quantity\n                               :ARG1-of (l / long-03~e.12))))", [[0, 4], [5, 12], [13, 16], [17, 25], [25, 26], [27, 30], [31, 32], [33, 35], [35, 38], [39, 43], [44, 47], [48, 51], [52, 56], [56, 57]]], ["# ::snt John was tall, but I don't know on what occasions.\n# ::tokens [\"John\", \"was\", \"tall\", \",\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"on\", \"what\", \"occasions\", \".\"]\n# ::lemmas [\"John\", \"be\", \"tall\", \",\", \"but\", \"i\", \"do\", \"not\", \"know\", \"on\", \"what\", \"occasion\", \".\"]\n# ::alignments 0-1.1.3.1.1.1.1 2-1.1.3.1 5-1.1.2 8-1.1 11-1.1.3\n(h / have-concession-91\n   :ARG1 (k / know-01~e.8\n            :polarity -\n            :ARG0 (ii / i~e.5)\n            :ARG1 (o / occasion-02~e.11\n                     :ARG1 (t / tall~e.2\n                              :domain (p / person\n                                         :name (n / name\n                                                  :op1 \"John\"~e.0)))))\n   :ARG2 t)", [[0, 4], [5, 8], [9, 13], [13, 14], [15, 18], [19, 20], [21, 23], [23, 26], [27, 31], [32, 34], [35, 39], [40, 49], [49, 50]]], ["# ::snt Joan ate dinner with someone but I don't know who.\n# ::tokens [\"Joan\", \"ate\", \"dinner\", \"with\", \"someone\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"who\", \".\"]\n# ::lemmas [\"Joan\", \"eat\", \"dinner\", \"with\", \"someone\", \"but\", \"i\", \"do\", \"not\", \"know\", \"who\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2 4-1.3 6-1.4.2 9-1.4\n(e / eat-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Joan\"~e.0))\n   :ARG1 (d / dinner~e.2)\n   :accompanier (s / someone~e.4)\n   :concession (k / know-01~e.9\n                  :polarity -\n                  :ARG0 (ii / i~e.6)\n                  :ARG1 (p2 / person)))", [[0, 4], [5, 8], [9, 15], [16, 20], [21, 28], [29, 32], [33, 34], [35, 37], [37, 40], [41, 45], [46, 49], [49, 50]]], ["# ::snt Joan ate dinner with someone but I don't know who with.\n# ::tokens [\"Joan\", \"ate\", \"dinner\", \"with\", \"someone\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"who\", \"with\", \".\"]\n# ::lemmas [\"Joan\", \"eat\", \"dinner\", \"with\", \"someone\", \"but\", \"i\", \"do\", \"not\", \"know\", \"who\", \"with\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 2-1.1.2 4-1.1.3 5-1 6-1.2.2 9-1.2\n(c / contrast-01~e.5\n   :ARG1 (e / eat-01~e.1\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Joan\"~e.0))\n            :ARG1 (d / dinner~e.2)\n            :accompanier (s / someone~e.4))\n   :ARG2 (k / know-01~e.9\n            :polarity -\n            :ARG0 (ii / i~e.6)\n            :ARG1 (p2 / person\n                      :accompanier s)))", [[0, 4], [5, 8], [9, 15], [16, 20], [21, 28], [29, 32], [33, 34], [35, 37], [37, 40], [41, 45], [46, 49], [50, 54], [54, 55]]], ["# ::snt I know that Meg's attracted to Harry, but they don't know who.\n# ::tokens [\"I\", \"know\", \"that\", \"Meg\", \"'s\", \"attracted\", \"to\", \"Harry\", \",\", \"but\", \"they\", \"do\", \"n't\", \"know\", \"who\", \".\"]\n# ::lemmas [\"i\", \"know\", \"that\", \"Meg\", \"'s\", \"attract\", \"to\", \"Harry\", \",\", \"but\", \"they\", \"do\", \"not\", \"know\", \"who\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 3-1.1.2.1.1.1 5-1.1.2 7-1.1.2.2.1.1 9-1 10-1.2.2 13-1.2\n(c / contrast-01~e.9\n   :ARG1 (k / know-01~e.1\n            :ARG0 (ii / i~e.0)\n            :ARG1 (a / attract-01~e.5\n                     :ARG0 (p / person\n                              :name (n / name\n                                       :op1 \"Meg\"~e.3))\n                     :ARG1 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Harry\"~e.7))))\n   :ARG2 (k2 / know-01~e.13\n             :polarity -\n             :ARG0 (t / they~e.10)\n             :ARG1 p2))", [[0, 1], [2, 6], [7, 11], [12, 15], [15, 17], [18, 27], [28, 30], [31, 36], [36, 37], [38, 41], [42, 46], [47, 49], [49, 52], [53, 57], [58, 61], [61, 62]]], ["# ::snt Since Jill said Joe had invited Sue, we didn't have to ask who.\n# ::tokens [\"Since\", \"Jill\", \"said\", \"Joe\", \"had\", \"invited\", \"Sue\", \",\", \"we\", \"did\", \"n't\", \"have\", \"to\", \"ask\", \"who\", \".\"]\n# ::lemmas [\"since\", \"Jill\", \"say\", \"Joe\", \"have\", \"invite\", \"Sue\", \",\", \"we\", \"do\", \"not\", \"have\", \"to\", \"ask\", \"who\", \".\"]\n# ::alignments 1-1.4.1.1.1.1 2-1.4.1 3-1.4.1.2.1.1.1 5-1.4.1.2 6-1.4.1.2.2.1.1 8-1.2 13-1.3\n(o / obligate-01\n   :polarity -\n   :ARG1 (w / we~e.8)\n   :ARG2 (a / ask-01~e.13\n            :ARG0 w\n            :ARG1 (p / person))\n   :ARG1-of (c / cause-01\n               :ARG0 (s / say-01~e.2\n                        :ARG0 (p2 / person\n                                  :name (n / name\n                                           :op1 \"Jill\"~e.1))\n                        :ARG1 (ii / invite-01~e.5\n                                  :ARG0 (p3 / person\n                                            :name (n2 / name\n                                                      :op1 \"Joe\"~e.3))\n                                  :ARG1 (p4 / person\n                                            :name (n3 / name\n                                                      :op1 \"Sue\"~e.6))))))", [[0, 5], [6, 10], [11, 15], [16, 19], [20, 23], [24, 31], [32, 35], [35, 36], [37, 39], [40, 43], [43, 46], [47, 51], [52, 54], [55, 58], [59, 62], [62, 63]]], ["# ::snt I know that Meg's attracted to Harry, but they don't know who.\n# ::tokens [\"I\", \"know\", \"that\", \"Meg\", \"'s\", \"attracted\", \"to\", \"Harry\", \",\", \"but\", \"they\", \"do\", \"n't\", \"know\", \"who\", \".\"]\n# ::lemmas [\"i\", \"know\", \"that\", \"Meg\", \"'s\", \"attract\", \"to\", \"Harry\", \",\", \"but\", \"they\", \"do\", \"not\", \"know\", \"who\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 3-1.1.2.1.1.1 5-1.1.2 7-1.1.2.2.1.1 9-1 10-1.2.2 13-1.2\n(c / contrast-01~e.9\n   :ARG1 (k / know-01~e.1\n            :ARG0 (ii / i~e.0)\n            :ARG1 (a / attract-01~e.5\n                     :ARG0 (p / person\n                              :name (n / name\n                                       :op1 \"Meg\"~e.3))\n                     :ARG1 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Harry\"~e.7))))\n   :ARG2 (k2 / know-01~e.13\n             :polarity -\n             :ARG0 (t / they~e.10)\n             :ARG1 p2))", [[0, 1], [2, 6], [7, 11], [12, 15], [15, 17], [18, 27], [28, 30], [31, 36], [36, 37], [38, 41], [42, 46], [47, 49], [49, 52], [53, 57], [58, 61], [61, 62]]], ["# ::snt She said she had spoken to everybody, but he wasn't sure who.\n# ::tokens [\"She\", \"said\", \"she\", \"had\", \"spoken\", \"to\", \"everybody\", \",\", \"but\", \"he\", \"was\", \"n't\", \"sure\", \"who\", \".\"]\n# ::lemmas [\"she\", \"say\", \"she\", \"have\", \"speak\", \"to\", \"everybody\", \",\", \"but\", \"he\", \"be\", \"not\", \"sure\", \"who\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2 6-1.2.2 9-1.3.2 12-1.3\n(s / say-01~e.1\n   :ARG0 (s2 / she~e.0)\n   :ARG1 (s3 / speak-01~e.4\n             :ARG0 s2\n             :ARG2 (e / everybody~e.6))\n   :concession (s4 / sure-02~e.12\n                   :polarity -\n                   :ARG0 (h / he~e.9)\n                   :ARG1 (p / person)))", [[0, 3], [4, 8], [9, 12], [13, 16], [17, 23], [24, 26], [27, 36], [36, 37], [38, 41], [42, 44], [45, 48], [48, 51], [52, 56], [57, 60], [60, 61]]], ["# ::snt Each of the performers came in, but were sitting so far back that we couldn't see who.\n# ::tokens [\"Each\", \"of\", \"the\", \"performers\", \"came\", \"in\", \",\", \"but\", \"were\", \"sitting\", \"so\", \"far\", \"back\", \"that\", \"we\", \"could\", \"n't\", \"see\", \"who\", \".\"]\n# ::lemmas [\"each\", \"of\", \"the\", \"performer\", \"come\", \"in\", \",\", \"but\", \"be\", \"sit\", \"so\", \"far\", \"back\", \"that\", \"we\", \"could\", \"not\", \"see\", \"who\", \".\"]\n# ::alignments 0-1.1.1.2 3-1.1.1.1 4-1.1 7-1 9-1.2 10-1.2.2.1.2 11-1.2.2.1.1 12-1.2.2 14-1.2.2.1.3.2.1 17-1.2.2.1.3.2\n(c / contrast-01~e.7\n   :ARG1 (c2 / come-in-07~e.4\n             :ARG1 (p / person\n                      :ARG0-of (p2 / perform-01~e.3)\n                      :mod (e / each~e.0)))\n   :ARG2 (s / sit-01~e.9\n            :ARG1 p\n            :ARG2 (b / back~e.12\n                     :ARG1-of (h / have-degree-91\n                                 :ARG2 (f / far~e.11)\n                                 :ARG3 (s2 / so~e.10)\n                                 :ARG6 (p3 / possible-01\n                                           :polarity -\n                                           :ARG1 (s3 / see-01~e.17\n                                                     :ARG0 (w / we~e.14)\n                                                     :ARG1 (p4 / person)))))))", [[0, 4], [5, 7], [8, 11], [12, 22], [23, 27], [28, 30], [30, 31], [32, 35], [36, 40], [41, 48], [49, 51], [52, 55], [56, 60], [61, 65], [66, 68], [69, 74], [74, 77], [78, 81], [82, 85], [85, 86]]], ["# ::snt She didn't talk to one student.\n# ::tokens [\"She\", \"did\", \"n't\", \"talk\", \"to\", \"one\", \"student\", \".\"]\n# ::lemmas [\"she\", \"do\", \"not\", \"talk\", \"to\", \"one\", \"student\", \".\"]\n# ::alignments 0-1.2 3-1 5-1.3.1 6-1.3.2\n(t / talk-01~e.3\n   :polarity -\n   :ARG0 (s / she~e.0)\n   :ARG2 (p / person\n            :quant 1~e.5\n            :ARG0-of (s2 / study-01~e.6)))", [[0, 3], [4, 7], [7, 10], [11, 15], [16, 18], [19, 22], [23, 30], [30, 31]]], ["# ::snt She doesn't meet anyone for dinner, but they can't figure out who.\n# ::tokens [\"She\", \"does\", \"n't\", \"meet\", \"anyone\", \"for\", \"dinner\", \",\", \"but\", \"they\", \"ca\", \"n't\", \"figure\", \"out\", \"who\", \".\"]\n# ::lemmas [\"she\", \"do\", \"not\", \"meet\", \"anyone\", \"for\", \"dinner\", \",\", \"but\", \"they\", \"can\", \"not\", \"figure\", \"out\", \"who\", \".\"]\n# ::alignments 0-1.2 3-1 4-1.3 6-1.4 9-1.5.2.1 12-1.5.2\n(m / meet-02~e.3\n   :polarity -\n   :ARG0 (s / she~e.0)\n   :ARG1 (a / anyone~e.4)\n   :purpose (d / dinner~e.6)\n   :concession-of (p / possible-01\n                     :polarity -\n                     :ARG1 (f / figure-out-05~e.12\n                              :ARG0 (t / they~e.9)\n                              :ARG1 a)))", [[0, 3], [4, 8], [8, 11], [12, 16], [17, 23], [24, 27], [28, 34], [34, 35], [36, 39], [40, 44], [45, 47], [47, 50], [51, 57], [58, 61], [62, 65], [65, 66]]], ["# ::snt Everyone relies on someone. It's unclear who.\n# ::tokens [\"Everyone\", \"relies\", \"on\", \"someone\", \".\", \"It\", \"'s\", \"unclear\", \"who\", \".\"]\n# ::lemmas [\"everyone\", \"rely\", \"on\", \"someone\", \".\", \"it\", \"be\", \"unclear\", \"who\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 3-1.1.2 7-1.2\n(m / multi-sentence\n   :snt1 (r / rely-01~e.1\n            :ARG0 (e / everyone~e.0)\n            :ARG1 (s / someone~e.3))\n   :snt2 (c / clear-06~e.7\n            :polarity -\n            :ARG1 (p / person)))", [[0, 8], [9, 15], [16, 18], [19, 26], [26, 27], [28, 30], [30, 32], [33, 40], [41, 44], [44, 45]]], ["# ::snt Each student wrote a paper on a Mayan language, but I don't remember which one.\n# ::tokens [\"Each\", \"student\", \"wrote\", \"a\", \"paper\", \"on\", \"a\", \"Mayan\", \"language\", \",\", \"but\", \"I\", \"do\", \"n't\", \"remember\", \"which\", \"one\", \".\"]\n# ::lemmas [\"each\", \"student\", \"write\", \"a\", \"paper\", \"on\", \"a\", \"Mayan\", \"language\", \",\", \"but\", \"i\", \"do\", \"not\", \"remember\", \"which\", \"one\", \".\"]\n# ::alignments 0-1.1.1.2 1-1.1.1.1 2-1.1 4-1.1.2 7-1.1.2.1.1.1 8-1.1.2.1 10-1 11-1.2.2 14-1.2\n(c / contrast-01~e.10\n   :ARG1 (w / write-01~e.2\n            :ARG0 (p / person\n                     :ARG0-of (s / study-01~e.1)\n                     :mod (e / each~e.0))\n            :ARG1 (p2 / paper~e.4\n                      :topic (l / language~e.8\n                                :name (n / name\n                                         :op1 \"Mayan\"~e.7))))\n   :ARG2 (r / remember-01~e.14\n            :polarity -\n            :ARG0 (ii / i~e.11)\n            :ARG1 p2))", [[0, 4], [5, 12], [13, 18], [19, 20], [21, 26], [27, 29], [30, 31], [32, 37], [38, 46], [46, 47], [48, 51], [52, 53], [54, 56], [56, 59], [60, 68], [69, 74], [75, 78], [78, 79]]], ["# ::snt The newspaper has reported that they are about to appoint someone, but I can't remember who the newspaper has reported that they are about to appoint.\n# ::tokens [\"The\", \"newspaper\", \"has\", \"reported\", \"that\", \"they\", \"are\", \"about\", \"to\", \"appoint\", \"someone\", \",\", \"but\", \"I\", \"ca\", \"n't\", \"remember\", \"who\", \"the\", \"newspaper\", \"has\", \"reported\", \"that\", \"they\", \"are\", \"about\", \"to\", \"appoint\", \".\"]\n# ::lemmas [\"the\", \"newspaper\", \"have\", \"report\", \"that\", \"they\", \"be\", \"about\", \"to\", \"appoint\", \"someone\", \",\", \"but\", \"i\", \"can\", \"not\", \"remember\", \"who\", \"the\", \"newspaper\", \"have\", \"report\", \"that\", \"they\", \"be\", \"about\", \"to\", \"appoint\", \".\"]\n# ::alignments 1-1.1.1 3-1.1 7-1.1.2.3 9-1.1.2 10-1.1.2.2 12-1 13-1.2.2.1 16-1.2.2 21-1.2.2.2.1\n(c / contrast-01~e.12\n   :ARG1 (r / report-01~e.3\n            :ARG0 (n / newspaper~e.1)\n            :ARG1 (a / appoint-01~e.9\n                     :ARG0 n\n                     :ARG1 (s / someone~e.10)\n                     :time (a2 / about-to~e.7)))\n   :ARG2 (p / possible-01\n            :polarity -\n            :ARG1 (r2 / remember-01~e.16\n                      :ARG0 (ii / i~e.13)\n                      :ARG1 (p2 / person\n                                :ARG1-of (r3 / report-01~e.21\n                                             :ARG0 n\n                                             :ARG2 a)))))", [[0, 3], [4, 13], [14, 17], [18, 26], [27, 31], [32, 36], [37, 40], [41, 46], [47, 49], [50, 57], [58, 65], [65, 66], [67, 70], [71, 72], [73, 75], [75, 78], [79, 87], [88, 91], [92, 95], [96, 105], [106, 109], [110, 118], [119, 123], [124, 128], [129, 132], [133, 138], [139, 141], [142, 149], [149, 150]]], ["# ::snt The newspaper has reported that they are about to appoint someone, but I can't remember who they are about to appoint.\n# ::tokens [\"The\", \"newspaper\", \"has\", \"reported\", \"that\", \"they\", \"are\", \"about\", \"to\", \"appoint\", \"someone\", \",\", \"but\", \"I\", \"ca\", \"n't\", \"remember\", \"who\", \"they\", \"are\", \"about\", \"to\", \"appoint\", \".\"]\n# ::lemmas [\"the\", \"newspaper\", \"have\", \"report\", \"that\", \"they\", \"be\", \"about\", \"to\", \"appoint\", \"someone\", \",\", \"but\", \"i\", \"can\", \"not\", \"remember\", \"who\", \"they\", \"be\", \"about\", \"to\", \"appoint\", \".\"]\n# ::alignments 1-1.1.1 3-1.1 7-1.1.2.3 9-1.1.2 10-1.1.2.2 12-1 13-1.2.2.1 16-1.2.2 22-1.2.2.2.1\n(c / contrast-01~e.12\n   :ARG1 (r / report-01~e.3\n            :ARG0 (n / newspaper~e.1)\n            :ARG1 (a / appoint-01~e.9\n                     :ARG0 n\n                     :ARG1 (s / someone~e.10)\n                     :time (a2 / about-to~e.7)))\n   :ARG2 (p / possible-01\n            :polarity -\n            :ARG1 (r2 / remember-01~e.16\n                      :ARG0 (ii / i~e.13)\n                      :ARG1 (p2 / person\n                                :ARG1-of (a3 / appoint-01~e.22\n                                             :ARG0 n\n                                             :time a2)))))", [[0, 3], [4, 13], [14, 17], [18, 26], [27, 31], [32, 36], [37, 40], [41, 46], [47, 49], [50, 57], [58, 65], [65, 66], [67, 70], [71, 72], [73, 75], [75, 78], [79, 87], [88, 91], [92, 96], [97, 100], [101, 106], [107, 109], [110, 117], [117, 118]]], ["# ::snt Most columnists claim that a senior White House official has been briefing them, and the newspaper today reveals which one.\n# ::tokens [\"Most\", \"columnists\", \"claim\", \"that\", \"a\", \"senior\", \"White\", \"House\", \"official\", \"has\", \"been\", \"briefing\", \"them\", \",\", \"and\", \"the\", \"newspaper\", \"today\", \"reveals\", \"which\", \"one\", \".\"]\n# ::lemmas [\"most\", \"columnist\", \"claim\", \"that\", \"a\", \"senior\", \"White\", \"House\", \"official\", \"have\", \"be\", \"brief\", \"they\", \",\", \"and\", \"the\", \"newspaper\", \"today\", \"reveal\", \"which\", \"one\", \".\"]\n# ::alignments 0-1.1.1.1 1-1.1.1 2-1.1 5-1.1.2.1.1.2.1 6-1.1.2.1.1.1.1.1 7-1.1.2.1.1.1.1.2 8-1.1.2.1.1.2 9-1.1.2.1.1 11-1.1.2 14-1 16-1.2.1 17-1.2.3 18-1.2\n(a / and~e.14\n   :op1 (c / claim-01~e.2\n           :ARG0 (c2 / columnist~e.1\n                     :quant (m / most~e.0))\n           :ARG1 (b / brief-01~e.11\n                    :ARG0 (p / person\n                             :ARG0-of (h / have-org-role-91~e.9\n                                         :ARG1 (g / government-organization\n                                                  :name (n / name\n                                                           :op1 \"White\"~e.6\n                                                           :op2 \"House\"~e.7))\n                                         :ARG2 (o / official~e.8\n                                                  :mod (s / senior~e.5))))\n                    :ARG1 c2))\n   :op2 (r / reveal-01~e.18\n           :ARG0 (n2 / newspaper~e.16)\n           :ARG1 (p2 / person\n                     :ARG1-of (ii / include-91\n                                  :ARG2 c2))\n           :time (t / today~e.17)))", [[0, 4], [5, 15], [16, 21], [22, 26], [27, 28], [29, 35], [36, 41], [42, 47], [48, 56], [57, 60], [61, 65], [66, 74], [75, 79], [79, 80], [81, 84], [85, 88], [89, 98], [99, 104], [105, 112], [113, 118], [119, 122], [122, 123]]], ["# ::snt Most columnists claim that a senior White House official has been briefing them, but none will reveal which one.\n# ::tokens [\"Most\", \"columnists\", \"claim\", \"that\", \"a\", \"senior\", \"White\", \"House\", \"official\", \"has\", \"been\", \"briefing\", \"them\", \",\", \"but\", \"none\", \"will\", \"reveal\", \"which\", \"one\", \".\"]\n# ::lemmas [\"most\", \"columnist\", \"claim\", \"that\", \"a\", \"senior\", \"White\", \"House\", \"official\", \"have\", \"be\", \"brief\", \"they\", \",\", \"but\", \"none\", \"will\", \"reveal\", \"which\", \"one\", \".\"]\n# ::alignments 0-1.1.1.1 1-1.1.1 2-1.1 5-1.1.2.1.1.2.1 6-1.1.2.1.1.1.1.1 7-1.1.2.1.1.1.1.2 8-1.1.2.1.1.2 9-1.1.2.1.1 11-1.1.2 14-1 17-1.2 19-1.2.3\n(c / contrast-01~e.14\n   :ARG1 (c2 / claim-01~e.2\n             :ARG0 (c3 / columnist~e.1\n                       :quant (m / most~e.0))\n             :ARG1 (b / brief-01~e.11\n                      :ARG0 (p / person\n                               :ARG0-of (h / have-org-role-91~e.9\n                                           :ARG1 (g / government-organization\n                                                    :name (n / name\n                                                             :op1 \"White\"~e.6\n                                                             :op2 \"House\"~e.7))\n                                           :ARG2 (o / official~e.8\n                                                    :mod (s / senior~e.5))))\n                      :ARG1 c3))\n   :ARG2 (r / reveal-01~e.17\n            :polarity -\n            :ARG0 c3\n            :ARG1 (o2 / one~e.19\n                      :domain p)))", [[0, 4], [5, 15], [16, 21], [22, 26], [27, 28], [29, 35], [36, 41], [42, 47], [48, 56], [57, 60], [61, 65], [66, 74], [75, 79], [79, 80], [81, 84], [85, 89], [90, 94], [95, 101], [102, 107], [108, 111], [111, 112]]], ["# ::snt Bill wondered how many papers Sandy had read, but he didn't care which ones.\n# ::tokens [\"Bill\", \"wondered\", \"how\", \"many\", \"papers\", \"Sandy\", \"had\", \"read\", \",\", \"but\", \"he\", \"did\", \"n't\", \"care\", \"which\", \"ones\", \".\"]\n# ::lemmas [\"Bill\", \"wonder\", \"how\", \"many\", \"paper\", \"Sandy\", \"have\", \"read\", \",\", \"but\", \"he\", \"do\", \"not\", \"care\", \"which\", \"one\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 4-1.1.2.1 5-1.1.2.1.1.1.1.1 7-1.1.2.1.1 9-1 13-1.2\n(c / contrast-01~e.9\n   :ARG1 (w / wonder-01~e.1\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Bill\"~e.0))\n            :ARG1 (n2 / number\n                      :quant-of (p2 / paper~e.4\n                                    :ARG1-of (r / read-01~e.7\n                                                :ARG0 (p3 / person\n                                                          :name (n3 / name\n                                                                    :op1 \"Sandy\"~e.5))))))\n   :ARG2 (c2 / care-01~e.13\n             :polarity -\n             :ARG0 p\n             :ARG1 n2))", [[0, 4], [5, 13], [14, 17], [18, 22], [23, 29], [30, 35], [36, 39], [40, 44], [44, 45], [46, 49], [50, 52], [53, 56], [56, 59], [60, 64], [65, 70], [71, 75], [75, 76]]], ["# ::snt I never know which papers Sandy has read, but I usually know how many.\n# ::tokens [\"I\", \"never\", \"know\", \"which\", \"papers\", \"Sandy\", \"has\", \"read\", \",\", \"but\", \"I\", \"usually\", \"know\", \"how\", \"many\", \".\"]\n# ::lemmas [\"i\", \"never\", \"know\", \"which\", \"paper\", \"Sandy\", \"have\", \"read\", \",\", \"but\", \"i\", \"usually\", \"know\", \"how\", \"many\", \".\"]\n# ::alignments 0-1.1.2 2-1.1 4-1.1.3 5-1.1.3.1.1.1.1 7-1.1.3.1 9-1 11-1.2.3 12-1.2 14-1.2.2.1\n(c / contrast-01~e.9\n   :ARG1 (k / know-01~e.2\n            :polarity -\n            :ARG0 (ii / i~e.0)\n            :ARG1 (p / paper~e.4\n                     :ARG1-of (r / read-01~e.7\n                                 :ARG0 (p2 / person\n                                           :name (n / name\n                                                    :op1 \"Sandy\"~e.5))))\n            :time (e / ever))\n   :ARG2 (k2 / know-01~e.12\n             :ARG0 ii\n             :ARG1 (p3 / paper\n                       :quant (m / many~e.14))\n             :mod (u / usual~e.11)))", [[0, 1], [2, 7], [8, 12], [13, 18], [19, 25], [26, 31], [32, 35], [36, 40], [40, 41], [42, 45], [46, 47], [48, 55], [56, 60], [61, 64], [65, 69], [69, 70]]], ["# ::snt Sandy had read how many papers?!\n# ::tokens [\"Sandy\", \"had\", \"read\", \"how\", \"many\", \"papers\", \"?\", \"!\"]\n# ::lemmas [\"Sandy\", \"have\", \"read\", \"how\", \"many\", \"paper\", \"?\", \"!\"]\n# ::alignments 0-1.1.1.1 2-1 5-1.2\n(r / read-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sandy\"~e.0))\n   :ARG1 (p2 / paper~e.5\n             :quant (a / amr-unknown)))", [[0, 5], [6, 9], [10, 14], [15, 18], [19, 23], [24, 30], [30, 31], [31, 32]]], ["# ::snt Everybody gets on well with a certain relative, but often only his therapist knows which one.\n# ::tokens [\"Everybody\", \"gets\", \"on\", \"well\", \"with\", \"a\", \"certain\", \"relative\", \",\", \"but\", \"often\", \"only\", \"his\", \"therapist\", \"knows\", \"which\", \"one\", \".\"]\n# ::lemmas [\"everybody\", \"get\", \"on\", \"well\", \"with\", \"a\", \"certain\", \"relative\", \",\", \"but\", \"often\", \"only\", \"his\", \"therapist\", \"know\", \"which\", \"one\", \".\"]\n# ::alignments 0-1.1.1 3-1.1.3 6-1.1.2.1 7-1.1.2 9-1 10-1.2.3 11-1.2.1.2 13-1.2.1 14-1.2\n(c / contrast-01~e.9\n   :ARG1 (g / get-on-20\n            :ARG1 (e / everybody~e.0)\n            :ARG2 (r / relative~e.7\n                     :mod (c2 / certain~e.6))\n            :ARG1-of (w / well-09~e.3))\n   :ARG2 (k / know-01~e.14\n            :ARG0 (t / therapist~e.13\n                     :poss (h / he)\n                     :mod (o / only~e.11))\n            :ARG1 r\n            :frequency (o2 / often~e.10)))", [[0, 9], [10, 14], [15, 17], [18, 22], [23, 27], [28, 29], [30, 37], [38, 46], [46, 47], [48, 51], [52, 57], [58, 62], [63, 66], [67, 76], [77, 82], [83, 88], [89, 92], [92, 93]]], ["# ::snt Which book did each author recommend?\n# ::tokens [\"Which\", \"book\", \"did\", \"each\", \"author\", \"recommend\", \"?\"]\n# ::lemmas [\"which\", \"book\", \"do\", \"each\", \"author\", \"recommend\", \"?\"]\n# ::alignments 1-1.2 3-1.1.2 4-1.1.1 5-1\n(r / recommend-01~e.5\n   :ARG0 (p / person\n            :ARG0-of (a / author-01~e.4)\n            :mod (e / each~e.3))\n   :ARG1 (b / book~e.1\n            :mod (a2 / amr-unknown)))", [[0, 5], [6, 10], [11, 14], [15, 19], [20, 26], [27, 36], [36, 37]]], ["# ::snt His or her least known work.\n# ::tokens [\"His\", \"or\", \"her\", \"least\", \"known\", \"work\", \".\"]\n# ::lemmas [\"his\", \"or\", \"her\", \"least\", \"know\", \"work\", \".\"]\n# ::alignments 1-1.1 3-1.2.1.2 4-1.2 5-1\n(w / work-01~e.5\n   :ARG0 (o / or~e.1\n            :op1 (h / he)\n            :op2 (s / she))\n   :ARG1-of (k / know-01~e.4\n               :ARG2-of (h2 / have-degree-91\n                            :ARG1 w\n                            :ARG3 (l / least~e.3))))", [[0, 3], [4, 6], [7, 10], [11, 16], [17, 22], [23, 27], [27, 28]]], ["# ::snt They were going to meet sometime on Sunday, but the faculty didn't know when.\n# ::tokens [\"They\", \"were\", \"going\", \"to\", \"meet\", \"sometime\", \"on\", \"Sunday\", \",\", \"but\", \"the\", \"faculty\", \"did\", \"n't\", \"know\", \"when\", \".\"]\n# ::lemmas [\"they\", \"be\", \"go\", \"to\", \"meet\", \"sometime\", \"on\", \"Sunday\", \",\", \"but\", \"the\", \"faculty\", \"do\", \"not\", \"know\", \"when\", \".\"]\n# ::alignments 0-1.1 4-1 5-1.2 7-1.3.1 11-1.4.2 14-1.4\n(m / meet-03~e.4\n   :ARG0 (t / they~e.0)\n   :time (s / sometime~e.5)\n   :time (d / date-entity\n            :weekday (s2 / sunday~e.7))\n   :concession (k / know-01~e.14\n                  :polarity -\n                  :ARG0 (f / faculty~e.11)\n                  :ARG1 d))", [[0, 4], [5, 9], [10, 15], [16, 18], [19, 23], [24, 32], [33, 35], [36, 42], [42, 43], [44, 47], [48, 51], [52, 59], [60, 63], [63, 66], [67, 71], [72, 76], [76, 77]]], ["# ::snt John likes some students, but I don't know who.\n# ::tokens [\"John\", \"likes\", \"some\", \"students\", \",\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"who\", \".\"]\n# ::lemmas [\"John\", \"like\", \"some\", \"student\", \",\", \"but\", \"i\", \"do\", \"not\", \"know\", \"who\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 2-1.1.2.2 3-1.1.2.1 5-1 6-1.2.2 9-1.2\n(c / contrast-01~e.5\n   :ARG1 (l / like-01~e.1\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"John\"~e.0))\n            :ARG1 (p2 / person\n                      :ARG0-of (s / study-01~e.3)\n                      :quant (s2 / some~e.2)))\n   :ARG2 (k / know-01~e.9\n            :polarity -\n            :ARG0 (ii / i~e.6)\n            :ARG1 p2))", [[0, 4], [5, 10], [11, 15], [16, 24], [24, 25], [26, 29], [30, 31], [32, 34], [34, 37], [38, 42], [43, 46], [46, 47]]], ["# ::snt I don't know who John likes.\n# ::tokens [\"I\", \"do\", \"n't\", \"know\", \"who\", \"John\", \"likes\", \".\"]\n# ::lemmas [\"i\", \"do\", \"not\", \"know\", \"who\", \"John\", \"like\", \".\"]\n# ::alignments 0-1.2 3-1 5-1.3.1.1 6-1.3.2\n(k / know-01~e.3\n   :polarity -\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.5)\n            :ARG1-of (l / like-01~e.6)))", [[0, 1], [2, 4], [4, 7], [8, 12], [13, 16], [17, 21], [22, 27], [27, 28]]], ["# ::snt John likes some students, but I don't know who John likes some students.\n# ::tokens [\"John\", \"likes\", \"some\", \"students\", \",\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"who\", \"John\", \"likes\", \"some\", \"students\", \".\"]\n# ::lemmas [\"John\", \"like\", \"some\", \"student\", \",\", \"but\", \"i\", \"do\", \"not\", \"know\", \"who\", \"John\", \"like\", \"some\", \"student\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 2-1.1.2.2 3-1.1.2.1 5-1 6-1.2.2 9-1.2 12-1.2.3\n(c / contrast-01~e.5\n   :ARG1 (l / like-01~e.1\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"John\"~e.0))\n            :ARG1 (p2 / person\n                      :ARG0-of (s / study-01~e.3)\n                      :quant (s2 / some~e.2)))\n   :ARG2 (k / know-01~e.9\n            :polarity -\n            :ARG0 (ii / i~e.6)\n            :ARG1 (l2 / like-01~e.12\n                      :ARG0 p\n                      :ARG1 p2)))", [[0, 4], [5, 10], [11, 15], [16, 24], [24, 25], [26, 29], [30, 31], [32, 34], [34, 37], [38, 42], [43, 46], [47, 51], [52, 57], [58, 62], [63, 71], [71, 72]]], ["# ::snt Joan said she talked to the students, but Fred couldn't figure out who.\n# ::tokens [\"Joan\", \"said\", \"she\", \"talked\", \"to\", \"the\", \"students\", \",\", \"but\", \"Fred\", \"could\", \"n't\", \"figure\", \"out\", \"who\", \".\"]\n# ::lemmas [\"Joan\", \"say\", \"she\", \"talk\", \"to\", \"the\", \"student\", \",\", \"but\", \"Fred\", \"could\", \"not\", \"figure\", \"out\", \"who\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 6-1.2.2.1 9-1.2.3.2.1.1.1 12-1.2.3.2\n(s / say-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Joan\"~e.0))\n   :ARG1 (t / talk-01~e.3\n            :ARG0 p\n            :ARG2 (p2 / person\n                      :ARG0-of (s2 / study-01~e.6))\n            :concession-of (p3 / possible-01\n                               :polarity -\n                               :ARG1 (f / figure-out-05~e.12\n                                        :ARG0 (p4 / person\n                                                  :name (n2 / name\n                                                            :op1 \"Fred\"~e.9))\n                                        :ARG1 (p5 / person)))))", [[0, 4], [5, 9], [10, 13], [14, 20], [21, 23], [24, 27], [28, 36], [36, 37], [38, 41], [42, 46], [47, 52], [52, 55], [56, 62], [63, 66], [67, 70], [70, 71]]], ["# ::snt He announced he had eaten the asparagus, but we didn't know what.\n# ::tokens [\"He\", \"announced\", \"he\", \"had\", \"eaten\", \"the\", \"asparagus\", \",\", \"but\", \"we\", \"did\", \"n't\", \"know\", \"what\", \".\"]\n# ::lemmas [\"he\", \"announce\", \"he\", \"have\", \"eat\", \"the\", \"asparagus\", \",\", \"but\", \"we\", \"do\", \"not\", \"know\", \"what\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2 6-1.2.2 9-1.3.2 12-1.3\n(a / announce-01~e.1\n   :ARG0 (h / he~e.0)\n   :ARG1 (e / eat-01~e.4\n            :ARG0 h\n            :ARG1 (a2 / asparagus~e.6))\n   :concession (k / know-01~e.12\n                  :polarity -\n                  :ARG0 (w / we~e.9)\n                  :ARG1 (t / thing)))", [[0, 2], [3, 12], [13, 15], [16, 19], [20, 25], [26, 29], [30, 39], [39, 40], [41, 44], [45, 47], [48, 51], [51, 54], [55, 59], [60, 64], [64, 65]]], ["# ::snt She was reading the books under the table, but Fred didn't know what books.\n# ::tokens [\"She\", \"was\", \"reading\", \"the\", \"books\", \"under\", \"the\", \"table\", \",\", \"but\", \"Fred\", \"did\", \"n't\", \"know\", \"what\", \"books\", \".\"]\n# ::lemmas [\"she\", \"be\", \"read\", \"the\", \"book\", \"under\", \"the\", \"table\", \",\", \"but\", \"Fred\", \"do\", \"not\", \"know\", \"what\", \"book\", \".\"]\n# ::alignments 0-1.1.1 2-1.1 4-1.1.2 5-1.1.2.1 7-1.1.2.1.1 9-1 10-1.2.2.1.1 13-1.2 15-1.2.3\n(c / contrast-01~e.9\n   :ARG1 (r / read-01~e.2\n            :ARG0 (s / she~e.0)\n            :ARG1 (b / book~e.4\n                     :location (u / under~e.5\n                                  :op1 (t / table~e.7))))\n   :ARG2 (k / know-01~e.13\n            :polarity -\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Fred\"~e.10))\n            :ARG1 (b2 / book~e.15)))", [[0, 3], [4, 7], [8, 15], [16, 19], [20, 25], [26, 31], [32, 35], [36, 41], [41, 42], [43, 46], [47, 51], [52, 55], [55, 58], [59, 63], [64, 68], [69, 74], [74, 75]]], ["# ::snt He announced he would marry the woman he loved most, but none of his relatives could figure out who.\n# ::tokens [\"He\", \"announced\", \"he\", \"would\", \"marry\", \"the\", \"woman\", \"he\", \"loved\", \"most\", \",\", \"but\", \"none\", \"of\", \"his\", \"relatives\", \"could\", \"figure\", \"out\", \"who\", \".\"]\n# ::lemmas [\"he\", \"announce\", \"he\", \"would\", \"marry\", \"the\", \"woman\", \"he\", \"love\", \"most\", \",\", \"but\", \"none\", \"of\", \"his\", \"relative\", \"could\", \"figure\", \"out\", \"who\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 4-1.1.2 6-1.1.2.2 8-1.1.2.2.1 9-1.1.2.2.1.2.2 11-1 15-1.2.2.1.1.2 17-1.2.2\n(c / contrast-01~e.11\n   :ARG1 (a / announce-01~e.1\n            :ARG0 (h / he~e.0)\n            :ARG1 (m / marry-01~e.4\n                     :ARG1 h\n                     :ARG2 (w / woman~e.6\n                              :ARG1-of (l / love-01~e.8\n                                          :ARG0 h\n                                          :ARG2-of (h2 / have-degree-91\n                                                       :ARG1 w\n                                                       :ARG3 (m2 / most~e.9))))))\n   :ARG2 (p / possible-01\n            :polarity -\n            :ARG1 (f / figure-out-05~e.17\n                     :ARG0 (p2 / person\n                               :ARG0-of (h3 / have-rel-role-91\n                                            :ARG1 h\n                                            :ARG2 (r / relative~e.15)))\n                     :ARG1 m)))", [[0, 2], [3, 12], [13, 15], [16, 21], [22, 27], [28, 31], [32, 37], [38, 40], [41, 46], [47, 51], [51, 52], [53, 56], [57, 61], [62, 64], [65, 68], [69, 78], [79, 84], [85, 91], [92, 95], [96, 99], [99, 100]]], ["# ::snt She talked to John or Mary but I don't know which.\n# ::tokens [\"She\", \"talked\", \"to\", \"John\", \"or\", \"Mary\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"which\", \".\"]\n# ::lemmas [\"she\", \"talk\", \"to\", \"John\", \"or\", \"Mary\", \"but\", \"i\", \"do\", \"not\", \"know\", \"which\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1.1.1 4-1.2 5-1.2.2.1.1 7-1.3.2 10-1.3\n(t / talk-01~e.1\n   :ARG0 (s / she~e.0)\n   :ARG2 (o / or~e.4\n            :op1 (p / person\n                    :name (n / name\n                             :op1 \"John\"~e.3))\n            :op2 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Mary\"~e.5)))\n   :concession (k / know-01~e.10\n                  :polarity -\n                  :ARG0 (ii / i~e.7)\n                  :ARG1 o))", [[0, 3], [4, 10], [11, 13], [14, 18], [19, 21], [22, 26], [27, 30], [31, 32], [33, 35], [35, 38], [39, 43], [44, 49], [49, 50]]], ["# ::snt She talked to John or Mary but I don't know which one.\n# ::tokens [\"She\", \"talked\", \"to\", \"John\", \"or\", \"Mary\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"which\", \"one\", \".\"]\n# ::lemmas [\"she\", \"talk\", \"to\", \"John\", \"or\", \"Mary\", \"but\", \"i\", \"do\", \"not\", \"know\", \"which\", \"one\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 3-1.1.2.1.1.1 4-1.1.2 5-1.1.2.2.1.1 6-1 7-1.2.2 10-1.2\n(c / contrast-01~e.6\n   :ARG1 (t / talk-01~e.1\n            :ARG0 (s / she~e.0)\n            :ARG2 (o / or~e.4\n                     :op1 (p / person\n                             :name (n / name\n                                      :op1 \"John\"~e.3))\n                     :op2 (p2 / person\n                              :name (n2 / name\n                                        :op1 \"Mary\"~e.5))))\n   :ARG2 (k / know-01~e.10\n            :polarity -\n            :ARG0 (ii / i~e.7)\n            :ARG1 o))", [[0, 3], [4, 10], [11, 13], [14, 18], [19, 21], [22, 26], [27, 30], [31, 32], [33, 35], [35, 38], [39, 43], [44, 49], [50, 53], [53, 54]]], ["# ::snt She talked to Harry, but I don't know who else.\n# ::tokens [\"She\", \"talked\", \"to\", \"Harry\", \",\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"who\", \"else\", \".\"]\n# ::lemmas [\"she\", \"talk\", \"to\", \"Harry\", \",\", \"but\", \"i\", \"do\", \"not\", \"know\", \"who\", \"else\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 3-1.1.2.1.1 5-1 6-1.2.2 9-1.2 11-1.2.3.1\n(c / contrast-01~e.5\n   :ARG1 (t / talk-01~e.1\n            :ARG0 (s / she~e.0)\n            :ARG2 (p / person\n                     :name (n / name\n                              :op1 \"Harry\"~e.3)))\n   :ARG2 (k / know-01~e.9\n            :polarity -\n            :ARG0 (ii / i~e.6)\n            :ARG1 (p2 / person\n                      :mod (e / else~e.11))))", [[0, 3], [4, 10], [11, 13], [14, 19], [19, 20], [21, 24], [25, 26], [27, 29], [29, 32], [33, 37], [38, 41], [42, 46], [46, 47]]], ["# ::snt I will see them, but I don't know how many of them.\n# ::tokens [\"I\", \"will\", \"see\", \"them\", \",\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"how\", \"many\", \"of\", \"them\", \".\"]\n# ::lemmas [\"i\", \"will\", \"see\", \"they\", \",\", \"but\", \"i\", \"do\", \"not\", \"know\", \"how\", \"many\", \"of\", \"they\", \".\"]\n# ::alignments 0-1.1.1 2-1.1 3-1.1.2 5-1 9-1.2 13-1.2.3.1\n(c / contrast-01~e.5\n   :ARG1 (s / see-01~e.2\n            :ARG0 (ii / i~e.0)\n            :ARG1 (t / they~e.3))\n   :ARG2 (k / know-01~e.9\n            :polarity -\n            :ARG0 ii\n            :ARG1 (t2 / thing\n                      :quant-of (t3 / they~e.13))))", [[0, 1], [2, 6], [7, 10], [11, 15], [15, 16], [17, 20], [21, 22], [23, 25], [25, 28], [29, 33], [34, 37], [38, 42], [43, 45], [46, 50], [50, 51]]], ["# ::snt Everyone who knows either Susan or Laura likes her.\n# ::tokens [\"Everyone\", \"who\", \"knows\", \"either\", \"Susan\", \"or\", \"Laura\", \"likes\", \"her\", \".\"]\n# ::lemmas [\"everyone\", \"who\", \"know\", \"either\", \"Susan\", \"or\", \"Laura\", \"like\", \"she\", \".\"]\n# ::alignments 0-1.1 2-1.1.1 4-1.1.2.1.1.1 5-1.1.2 6-1.1.2.2.1.1 7-1 8-1.2\n(l / like-01~e.7\n   :ARG0 (e / everyone~e.0\n            :ARG0-of (k / know-01~e.2)\n            :mod (o / or~e.5\n                    :op1 (p / person\n                            :name (n / name\n                                     :op1 \"Susan\"~e.4))\n                    :op2 (p2 / person\n                             :name (n2 / name\n                                       :op1 \"Laura\"~e.6))))\n   :ARG1 (s / she~e.8))", [[0, 8], [9, 12], [13, 18], [19, 25], [26, 31], [32, 34], [35, 40], [41, 46], [47, 50], [50, 51]]], ["# ::snt She said she talked to three students but I don't know how many.\n# ::tokens [\"She\", \"said\", \"she\", \"talked\", \"to\", \"three\", \"students\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"how\", \"many\", \".\"]\n# ::lemmas [\"she\", \"say\", \"she\", \"talk\", \"to\", \"three\", \"student\", \"but\", \"i\", \"do\", \"not\", \"know\", \"how\", \"many\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 5-1.2.2.1 6-1.2.2.2 8-1.2.3.2 11-1.2.3 13-1.2.3.3.1\n(s / say-01~e.1\n   :ARG0 (s2 / she~e.0)\n   :ARG1 (t / talk-01~e.3\n            :ARG0 s2\n            :ARG2 (p / person\n                     :quant 3~e.5\n                     :ARG0-of (s3 / study-01~e.6))\n            :concession (k / know-01~e.11\n                           :polarity -\n                           :ARG0 (ii / i~e.8)\n                           :ARG1 (p2 / person\n                                     :quant (m / many~e.13)))))", [[0, 3], [4, 8], [9, 12], [13, 19], [20, 22], [23, 28], [29, 37], [38, 41], [42, 43], [44, 46], [46, 49], [50, 54], [55, 58], [59, 63], [63, 64]]], ["# ::snt She said she talked to those students but I don't know how many.\n# ::tokens [\"She\", \"said\", \"she\", \"talked\", \"to\", \"those\", \"students\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"how\", \"many\", \".\"]\n# ::lemmas [\"she\", \"say\", \"she\", \"talk\", \"to\", \"those\", \"student\", \"but\", \"i\", \"do\", \"not\", \"know\", \"how\", \"many\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 6-1.2.2.2 8-1.2.3.2 11-1.2.3 13-1.2.3.3.1\n(s / say-01~e.1\n   :ARG0 (s2 / she~e.0)\n   :ARG1 (t / talk-01~e.3\n            :ARG0 s2\n            :ARG2 (p / person\n                     :mod (t2 / that)\n                     :ARG0-of (s3 / study-01~e.6))\n            :concession (k / know-01~e.11\n                           :polarity -\n                           :ARG0 (ii / i~e.8)\n                           :ARG1 (p2 / person\n                                     :quant (m / many~e.13)\n                                     :ARG0-of (s4 / study-01)))))", [[0, 3], [4, 8], [9, 12], [13, 19], [20, 22], [23, 28], [29, 37], [38, 41], [42, 43], [44, 46], [46, 49], [50, 54], [55, 58], [59, 63], [63, 64]]], ["# ::snt He shouted again, but I don't know who to.\n# ::tokens [\"He\", \"shouted\", \"again\", \",\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"who\", \"to\", \".\"]\n# ::lemmas [\"he\", \"shout\", \"again\", \",\", \"but\", \"i\", \"do\", \"not\", \"know\", \"who\", \"to\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2 5-1.3.2 8-1.3\n(s / shout-01~e.1\n   :ARG0 (h / he~e.0)\n   :mod (a / again~e.2)\n   :concession (k / know-01~e.8\n                  :polarity -\n                  :ARG0 (ii / i~e.5)\n                  :ARG1 (s2 / shout-01\n                            :ARG0 h)))", [[0, 2], [3, 10], [11, 16], [16, 17], [18, 21], [22, 23], [24, 26], [26, 29], [30, 34], [35, 38], [39, 41], [41, 42]]], ["# ::snt She was dancing with somebody, but I don't know who with.\n# ::tokens [\"She\", \"was\", \"dancing\", \"with\", \"somebody\", \",\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"who\", \"with\", \".\"]\n# ::lemmas [\"she\", \"be\", \"dance\", \"with\", \"somebody\", \",\", \"but\", \"i\", \"do\", \"not\", \"know\", \"who\", \"with\", \".\"]\n# ::alignments 0-1.1.3.1.1 2-1.1.3.1 4-1.1.3.1.2 7-1.1.2 10-1.1\n(h / have-concession-91\n   :ARG1 (k / know-01~e.10\n            :polarity -\n            :ARG0 (ii / i~e.7)\n            :ARG1 (p / person\n                     :accompanier-of (d / dance-02~e.2\n                                        :ARG0 (s / she~e.0)\n                                        :accompanier (s2 / somebody~e.4)\n                                        :ARG2-of h))))", [[0, 3], [4, 7], [8, 15], [16, 20], [21, 29], [29, 30], [31, 34], [35, 36], [37, 39], [39, 42], [43, 47], [48, 51], [52, 56], [56, 57]]], ["# ::snt Several firefighters were injured, but it's not known.\n# ::tokens [\"Several\", \"firefighters\", \"were\", \"injured\", \",\", \"but\", \"it\", \"'s\", \"not\", \"known\", \".\"]\n# ::lemmas [\"several\", \"firefighter\", \"be\", \"injure\", \",\", \"but\", \"it\", \"be\", \"not\", \"know\", \".\"]\n# ::alignments 0-1.1.2.1.2 1-1.1.2.1.1.1 3-1.1.2 8-1.1.1 9-1.1\n(h / have-concession-91\n   :ARG1 (k / know-01~e.9\n            :polarity -~e.8\n            :ARG1 (ii / injure-01~e.3\n                      :ARG1 (p / person\n                               :ARG0-of (f / fight-01\n                                           :ARG1 (f2 / fire~e.1))\n                               :quant (s / several~e.0))))\n   :ARG2 ii)", [[0, 7], [8, 20], [21, 25], [26, 33], [33, 34], [35, 38], [39, 41], [41, 43], [44, 47], [48, 53], [53, 54]]], ["# ::snt Meg is attracted to Harry, but they don't know who she is attracted to.\n# ::tokens [\"Meg\", \"is\", \"attracted\", \"to\", \"Harry\", \",\", \"but\", \"they\", \"do\", \"n't\", \"know\", \"who\", \"she\", \"is\", \"attracted\", \"to\", \".\"]\n# ::lemmas [\"Meg\", \"be\", \"attract\", \"to\", \"Harry\", \",\", \"but\", \"they\", \"do\", \"not\", \"know\", \"who\", \"she\", \"be\", \"attract\", \"to\", \".\"]\n# ::alignments 0-1.2.1.1 2-1 4-1.1.1.1 7-1.3.2 10-1.3 14-1.3.3\n(a / attract-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Harry\"~e.4))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Meg\"~e.0))\n   :concession (k / know-01~e.10\n                  :polarity -\n                  :ARG0 (t / they~e.7)\n                  :ARG1 (a2 / attract-01~e.14\n                            :ARG0 p2\n                            :ARG1 p2)))", [[0, 3], [4, 6], [7, 16], [17, 19], [20, 25], [25, 26], [27, 30], [31, 35], [36, 38], [38, 41], [42, 46], [47, 50], [51, 54], [55, 57], [58, 67], [68, 70], [70, 71]]], ["# ::snt Sandy was trying to work out which students would be able to solve a certain problem, but she wouldn't tell us which one.\n# ::tokens [\"Sandy\", \"was\", \"trying\", \"to\", \"work\", \"out\", \"which\", \"students\", \"would\", \"be\", \"able\", \"to\", \"solve\", \"a\", \"certain\", \"problem\", \",\", \"but\", \"she\", \"would\", \"n't\", \"tell\", \"us\", \"which\", \"one\", \".\"]\n# ::lemmas [\"Sandy\", \"be\", \"try\", \"to\", \"work\", \"out\", \"which\", \"student\", \"would\", \"be\", \"able\", \"to\", \"solve\", \"a\", \"certain\", \"problem\", \",\", \"but\", \"she\", \"would\", \"not\", \"tell\", \"we\", \"which\", \"one\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1 4-1.1.2 7-1.1.2.2.1.1.1 12-1.1.2.2.1 14-1.1.2.2.1.2.1 15-1.1.2.2.1.2 17-1 21-1.2 22-1.2.4\n(c / contrast-01~e.17\n   :ARG1 (t / try-01~e.2\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Sandy\"~e.0))\n            :ARG1 (w / work-out-02~e.4\n                     :ARG0 p\n                     :ARG1 (p2 / possible-01\n                               :ARG1 (s / solve-01~e.12\n                                        :ARG0 (p3 / person\n                                                  :ARG0-of (s2 / study-01~e.7))\n                                        :ARG1 (p4 / problem~e.15\n                                                  :mod (c2 / certain~e.14))))))\n   :ARG2 (t2 / tell-01~e.21\n             :polarity -\n             :ARG0 p\n             :ARG1 (p5 / person\n                       :ARG1-of (ii / include-91\n                                    :ARG2 p))\n             :ARG2 (w2 / we~e.22)))", [[0, 5], [6, 9], [10, 16], [17, 19], [20, 24], [25, 28], [29, 34], [35, 43], [44, 49], [50, 52], [53, 57], [58, 60], [61, 66], [67, 68], [69, 76], [77, 84], [84, 85], [86, 89], [90, 93], [94, 99], [99, 102], [103, 107], [108, 110], [111, 116], [117, 120], [120, 121]]], ["# ::snt Sandy was trying to work out which students would be able to solve a certain problem, but she wouldn't tell us which one.\n# ::tokens [\"Sandy\", \"was\", \"trying\", \"to\", \"work\", \"out\", \"which\", \"students\", \"would\", \"be\", \"able\", \"to\", \"solve\", \"a\", \"certain\", \"problem\", \",\", \"but\", \"she\", \"would\", \"n't\", \"tell\", \"us\", \"which\", \"one\", \".\"]\n# ::lemmas [\"Sandy\", \"be\", \"try\", \"to\", \"work\", \"out\", \"which\", \"student\", \"would\", \"be\", \"able\", \"to\", \"solve\", \"a\", \"certain\", \"problem\", \",\", \"but\", \"she\", \"would\", \"not\", \"tell\", \"we\", \"which\", \"one\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1 4-1.1.2 7-1.1.2.2.1.1.1 12-1.1.2.2.1 14-1.1.2.2.1.2.1 15-1.1.2.2.1.2 17-1 21-1.2 22-1.2.4\n(c / contrast-01~e.17\n   :ARG1 (t / try-01~e.2\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Sandy\"~e.0))\n            :ARG1 (w / work-out-02~e.4\n                     :ARG0 p\n                     :ARG1 (p2 / possible-01\n                               :ARG1 (s / solve-01~e.12\n                                        :ARG0 (p3 / person\n                                                  :ARG0-of (s2 / study-01~e.7))\n                                        :ARG1 (p4 / problem~e.15\n                                                  :mod (c2 / certain~e.14))))))\n   :ARG2 (t2 / tell-01~e.21\n             :polarity -\n             :ARG0 p\n             :ARG1 (p5 / person\n                       :ARG1-of (ii / include-91\n                                    :ARG2 p))\n             :ARG2 (w2 / we~e.22)))", [[0, 5], [6, 9], [10, 16], [17, 19], [20, 24], [25, 28], [29, 34], [35, 43], [44, 49], [50, 52], [53, 57], [58, 60], [61, 66], [67, 68], [69, 76], [77, 84], [84, 85], [86, 89], [90, 93], [94, 99], [99, 102], [103, 107], [108, 110], [111, 116], [117, 120], [120, 121]]], ["# ::snt John and someone were dancing together, but I don't know who.\n# ::tokens [\"John\", \"and\", \"someone\", \"were\", \"dancing\", \"together\", \",\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"who\", \".\"]\n# ::lemmas [\"John\", \"and\", \"someone\", \"be\", \"dance\", \"together\", \",\", \"but\", \"i\", \"do\", \"not\", \"know\", \"who\", \".\"]\n# ::alignments 0-1.1.3.1.1.1.1.1 1-1.1.3.1.1 2-1.1.3.1.1.2 4-1.2 5-1.2.2 8-1.1.2 11-1.1\n(h / have-concession-91\n   :ARG1 (k / know-01~e.11\n            :polarity -\n            :ARG0 (ii / i~e.8)\n            :ARG1 (p / person\n                     :ARG2-of (ii2 / include-91\n                                   :ARG1 (a / and~e.1\n                                            :op1 (p2 / person\n                                                     :name (n / name\n                                                              :op1 \"John\"~e.0))\n                                            :op2 (s / someone~e.2)))))\n   :ARG2 (d / dance-01~e.4\n            :ARG0 a\n            :manner (t / together~e.5)))", [[0, 4], [5, 8], [9, 16], [17, 21], [22, 29], [30, 38], [38, 39], [40, 43], [44, 45], [46, 48], [48, 51], [52, 56], [57, 60], [60, 61]]], ["# ::snt The TA's have been arguing about whether some student or other should pass, but I can't now remember which one.\n# ::tokens [\"The\", \"TA\", \"'s\", \"have\", \"been\", \"arguing\", \"about\", \"whether\", \"some\", \"student\", \"or\", \"other\", \"should\", \"pass\", \",\", \"but\", \"I\", \"ca\", \"n't\", \"now\", \"remember\", \"which\", \"one\", \".\"]\n# ::lemmas [\"the\", \"ta\", \"'s\", \"have\", \"be\", \"argue\", \"about\", \"whether\", \"some\", \"student\", \"or\", \"other\", \"should\", \"pass\", \",\", \"but\", \"i\", \"can\", \"not\", \"now\", \"remember\", \"which\", \"one\", \".\"]\n# ::alignments 5-1.1 8-1.1.2.1.1.1.2 9-1.1.2.1.1.1.1 10-1.1.2.1.1 11-1.1.2.1.1.2.1 13-1.1.2.1 15-1 16-1.2.2.1 19-1.2.2.3 20-1.2.2 22-1.2.2.2.1\n(c / contrast-01~e.15\n   :ARG1 (a / argue-02~e.5\n            :ARG0 (p / person\n                     :ARG0-of (t / take-01\n                                 :ARG1 (t2 / test-01)))\n            :ARG2 (r / recommend-01\n                     :ARG1 (p2 / pass-07~e.13\n                               :ARG1 (o / or~e.10\n                                        :op1 (p3 / person\n                                                 :ARG0-of (s / study-01~e.9)\n                                                 :mod (s2 / some~e.8))\n                                        :op2 (p4 / person\n                                                 :mod (o2 / other~e.11))))))\n   :ARG2 (p5 / possible-01\n             :polarity -\n             :ARG1 (r2 / remember-01~e.20\n                       :ARG0 (ii / i~e.16)\n                       :ARG1 (p6 / person\n                                 :mod (o3 / one~e.22))\n                       :time (n / now~e.19))))", [[0, 3], [4, 6], [6, 8], [9, 13], [14, 18], [19, 26], [27, 32], [33, 40], [41, 45], [46, 53], [54, 56], [57, 62], [63, 69], [70, 74], [74, 75], [76, 79], [80, 81], [82, 84], [84, 87], [88, 91], [92, 100], [101, 106], [107, 110], [110, 111]]], ["# ::snt It has been determined that somebody will be appointed; it's just not clear yet who.\n# ::tokens [\"It\", \"has\", \"been\", \"determined\", \"that\", \"somebody\", \"will\", \"be\", \"appointed\", \";\", \"it\", \"'s\", \"just\", \"not\", \"clear\", \"yet\", \"who\", \".\"]\n# ::lemmas [\"it\", \"have\", \"be\", \"determine\", \"that\", \"somebody\", \"will\", \"be\", \"appoint\", \";\", \"it\", \"be\", \"just\", \"not\", \"clear\", \"yet\", \"who\", \".\"]\n# ::alignments 3-1.1 5-1.1.1.1 8-1.1.1 12-1.2.3 13-1.2.1 14-1.2 15-1.2.4\n(m / multi-sentence\n   :snt1 (d / determine-01~e.3\n            :ARG1 (a / appoint-01~e.8\n                     :ARG1 (s / somebody~e.5)))\n   :snt2 (c / clear-06~e.14\n            :polarity -~e.13\n            :ARG1 (p / person)\n            :mod (j / just~e.12)\n            :time (y / yet~e.15)))", [[0, 2], [3, 6], [7, 11], [12, 22], [23, 27], [28, 36], [37, 41], [42, 44], [45, 54], [54, 55], [56, 58], [58, 60], [61, 65], [66, 69], [70, 75], [76, 79], [80, 83], [83, 84]]], ["# ::snt Sally asked if somebody was going to fail math class, but I can't remember who.\n# ::tokens [\"Sally\", \"asked\", \"if\", \"somebody\", \"was\", \"going\", \"to\", \"fail\", \"math\", \"class\", \",\", \"but\", \"I\", \"ca\", \"n't\", \"remember\", \"who\", \".\"]\n# ::lemmas [\"Sally\", \"ask\", \"if\", \"somebody\", \"be\", \"go\", \"to\", \"fail\", \"math\", \"class\", \",\", \"but\", \"i\", \"can\", \"not\", \"remember\", \"who\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 3-1.1.2.1.1 7-1.1.2.1 8-1.1.2.1.2.1 9-1.1.2.1.2 11-1 12-1.2.2.1 15-1.2.2\n(c / contrast-01~e.11\n   :ARG1 (a / ask-01~e.1\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Sally\"~e.0))\n            :ARG1 (t / truth-value\n                     :polarity-of (f / fail-01~e.7\n                                     :ARG1 (s / somebody~e.3)\n                                     :ARG2 (c2 / class~e.9\n                                               :topic (m / mathematics~e.8)))))\n   :ARG2 (p2 / possible-01\n             :polarity -\n             :ARG1 (r / remember-01~e.15\n                      :ARG0 (ii / i~e.12)\n                      :ARG1 s)))", [[0, 5], [6, 11], [12, 14], [15, 23], [24, 27], [28, 33], [34, 36], [37, 41], [42, 46], [47, 52], [52, 53], [54, 57], [58, 59], [60, 62], [62, 65], [66, 74], [75, 78], [78, 79]]], ["# ::snt The TA's have been arguing about whether some student or other should pass, but I can't now remember which one.\n# ::tokens [\"The\", \"TA\", \"'s\", \"have\", \"been\", \"arguing\", \"about\", \"whether\", \"some\", \"student\", \"or\", \"other\", \"should\", \"pass\", \",\", \"but\", \"I\", \"ca\", \"n't\", \"now\", \"remember\", \"which\", \"one\", \".\"]\n# ::lemmas [\"the\", \"ta\", \"'s\", \"have\", \"be\", \"argue\", \"about\", \"whether\", \"some\", \"student\", \"or\", \"other\", \"should\", \"pass\", \",\", \"but\", \"i\", \"can\", \"not\", \"now\", \"remember\", \"which\", \"one\", \".\"]\n# ::alignments 5-1.1 8-1.1.2.1.1.1.2 9-1.1.2.1.1.1.1 10-1.1.2.1.1 11-1.1.2.1.1.2.1 13-1.1.2.1 15-1 16-1.2.2.1 19-1.2.2.3 20-1.2.2 22-1.2.2.2.1\n(c / contrast-01~e.15\n   :ARG1 (a / argue-02~e.5\n            :ARG0 (p / person\n                     :ARG0-of (t / take-01\n                                 :ARG1 (t2 / test-01)))\n            :ARG2 (r / recommend-01\n                     :ARG1 (p2 / pass-07~e.13\n                               :ARG1 (o / or~e.10\n                                        :op1 (p3 / person\n                                                 :ARG0-of (s / study-01~e.9)\n                                                 :mod (s2 / some~e.8))\n                                        :op2 (p4 / person\n                                                 :mod (o2 / other~e.11))))))\n   :ARG2 (p5 / possible-01\n             :polarity -\n             :ARG1 (r2 / remember-01~e.20\n                       :ARG0 (ii / i~e.16)\n                       :ARG1 (p6 / person\n                                 :mod (o3 / one~e.22))\n                       :time (n / now~e.19))))", [[0, 3], [4, 6], [6, 8], [9, 13], [14, 18], [19, 26], [27, 32], [33, 40], [41, 45], [46, 53], [54, 56], [57, 62], [63, 69], [70, 74], [74, 75], [76, 79], [80, 81], [82, 84], [84, 87], [88, 91], [92, 100], [101, 106], [107, 110], [110, 111]]], ["# ::snt Sandy is very anxious to see if the students will be able to solve the homework problem in a particular way, but she won't tell us which.\n# ::tokens [\"Sandy\", \"is\", \"very\", \"anxious\", \"to\", \"see\", \"if\", \"the\", \"students\", \"will\", \"be\", \"able\", \"to\", \"solve\", \"the\", \"homework\", \"problem\", \"in\", \"a\", \"particular\", \"way\", \",\", \"but\", \"she\", \"wo\", \"n't\", \"tell\", \"us\", \"which\", \".\"]\n# ::lemmas [\"Sandy\", \"be\", \"very\", \"anxious\", \"to\", \"see\", \"if\", \"the\", \"student\", \"will\", \"be\", \"able\", \"to\", \"solve\", \"the\", \"homework\", \"problem\", \"in\", \"a\", \"particular\", \"way\", \",\", \"but\", \"she\", \"will\", \"not\", \"tell\", \"we\", \"which\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1.2 3-1.1 5-1.1.3 8-1.1.3.2.1.1.1.1 13-1.1.3.2.1.1 15-1.1.3.2.1.1.2.1 16-1.1.3.2.1.1.2 19-1.1.3.2.1.1.3.1 20-1.1.3.2.1.1.3 22-1 26-1.2 27-1.2.4\n(c / contrast-01~e.22\n   :ARG1 (a / anxious~e.3\n            :domain (p / person\n                       :name (n / name\n                                :op1 \"Sandy\"~e.0))\n            :degree (v / very~e.2)\n            :purpose (s / see-01~e.5\n                        :ARG0 p\n                        :ARG1 (t / truth-value\n                                 :polarity-of (p2 / possible-01\n                                                  :ARG1 (s2 / solve-01~e.13\n                                                            :ARG0 (p3 / person\n                                                                      :ARG0-of (s3 / study-01~e.8))\n                                                            :ARG1 (p4 / problem~e.16\n                                                                      :topic (h / homework~e.15))\n                                                            :manner (w / way~e.20\n                                                                       :mod (p5 / particular~e.19)))))))\n   :ARG2 (t2 / tell-01~e.26\n             :polarity -\n             :ARG0 p\n             :ARG1 t\n             :ARG2 (w2 / we~e.27)))", [[0, 5], [6, 8], [9, 13], [14, 21], [22, 24], [25, 28], [29, 31], [32, 35], [36, 44], [45, 49], [50, 52], [53, 57], [58, 60], [61, 66], [67, 70], [71, 79], [80, 87], [88, 90], [91, 92], [93, 103], [104, 107], [107, 108], [109, 112], [113, 116], [117, 119], [119, 122], [123, 127], [128, 130], [131, 136], [136, 137]]], ["# ::snt Sandy is very anxious to see if the students will be able to solve the homework problem in a particular way, but she won't tell us in which way.\n# ::tokens [\"Sandy\", \"is\", \"very\", \"anxious\", \"to\", \"see\", \"if\", \"the\", \"students\", \"will\", \"be\", \"able\", \"to\", \"solve\", \"the\", \"homework\", \"problem\", \"in\", \"a\", \"particular\", \"way\", \",\", \"but\", \"she\", \"wo\", \"n't\", \"tell\", \"us\", \"in\", \"which\", \"way\", \".\"]\n# ::lemmas [\"Sandy\", \"be\", \"very\", \"anxious\", \"to\", \"see\", \"if\", \"the\", \"student\", \"will\", \"be\", \"able\", \"to\", \"solve\", \"the\", \"homework\", \"problem\", \"in\", \"a\", \"particular\", \"way\", \",\", \"but\", \"she\", \"will\", \"not\", \"tell\", \"we\", \"in\", \"which\", \"way\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1.2 3-1.1 5-1.1.3 8-1.1.3.2.1.1.1.1 13-1.1.3.2.1.1 15-1.1.3.2.1.1.2.1 16-1.1.3.2.1.1.2 19-1.1.3.2.1.1.3.1 20-1.1.3.2.1.1.3 22-1 26-1.2 27-1.2.3 30-1.2.4\n(c / contrast-01~e.22\n   :ARG1 (a / anxious~e.3\n            :domain (p / person\n                       :name (n / name\n                                :op1 \"Sandy\"~e.0))\n            :degree (v / very~e.2)\n            :purpose (s / see-01~e.5\n                        :ARG0 p\n                        :ARG1 (t / truth-value\n                                 :polarity-of (p2 / possible-01\n                                                  :ARG1 (s2 / solve-01~e.13\n                                                            :ARG0 (p3 / person\n                                                                      :ARG0-of (s3 / study-01~e.8))\n                                                            :ARG1 (p4 / problem~e.16\n                                                                      :topic (h / homework~e.15))\n                                                            :manner (w / way~e.20\n                                                                       :mod (p5 / particular~e.19)))))))\n   :ARG2 (t2 / tell-01~e.26\n             :polarity -\n             :ARG0 p\n             :ARG2 (w2 / we~e.27)\n             :manner (w3 / way~e.30)))", [[0, 5], [6, 8], [9, 13], [14, 21], [22, 24], [25, 28], [29, 31], [32, 35], [36, 44], [45, 49], [50, 52], [53, 57], [58, 60], [61, 66], [67, 70], [71, 79], [80, 87], [88, 90], [91, 92], [93, 103], [104, 107], [107, 108], [109, 112], [113, 116], [117, 119], [119, 122], [123, 127], [128, 130], [131, 133], [134, 139], [140, 143], [143, 144]]], ["# ::snt Clinton is anxious to find out which budget dilemmas Panetta would be willing to tackle in a certain way, but he won't say in which.\n# ::tokens [\"Clinton\", \"is\", \"anxious\", \"to\", \"find\", \"out\", \"which\", \"budget\", \"dilemmas\", \"Panetta\", \"would\", \"be\", \"willing\", \"to\", \"tackle\", \"in\", \"a\", \"certain\", \"way\", \",\", \"but\", \"he\", \"wo\", \"n't\", \"say\", \"in\", \"which\", \".\"]\n# ::lemmas [\"Clinton\", \"be\", \"anxious\", \"to\", \"find\", \"out\", \"which\", \"budget\", \"dilemmas\", \"Panetta\", \"would\", \"be\", \"willing\", \"to\", \"tackle\", \"in\", \"a\", \"certain\", \"way\", \",\", \"but\", \"he\", \"will\", \"not\", \"say\", \"in\", \"which\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1 4-1.1.2 7-1.1.2.2.1 8-1.1.2.2 9-1.1.2.2.2.1.1.1 14-1.1.2.2.2 17-1.1.2.2.2.3 20-1 22-1.1.2.2.2.2 24-1.2\n(c / contrast-01~e.20\n   :ARG1 (a / anxious~e.2\n            :domain (p / person\n                       :name (n / name\n                                :op1 \"Clinton\"~e.0))\n            :purpose (f / find-out-03~e.4\n                        :ARG0 p\n                        :ARG1 (d / dilemma~e.8\n                                 :mod (b / budget~e.7)\n                                 :ARG1-of (t / tackle-01~e.14\n                                             :ARG0 (p2 / person\n                                                       :name (n2 / name\n                                                                 :op1 \"Panetta\"~e.9))\n                                             :ARG1-of (w / will-02~e.22\n                                                         :ARG0 p2)\n                                             :manner (c2 / certain~e.17)))))\n   :ARG2 (s / say-01~e.24\n            :polarity -\n            :ARG0 p\n            :ARG1 (a2 / amr-unknown)))", [[0, 7], [8, 10], [11, 18], [19, 21], [22, 26], [27, 30], [31, 36], [37, 43], [44, 52], [53, 60], [61, 66], [67, 69], [70, 77], [78, 80], [81, 87], [88, 90], [91, 92], [93, 100], [101, 104], [104, 105], [106, 109], [110, 112], [113, 115], [115, 118], [119, 122], [123, 125], [126, 131], [131, 132]]], ["# ::snt Sandy is wondering whether there will be students who have to drop the class for a certain reason, but she won't reveal what.\n# ::tokens [\"Sandy\", \"is\", \"wondering\", \"whether\", \"there\", \"will\", \"be\", \"students\", \"who\", \"have\", \"to\", \"drop\", \"the\", \"class\", \"for\", \"a\", \"certain\", \"reason\", \",\", \"but\", \"she\", \"wo\", \"n't\", \"reveal\", \"what\", \".\"]\n# ::lemmas [\"Sandy\", \"be\", \"wonder\", \"whether\", \"there\", \"will\", \"be\", \"student\", \"who\", \"have\", \"to\", \"drop\", \"the\", \"class\", \"for\", \"a\", \"certain\", \"reason\", \",\", \"but\", \"she\", \"will\", \"not\", \"reveal\", \"what\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1 7-1.1.2.1.1.1 11-1.1.2.1.2 13-1.1.2.1.2.2 16-1.1.2.1.2.3.1.1 17-1.1.2.1.2.3.1 19-1 23-1.2\n(c / contrast-01~e.19\n   :ARG1 (w / wonder-01~e.2\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Sandy\"~e.0))\n            :ARG1 (t / truth-value\n                     :polarity-of (o / obligate-01\n                                     :ARG1 (p2 / person\n                                               :ARG0-of (s / study-01~e.7))\n                                     :ARG2 (d / drop-05~e.11\n                                              :ARG0 p2\n                                              :ARG1 (c2 / class~e.13)\n                                              :ARG1-of (c3 / cause-01\n                                                           :ARG0 (r / reason~e.17\n                                                                    :mod (c4 / certain~e.16)))))))\n   :ARG2 (r2 / reveal-01~e.23\n             :polarity -\n             :ARG0 p\n             :ARG1 t))", [[0, 5], [6, 8], [9, 18], [19, 26], [27, 32], [33, 37], [38, 40], [41, 49], [50, 53], [54, 58], [59, 61], [62, 66], [67, 70], [71, 76], [77, 80], [81, 82], [83, 90], [91, 97], [97, 98], [99, 102], [103, 106], [107, 109], [109, 112], [113, 119], [120, 124], [124, 125]]], ["# ::snt In which way is Sandy very anxious to see if the students will be able to solve the homework problem?\n# ::tokens [\"In\", \"which\", \"way\", \"is\", \"Sandy\", \"very\", \"anxious\", \"to\", \"see\", \"if\", \"the\", \"students\", \"will\", \"be\", \"able\", \"to\", \"solve\", \"the\", \"homework\", \"problem\", \"?\"]\n# ::lemmas [\"in\", \"which\", \"way\", \"be\", \"Sandy\", \"very\", \"anxious\", \"to\", \"see\", \"if\", \"the\", \"student\", \"will\", \"be\", \"able\", \"to\", \"solve\", \"the\", \"homework\", \"problem\", \"?\"]\n# ::alignments 4-1.1.1.1 5-1.2 6-1 8-1.3 11-1.3.2.1.1.1.1 16-1.3.2.1.1 18-1.3.2.1.1.2.1 19-1.3.2.1.1.2\n(a / anxious~e.6\n   :domain (p / person\n              :name (n / name\n                       :op1 \"Sandy\"~e.4))\n   :degree (v / very~e.5)\n   :manner (s / see-01~e.8\n              :ARG0 p\n              :ARG1 (t / truth-value\n                       :polarity-of (p2 / possible-01\n                                        :ARG1 (s2 / solve-01~e.16\n                                                  :ARG0 (p3 / person\n                                                            :ARG0-of (s3 / study-01~e.11))\n                                                  :ARG1 (p4 / problem~e.19\n                                                            :topic (h / homework~e.18))))))\n   :mod (a2 / amr-unknown))", [[0, 2], [3, 8], [9, 12], [13, 15], [16, 21], [22, 26], [27, 34], [35, 37], [38, 41], [42, 44], [45, 48], [49, 57], [58, 62], [63, 65], [66, 70], [71, 73], [74, 79], [80, 83], [84, 92], [93, 100], [100, 101]]], ["# ::snt In which way is Clinton anxious to find out which budget dilemmas Panetta would be willing to solve?\n# ::tokens [\"In\", \"which\", \"way\", \"is\", \"Clinton\", \"anxious\", \"to\", \"find\", \"out\", \"which\", \"budget\", \"dilemmas\", \"Panetta\", \"would\", \"be\", \"willing\", \"to\", \"solve\", \"?\"]\n# ::lemmas [\"in\", \"which\", \"way\", \"be\", \"Clinton\", \"anxious\", \"to\", \"find\", \"out\", \"which\", \"budget\", \"dilemmas\", \"Panetta\", \"would\", \"be\", \"willing\", \"to\", \"solve\", \"?\"]\n# ::alignments 4-1.1.1.1 5-1 7-1.2.1 10-1.2.1.2.1 11-1.2.1.2 12-1.2.1.2.2.1.1.1 15-1.2.1.2.2.2 17-1.2.1.2.2\n(a / anxious~e.5\n   :domain (p / person\n              :name (n / name\n                       :op1 \"Clinton\"~e.4))\n   :ARG1-of (c / cause-01\n               :ARG0 (f / find-out-03~e.7\n                        :ARG0 p\n                        :ARG1 (d / dilemma~e.11\n                                 :topic (b / budget~e.10)\n                                 :ARG1-of (s / solve-01~e.17\n                                             :ARG0 (p2 / person\n                                                       :name (n2 / name\n                                                                 :op1 \"Panetta\"~e.12))\n                                             :ARG1-of (w / will-02~e.15\n                                                         :ARG0 p2)))))\n   :manner (a2 / amr-unknown))", [[0, 2], [3, 8], [9, 12], [13, 15], [16, 23], [24, 31], [32, 34], [35, 39], [40, 43], [44, 49], [50, 56], [57, 65], [66, 73], [74, 79], [80, 82], [83, 90], [91, 93], [94, 99], [99, 100]]], ["# ::snt I know how many assignments I've graded, but I don't know how many Bill has.\n# ::tokens [\"I\", \"know\", \"how\", \"many\", \"assignments\", \"I\", \"'ve\", \"graded\", \",\", \"but\", \"I\", \"do\", \"n't\", \"know\", \"how\", \"many\", \"Bill\", \"has\", \".\"]\n# ::lemmas [\"i\", \"know\", \"how\", \"many\", \"assignment\", \"i\", \"'ve\", \"grade\", \",\", \"but\", \"i\", \"do\", \"not\", \"know\", \"how\", \"many\", \"Bill\", \"have\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 4-1.1.2.1 7-1.1.2.1.1 9-1 13-1.2 16-1.2.3.1.1.1.1 17-1.2.3.1\n(c / contrast-01~e.9\n   :ARG1 (k / know-01~e.1\n            :ARG0 (ii / i~e.0)\n            :ARG1 (n / number\n                     :quant-of (a / assign-01~e.4\n                                  :ARG1-of (g / grade-01~e.7\n                                              :ARG0 ii))))\n   :ARG2 (k2 / know-01~e.13\n             :polarity -\n             :ARG0 ii\n             :ARG1 (n2 / number\n                       :quant-of (h / have-03~e.17\n                                    :ARG0 (p / person\n                                             :name (n3 / name\n                                                       :op1 \"Bill\"~e.16))))))", [[0, 1], [2, 6], [7, 10], [11, 15], [16, 27], [28, 29], [29, 32], [33, 39], [39, 40], [41, 44], [45, 46], [47, 49], [49, 52], [53, 57], [58, 61], [62, 66], [67, 71], [72, 75], [75, 76]]], ["# ::snt What did you leave before they did?\n# ::tokens [\"What\", \"did\", \"you\", \"leave\", \"before\", \"they\", \"did\", \"?\"]\n# ::lemmas [\"what\", \"do\", \"you\", \"leave\", \"before\", \"they\", \"do\", \"?\"]\n# ::alignments 1-1.3.1 2-1.1 3-1 4-1.3 5-1.3.1.1\n(l / leave-11~e.3\n   :ARG0 (y / you~e.2)\n   :ARG1 (a / amr-unknown)\n   :time (b / before~e.4\n            :op1 (d / do-02~e.1\n                    :ARG0 (t / they~e.5))))", [[0, 4], [5, 8], [9, 12], [13, 18], [19, 25], [26, 30], [31, 34], [34, 35]]], ["# ::snt What did you leave before they started playing?\n# ::tokens [\"What\", \"did\", \"you\", \"leave\", \"before\", \"they\", \"started\", \"playing\", \"?\"]\n# ::lemmas [\"what\", \"do\", \"you\", \"leave\", \"before\", \"they\", \"start\", \"play\", \"?\"]\n# ::alignments 2-1.1 3-1 4-1.3 5-1.3.1.1 6-1.3.1 7-1.3.1.2\n(l / leave-11~e.3\n   :ARG0 (y / you~e.2)\n   :ARG1 (a / amr-unknown)\n   :time (b / before~e.4\n            :op1 (s / start-01~e.6\n                    :ARG0 (t / they~e.5)\n                    :ARG1 (p / play-01~e.7\n                             :ARG0 t))))", [[0, 4], [5, 8], [9, 12], [13, 18], [19, 25], [26, 30], [31, 38], [39, 46], [46, 47]]], ["# ::snt Sandy was trying to work out which students would be able to solve a certain problem.\n# ::tokens [\"Sandy\", \"was\", \"trying\", \"to\", \"work\", \"out\", \"which\", \"students\", \"would\", \"be\", \"able\", \"to\", \"solve\", \"a\", \"certain\", \"problem\", \".\"]\n# ::lemmas [\"Sandy\", \"be\", \"try\", \"to\", \"work\", \"out\", \"which\", \"student\", \"would\", \"be\", \"able\", \"to\", \"solve\", \"a\", \"certain\", \"problem\", \".\"]\n# ::alignments 0-1.1.1.1 2-1 4-1.2 7-1.2.2.1 12-1.2.2.2 14-1.2.2.2.1.1 15-1.2.2.2.1\n(t / try-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sandy\"~e.0))\n   :ARG1 (w / work-out-02~e.4\n            :ARG0 p\n            :ARG1 (p2 / person\n                      :ARG0-of (s / study-01~e.7)\n                      :ARG0-of (s2 / solve-01~e.12\n                                   :ARG1 (p3 / problem~e.15\n                                             :mod (c / certain~e.14))\n                                   :ARG1-of (p4 / possible-01)))))", [[0, 5], [6, 9], [10, 16], [17, 19], [20, 24], [25, 28], [29, 34], [35, 43], [44, 49], [50, 52], [53, 57], [58, 60], [61, 66], [67, 68], [69, 76], [77, 84], [84, 85]]], ["# ::snt The administration has issued a statement that it is willing to meet with one of the student groups.\n# ::tokens [\"The\", \"administration\", \"has\", \"issued\", \"a\", \"statement\", \"that\", \"it\", \"is\", \"willing\", \"to\", \"meet\", \"with\", \"one\", \"of\", \"the\", \"student\", \"groups\", \".\"]\n# ::lemmas [\"the\", \"administration\", \"have\", \"issue\", \"a\", \"statement\", \"that\", \"it\", \"be\", \"willing\", \"to\", \"meet\", \"with\", \"one\", \"of\", \"the\", \"student\", \"group\", \".\"]\n# ::alignments 1-1.1.1 5-1 9-1.2 11-1.2.2 13-1.2.2.2.1 14-1.2.2.2.2 16-1.2.2.2.2.1.1.1 17-1.2.2.2\n(s / state-01~e.5\n   :ARG0 (g / government-organization\n            :ARG0-of (a / administrate-01~e.1))\n   :ARG1 (w / will-02~e.9\n            :ARG0 g\n            :ARG1 (m / meet-03~e.11\n                     :ARG0 g\n                     :ARG1 (g2 / group~e.17\n                               :quant 1~e.13\n                               :ARG1-of (ii / include-91~e.14\n                                            :ARG2 (g3 / group\n                                                      :mod (p / person\n                                                              :ARG0-of (s2 / study-01~e.16))))))))", [[0, 3], [4, 18], [19, 22], [23, 29], [30, 31], [32, 41], [42, 46], [47, 49], [50, 52], [53, 60], [61, 63], [64, 68], [69, 73], [74, 77], [78, 80], [81, 84], [85, 92], [93, 99], [99, 100]]], ["# ::snt Sandy was trying to work out which students would be able to solve a problem.\n# ::tokens [\"Sandy\", \"was\", \"trying\", \"to\", \"work\", \"out\", \"which\", \"students\", \"would\", \"be\", \"able\", \"to\", \"solve\", \"a\", \"problem\", \".\"]\n# ::lemmas [\"Sandy\", \"be\", \"try\", \"to\", \"work\", \"out\", \"which\", \"student\", \"would\", \"be\", \"able\", \"to\", \"solve\", \"a\", \"problem\", \".\"]\n# ::alignments 0-1.1.1.1 2-1 4-1.2 7-1.2.2.1.1.1 12-1.2.2.1 14-1.2.2.1.2\n(t / try-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Sandy\"~e.0))\n   :ARG1 (w / work-out-02~e.4\n            :ARG0 p\n            :ARG1 (p2 / possible-01\n                      :ARG1 (s / solve-01~e.12\n                               :ARG0 (p3 / person\n                                         :ARG0-of (s2 / study-01~e.7))\n                               :ARG1 (p4 / problem~e.14)))))", [[0, 5], [6, 9], [10, 16], [17, 19], [20, 24], [25, 28], [29, 34], [35, 43], [44, 49], [50, 52], [53, 57], [58, 60], [61, 66], [67, 68], [69, 76], [76, 77]]], ["# ::snt The administration has issued a statement that it is willing to meet a student group.\n# ::tokens [\"The\", \"administration\", \"has\", \"issued\", \"a\", \"statement\", \"that\", \"it\", \"is\", \"willing\", \"to\", \"meet\", \"a\", \"student\", \"group\", \".\"]\n# ::lemmas [\"the\", \"administration\", \"have\", \"issue\", \"a\", \"statement\", \"that\", \"it\", \"be\", \"willing\", \"to\", \"meet\", \"a\", \"student\", \"group\", \".\"]\n# ::alignments 1-1.1.1 5-1 9-1.2 11-1.2.2 13-1.2.2.2.1.1 14-1.2.2.2\n(s / state-01~e.5\n   :ARG0 (g / government-organization\n            :ARG0-of (a / administrate-01~e.1))\n   :ARG1 (w / will-02~e.9\n            :ARG0 g\n            :ARG1 (m / meet-03~e.11\n                     :ARG0 g\n                     :ARG1 (g2 / group~e.14\n                               :consist-of (p / person\n                                              :ARG0-of (s2 / study-01~e.13))))))", [[0, 3], [4, 18], [19, 22], [23, 29], [30, 31], [32, 41], [42, 46], [47, 49], [50, 52], [53, 60], [61, 63], [64, 68], [69, 70], [71, 78], [79, 84], [84, 85]]], ["# ::snt The administration has issued a statement that it is willing to meet a student group, but I'm not sure which one.\n# ::tokens [\"The\", \"administration\", \"has\", \"issued\", \"a\", \"statement\", \"that\", \"it\", \"is\", \"willing\", \"to\", \"meet\", \"a\", \"student\", \"group\", \",\", \"but\", \"I\", \"'m\", \"not\", \"sure\", \"which\", \"one\", \".\"]\n# ::lemmas [\"the\", \"administration\", \"have\", \"issue\", \"a\", \"statement\", \"that\", \"it\", \"be\", \"willing\", \"to\", \"meet\", \"a\", \"student\", \"group\", \",\", \"but\", \"i\", \"be\", \"not\", \"sure\", \"which\", \"one\", \".\"]\n# ::alignments 1-1.2.1.1 2-1 5-1.2 9-1.2.2 11-1.2.2.2 13-1.1.3.1.1.1 14-1.1.3.1 17-1.1.2 19-1.1.1 20-1.1 22-1.1.3\n(h / have-concession-91~e.2\n   :ARG1 (s / sure-02~e.20\n            :polarity -~e.19\n            :ARG0 (ii / i~e.17)\n            :ARG1 (o / one~e.22\n                     :domain (g / group~e.14\n                                :consist-of (p / person\n                                               :ARG0-of (s2 / study-01~e.13)))))\n   :ARG2 (s3 / state-01~e.5\n             :ARG0 (g2 / government-organization\n                       :ARG0-of (a / administrate-01~e.1))\n             :ARG1 (w / will-02~e.9\n                      :ARG0 g2\n                      :ARG1 (m / meet-03~e.11\n                               :ARG0 g2\n                               :ARG1 g))))", [[0, 3], [4, 18], [19, 22], [23, 29], [30, 31], [32, 41], [42, 46], [47, 49], [50, 52], [53, 60], [61, 63], [64, 68], [69, 70], [71, 78], [79, 84], [84, 85], [86, 89], [90, 91], [91, 93], [94, 97], [98, 102], [103, 108], [109, 112], [112, 113]]], ["# ::snt I think Agnes said that Bill would speak, but I don't remember what about.\n# ::tokens [\"I\", \"think\", \"Agnes\", \"said\", \"that\", \"Bill\", \"would\", \"speak\", \",\", \"but\", \"I\", \"do\", \"n't\", \"remember\", \"what\", \"about\", \".\"]\n# ::lemmas [\"i\", \"think\", \"Agnes\", \"say\", \"that\", \"Bill\", \"would\", \"speak\", \",\", \"but\", \"i\", \"do\", \"not\", \"remember\", \"what\", \"about\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1.1.2.1.1.1 3-1.1.2 5-1.1.2.2.1.1.1 7-1.1.2.2 9-1 13-1.2\n(c / contrast-01~e.9\n   :ARG1 (t / think-01~e.1\n            :ARG0 (ii / i~e.0)\n            :ARG1 (s / say-01~e.3\n                     :ARG0 (p / person\n                              :name (n / name\n                                       :op1 \"Agnes\"~e.2))\n                     :ARG1 (s2 / speak-01~e.7\n                               :ARG0 (p2 / person\n                                         :name (n2 / name\n                                                   :op1 \"Bill\"~e.5)))))\n   :ARG2 (r / remember-01~e.13\n            :polarity -\n            :ARG0 ii\n            :ARG1 (a / amr-unknown)))", [[0, 1], [2, 7], [8, 13], [14, 18], [19, 23], [24, 28], [29, 34], [35, 40], [40, 41], [42, 45], [46, 47], [48, 50], [50, 53], [54, 62], [63, 67], [68, 73], [73, 74]]], ["# ::snt Agnes wondered how John could eat but it's not clear what.\n# ::tokens [\"Agnes\", \"wondered\", \"how\", \"John\", \"could\", \"eat\", \"but\", \"it\", \"'s\", \"not\", \"clear\", \"what\", \".\"]\n# ::lemmas [\"Agnes\", \"wonder\", \"how\", \"John\", \"could\", \"eat\", \"but\", \"it\", \"be\", \"not\", \"clear\", \"what\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 3-1.1.2.1.1.1.1.1 5-1.1.2.1.1 6-1 9-1.2.1 10-1.2\n(c / contrast-01~e.6\n   :ARG1 (w / wonder-01~e.1\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Agnes\"~e.0))\n            :ARG1 (t / thing\n                     :manner-of (p2 / possible-01\n                                    :ARG1 (e / eat-01~e.5\n                                             :ARG0 (p3 / person\n                                                       :name (n2 / name\n                                                                 :op1 \"John\"~e.3))))))\n   :ARG2 (c2 / clear-06~e.10\n             :polarity -~e.9\n             :ARG1 (t2 / thing)))", [[0, 5], [6, 14], [15, 18], [19, 23], [24, 29], [30, 33], [34, 37], [38, 40], [40, 42], [43, 46], [47, 52], [53, 57], [57, 58]]], ["# ::snt Tony sent Mo a picture that he painted, but it's not clear with what.\n# ::tokens [\"Tony\", \"sent\", \"Mo\", \"a\", \"picture\", \"that\", \"he\", \"painted\", \",\", \"but\", \"it\", \"'s\", \"not\", \"clear\", \"with\", \"what\", \".\"]\n# ::lemmas [\"Tony\", \"send\", \"Mo\", \"a\", \"picture\", \"that\", \"he\", \"paint\", \",\", \"but\", \"it\", \"be\", \"not\", \"clear\", \"with\", \"what\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 2-1.1.3.1.1 4-1.1.2 7-1.1.2.1 9-1 12-1.2.1 13-1.2\n(c / contrast-01~e.9\n   :ARG1 (s / send-01~e.1\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Tony\"~e.0))\n            :ARG1 (p2 / picture~e.4\n                      :ARG1-of (p3 / paint-01~e.7\n                                   :ARG0 p))\n            :ARG2 (p4 / person\n                      :name (n2 / name\n                                :op1 \"Mo\"~e.2)))\n   :ARG2 (c2 / clear-06~e.13\n             :polarity -~e.12\n             :ARG1 (t / thing)))", [[0, 4], [5, 9], [10, 12], [13, 14], [15, 22], [23, 27], [28, 30], [31, 38], [38, 39], [40, 43], [44, 46], [46, 48], [49, 52], [53, 58], [59, 63], [64, 68], [68, 69]]], ["# ::snt She's been dancing but we don't know with whom.\n# ::tokens [\"She\", \"'s\", \"been\", \"dancing\", \"but\", \"we\", \"do\", \"n't\", \"know\", \"with\", \"whom\", \".\"]\n# ::lemmas [\"she\", \"be\", \"be\", \"dance\", \"but\", \"we\", \"do\", \"not\", \"know\", \"with\", \"whom\", \".\"]\n# ::alignments 0-1.2.1 3-1.2 5-1.1.2 8-1.1\n(h / have-concession-91\n   :ARG1 (k / know-01~e.8\n            :polarity -\n            :ARG0 (w / we~e.5)\n            :ARG1 (p / person))\n   :ARG2 (d / dance-01~e.3\n            :ARG0 (s / she~e.0)))", [[0, 3], [3, 5], [6, 10], [11, 18], [19, 22], [23, 25], [26, 28], [28, 31], [32, 36], [37, 41], [42, 46], [46, 47]]], ["# ::snt Who did they see someone?\n# ::tokens [\"Who\", \"did\", \"they\", \"see\", \"someone\", \"?\"]\n# ::lemmas [\"who\", \"do\", \"they\", \"see\", \"someone\", \"?\"]\n# ::alignments 2-1.1 3-1 4-1.2\n(s / see-01~e.3\n   :ARG0 (t / they~e.2)\n   :ARG1 (s2 / someone~e.4)\n   :polarity (a / amr-unknown))", [[0, 3], [4, 7], [8, 12], [13, 16], [17, 24], [24, 25]]], ["# ::snt It was believed by everybody that Mary was a thief.\n# ::tokens [\"It\", \"was\", \"believed\", \"by\", \"everybody\", \"that\", \"Mary\", \"was\", \"a\", \"thief\", \".\"]\n# ::lemmas [\"it\", \"be\", \"believe\", \"by\", \"everybody\", \"that\", \"Mary\", \"be\", \"a\", \"thief\", \".\"]\n# ::alignments 2-1 4-1.1 6-1.2.2.1.1\n(b / believe-01~e.2\n   :ARG0 (e / everybody~e.4)\n   :ARG1 (p / person\n            :ARG0-of (s / steal-01)\n            :domain (p2 / person\n                        :name (n / name\n                                 :op1 \"Mary\"~e.6))))", [[0, 2], [3, 6], [7, 15], [16, 18], [19, 28], [29, 33], [34, 38], [39, 42], [43, 44], [45, 50], [50, 51]]], ["# ::snt That professor is feared by all students.\n# ::tokens [\"That\", \"professor\", \"is\", \"feared\", \"by\", \"all\", \"students\", \".\"]\n# ::lemmas [\"that\", \"professor\", \"be\", \"fear\", \"by\", \"all\", \"student\", \".\"]\n# ::alignments 0-1.2.1 1-1.2 3-1 5-1.1.2 6-1.1.1\n(f / fear-01~e.3\n   :ARG0 (p / person\n            :ARG0-of (s / study-01~e.6)\n            :mod (a / all~e.5))\n   :ARG1 (p2 / professor~e.1\n             :mod (t / that~e.0)))", [[0, 4], [5, 14], [15, 17], [18, 24], [25, 27], [28, 31], [32, 40], [40, 41]]], ["# ::snt Mary was respected by John.\n# ::tokens [\"Mary\", \"was\", \"respected\", \"by\", \"John\", \".\"]\n# ::lemmas [\"Mary\", \"be\", \"respect\", \"by\", \"John\", \".\"]\n# ::alignments 0-1.2.1.1 2-1 4-1.1.1.1\n(r / respect-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.4))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Mary\"~e.0)))", [[0, 4], [5, 8], [9, 18], [19, 21], [22, 26], [26, 27]]], ["# ::snt Ted was bitten by the spider.\n# ::tokens [\"Ted\", \"was\", \"bitten\", \"by\", \"the\", \"spider\", \".\"]\n# ::lemmas [\"Ted\", \"be\", \"bite\", \"by\", \"the\", \"spider\", \".\"]\n# ::alignments 0-1.2.1.1 2-1 5-1.1\n(b / bite-01~e.2\n   :ARG0 (s / spider~e.5)\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Ted\"~e.0)))", [[0, 3], [4, 7], [8, 14], [15, 17], [18, 21], [22, 28], [28, 29]]], ["# ::snt The book was by John written.\n# ::tokens [\"The\", \"book\", \"was\", \"by\", \"John\", \"written\", \".\"]\n# ::lemmas [\"the\", \"book\", \"be\", \"by\", \"John\", \"write\", \".\"]\n# ::alignments 1-1.2 4-1.1.1.1\n(a / author-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.4))\n   :ARG1 (b / book~e.1))", [[0, 3], [4, 8], [9, 12], [13, 15], [16, 20], [21, 28], [28, 29]]], ["# ::snt The argument was summed by the coach up.\n# ::tokens [\"The\", \"argument\", \"was\", \"summed\", \"by\", \"the\", \"coach\", \"up\", \".\"]\n# ::lemmas [\"the\", \"argument\", \"be\", \"sum\", \"by\", \"the\", \"coach\", \"up\", \".\"]\n# ::alignments 1-1.2 6-1.1.1\n(s / sum-up-01\n   :ARG0 (p / person\n            :ARG0-of (c / coach-01~e.6))\n   :ARG1 (a / argue-01~e.1))", [[0, 3], [4, 12], [13, 16], [17, 23], [24, 26], [27, 30], [31, 36], [37, 39], [39, 40]]], ["# ::snt The paper was written up by John.\n# ::tokens [\"The\", \"paper\", \"was\", \"written\", \"up\", \"by\", \"John\", \".\"]\n# ::lemmas [\"the\", \"paper\", \"be\", \"write\", \"up\", \"by\", \"John\", \".\"]\n# ::alignments 1-1.2 3-1 6-1.1.1.1\n(w / write-up-03~e.3\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.6))\n   :ARG1 (p2 / paper~e.1))", [[0, 3], [4, 9], [10, 13], [14, 21], [22, 24], [25, 27], [28, 32], [32, 33]]], ["# ::snt The paper was written by John up.\n# ::tokens [\"The\", \"paper\", \"was\", \"written\", \"by\", \"John\", \"up\", \".\"]\n# ::lemmas [\"the\", \"paper\", \"be\", \"write\", \"by\", \"John\", \"up\", \".\"]\n# ::alignments 1-1.2 3-1 5-1.1.1.1 6-1.1.1.2\n(w / write-01~e.3\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.5\n                     :op2 \"up\"~e.6))\n   :ARG1 (p2 / paper~e.1))", [[0, 3], [4, 9], [10, 13], [14, 21], [22, 24], [25, 29], [30, 32], [32, 33]]], ["# ::snt John was spoken to by Mary.\n# ::tokens [\"John\", \"was\", \"spoken\", \"to\", \"by\", \"Mary\", \".\"]\n# ::lemmas [\"John\", \"be\", \"speak\", \"to\", \"by\", \"Mary\", \".\"]\n# ::alignments 0-1.2.1.1 2-1 5-1.1.1.1\n(s / speak-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mary\"~e.5))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"John\"~e.0)))", [[0, 4], [5, 8], [9, 15], [16, 18], [19, 21], [22, 26], [26, 27]]], ["# ::snt John was spoken by Mary to.\n# ::tokens [\"John\", \"was\", \"spoken\", \"by\", \"Mary\", \"to\", \".\"]\n# ::lemmas [\"John\", \"be\", \"speak\", \"by\", \"Mary\", \"to\", \".\"]\n# ::alignments 0-1.2.1.1 2-1 4-1.1.1.1\n(s / speak-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mary\"~e.4))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"John\"~e.0)))", [[0, 4], [5, 8], [9, 15], [16, 18], [19, 23], [24, 26], [26, 27]]], ["# ::snt The book was seen by Mary.\n# ::tokens [\"The\", \"book\", \"was\", \"seen\", \"by\", \"Mary\", \".\"]\n# ::lemmas [\"the\", \"book\", \"be\", \"see\", \"by\", \"Mary\", \".\"]\n# ::alignments 1-1.2 3-1 5-1.1.1.1\n(s / see-01~e.3\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mary\"~e.5))\n   :ARG1 (b / book~e.1))", [[0, 3], [4, 8], [9, 12], [13, 17], [18, 20], [21, 25], [25, 26]]], ["# ::snt John was seen the book.\n# ::tokens [\"John\", \"was\", \"seen\", \"the\", \"book\", \".\"]\n# ::lemmas [\"John\", \"be\", \"see\", \"the\", \"book\", \".\"]\n# ::alignments 0-1.1.1.1 2-1 4-1.2\n(s / see-01~e.2\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG2 (b / book~e.4))", [[0, 4], [5, 8], [9, 13], [14, 17], [18, 22], [22, 23]]], ["# ::snt The book was written.\n# ::tokens [\"The\", \"book\", \"was\", \"written\", \".\"]\n# ::lemmas [\"the\", \"book\", \"be\", \"write\", \".\"]\n# ::alignments 1-1.1 3-1\n(w / write-01~e.3\n   :ARG1 (b / book~e.1))", [[0, 3], [4, 8], [9, 12], [13, 20], [20, 21]]], ["# ::snt John was spoke by Mary to.\n# ::tokens [\"John\", \"was\", \"spoke\", \"by\", \"Mary\", \"to\", \".\"]\n# ::lemmas [\"John\", \"be\", \"speak\", \"by\", \"Mary\", \"to\", \".\"]\n# ::alignments 0-1.2.1.1 2-1 4-1.1.1.1\n(s / speak-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mary\"~e.4))\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"John\"~e.0)))", [[0, 4], [5, 8], [9, 14], [15, 17], [18, 22], [23, 25], [25, 26]]], ["# ::snt The table was wiped clean by John.\n# ::tokens [\"The\", \"table\", \"was\", \"wiped\", \"clean\", \"by\", \"John\", \".\"]\n# ::lemmas [\"the\", \"table\", \"be\", \"wipe\", \"clean\", \"by\", \"John\", \".\"]\n# ::alignments 1-1.2 3-1 4-1.3 6-1.1.1.1\n(w / wipe-01~e.3\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.6))\n   :ARG1 (t / table~e.1)\n   :ARG2 (c / clean~e.4))", [[0, 3], [4, 9], [10, 13], [14, 19], [20, 25], [26, 28], [29, 33], [33, 34]]], ["# ::snt The table was wiped by John clean.\n# ::tokens [\"The\", \"table\", \"was\", \"wiped\", \"by\", \"John\", \"clean\", \".\"]\n# ::lemmas [\"the\", \"table\", \"be\", \"wipe\", \"by\", \"John\", \"clean\", \".\"]\n# ::alignments 1-1.2 3-1 5-1.1.1.1 6-1.3\n(w / wipe-01~e.3\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.5))\n   :ARG1 (t / table~e.1)\n   :manner (c / clean-04~e.6))", [[0, 3], [4, 9], [10, 13], [14, 19], [20, 22], [23, 27], [28, 33], [33, 34]]], ["# ::snt Mary was given by John the book.\n# ::tokens [\"Mary\", \"was\", \"given\", \"by\", \"John\", \"the\", \"book\", \".\"]\n# ::lemmas [\"Mary\", \"be\", \"give\", \"by\", \"John\", \"the\", \"book\", \".\"]\n# ::alignments 0-1.3.1.1 2-1 4-1.1.1.1 6-1.2\n(g / give-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.4))\n   :ARG1 (b / book~e.6)\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Mary\"~e.0)))", [[0, 4], [5, 8], [9, 14], [15, 17], [18, 22], [23, 26], [27, 31], [31, 32]]], ["# ::snt John was believed to be telling the truth by Mary.\n# ::tokens [\"John\", \"was\", \"believed\", \"to\", \"be\", \"telling\", \"the\", \"truth\", \"by\", \"Mary\", \".\"]\n# ::lemmas [\"John\", \"be\", \"believe\", \"to\", \"be\", \"tell\", \"the\", \"truth\", \"by\", \"Mary\", \".\"]\n# ::alignments 0-1.2.1.1.1 2-1 5-1.2 7-1.2.2 9-1.1.1.1\n(b / believe-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mary\"~e.9))\n   :ARG1 (t / tell-01~e.5\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"John\"~e.0))\n            :ARG1 (t2 / truth~e.7)))", [[0, 4], [5, 8], [9, 17], [18, 20], [21, 23], [24, 31], [32, 35], [36, 41], [42, 44], [45, 49], [49, 50]]], ["# ::snt John was believed by Mary to be telling the truth.\n# ::tokens [\"John\", \"was\", \"believed\", \"by\", \"Mary\", \"to\", \"be\", \"telling\", \"the\", \"truth\", \".\"]\n# ::lemmas [\"John\", \"be\", \"believe\", \"by\", \"Mary\", \"to\", \"be\", \"tell\", \"the\", \"truth\", \".\"]\n# ::alignments 0-1.2.1.1.1 2-1 4-1.1.1.1 7-1.2 9-1.2.2\n(b / believe-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mary\"~e.4))\n   :ARG1 (t / tell-01~e.7\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"John\"~e.0))\n            :ARG1 (t2 / truth~e.9)))", [[0, 4], [5, 8], [9, 17], [18, 20], [21, 25], [26, 28], [29, 31], [32, 39], [40, 43], [44, 49], [49, 50]]], ["# ::snt The car was driven by John to Maine.\n# ::tokens [\"The\", \"car\", \"was\", \"driven\", \"by\", \"John\", \"to\", \"Maine\", \".\"]\n# ::lemmas [\"the\", \"car\", \"be\", \"drive\", \"by\", \"John\", \"to\", \"Maine\", \".\"]\n# ::alignments 1-1.2 3-1 5-1.1.1.1 7-1.3.1.1\n(d / drive-01~e.3\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.5))\n   :ARG1 (c / car~e.1)\n   :direction (s / state\n                 :name (n2 / name\n                           :op1 \"Maine\"~e.7)))", [[0, 3], [4, 7], [8, 11], [12, 18], [19, 21], [22, 26], [27, 29], [30, 35], [35, 36]]], ["# ::snt It was believed by the students that they would have an exam.\n# ::tokens [\"It\", \"was\", \"believed\", \"by\", \"the\", \"students\", \"that\", \"they\", \"would\", \"have\", \"an\", \"exam\", \".\"]\n# ::lemmas [\"it\", \"be\", \"believe\", \"by\", \"the\", \"student\", \"that\", \"they\", \"would\", \"have\", \"an\", \"exam\", \".\"]\n# ::alignments 2-1 5-1.1.1 9-1.2 11-1.2.2\n(b / believe-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (s / study-01~e.5))\n   :ARG1 (h / have-03~e.9\n            :ARG0 p\n            :ARG1 (e / exam~e.11)))", [[0, 2], [3, 6], [7, 15], [16, 18], [19, 22], [23, 31], [32, 36], [37, 41], [42, 47], [48, 52], [53, 55], [56, 60], [60, 61]]], ["# ::snt The magazines were sent to herself by Mary.\n# ::tokens [\"The\", \"magazines\", \"were\", \"sent\", \"to\", \"herself\", \"by\", \"Mary\", \".\"]\n# ::lemmas [\"the\", \"magazine\", \"be\", \"send\", \"to\", \"herself\", \"by\", \"Mary\", \".\"]\n# ::alignments 1-1.2 3-1 7-1.1.1.1\n(s / send-01~e.3\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mary\"~e.7))\n   :ARG1 (m / magazine~e.1)\n   :ARG2 (s2 / she))", [[0, 3], [4, 13], [14, 18], [19, 23], [24, 26], [27, 34], [35, 37], [38, 42], [42, 43]]], ["# ::snt Chocolate eggs were hidden from each other by the children.\n# ::tokens [\"Chocolate\", \"eggs\", \"were\", \"hidden\", \"from\", \"each\", \"other\", \"by\", \"the\", \"children\", \".\"]\n# ::lemmas [\"chocolate\", \"egg\", \"be\", \"hide\", \"from\", \"each\", \"other\", \"by\", \"the\", \"child\", \".\"]\n# ::alignments 0-1.2.1 1-1.2 3-1 9-1.1\n(h / hide-01~e.3\n   :ARG0 (c / child~e.9)\n   :ARG1 (e / egg~e.1\n            :mod (c2 / chocolate~e.0))\n   :ARG2 c)", [[0, 9], [10, 14], [15, 19], [20, 26], [27, 31], [32, 36], [37, 42], [43, 45], [46, 49], [50, 58], [58, 59]]], ["# ::snt The magazines were sent by Mary to herself.\n# ::tokens [\"The\", \"magazines\", \"were\", \"sent\", \"by\", \"Mary\", \"to\", \"herself\", \".\"]\n# ::lemmas [\"the\", \"magazine\", \"be\", \"send\", \"by\", \"Mary\", \"to\", \"herself\", \".\"]\n# ::alignments 1-1.2 3-1 5-1.1.1.1\n(s / send-01~e.3\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mary\"~e.5))\n   :ARG1 (m / magazine~e.1)\n   :ARG2 p)", [[0, 3], [4, 13], [14, 18], [19, 23], [24, 26], [27, 31], [32, 34], [35, 42], [42, 43]]], ["# ::snt Chocolate eggs were hidden from no child by any adult.\n# ::tokens [\"Chocolate\", \"eggs\", \"were\", \"hidden\", \"from\", \"no\", \"child\", \"by\", \"any\", \"adult\", \".\"]\n# ::lemmas [\"chocolate\", \"egg\", \"be\", \"hide\", \"from\", \"no\", \"child\", \"by\", \"any\", \"adult\", \".\"]\n# ::alignments 0-1.2.1 1-1.2 3-1 5-1.3.1 6-1.3 8-1.1.1 9-1.1\n(h / hide-01~e.3\n   :ARG0 (a / adult~e.9\n            :mod (a2 / any~e.8))\n   :ARG1 (e / egg~e.1\n            :mod (c / chocolate~e.0))\n   :ARG2 (c2 / child~e.6\n             :polarity -~e.5))", [[0, 9], [10, 14], [15, 19], [20, 26], [27, 31], [32, 34], [35, 40], [41, 43], [44, 47], [48, 53], [53, 54]]], ["# ::snt Tabs were kept on each agent by the other.\n# ::tokens [\"Tabs\", \"were\", \"kept\", \"on\", \"each\", \"agent\", \"by\", \"the\", \"other\", \".\"]\n# ::lemmas [\"tab\", \"be\", \"keep\", \"on\", \"each\", \"agent\", \"by\", \"the\", \"other\", \".\"]\n# ::alignments 0-1.2 2-1 4-1.3.1 5-1.3 8-1.1\n(k / keep-01~e.2\n   :ARG0 (o / other~e.8)\n   :ARG1 (t / tabs~e.0)\n   :prep-on (a / agent~e.5\n               :mod (e / each~e.4)))", [[0, 4], [5, 9], [10, 14], [15, 17], [18, 22], [23, 28], [29, 31], [32, 35], [36, 41], [41, 42]]], ["# ::snt Chocolate eggs were hidden from every child by his mother.\n# ::tokens [\"Chocolate\", \"eggs\", \"were\", \"hidden\", \"from\", \"every\", \"child\", \"by\", \"his\", \"mother\", \".\"]\n# ::lemmas [\"chocolate\", \"egg\", \"be\", \"hide\", \"from\", \"every\", \"child\", \"by\", \"his\", \"mother\", \".\"]\n# ::alignments 0-1.2.1 1-1.2 3-1 5-1.3.1 6-1.3 9-1.1.1.2\n(h / hide-01~e.3\n   :ARG0 (p / person\n            :ARG0-of (h2 / have-rel-role-91\n                         :ARG1 (h3 / he)\n                         :ARG2 (m / mother~e.9)))\n   :ARG1 (e / egg~e.1\n            :mod (c / chocolate~e.0))\n   :ARG2 (c2 / child~e.6\n             :mod (e2 / every~e.5)))", [[0, 9], [10, 14], [15, 19], [20, 26], [27, 31], [32, 37], [38, 43], [44, 46], [47, 50], [51, 57], [57, 58]]], ["# ::snt Books were taken from no student and given to Mary.\n# ::tokens [\"Books\", \"were\", \"taken\", \"from\", \"no\", \"student\", \"and\", \"given\", \"to\", \"Mary\", \".\"]\n# ::lemmas [\"book\", \"be\", \"take\", \"from\", \"no\", \"student\", \"and\", \"give\", \"to\", \"Mary\", \".\"]\n# ::alignments 0-1.1.1 2-1.1 4-1.1.2.1 5-1.1.2.2 6-1 7-1.2 9-1.2.2.1.1\n(a / and~e.6\n   :op1 (t / take-01~e.2\n           :ARG1 (b / book~e.0)\n           :ARG2 (p / person\n                    :polarity -~e.4\n                    :ARG0-of (s / study-01~e.5)))\n   :op2 (g / give-01~e.7\n           :ARG1 b\n           :ARG2 (p2 / person\n                     :name (n / name\n                              :op1 \"Mary\"~e.9))))", [[0, 5], [6, 10], [11, 16], [17, 21], [22, 24], [25, 32], [33, 36], [37, 42], [43, 45], [46, 50], [50, 51]]], ["# ::snt Books were taken from no student and given to Mary by any professor.\n# ::tokens [\"Books\", \"were\", \"taken\", \"from\", \"no\", \"student\", \"and\", \"given\", \"to\", \"Mary\", \"by\", \"any\", \"professor\", \".\"]\n# ::lemmas [\"book\", \"be\", \"take\", \"from\", \"no\", \"student\", \"and\", \"give\", \"to\", \"Mary\", \"by\", \"any\", \"professor\", \".\"]\n# ::alignments 0-1.1.1 2-1.1 4-1.1.2.1 5-1.1.2.2 6-1 7-1.2 9-1.2.3.1.1 11-1.2.1.1 12-1.2.1\n(a / and~e.6\n   :op1 (t / take-01~e.2\n           :ARG1 (b / book~e.0)\n           :ARG2 (p / person\n                    :polarity -~e.4\n                    :ARG0-of (s / study-01~e.5)))\n   :op2 (g / give-01~e.7\n           :ARG0 (p2 / professor~e.12\n                     :mod (a2 / any~e.11))\n           :ARG1 b\n           :ARG2 (p3 / person\n                     :name (n / name\n                              :op1 \"Mary\"~e.9))))", [[0, 5], [6, 10], [11, 16], [17, 21], [22, 24], [25, 32], [33, 36], [37, 42], [43, 45], [46, 50], [51, 53], [54, 57], [58, 67], [67, 68]]], ["# ::snt Books were taken from each student by the other.\n# ::tokens [\"Books\", \"were\", \"taken\", \"from\", \"each\", \"student\", \"by\", \"the\", \"other\", \".\"]\n# ::lemmas [\"book\", \"be\", \"take\", \"from\", \"each\", \"student\", \"by\", \"the\", \"other\", \".\"]\n# ::alignments 0-1.2 2-1 4-1.3.1 5-1.3.2 8-1.1.1\n(t / take-01~e.2\n   :ARG0 (p / person\n            :mod (o / other~e.8))\n   :ARG1 (b / book~e.0)\n   :ARG2 (p2 / person\n             :mod (e / each~e.4)\n             :ARG0-of (s / study-01~e.5)))", [[0, 5], [6, 10], [11, 16], [17, 21], [22, 26], [27, 34], [35, 37], [38, 41], [42, 47], [47, 48]]], ["# ::snt Books were taken from each student and given to Mary.\n# ::tokens [\"Books\", \"were\", \"taken\", \"from\", \"each\", \"student\", \"and\", \"given\", \"to\", \"Mary\", \".\"]\n# ::lemmas [\"book\", \"be\", \"take\", \"from\", \"each\", \"student\", \"and\", \"give\", \"to\", \"Mary\", \".\"]\n# ::alignments 0-1.1.1 2-1.1 4-1.1.2.2 5-1.1.2.1 6-1 7-1.2 9-1.2.2.1.1\n(a / and~e.6\n   :op1 (t / take-01~e.2\n           :ARG1 (b / book~e.0)\n           :ARG2 (p / person\n                    :ARG0-of (s / study-01~e.5)\n                    :mod (e / each~e.4)))\n   :op2 (g / give-01~e.7\n           :ARG1 b\n           :ARG2 (p2 / person\n                     :name (n / name\n                              :op1 \"Mary\"~e.9))))", [[0, 5], [6, 10], [11, 16], [17, 21], [22, 26], [27, 34], [35, 38], [39, 44], [45, 47], [48, 52], [52, 53]]], ["# ::snt Books were taken from each student and given to Mary by the other.\n# ::tokens [\"Books\", \"were\", \"taken\", \"from\", \"each\", \"student\", \"and\", \"given\", \"to\", \"Mary\", \"by\", \"the\", \"other\", \".\"]\n# ::lemmas [\"book\", \"be\", \"take\", \"from\", \"each\", \"student\", \"and\", \"give\", \"to\", \"Mary\", \"by\", \"the\", \"other\", \".\"]\n# ::alignments 0-1.1.1 2-1.1 4-1.1.2.2 5-1.1.2.1 6-1 7-1.2 9-1.2.2.1.1\n(a / and~e.6\n   :op1 (t / take-01~e.2\n           :ARG1 (b / book~e.0)\n           :ARG2 (p / person\n                    :ARG0-of (s / study-01~e.5)\n                    :mod (e / each~e.4)))\n   :op2 (g / give-01~e.7\n           :ARG1 b\n           :ARG2 (p2 / person\n                     :name (n / name\n                              :op1 \"Mary\"~e.9))))", [[0, 5], [6, 10], [11, 16], [17, 21], [22, 26], [27, 34], [35, 38], [39, 44], [45, 47], [48, 52], [53, 55], [56, 59], [60, 65], [65, 66]]], ["# ::snt Jack hates Sue and is loved by Mary.\n# ::tokens [\"Jack\", \"hates\", \"Sue\", \"and\", \"is\", \"loved\", \"by\", \"Mary\", \".\"]\n# ::lemmas [\"Jack\", \"hate\", \"Sue\", \"and\", \"be\", \"love\", \"by\", \"Mary\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 2-1.1.2.1.1 3-1 5-1.2 7-1.2.1.1.1\n(a / and~e.3\n   :op1 (h / hate-01~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Jack\"~e.0))\n           :ARG1 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Sue\"~e.2)))\n   :op2 (l / love-01~e.5\n           :ARG0 (p3 / person\n                     :name (n3 / name\n                               :op1 \"Mary\"~e.7))\n           :ARG1 p))", [[0, 4], [5, 10], [11, 14], [15, 18], [19, 21], [22, 27], [28, 30], [31, 35], [35, 36]]], ["# ::snt Vera sent a baby alligator to Max and a leather dinosaur to Phyllis.\n# ::tokens [\"Vera\", \"sent\", \"a\", \"baby\", \"alligator\", \"to\", \"Max\", \"and\", \"a\", \"leather\", \"dinosaur\", \"to\", \"Phyllis\", \".\"]\n# ::lemmas [\"vera\", \"send\", \"a\", \"baby\", \"alligator\", \"to\", \"Max\", \"and\", \"a\", \"leather\", \"dinosaur\", \"to\", \"Phyllis\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1.1 4-1.2.1 6-1.3.1.1 7-1.2 9-1.2.2.1 10-1.2.2\n(s / send-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Vera\"~e.0))\n   :ARG1 (a / and~e.7\n            :op1 (a2 / alligator~e.4\n                     :mod (b / baby~e.3))\n            :op2 (d / dinosaur~e.10\n                    :mod (l / leather~e.9)))\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Max\"~e.6)))", [[0, 4], [5, 9], [10, 11], [12, 16], [17, 26], [27, 29], [30, 33], [34, 37], [38, 39], [40, 47], [48, 56], [57, 59], [60, 67], [67, 68]]], ["# ::snt Either Sam plays the bassoon or Jekyll the oboe.\n# ::tokens [\"Either\", \"Sam\", \"plays\", \"the\", \"bassoon\", \"or\", \"Jekyll\", \"the\", \"oboe\", \".\"]\n# ::lemmas [\"either\", \"Sam\", \"play\", \"the\", \"bassoon\", \"or\", \"Jekyll\", \"the\", \"oboe\", \".\"]\n# ::alignments 1-1.1.1.1.1 2-1.1 4-1.1.2 5-1 8-1.2.2\n(o / or~e.5\n   :op1 (p / play-11~e.2\n           :ARG0 (p2 / person\n                     :name (n / name\n                              :op1 \"Sam\"~e.1))\n           :ARG2 (b / bassoon~e.4))\n   :op2 (p3 / play-11\n            :ARG0 p2\n            :ARG2 (o2 / oboe~e.8)))", [[0, 6], [7, 10], [11, 16], [17, 20], [21, 28], [29, 31], [32, 38], [39, 42], [43, 47], [47, 48]]], ["# ::snt Sam doesn't play bassoon, nor Medusa oboe.\n# ::tokens [\"Sam\", \"does\", \"n't\", \"play\", \"bassoon\", \",\", \"nor\", \"Medusa\", \"oboe\", \".\"]\n# ::lemmas [\"Sam\", \"do\", \"not\", \"play\", \"bassoon\", \",\", \"nor\", \"Medusa\", \"oboe\", \".\"]\n# ::alignments 0-1.2.1.1 3-1 4-1.3.1 7-1.3.3.1.1 8-1.3.2\n(p / play-11~e.3\n   :polarity -\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Sam\"~e.0))\n   :ARG2 (o / or\n            :op1 (b / bassoon~e.4)\n            :op2 (o2 / oboe~e.8)\n            :mod (m / medical-group\n                    :name (n2 / name\n                              :op1 \"Medusa\"~e.7))))", [[0, 3], [4, 8], [8, 11], [12, 16], [17, 24], [24, 25], [26, 29], [30, 36], [37, 41], [41, 42]]], ["# ::snt Bill ate the peaches, but Harry the grapes.\n# ::tokens [\"Bill\", \"ate\", \"the\", \"peaches\", \",\", \"but\", \"Harry\", \"the\", \"grapes\", \".\"]\n# ::lemmas [\"Bill\", \"eat\", \"the\", \"peach\", \",\", \"but\", \"Harry\", \"the\", \"grape\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 3-1.1.2 5-1 6-1.2.1.1.1 8-1.2.2\n(c / contrast-01~e.5\n   :ARG1 (e / eat-01~e.1\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Bill\"~e.0))\n            :ARG1 (p2 / peache~e.3))\n   :ARG2 (e2 / eat-01\n             :ARG0 (p3 / person\n                       :name (n2 / name\n                                 :op1 \"Harry\"~e.6))\n             :ARG1 (g / grape~e.8)))", [[0, 4], [5, 8], [9, 12], [13, 20], [20, 21], [22, 25], [26, 31], [32, 35], [36, 42], [42, 43]]], ["# ::snt I no more could have stolen that steak than Jack the diamonds.\n# ::tokens [\"I\", \"no\", \"more\", \"could\", \"have\", \"stolen\", \"that\", \"steak\", \"than\", \"Jack\", \"the\", \"diamonds\", \".\"]\n# ::lemmas [\"i\", \"no\", \"more\", \"could\", \"have\", \"steal\", \"that\", \"steak\", \"than\", \"Jack\", \"the\", \"diamond\", \".\"]\n# ::alignments 0-1.1.1 1-1.1.3.1 2-1.1.3.3 4-1.1.3 5-1.1 6-1.1.2.1 7-1.1.2 9-1.1.3.4.3.1.1 10-1.1.3.4.3.1.2 11-1.1.3.4.2\n(p / possible-01\n   :ARG1 (s / steal-01~e.5\n            :ARG0 (ii / i~e.0)\n            :ARG1 (s2 / steak~e.7\n                      :mod (t / that~e.6))\n            :ARG2-of (h / have-degree-91~e.4\n                        :polarity -~e.1\n                        :ARG1 ii\n                        :ARG3 (m / more~e.2)\n                        :ARG4 (s3 / steal-01\n                                  :ARG0 ii\n                                  :ARG1 (d / diamond~e.11)\n                                  :ARG2 (p2 / person\n                                            :name (n / name\n                                                     :op1 \"Jack\"~e.9\n                                                     :op2 \"the\"~e.10\n                                                     :op3 \"Diamond\"))))))", [[0, 1], [2, 4], [5, 9], [10, 15], [16, 20], [21, 27], [28, 32], [33, 38], [39, 43], [44, 48], [49, 52], [53, 61], [61, 62]]], ["# ::snt Bill ate more peaches than Harry did grapes.\n# ::tokens [\"Bill\", \"ate\", \"more\", \"peaches\", \"than\", \"Harry\", \"did\", \"grapes\", \".\"]\n# ::lemmas [\"Bill\", \"eat\", \"more\", \"peach\", \"than\", \"Harry\", \"do\", \"grape\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 2-1.2 3-1.1.2 5-1.3.1.1.1 7-1.3.2\n(h / have-quant-91\n   :ARG1 (e / eat-01~e.1\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Bill\"~e.0))\n            :ARG1 (p2 / peache~e.3))\n   :ARG3 (m / more~e.2)\n   :ARG4 (e2 / eat-01\n             :ARG0 (p3 / person\n                       :name (n2 / name\n                                 :op1 \"Harry\"~e.5))\n             :ARG1 (g / grape~e.7)))", [[0, 4], [5, 8], [9, 13], [14, 21], [22, 26], [27, 32], [33, 36], [37, 43], [43, 44]]], ["# ::snt Bill ate the peaches and Harry did the grapes.\n# ::tokens [\"Bill\", \"ate\", \"the\", \"peaches\", \"and\", \"Harry\", \"did\", \"the\", \"grapes\", \".\"]\n# ::lemmas [\"Bill\", \"eat\", \"the\", \"peach\", \"and\", \"Harry\", \"do\", \"the\", \"grape\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 3-1.1.2 4-1 5-1.2.1.1.1 8-1.2.2\n(a / and~e.4\n   :op1 (e / eat-01~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Bill\"~e.0))\n           :ARG1 (p2 / peache~e.3))\n   :op2 (e2 / eat-01\n            :ARG0 (p3 / person\n                      :name (n2 / name\n                                :op1 \"Harry\"~e.5))\n            :ARG1 (g / grape~e.8)))", [[0, 4], [5, 8], [9, 12], [13, 20], [21, 24], [25, 30], [31, 34], [35, 38], [39, 45], [45, 46]]], ["# ::snt Tom will smoke the grass, and Reuben has the hash.\n# ::tokens [\"Tom\", \"will\", \"smoke\", \"the\", \"grass\", \",\", \"and\", \"Reuben\", \"has\", \"the\", \"hash\", \".\"]\n# ::lemmas [\"Tom\", \"will\", \"smoke\", \"the\", \"grass\", \",\", \"and\", \"Reuben\", \"have\", \"the\", \"hash\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1 4-1.1.2 6-1 7-1.2.1.1.1 8-1.2 10-1.2.2\n(a / and~e.6\n   :op1 (s / smoke-02~e.2\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Tom\"~e.0))\n           :ARG1 (g / grass~e.4))\n   :op2 (h / have-03~e.8\n           :ARG0 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Reuben\"~e.7))\n           :ARG1 (h2 / hash~e.10)))", [[0, 3], [4, 8], [9, 14], [15, 18], [19, 24], [24, 25], [26, 29], [30, 36], [37, 40], [41, 44], [45, 49], [49, 50]]], ["# ::snt If the ants were called elephants and elephants ants, I'd be able to squash an elephant.\n# ::tokens [\"If\", \"the\", \"ants\", \"were\", \"called\", \"elephants\", \"and\", \"elephants\", \"ants\", \",\", \"I\", \"'d\", \"be\", \"able\", \"to\", \"squash\", \"an\", \"elephant\", \".\"]\n# ::lemmas [\"if\", \"the\", \"ant\", \"be\", \"call\", \"elephant\", \"and\", \"elephant\", \"ant\", \",\", \"i\", \"would\", \"be\", \"able\", \"to\", \"squash\", \"an\", \"elephant\", \".\"]\n# ::alignments 2-1.2.1 4-1.2 5-1.1.2 6-1.2.2 7-1.2.2.1 10-1.1.1 15-1.1 17-1.2.2.2\n(p / possible-01\n   :ARG1 (s / squash-01~e.15\n            :ARG0 (ii / i~e.10)\n            :ARG1 (e / elephant~e.5))\n   :condition (c / call-01~e.4\n                 :ARG1 (a / ant~e.2)\n                 :ARG2 (a2 / and~e.6\n                           :op1 (e2 / elephant~e.7)\n                           :op2 (e3 / elephant~e.17))))", [[0, 2], [3, 6], [7, 11], [12, 16], [17, 23], [24, 33], [34, 37], [38, 47], [48, 52], [52, 53], [54, 55], [55, 57], [58, 60], [61, 65], [66, 68], [69, 75], [76, 78], [79, 87], [87, 88]]], ["# ::snt Simon quickly dropped the gold, and Jack the diamonds.\n# ::tokens [\"Simon\", \"quickly\", \"dropped\", \"the\", \"gold\", \",\", \"and\", \"Jack\", \"the\", \"diamonds\", \".\"]\n# ::lemmas [\"Simon\", \"quickly\", \"drop\", \"the\", \"gold\", \",\", \"and\", \"Jack\", \"the\", \"diamond\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1.3 2-1.1 4-1.1.2 6-1 9-1.2.2\n(a / and~e.6\n   :op1 (d / drop-01~e.2\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Simon\"~e.0))\n           :ARG1 (g / gold~e.4)\n           :ARG1-of (q / quick-02~e.1))\n   :op2 (d2 / drop-01\n            :ARG0 p\n            :ARG1 (d3 / diamond~e.9)\n            :ARG1-of q))", [[0, 5], [6, 13], [14, 21], [22, 25], [26, 30], [30, 31], [32, 35], [36, 40], [41, 44], [45, 53], [53, 54]]], ["# ::snt Bob tried to wash himself, and Mary to read the funnies.\n# ::tokens [\"Bob\", \"tried\", \"to\", \"wash\", \"himself\", \",\", \"and\", \"Mary\", \"to\", \"read\", \"the\", \"funnies\", \".\"]\n# ::lemmas [\"Bob\", \"try\", \"to\", \"wash\", \"himself\", \",\", \"and\", \"Mary\", \"to\", \"read\", \"the\", \"funny\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 3-1.1.2 6-1 7-1.4.1.1.1 9-1.4 11-1.4.2\n(a / and~e.6\n   :op1 (t / try-01~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Bob\"~e.0))\n           :ARG1 (w / wash-01~e.3\n                    :ARG0 p\n                    :ARG1 p))\n   :op2 t\n   :ARG0 p\n   :ARG1 (r / read-01~e.9\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Mary\"~e.7))\n            :ARG1 (f / funny-02~e.11)))", [[0, 3], [4, 9], [10, 12], [13, 17], [18, 25], [25, 26], [27, 30], [31, 35], [36, 38], [39, 43], [44, 47], [48, 55], [55, 56]]], ["# ::snt Harry told Sue that Albania is a lovely place for a vacation, and Tom told Sally that Albania is a lovely place for a vacation.\n# ::tokens [\"Harry\", \"told\", \"Sue\", \"that\", \"Albania\", \"is\", \"a\", \"lovely\", \"place\", \"for\", \"a\", \"vacation\", \",\", \"and\", \"Tom\", \"told\", \"Sally\", \"that\", \"Albania\", \"is\", \"a\", \"lovely\", \"place\", \"for\", \"a\", \"vacation\", \".\"]\n# ::lemmas [\"Harry\", \"tell\", \"Sue\", \"that\", \"Albania\", \"be\", \"a\", \"lovely\", \"place\", \"for\", \"a\", \"vacation\", \",\", \"and\", \"Tom\", \"tell\", \"Sally\", \"that\", \"Albania\", \"be\", \"a\", \"lovely\", \"place\", \"for\", \"a\", \"vacation\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 2-1.1.3.1.1 4-1.1.2.3.1.1 7-1.1.2.1 8-1.1.2 11-1.1.2.2 13-1 14-1.2.1.1.1 15-1.2 16-1.3.1.1 21-1.2.3 25-1.2.4\n(a / and~e.13\n   :op1 (t / tell-01~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Harry\"~e.0))\n           :ARG1 (p2 / place~e.8\n                     :mod (l / lovely~e.7)\n                     :purpose (v / vacation-01~e.11)\n                     :domain (c / country\n                                :name (n2 / name\n                                          :op1 \"Albania\"~e.4)))\n           :ARG2 (p3 / person\n                     :name (n3 / name\n                               :op1 \"Sue\"~e.2)))\n   :op2 (t2 / tell-01~e.15\n            :ARG0 (p4 / person\n                      :name (n4 / name\n                                :op1 \"Tom\"~e.14))\n            :ARG1 p2\n            :mod (l2 / lovely~e.21)\n            :purpose (v2 / vacation-01~e.25)\n            :domain c)\n   :ARG2 (p5 / person\n             :name (n5 / name\n                       :op1 \"Sally\"~e.16)))", [[0, 5], [6, 10], [11, 14], [15, 19], [20, 27], [28, 30], [31, 32], [33, 39], [40, 45], [46, 49], [50, 51], [52, 60], [60, 61], [62, 65], [66, 69], [70, 74], [75, 80], [81, 85], [86, 93], [94, 96], [97, 98], [99, 105], [106, 111], [112, 115], [116, 117], [118, 126], [126, 127]]], ["# ::snt Harry told Sue that Albania is a lovely place for a vacation, and Tom.\n# ::tokens [\"Harry\", \"told\", \"Sue\", \"that\", \"Albania\", \"is\", \"a\", \"lovely\", \"place\", \"for\", \"a\", \"vacation\", \",\", \"and\", \"Tom\", \".\"]\n# ::lemmas [\"Harry\", \"tell\", \"Sue\", \"that\", \"Albania\", \"be\", \"a\", \"lovely\", \"place\", \"for\", \"a\", \"vacation\", \",\", \"and\", \"Tom\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 2-1.1.3.1.1 4-1.1.2.3.1.1 7-1.1.2.1 8-1.1.2 11-1.1.2.2 13-1 14-1.2.1.1\n(a / and~e.13\n   :op1 (t / tell-01~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Harry\"~e.0))\n           :ARG1 (p2 / place~e.8\n                     :mod (l / lovely~e.7)\n                     :purpose (v / vacation-01~e.11)\n                     :domain (c / country\n                                :name (n2 / name\n                                          :op1 \"Albania\"~e.4)))\n           :ARG2 (p3 / person\n                     :name (n3 / name\n                               :op1 \"Sue\"~e.2)))\n   :op2 (p4 / person\n            :name (n4 / name\n                      :op1 \"Tom\"~e.14)))", [[0, 5], [6, 10], [11, 14], [15, 19], [20, 27], [28, 30], [31, 32], [33, 39], [40, 45], [46, 49], [50, 51], [52, 60], [60, 61], [62, 65], [66, 69], [69, 70]]], ["# ::snt Max seemed to be trying to begin to love Harriet, and Fred to be trying to begin to love Sue.\n# ::tokens [\"Max\", \"seemed\", \"to\", \"be\", \"trying\", \"to\", \"begin\", \"to\", \"love\", \"Harriet\", \",\", \"and\", \"Fred\", \"to\", \"be\", \"trying\", \"to\", \"begin\", \"to\", \"love\", \"Sue\", \".\"]\n# ::lemmas [\"Max\", \"seem\", \"to\", \"be\", \"try\", \"to\", \"begin\", \"to\", \"love\", \"Harriet\", \",\", \"and\", \"Fred\", \"to\", \"be\", \"try\", \"to\", \"begin\", \"to\", \"love\", \"Sue\", \".\"]\n# ::alignments 0-1.1.1.1.1.1 1-1.1 4-1.1.1 6-1.1.1.2 8-1.1.1.2.2 9-1.1.1.2.2.2.1.1 11-1 12-1.2.1.1.1.1 15-1.2.1 17-1.2.1.2 19-1.2.1.2.2 20-1.2.1.2.2.2.1.1\n(a / and~e.11\n   :op1 (s / seem-01~e.1\n           :ARG1 (t / try-01~e.4\n                    :ARG0 (p / person\n                             :name (n / name\n                                      :op1 \"Max\"~e.0))\n                    :ARG1 (b / begin-01~e.6\n                             :ARG0 p\n                             :ARG1 (l / love-01~e.8\n                                      :ARG0 p\n                                      :ARG1 (p2 / person\n                                                :name (n2 / name\n                                                          :op1 \"Harriet\"~e.9))))))\n   :op2 (s2 / seem-01\n            :ARG1 (t2 / try-01~e.15\n                      :ARG0 (p3 / person\n                                :name (n3 / name\n                                          :op1 \"Fred\"~e.12))\n                      :ARG1 (b2 / begin-01~e.17\n                                :ARG0 p3\n                                :ARG1 (l2 / love-01~e.19\n                                          :ARG0 p3\n                                          :ARG1 (p4 / person\n                                                    :name (n4 / name\n                                                              :op1 \"Sue\"~e.20)))))))", [[0, 3], [4, 10], [11, 13], [14, 16], [17, 23], [24, 26], [27, 32], [33, 35], [36, 40], [41, 48], [48, 49], [50, 53], [54, 58], [59, 61], [62, 64], [65, 71], [72, 74], [75, 80], [81, 83], [84, 88], [89, 92], [92, 93]]], ["# ::snt Max seemed to be trying to force Ted to leave the room, and Walt, Ira.\n# ::tokens [\"Max\", \"seemed\", \"to\", \"be\", \"trying\", \"to\", \"force\", \"Ted\", \"to\", \"leave\", \"the\", \"room\", \",\", \"and\", \"Walt\", \",\", \"Ira\", \".\"]\n# ::lemmas [\"Max\", \"seem\", \"to\", \"be\", \"try\", \"to\", \"force\", \"Ted\", \"to\", \"leave\", \"the\", \"room\", \",\", \"and\", \"Walt\", \",\", \"Ira\", \".\"]\n# ::alignments 0-1.1.1.1.1.1 1-1.1 4-1.1.1 6-1.1.1.2 7-1.1.1.2.2.1.1 9-1.1.1.2.3 11-1.1.1.2.3.2 13-1 14-1.2.3.1.1\n(a / and~e.13\n   :op1 (s / seem-01~e.1\n           :ARG1 (t / try-01~e.4\n                    :ARG0 (p / person\n                             :name (n / name\n                                      :op1 \"Max\"~e.0))\n                    :ARG1 (f / force-01~e.6\n                             :ARG0 p\n                             :ARG1 (p2 / person\n                                       :name (n2 / name\n                                                 :op1 \"Ted\"~e.7))\n                             :ARG2 (l / leave-11~e.9\n                                      :ARG0 p2\n                                      :ARG1 (r / room~e.11)))))\n   :op2 (s2 / say-01\n            :ARG0 (ii / i)\n            :ARG1 t\n            :ARG2 (p3 / person\n                      :name (n3 / name\n                                :op1 \"Walt\"~e.14))))", [[0, 3], [4, 10], [11, 13], [14, 16], [17, 23], [24, 26], [27, 32], [33, 36], [37, 39], [40, 45], [46, 49], [50, 54], [54, 55], [56, 59], [60, 64], [64, 65], [66, 69], [69, 70]]], ["# ::snt Max seemed to be trying to force Ted to leave the room, and Walt to stay a little longer.\n# ::tokens [\"Max\", \"seemed\", \"to\", \"be\", \"trying\", \"to\", \"force\", \"Ted\", \"to\", \"leave\", \"the\", \"room\", \",\", \"and\", \"Walt\", \"to\", \"stay\", \"a\", \"little\", \"longer\", \".\"]\n# ::lemmas [\"Max\", \"seem\", \"to\", \"be\", \"try\", \"to\", \"force\", \"Ted\", \"to\", \"leave\", \"the\", \"room\", \",\", \"and\", \"Walt\", \"to\", \"stay\", \"a\", \"little\", \"long\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1 4-1.1 6-1.1.2.1 7-1.1.2.1.2.1.1 9-1.1.2.1.3 11-1.1.2.1.3.2 13-1.1.2 14-1.1.2.2.2.1.1 16-1.1.2.2.3 18-1.1.2.2.3.2.2.1 19-1.1.2.2.3.2.1\n(s / seem-01~e.1\n   :ARG1 (t / try-01~e.4\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Max\"~e.0))\n            :ARG1 (a / and~e.13\n                     :op1 (f / force-01~e.6\n                             :ARG0 p\n                             :ARG1 (p2 / person\n                                       :name (n2 / name\n                                                 :op1 \"Ted\"~e.7))\n                             :ARG2 (l / leave-11~e.9\n                                      :ARG0 p2\n                                      :ARG1 (r / room~e.11)))\n                     :op2 (f2 / force-01\n                              :ARG0 p\n                              :ARG1 (p3 / person\n                                        :name (n3 / name\n                                                  :op1 \"Walt\"~e.14))\n                              :ARG2 (s2 / stay-01~e.16\n                                        :ARG1 p3\n                                        :ARG1-of (h / have-degree-91\n                                                    :ARG2 (l2 / long-03~e.19\n                                                              :ARG1 s2)\n                                                    :ARG3 (m / more\n                                                             :quant (l3 / little~e.18))))))))", [[0, 3], [4, 10], [11, 13], [14, 16], [17, 23], [24, 26], [27, 32], [33, 36], [37, 39], [40, 45], [46, 49], [50, 54], [54, 55], [56, 59], [60, 64], [65, 67], [68, 72], [73, 74], [75, 81], [82, 88], [88, 89]]], ["# ::snt Arizona elected Goldwater Senator, and Massachusetts, McCormack.\n# ::tokens [\"Arizona\", \"elected\", \"Goldwater\", \"Senator\", \",\", \"and\", \"Massachusetts\", \",\", \"McCormack\", \".\"]\n# ::lemmas [\"Arizona\", \"elect\", \"Goldwater\", \"Senator\", \",\", \"and\", \"Massachusetts\", \",\", \"McCormack\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1.1 3-1.2.1.2.1 5-1.2 6-1.2.2.2.1.1.1 8-1.2.2.1.1\n(e / elect-01~e.1\n   :ARG0 (s / state\n            :name (n / name\n                     :op1 \"Arizona\"~e.0))\n   :ARG1 (a / and~e.5\n            :op1 (p / person\n                    :name (n2 / name\n                              :op1 \"Goldwater\"~e.2)\n                    :ARG0-of (h / have-org-role-91\n                                :ARG2 (s2 / senator~e.3)))\n            :op2 (p2 / person\n                     :name (n3 / name\n                               :op1 \"McCormack\"~e.8)\n                     :ARG0-of (h2 / have-org-role-91\n                                  :ARG1 (s3 / state\n                                            :name (n4 / name\n                                                      :op1 \"Massachusetts\"~e.6))\n                                  :ARG2 s2))))", [[0, 7], [8, 15], [16, 25], [26, 33], [33, 34], [35, 38], [39, 52], [52, 53], [54, 63], [63, 64]]], ["# ::snt Millie will send the President an obscene telegram, and Paul, the Secretary a rude letter.\n# ::tokens [\"Millie\", \"will\", \"send\", \"the\", \"President\", \"an\", \"obscene\", \"telegram\", \",\", \"and\", \"Paul\", \",\", \"the\", \"Secretary\", \"a\", \"rude\", \"letter\", \".\"]\n# ::lemmas [\"Millie\", \"will\", \"send\", \"the\", \"President\", \"an\", \"obscene\", \"telegram\", \",\", \"and\", \"Paul\", \",\", \"the\", \"Secretary\", \"a\", \"rude\", \"letter\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1 4-1.1.3 6-1.1.2.1 7-1.1.2 9-1 10-1.2.3.1.1 13-1.2.3.2.1 15-1.2.2.1 16-1.2.2\n(a / and~e.9\n   :op1 (s / send-01~e.2\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Millie\"~e.0))\n           :ARG1 (t / telegram~e.7\n                    :mod (o / obscene~e.6))\n           :ARG2 (p2 / president~e.4))\n   :op2 (s2 / send-01\n            :ARG0 p\n            :ARG1 (l / letter~e.16\n                     :ARG1-of (r / rude-01~e.15))\n            :ARG2 (p3 / person\n                      :name (n2 / name\n                                :op1 \"Paul\"~e.10)\n                      :ARG0-of (h / have-org-role-91\n                                  :ARG2 (s3 / secretary~e.13)))))", [[0, 6], [7, 11], [12, 16], [17, 20], [21, 30], [31, 33], [34, 41], [42, 50], [50, 51], [52, 55], [56, 60], [60, 61], [62, 65], [66, 75], [76, 77], [78, 82], [83, 89], [89, 90]]], ["# ::snt Maytag will give a brand-new dryer to the winner of the Mrs.\n# ::tokens [\"Maytag\", \"will\", \"give\", \"a\", \"brand\", \"-\", \"new\", \"dryer\", \"to\", \"the\", \"winner\", \"of\", \"the\", \"Mrs.\"]\n# ::lemmas [\"Maytag\", \"will\", \"give\", \"a\", \"brand\", \"-\", \"new\", \"dryer\", \"to\", \"the\", \"winner\", \"of\", \"the\", \"Mrs.\"]\n# ::alignments 0-1.1.1.1 2-1 4-1.2.1.1 6-1.2.1 7-1.2 13-1.3.1.1.1.1\n(g / give-01~e.2\n   :ARG0 (c / company\n            :name (n / name\n                     :op1 \"Maytag\"~e.0))\n   :ARG1 (d / dryer~e.7\n            :ARG1-of (n2 / new-01~e.6\n                         :mod (b / brand~e.4)))\n   :ARG2 (p / person\n            :ARG0-of (w / win-01\n                        :ARG1 (p2 / prize\n                                  :name (n3 / name\n                                            :op1 \"Mrs.\"~e.13)))))", [[0, 6], [7, 11], [12, 16], [17, 18], [19, 24], [24, 25], [25, 28], [29, 34], [35, 37], [38, 41], [42, 48], [49, 51], [52, 55], [56, 60]]], ["# ::snt Bill didn't eat the peaches, nor Harry.\n# ::tokens [\"Bill\", \"did\", \"n't\", \"eat\", \"the\", \"peaches\", \",\", \"nor\", \"Harry\", \".\"]\n# ::lemmas [\"Bill\", \"do\", \"not\", \"eat\", \"the\", \"peach\", \",\", \"nor\", \"Harry\", \".\"]\n# ::alignments 0-1.1.2.1.1 3-1.1 5-1.1.3 8-1.2.2.1.1\n(a / and\n   :op1 (e / eat-01~e.3\n           :polarity -\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Bill\"~e.0))\n           :ARG1 (p2 / peach~e.5))\n   :op2 (e2 / eat-01\n            :polarity -\n            :ARG0 (p3 / person\n                      :name (n2 / name\n                                :op1 \"Harry\"~e.8))\n            :ARG1 p2))", [[0, 4], [5, 8], [8, 11], [12, 15], [16, 19], [20, 27], [27, 28], [29, 32], [33, 38], [38, 39]]], ["# ::snt Bill ate the peaches, and Harry did, too.\n# ::tokens [\"Bill\", \"ate\", \"the\", \"peaches\", \",\", \"and\", \"Harry\", \"did\", \",\", \"too\", \".\"]\n# ::lemmas [\"Bill\", \"eat\", \"the\", \"peach\", \",\", \"and\", \"Harry\", \"do\", \",\", \"too\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 3-1.1.2 5-1 6-1.2.1.1.1 9-1.2.3\n(a / and~e.5\n   :op1 (e / eat-01~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Bill\"~e.0))\n           :ARG1 (p2 / peach~e.3))\n   :op2 (e2 / eat-01\n            :ARG0 (p3 / person\n                      :name (n2 / name\n                                :op1 \"Harry\"~e.6))\n            :ARG1 p2\n            :mod (t / too~e.9)))", [[0, 4], [5, 8], [9, 12], [13, 20], [20, 21], [22, 25], [26, 31], [32, 35], [35, 36], [37, 40], [40, 41]]], ["# ::snt Bill must quickly eat the peaches, and Harry must slowly.\n# ::tokens [\"Bill\", \"must\", \"quickly\", \"eat\", \"the\", \"peaches\", \",\", \"and\", \"Harry\", \"must\", \"slowly\", \".\"]\n# ::lemmas [\"Bill\", \"must\", \"quickly\", \"eat\", \"the\", \"peach\", \",\", \"and\", \"Harry\", \"must\", \"slowly\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1.2.3 3-1.1.2 5-1.1.2.2 7-1 8-1.2.1.1.1 10-1.2.2\n(a / and~e.7\n   :op1 (o / obligate-01\n           :ARG1 (p / person\n                    :name (n / name\n                             :op1 \"Bill\"~e.0))\n           :ARG2 (e / eat-01~e.3\n                    :ARG0 p\n                    :ARG1 (p2 / peache~e.5)\n                    :ARG1-of (q / quick-02~e.2)))\n   :op2 (o2 / obligate-01\n            :ARG1 (p3 / person\n                      :name (n2 / name\n                                :op1 \"Harry\"~e.8))\n            :ARG2 (s / slow-05~e.10\n                     :ARG1 p3)))", [[0, 4], [5, 9], [10, 17], [18, 21], [22, 25], [26, 33], [33, 34], [35, 38], [39, 44], [45, 49], [50, 56], [56, 57]]], ["# ::snt Whenever Russia has made a major political blunder, the U.S. has too.\n# ::tokens [\"Whenever\", \"Russia\", \"has\", \"made\", \"a\", \"major\", \"political\", \"blunder\", \",\", \"the\", \"U.S.\", \"has\", \"too\", \".\"]\n# ::lemmas [\"whenever\", \"Russia\", \"have\", \"make\", \"a\", \"major\", \"political\", \"blunder\", \",\", \"the\", \"U.S.\", \"have\", \"too\", \".\"]\n# ::alignments 1-1.4.1.1.1 5-1.4.2 6-1.2 7-1 10-1.1.1.1 12-1.3\n(b / blunder-02~e.7\n   :ARG0 (c / country\n            :name (n / name\n                     :op1 \"U.S.\"~e.10))\n   :mod (p / politics~e.6)\n   :mod (t / too~e.12)\n   :time (b2 / blunder-02\n             :ARG0 (c2 / country\n                       :name (n2 / name\n                                 :op1 \"Russia\"~e.1))\n             :ARG1-of (m / major-02~e.5)\n             :mod p\n             :mod (a / any)))", [[0, 8], [9, 15], [16, 19], [20, 24], [25, 26], [27, 32], [33, 42], [43, 50], [50, 51], [52, 55], [56, 60], [61, 64], [65, 68], [68, 69]]], ["# ::snt Bill's story about Sue and Max's about Kathy both amazed me.\n# ::tokens [\"Bill\", \"'s\", \"story\", \"about\", \"Sue\", \"and\", \"Max\", \"'s\", \"about\", \"Kathy\", \"both\", \"amazed\", \"me\", \".\"]\n# ::lemmas [\"Bill\", \"'s\", \"story\", \"about\", \"Sue\", \"and\", \"Max\", \"'s\", \"about\", \"Kathy\", \"both\", \"amaze\", \"i\", \".\"]\n# ::alignments 0-1.1.1.1.1.1 2-1.1.1 4-1.1.1.2.1.1 5-1.1 6-1.1.2.1.1.1 9-1.1.2.2.1.1 11-1 12-1.2\n(a / amaze-01~e.11\n   :ARG0 (a2 / and~e.5\n             :op1 (s / story~e.2\n                     :poss (p / person\n                              :name (n / name\n                                       :op1 \"Bill\"~e.0))\n                     :topic (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Sue\"~e.4)))\n             :op2 (s2 / story\n                      :poss (p3 / person\n                                :name (n3 / name\n                                          :op1 \"Max\"~e.6))\n                      :topic (p4 / person\n                                 :name (n4 / name\n                                           :op1 \"Kathy\"~e.9))))\n   :ARG1 (ii / i~e.12))", [[0, 4], [4, 6], [7, 12], [13, 18], [19, 22], [23, 26], [27, 30], [30, 32], [33, 38], [39, 44], [45, 49], [50, 56], [57, 59], [59, 60]]], ["# ::snt I bought three quarts of wine and two of Clorox.\n# ::tokens [\"I\", \"bought\", \"three\", \"quarts\", \"of\", \"wine\", \"and\", \"two\", \"of\", \"Clorox\", \".\"]\n# ::lemmas [\"i\", \"buy\", \"three\", \"quart\", \"of\", \"wine\", \"and\", \"two\", \"of\", \"Clorox\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1.1 3-1.2.1.2 5-1.2.1 6-1.2 7-1.2.2.1 9-1.2.2.2.1.1\n(b / buy-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (a / and~e.6\n            :op1 (w / wine~e.5\n                    :quant 3~e.2\n                    :unit (q / quart~e.3))\n            :op2 (w2 / wine\n                     :quant 2~e.7\n                     :mod (p / product\n                             :name (n / name\n                                      :op1 \"Clorox\"~e.9))\n                     :unit (q2 / quart))))", [[0, 1], [2, 8], [9, 14], [15, 21], [22, 24], [25, 29], [30, 33], [34, 37], [38, 40], [41, 47], [47, 48]]], ["# ::snt Scientists at the South Hanoi Institute of Technology have succeeded in raising one dog with five legs, another with a cow's liver, and a third with no head.\n# ::tokens [\"Scientists\", \"at\", \"the\", \"South\", \"Hanoi\", \"Institute\", \"of\", \"Technology\", \"have\", \"succeeded\", \"in\", \"raising\", \"one\", \"dog\", \"with\", \"five\", \"legs\", \",\", \"another\", \"with\", \"a\", \"cow\", \"'s\", \"liver\", \",\", \"and\", \"a\", \"third\", \"with\", \"no\", \"head\", \".\"]\n# ::lemmas [\"scientist\", \"at\", \"the\", \"South\", \"Hanoi\", \"Institute\", \"of\", \"Technology\", \"have\", \"succeed\", \"in\", \"raise\", \"one\", \"dog\", \"with\", \"five\", \"leg\", \",\", \"another\", \"with\", \"a\", \"cow\", \"'s\", \"liver\", \",\", \"and\", \"a\", \"third\", \"with\", \"no\", \"head\", \".\"]\n# ::alignments 0-1.1 3-1.1.1.1.1 4-1.1.1.1.2 5-1.1.1.1.3 6-1.1.1.1.4 7-1.1.1.1.5 8-1.2.2.1.2 9-1 11-1.2 12-1.2.2.1.1 13-1.2.2.1 15-1.2.2.1.2.1.1 16-1.2.2.1.2.1 18-1.2.2.2.1 21-1.2.2.2.2.1.1 23-1.2.2.2.2.1 25-1.2.2 29-1.2.2.3.2.1 30-1.2.2.3.2.2\n(s / succeed-01~e.9\n   :ARG0 (s2 / scientist~e.0\n             :location (r / research-institute\n                          :name (n / name\n                                   :op1 \"South\"~e.3\n                                   :op2 \"Hanoi\"~e.4\n                                   :op3 \"Institute\"~e.5\n                                   :op4 \"of\"~e.6\n                                   :op5 \"Technology\"~e.7)))\n   :ARG1 (r2 / raise-03~e.11\n             :ARG0 s2\n             :ARG1 (a / and~e.25\n                      :op1 (d / dog~e.13\n                              :quant 1~e.12\n                              :ARG0-of (h / have-03~e.8\n                                          :ARG1 (l / leg~e.16\n                                                   :quant 5~e.15)))\n                      :op2 (d2 / dog\n                               :mod (a2 / another~e.18)\n                               :ARG0-of (h2 / have-03\n                                            :ARG1 (l2 / liver~e.23\n                                                      :part-of (c / cow~e.21))))\n                      :op3 (d3 / dog\n                               :quant 3\n                               :ARG0-of (h3 / have-03\n                                            :polarity -~e.29\n                                            :ARG1 (h4 / head~e.30))))))", [[0, 10], [11, 13], [14, 17], [18, 23], [24, 29], [30, 39], [40, 42], [43, 53], [54, 58], [59, 68], [69, 71], [72, 79], [80, 83], [84, 87], [88, 92], [93, 97], [98, 102], [102, 103], [104, 111], [112, 116], [117, 118], [119, 122], [122, 124], [125, 130], [130, 131], [132, 135], [136, 137], [138, 143], [144, 148], [149, 151], [152, 156], [156, 157]]], ["# ::snt Bill's story about Sue may be amazing, but Max's is virtually incredible.\n# ::tokens [\"Bill\", \"'s\", \"story\", \"about\", \"Sue\", \"may\", \"be\", \"amazing\", \",\", \"but\", \"Max\", \"'s\", \"is\", \"virtually\", \"incredible\", \".\"]\n# ::lemmas [\"Bill\", \"'s\", \"story\", \"about\", \"Sue\", \"may\", \"be\", \"amazing\", \",\", \"but\", \"Max\", \"'s\", \"be\", \"virtually\", \"incredible\", \".\"]\n# ::alignments 0-1.1.1.1.1.1.1 2-1.1.1.1 4-1.1.1.1.2.1.1 7-1.1.1 9-1 10-1.2.1.1.1.1 13-1.2.2\n(c / contrast-01~e.9\n   :ARG1 (p / possible-01\n            :ARG1 (a / amaze-01~e.7\n                     :ARG0 (s / story~e.2\n                              :poss (p2 / person\n                                        :name (n / name\n                                                 :op1 \"Bill\"~e.0))\n                              :topic (p3 / person\n                                         :name (n2 / name\n                                                   :op1 \"Sue\"~e.4)))))\n   :ARG2 (a2 / amaze-01\n             :ARG0 (s2 / story\n                       :poss (p4 / person\n                                 :name (n3 / name\n                                           :op1 \"Max\"~e.10)))\n             :mod (v / virtual~e.13)))", [[0, 4], [4, 6], [7, 12], [13, 18], [19, 22], [23, 26], [27, 29], [30, 37], [37, 38], [39, 42], [43, 46], [46, 48], [49, 51], [52, 61], [62, 72], [72, 73]]], ["# ::snt I like Bill's yellow shirt, but not Max's.\n# ::tokens [\"I\", \"like\", \"Bill\", \"'s\", \"yellow\", \"shirt\", \",\", \"but\", \"not\", \"Max\", \"'s\", \".\"]\n# ::lemmas [\"i\", \"like\", \"Bill\", \"'s\", \"yellow\", \"shirt\", \",\", \"but\", \"not\", \"Max\", \"'s\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1.1.2.2.1.1 4-1.1.2.1 5-1.1.2 7-1 8-1.2.1 9-1.2.3.1.1.1\n(c / contrast-01~e.7\n   :ARG1 (l / like-01~e.1\n            :ARG0 (ii / i~e.0)\n            :ARG1 (s / shirt~e.5\n                     :ARG1-of (y / yellow-02~e.4)\n                     :poss (p / person\n                              :name (n / name\n                                       :op1 \"Bill\"~e.2))))\n   :ARG2 (l2 / like-01\n             :polarity -~e.8\n             :ARG0 ii\n             :ARG1 (s2 / shirt\n                       :poss (p2 / person\n                                 :name (n2 / name\n                                           :op1 \"Max\"~e.9)))))", [[0, 1], [2, 6], [7, 11], [11, 13], [14, 20], [21, 26], [26, 27], [28, 31], [32, 35], [36, 39], [39, 41], [41, 42]]], ["# ::snt Bill's funny story about Sue and Max's boring one about Kathy both amazed me.\n# ::tokens [\"Bill\", \"'s\", \"funny\", \"story\", \"about\", \"Sue\", \"and\", \"Max\", \"'s\", \"boring\", \"one\", \"about\", \"Kathy\", \"both\", \"amazed\", \"me\", \".\"]\n# ::lemmas [\"Bill\", \"'s\", \"funny\", \"story\", \"about\", \"Sue\", \"and\", \"Max\", \"'s\", \"boring\", \"one\", \"about\", \"Kathy\", \"both\", \"amaze\", \"i\", \".\"]\n# ::alignments 0-1.1.2.1.1 2-1.1.1 3-1.1 5-1.1.3.1.1.1.1 6-1.1.3 7-1.1.3.2.1.1.1 12-1.1.3.2.2.1.1 14-1 15-1.2\n(a / amaze-01~e.14\n   :ARG0 (s / story~e.3\n            :mod (f / funny~e.2)\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Bill\"~e.0))\n            :topic (a2 / and~e.6\n                       :op1 (s2 / story\n                                :topic (p2 / person\n                                           :name (n2 / name\n                                                     :op1 \"Sue\"~e.5)))\n                       :op2 (s3 / story\n                                :topic (p3 / person\n                                           :name (n3 / name\n                                                     :op1 \"Max\"~e.7))\n                                :topic (p4 / person\n                                           :name (n4 / name\n                                                     :op1 \"Kathy\"~e.12)))))\n   :ARG1 (ii / i~e.15))", [[0, 4], [4, 6], [7, 12], [13, 18], [19, 24], [25, 28], [29, 32], [33, 36], [36, 38], [39, 45], [46, 49], [50, 55], [56, 61], [62, 66], [67, 73], [74, 76], [76, 77]]], ["# ::snt Bill's wine from France and Ted's from California cannot be compared.\n# ::tokens [\"Bill\", \"'s\", \"wine\", \"from\", \"France\", \"and\", \"Ted\", \"'s\", \"from\", \"California\", \"can\", \"not\", \"be\", \"compared\", \".\"]\n# ::lemmas [\"Bill\", \"'s\", \"wine\", \"from\", \"France\", \"and\", \"Ted\", \"'s\", \"from\", \"California\", \"can\", \"not\", \"be\", \"compare\", \".\"]\n# ::alignments 0-1.2.1.2.1.1 2-1.2.1 4-1.2.1.1.1.1 6-1.2.2.2.1.1 9-1.2.2.1.1.1 11-1.1 13-1.2\n(p / possible-01\n   :polarity -~e.11\n   :ARG1 (c / compare-01~e.13\n            :ARG1 (w / wine~e.2\n                     :source (c2 / country\n                                 :name (n / name\n                                          :op1 \"France\"~e.4))\n                     :poss (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Bill\"~e.0)))\n            :ARG2 (w2 / wine\n                      :source (s / state\n                                 :name (n3 / name\n                                           :op1 \"California\"~e.9))\n                      :poss (p3 / person\n                                :name (n4 / name\n                                          :op1 \"Ted\"~e.6)))))", [[0, 4], [4, 6], [7, 11], [12, 16], [17, 23], [24, 27], [28, 31], [31, 33], [34, 38], [39, 49], [50, 53], [53, 56], [57, 59], [60, 68], [68, 69]]], ["# ::snt As a teacher, you have to deal simultaneously with the administration's pressure on you to succeed, and the children's to be a nice guy.\n# ::tokens [\"As\", \"a\", \"teacher\", \",\", \"you\", \"have\", \"to\", \"deal\", \"simultaneously\", \"with\", \"the\", \"administration\", \"'s\", \"pressure\", \"on\", \"you\", \"to\", \"succeed\", \",\", \"and\", \"the\", \"children\", \"'s\", \"to\", \"be\", \"a\", \"nice\", \"guy\", \".\"]\n# ::lemmas [\"as\", \"a\", \"teacher\", \",\", \"you\", \"have\", \"to\", \"deal\", \"simultaneously\", \"with\", \"the\", \"administration\", \"'s\", \"pressure\", \"on\", \"you\", \"to\", \"succeed\", \",\", \"and\", \"the\", \"child\", \"'s\", \"to\", \"be\", \"a\", \"nice\", \"guy\", \".\"]\n# ::alignments 2-1.1.1.1 4-1.1.1 5-1.2.2.1 7-1.1.2 8-1.1.2.3 11-1.1.2.2.1.1 13-1.1.2.2 17-1.1.2.2.3 19-1 21-1.2.2.1.1 26-1.2.1 27-1.2\n(a / and~e.19\n   :op1 (o / obligate-01\n           :ARG1 (y / you~e.4\n                    :ARG0-of (t / teach-01~e.2))\n           :ARG2 (d / deal-01~e.7\n                    :ARG0 y\n                    :ARG2 (p / pressure-01~e.13\n                             :ARG0 (g / government-organization\n                                      :ARG0-of (a2 / administrate-01~e.11))\n                             :ARG1 y\n                             :ARG2 (s / succeed-01~e.17\n                                      :ARG0 y))\n                    :mod (s2 / simultaneous~e.8)))\n   :op2 (g2 / guy~e.27\n            :ARG1-of (n / nice-01~e.26)\n            :domain (p2 / person\n                        :ARG0-of (h / have-rel-role-91~e.5\n                                    :ARG2 (c / child~e.21)))))", [[0, 2], [3, 4], [5, 12], [12, 13], [14, 17], [18, 22], [23, 25], [26, 30], [31, 45], [46, 50], [51, 54], [55, 69], [69, 71], [72, 80], [81, 83], [84, 87], [88, 90], [91, 98], [98, 99], [100, 103], [104, 107], [108, 116], [116, 118], [119, 121], [122, 124], [125, 126], [127, 131], [132, 135], [135, 136]]], ["# ::snt Neither Von Karajan's recording of Beethoven's 6th on Columbia nor Klemperer's on Angel has the right tempo.\n# ::tokens [\"Neither\", \"Von\", \"Karajan\", \"'s\", \"recording\", \"of\", \"Beethoven\", \"'s\", \"6th\", \"on\", \"Columbia\", \"nor\", \"Klemperer\", \"'s\", \"on\", \"Angel\", \"has\", \"the\", \"right\", \"tempo\", \".\"]\n# ::lemmas [\"neither\", \"Von\", \"Karajan\", \"'s\", \"recording\", \"of\", \"Beethoven\", \"'s\", \"6th\", \"on\", \"Columbia\", \"nor\", \"Klemperer\", \"'s\", \"on\", \"Angel\", \"have\", \"the\", \"right\", \"tempo\", \".\"]\n# ::alignments 1-1.2.1.1.1.1 2-1.2.1.1.1.2 4-1.2.1 6-1.2.1.2.2.1.1.1 10-1.2.1.3.1.1 12-1.2.2.1.1.1 15-1.2.2.3.1 16-1 18-1.3.1 19-1.3\n(h / have-03~e.16\n   :polarity -\n   :ARG0 (a / and\n            :op1 (r / record-01~e.4\n                    :ARG0 (p / person\n                             :name (n / name\n                                      :op1 \"Von\"~e.1\n                                      :op2 \"Karajan\"~e.2))\n                    :ARG1 (m / music\n                             :ord (o / ordinal-entity\n                                     :value 6)\n                             :ARG1-of (c / compose-02\n                                         :ARG0 (p2 / person\n                                                   :name (n2 / name\n                                                             :op1 \"Beethoven\"~e.6))))\n                    :medium (c2 / company\n                                :name (n3 / name\n                                          :op1 \"Columbia\"~e.10)))\n            :op2 (r2 / record-01\n                     :ARG0 (p3 / person\n                               :name (n4 / name\n                                         :op1 \"Klemperer\"~e.12))\n                     :ARG1 m\n                     :name (n5 / name\n                               :op1 \"Angel\"~e.15)))\n   :ARG1 (t / tempo~e.19\n            :ARG1-of (r3 / right-06~e.18)))", [[0, 7], [8, 11], [12, 19], [19, 21], [22, 31], [32, 34], [35, 44], [44, 46], [47, 50], [51, 53], [54, 62], [63, 66], [67, 76], [76, 78], [79, 81], [82, 87], [88, 91], [92, 95], [96, 101], [102, 107], [107, 108]]], ["# ::snt Gould's performance of Bach on the piano doesn't please me anywhere as much as Ross's on the harpsichord.\n# ::tokens [\"Gould\", \"'s\", \"performance\", \"of\", \"Bach\", \"on\", \"the\", \"piano\", \"does\", \"n't\", \"please\", \"me\", \"anywhere\", \"as\", \"much\", \"as\", \"Ross\", \"'s\", \"on\", \"the\", \"harpsichord\", \".\"]\n# ::lemmas [\"Gould\", \"'s\", \"performance\", \"of\", \"Bach\", \"on\", \"the\", \"piano\", \"do\", \"not\", \"please\", \"i\", \"anywhere\", \"as\", \"much\", \"as\", \"Ross\", \"'s\", \"on\", \"the\", \"harpsichord\", \".\"]\n# ::alignments 0-1.2.1.1.1 2-1.2 4-1.2.2.1.1 7-1.2.3 10-1 11-1.3 12-1.4 16-1.5.2.1.1.1 20-1.5.2.2\n(p / please-01~e.10\n   :polarity -\n   :ARG0 (p2 / perform-01~e.2\n             :ARG0 (p3 / person\n                       :name (n / name\n                                :op1 \"Gould\"~e.0))\n             :ARG1 (m / music\n                      :name (n2 / name\n                                :op1 \"Bach\"~e.4))\n             :medium (p4 / piano~e.7))\n   :ARG1 (ii / i~e.11)\n   :location (a / anywhere~e.12)\n   :ARG1-of (h / have-quant-91\n               :ARG3 (e / equal)\n               :ARG4 (p5 / perform-01\n                         :ARG0 (p6 / person\n                                   :name (n3 / name\n                                             :op1 \"Ross\"~e.16))\n                         :medium (h2 / harpsichord~e.20))))", [[0, 5], [5, 7], [8, 19], [20, 22], [23, 27], [28, 30], [31, 34], [35, 40], [41, 45], [45, 48], [49, 55], [56, 58], [59, 67], [68, 70], [71, 75], [76, 78], [79, 83], [83, 85], [86, 88], [89, 92], [93, 104], [104, 105]]], ["# ::snt Tom's dog with one eye attacked Frank's with three legs.\n# ::tokens [\"Tom\", \"'s\", \"dog\", \"with\", \"one\", \"eye\", \"attacked\", \"Frank\", \"'s\", \"with\", \"three\", \"legs\", \".\"]\n# ::lemmas [\"Tom\", \"'s\", \"dog\", \"with\", \"one\", \"eye\", \"attack\", \"Frank\", \"'s\", \"with\", \"three\", \"leg\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1 4-1.1.2.1 5-1.1.2 6-1 7-1.2.1.1.1 10-1.2.2.1 11-1.2.2\n(a / attack-01~e.6\n   :ARG0 (d / dog~e.2\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Tom\"~e.0))\n            :part (e / eye~e.5\n                     :quant 1~e.4))\n   :ARG1 (d2 / dog\n             :poss (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Frank\"~e.7))\n             :part (l / leg~e.11\n                      :quant 3~e.10))\n   :instrument e)", [[0, 3], [3, 5], [6, 9], [10, 14], [15, 18], [19, 22], [23, 31], [32, 37], [37, 39], [40, 44], [45, 50], [51, 55], [55, 56]]], ["# ::snt Because Steve's of a spider's eye had been stolen, I borrowed Fred's diagram of a snake's fang.\n# ::tokens [\"Because\", \"Steve\", \"'s\", \"of\", \"a\", \"spider\", \"'s\", \"eye\", \"had\", \"been\", \"stolen\", \",\", \"I\", \"borrowed\", \"Fred\", \"'s\", \"diagram\", \"of\", \"a\", \"snake\", \"'s\", \"fang\", \".\"]\n# ::lemmas [\"because\", \"Steve\", \"'s\", \"of\", \"a\", \"spider\", \"'s\", \"eye\", \"have\", \"be\", \"steal\", \",\", \"i\", \"borrow\", \"Fred\", \"'s\", \"diagram\", \"of\", \"a\", \"snake\", \"'s\", \"fang\", \".\"]\n# ::alignments 0-1.3 1-1.3.1.1.1.1.1 5-1.3.1.1.2.1 7-1.3.1.1 10-1.3.1 12-1.1 13-1 14-1.2.1.1.1 16-1.2 19-1.2.2.1 21-1.2.2\n(b / borrow-01~e.13\n   :ARG0 (ii / i~e.12)\n   :ARG1 (d / diagram~e.16\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Fred\"~e.14))\n            :poss (f / fang~e.21\n                     :poss (s / snake~e.19)))\n   :ARG1-of (c / cause-01~e.0\n               :ARG0 (s2 / steal-01~e.10\n                         :ARG1 (e / eye~e.7\n                                  :part-of (p2 / person\n                                               :name (n2 / name\n                                                         :op1 \"Steve\"~e.1))\n                                  :part-of (e2 / eye\n                                               :part-of (s3 / spider~e.5))))))", [[0, 7], [8, 13], [13, 15], [16, 18], [19, 20], [21, 27], [27, 29], [30, 33], [34, 37], [38, 42], [43, 49], [49, 50], [51, 52], [53, 61], [62, 66], [66, 68], [69, 76], [77, 79], [80, 81], [82, 87], [87, 89], [90, 94], [94, 95]]], ["# ::snt Neither von Karajan's recording of Beethoven's 6th on Columbia nor Klemperer's has the right tempo.\n# ::tokens [\"Neither\", \"von\", \"Karajan\", \"'s\", \"recording\", \"of\", \"Beethoven\", \"'s\", \"6th\", \"on\", \"Columbia\", \"nor\", \"Klemperer\", \"'s\", \"has\", \"the\", \"right\", \"tempo\", \".\"]\n# ::lemmas [\"neither\", \"von\", \"Karajan\", \"'s\", \"recording\", \"of\", \"Beethoven\", \"'s\", \"6th\", \"on\", \"Columbia\", \"nor\", \"Klemperer\", \"'s\", \"have\", \"the\", \"right\", \"tempo\", \".\"]\n# ::alignments 1-1.2.1.1.1.1 2-1.2.1.1.1.2 4-1.2.1 6-1.2.1.2.2.1.1.1 10-1.2.1.3.1.1 12-1.2.2.1.1.1 14-1 16-1.3.1 17-1.3\n(h / have-03~e.14\n   :polarity -\n   :ARG0 (a / and\n            :op1 (r / record-01~e.4\n                    :ARG0 (p / person\n                             :name (n / name\n                                      :op1 \"von\"~e.1\n                                      :op2 \"Karajan\"~e.2))\n                    :ARG1 (m / music\n                             :ord (o / ordinal-entity\n                                     :value 6)\n                             :ARG1-of (c / compose-02\n                                         :ARG0 (p2 / person\n                                                   :name (n2 / name\n                                                             :op1 \"Beethoven\"~e.6))))\n                    :medium (c2 / company\n                                :name (n3 / name\n                                          :op1 \"Columbia\"~e.10)))\n            :op2 (r2 / record-01\n                     :ARG0 (p3 / person\n                               :name (n4 / name\n                                         :op1 \"Klemperer\"~e.12))\n                     :ARG1 m\n                     :medium c2))\n   :ARG1 (t / tempo~e.17\n            :ARG1-of (r3 / right-06~e.16)))", [[0, 7], [8, 11], [12, 19], [19, 21], [22, 31], [32, 34], [35, 44], [44, 46], [47, 50], [51, 53], [54, 62], [63, 66], [67, 76], [76, 78], [79, 82], [83, 86], [87, 92], [93, 98], [98, 99]]], ["# ::snt Tom's dog with one eye attacked Fred's.\n# ::tokens [\"Tom\", \"'s\", \"dog\", \"with\", \"one\", \"eye\", \"attacked\", \"Fred\", \"'s\", \".\"]\n# ::lemmas [\"Tom\", \"'s\", \"dog\", \"with\", \"one\", \"eye\", \"attack\", \"Fred\", \"'s\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1 4-1.1.2.1 5-1.1.2 6-1 7-1.2.1.1.1\n(a / attack-01~e.6\n   :ARG0 (d / dog~e.2\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Tom\"~e.0))\n            :instrument (e / eye~e.5\n                           :quant 1~e.4))\n   :ARG1 (d2 / dog\n             :poss (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Fred\"~e.7))))", [[0, 3], [3, 5], [6, 9], [10, 14], [15, 18], [19, 22], [23, 31], [32, 36], [36, 38], [38, 39]]], ["# ::snt I borrowed Fred's diagram of a snake's eye because Steve's had been stolen.\n# ::tokens [\"I\", \"borrowed\", \"Fred\", \"'s\", \"diagram\", \"of\", \"a\", \"snake\", \"'s\", \"eye\", \"because\", \"Steve\", \"'s\", \"had\", \"been\", \"stolen\", \".\"]\n# ::lemmas [\"i\", \"borrow\", \"Fred\", \"'s\", \"diagram\", \"of\", \"a\", \"snake\", \"'s\", \"eye\", \"because\", \"Steve\", \"'s\", \"have\", \"be\", \"steal\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1.1.1 4-1.2 7-1.2.2.1 9-1.2.2 10-1.3 11-1.3.1.1.1.1.1 15-1.3.1\n(b / borrow-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (d / diagram~e.4\n            :poss (p / person\n                     :name (n / name\n                              :op1 \"Fred\"~e.2))\n            :poss (e / eye~e.9\n                     :part-of (s / snake~e.7)))\n   :ARG1-of (c / cause-01~e.10\n               :ARG0 (s2 / steal-01~e.15\n                         :ARG1 (d2 / diagram\n                                   :poss (p2 / person\n                                             :name (n2 / name\n                                                       :op1 \"Steve\"~e.11))))))", [[0, 1], [2, 10], [11, 15], [15, 17], [18, 25], [26, 28], [29, 30], [31, 36], [36, 38], [39, 42], [43, 50], [51, 56], [56, 58], [59, 62], [63, 67], [68, 74], [74, 75]]], ["# ::snt Jerry attempted to blow up the Pentagon.\n# ::tokens [\"Jerry\", \"attempted\", \"to\", \"blow\", \"up\", \"the\", \"Pentagon\", \".\"]\n# ::lemmas [\"Jerry\", \"attempt\", \"to\", \"blow\", \"up\", \"the\", \"Pentagon\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 6-1.2.2.1.1\n(a / attempt-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Jerry\"~e.0))\n   :ARG1 (b / blow-up-06~e.3\n            :ARG0 p\n            :ARG1 (g / government-organization\n                     :name (n2 / name\n                               :op1 \"Pentagon\"~e.6))))", [[0, 5], [6, 15], [16, 18], [19, 23], [24, 26], [27, 30], [31, 39], [39, 40]]], ["# ::snt So fast did he run that nobody could catch him.\n# ::tokens [\"So\", \"fast\", \"did\", \"he\", \"run\", \"that\", \"nobody\", \"could\", \"catch\", \"him\", \".\"]\n# ::lemmas [\"so\", \"fast\", \"do\", \"he\", \"run\", \"that\", \"nobody\", \"could\", \"catch\", \"he\", \".\"]\n# ::alignments 0-1.2.2 1-1.2.1 3-1.1 4-1 6-1.2.3.2.1 8-1.2.3.2\n(r / run-02~e.4\n   :ARG0 (h / he~e.3)\n   :ARG1-of (h2 / have-degree-91\n                :ARG2 (f / fast-02~e.1\n                         :ARG1 r)\n                :ARG3 (s / so~e.0)\n                :ARG6 (p / possible-01\n                         :polarity -\n                         :ARG1 (c / catch-01~e.8\n                                  :ARG0 (n / nobody~e.6)\n                                  :ARG1 h))))", [[0, 2], [3, 7], [8, 11], [12, 14], [15, 18], [19, 23], [24, 30], [31, 36], [37, 42], [43, 46], [46, 47]]], ["# ::snt Bill bought a red house, and Max bought one too.\n# ::tokens [\"Bill\", \"bought\", \"a\", \"red\", \"house\", \",\", \"and\", \"Max\", \"bought\", \"one\", \"too\", \".\"]\n# ::lemmas [\"Bill\", \"buy\", \"a\", \"red\", \"house\", \",\", \"and\", \"Max\", \"buy\", \"one\", \"too\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 3-1.1.2.1 4-1.1.2 6-1 7-1.2.1.1.1 8-1.2 10-1.2.3\n(a / and~e.6\n   :op1 (b / buy-01~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Bill\"~e.0))\n           :ARG1 (h / house~e.4\n                    :ARG1-of (r / red-02~e.3)))\n   :op2 (b2 / buy-01~e.8\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Max\"~e.7))\n            :ARG1 (h2 / house)\n            :mod (t / too~e.10)))", [[0, 4], [5, 11], [12, 13], [14, 17], [18, 23], [23, 24], [25, 28], [29, 32], [33, 39], [40, 43], [44, 47], [47, 48]]], ["# ::snt Who always drinks milk?\n# ::tokens [\"Who\", \"always\", \"drinks\", \"milk\", \"?\"]\n# ::lemmas [\"who\", \"always\", \"drink\", \"milk\", \"?\"]\n# ::alignments 1-1.3 2-1 3-1.2\n(d / drink-01~e.2\n   :ARG0 (a / amr-unknown)\n   :ARG1 (m / milk~e.3)\n   :time (a2 / always~e.1))", [[0, 3], [4, 10], [11, 17], [18, 22], [22, 23]]], ["# ::snt The book which inspired them was very long.\n# ::tokens [\"The\", \"book\", \"which\", \"inspired\", \"them\", \"was\", \"very\", \"long\", \".\"]\n# ::lemmas [\"the\", \"book\", \"which\", \"inspire\", \"they\", \"be\", \"very\", \"long\", \".\"]\n# ::alignments 1-1.1 3-1.1.1 4-1.1.1.1 6-1.2 7-1\n(l / long-03~e.7\n   :ARG1 (b / book~e.1\n            :ARG0-of (ii / inspire-01~e.3\n                         :ARG1 (t / they~e.4)))\n   :degree (v / very~e.6))", [[0, 3], [4, 8], [9, 14], [15, 23], [24, 28], [29, 32], [33, 37], [38, 42], [42, 43]]], ["# ::snt The book what inspired them was very long.\n# ::tokens [\"The\", \"book\", \"what\", \"inspired\", \"them\", \"was\", \"very\", \"long\", \".\"]\n# ::lemmas [\"the\", \"book\", \"what\", \"inspire\", \"they\", \"be\", \"very\", \"long\", \".\"]\n# ::alignments 1-1.1 3-1.1.1 4-1.1.1.1 6-1.2 7-1\n(l / long-03~e.7\n   :ARG1 (b / book~e.1\n            :ARG0-of (ii / inspire-01~e.3\n                         :ARG1 (t / they~e.4)))\n   :degree (v / very~e.6))", [[0, 3], [4, 8], [9, 13], [14, 22], [23, 27], [28, 31], [32, 36], [37, 41], [41, 42]]], ["# ::snt I know the person whose mother died.\n# ::tokens [\"I\", \"know\", \"the\", \"person\", \"whose\", \"mother\", \"died\", \".\"]\n# ::lemmas [\"i\", \"know\", \"the\", \"person\", \"whose\", \"mother\", \"die\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 5-1.2.2.2 6-1.2.1\n(k / know-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person~e.3\n            :ARG1-of (d / die-01~e.6)\n            :ARG0-of (h / have-rel-role-91\n                        :ARG1 (p2 / person)\n                        :ARG2 (m / mother~e.5))))", [[0, 1], [2, 6], [7, 10], [11, 17], [18, 23], [24, 30], [31, 35], [35, 36]]], ["# ::snt The person whose mother's dog we were all fond of.\n# ::tokens [\"The\", \"person\", \"whose\", \"mother\", \"'s\", \"dog\", \"we\", \"were\", \"all\", \"fond\", \"of\", \".\"]\n# ::lemmas [\"the\", \"person\", \"whose\", \"mother\", \"'s\", \"dog\", \"we\", \"be\", \"all\", \"fond\", \"of\", \".\"]\n# ::alignments 1-1 3-1.2.1.1.2 5-1.2 6-1.1.1 8-1.1.1.1 9-1.1\n(p / person~e.1\n   :ARG1-of (f / fond-01~e.9\n               :ARG0 (w / we~e.6\n                        :mod (a / all~e.8)))\n   :consist-of (d / dog~e.5\n                  :poss (p2 / person\n                            :ARG0-of (h / have-rel-role-91\n                                        :ARG1 w\n                                        :ARG2 (m / mother~e.3)))))", [[0, 3], [4, 10], [11, 16], [17, 23], [23, 25], [26, 29], [30, 32], [33, 37], [38, 41], [42, 46], [47, 49], [49, 50]]], ["# ::snt I wonder whose mother died.\n# ::tokens [\"I\", \"wonder\", \"whose\", \"mother\", \"died\", \".\"]\n# ::lemmas [\"i\", \"wonder\", \"whose\", \"mother\", \"die\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.2.1 4-1.2.1\n(w / wonder-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person\n            :ARG1-of (d / die-01~e.4)\n            :ARG0-of (h / have-rel-role-91\n                        :ARG2 (m / mother~e.3))))", [[0, 1], [2, 8], [9, 14], [15, 21], [22, 26], [26, 27]]], ["# ::snt I wonder whose mother's dog died.\n# ::tokens [\"I\", \"wonder\", \"whose\", \"mother\", \"'s\", \"dog\", \"died\", \".\"]\n# ::lemmas [\"i\", \"wonder\", \"whose\", \"mother\", \"'s\", \"dog\", \"die\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1.1.1.2 5-1.2.1 6-1.2\n(w / wonder-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (d / die-01~e.6\n            :ARG1 (d2 / dog~e.5\n                      :poss (p / person\n                               :ARG0-of (h / have-rel-role-91\n                                           :ARG1 ii\n                                           :ARG2 (m / mother~e.3))))))", [[0, 1], [2, 8], [9, 14], [15, 21], [21, 23], [24, 27], [28, 32], [32, 33]]], ["# ::snt I wonder to whom they dedicated the building.\n# ::tokens [\"I\", \"wonder\", \"to\", \"whom\", \"they\", \"dedicated\", \"the\", \"building\", \".\"]\n# ::lemmas [\"i\", \"wonder\", \"to\", \"whom\", \"they\", \"dedicate\", \"the\", \"building\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2.1.1 5-1.2.1 7-1.2.1.2\n(w / wonder-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (t / thing\n            :ARG2-of (d / dedicate-01~e.5\n                        :ARG0 (t2 / they~e.4)\n                        :ARG1 (b / building~e.7))))", [[0, 1], [2, 8], [9, 11], [12, 16], [17, 21], [22, 31], [32, 35], [36, 44], [44, 45]]], ["# ::snt Give me the phone number of the person whose mother's dog died.\n# ::tokens [\"Give\", \"me\", \"the\", \"phone\", \"number\", \"of\", \"the\", \"person\", \"whose\", \"mother\", \"'s\", \"dog\", \"died\", \".\"]\n# ::lemmas [\"give\", \"i\", \"the\", \"phone\", \"number\", \"of\", \"the\", \"person\", \"whose\", \"mother\", \"'s\", \"dog\", \"die\", \".\"]\n# ::alignments 0-1 1-1.4 3-1.3.1 4-1.3 7-1.3.2 9-1.3.2.1.1.1.1.1.2 11-1.3.2.1.1.1 12-1.3.2.1\n(g / give-01~e.0\n   :mode imperative\n   :ARG0 (y / you)\n   :ARG1 (n / number~e.4\n            :mod (p / phone~e.3)\n            :poss (p2 / person~e.7\n                      :ARG1-of (d / die-01~e.12\n                                  :ARG1-of (c / cause-01\n                                              :ARG0 (d2 / dog~e.11\n                                                        :poss (p3 / person\n                                                                  :ARG0-of (h / have-rel-role-91\n                                                                              :ARG1 p2\n                                                                              :ARG2 (m / mother~e.9))))))))\n   :ARG2 (ii / i~e.1))", [[0, 4], [5, 7], [8, 11], [12, 17], [18, 24], [25, 27], [28, 31], [32, 38], [39, 44], [45, 51], [51, 53], [54, 57], [58, 62], [62, 63]]], ["# ::snt This is the senator to whose mother's friend's sister's I sent the letter.\n# ::tokens [\"This\", \"is\", \"the\", \"senator\", \"to\", \"whose\", \"mother\", \"'s\", \"friend\", \"'s\", \"sister\", \"'s\", \"I\", \"sent\", \"the\", \"letter\", \".\"]\n# ::lemmas [\"this\", \"be\", \"the\", \"senator\", \"to\", \"whose\", \"mother\", \"'s\", \"friend\", \"'s\", \"sister\", \"'s\", \"i\", \"send\", \"the\", \"letter\", \".\"]\n# ::alignments 0-1.2 3-1.1.1 8-1.5.1.1.1.2 10-1.5.1.2 12-1.3.1 13-1.3 15-1.3.2\n(p / person\n   :ARG0-of (h / have-org-role-91\n               :ARG2 (s / senator~e.3))\n   :domain (t / this~e.0)\n   :ARG2-of (s2 / send-01~e.13\n                :ARG0 (ii / i~e.12)\n                :ARG1 (l / letter~e.15))\n   :ARG1-of (h2 / have-org-role-91\n                :ARG0 (p2 / person\n                          :mod t))\n   :ARG2 (p3 / person\n             :ARG0-of (h3 / have-rel-role-91\n                          :ARG1 (p4 / person\n                                    :ARG0-of (h4 / have-rel-role-91\n                                                 :ARG1 (p5 / person)\n                                                 :ARG2 (f / friend~e.8)))\n                          :ARG2 (s3 / sister~e.10))))", [[0, 4], [5, 7], [8, 11], [12, 19], [20, 22], [23, 28], [29, 35], [35, 37], [38, 44], [44, 46], [47, 53], [53, 55], [56, 57], [58, 62], [63, 66], [67, 73], [73, 74]]], ["# ::snt I want goes to the store.\n# ::tokens [\"I\", \"want\", \"goes\", \"to\", \"the\", \"store\", \".\"]\n# ::lemmas [\"i\", \"want\", \"go\", \"to\", \"the\", \"store\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2 5-1.2.1\n(w / want-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (g / go-02~e.2\n            :ARG4 (s / store~e.5)))", [[0, 1], [2, 6], [7, 11], [12, 14], [15, 18], [19, 24], [24, 25]]], ["# ::snt I wonder what to be a clown on the cover of.\n# ::tokens [\"I\", \"wonder\", \"what\", \"to\", \"be\", \"a\", \"clown\", \"on\", \"the\", \"cover\", \"of\", \".\"]\n# ::lemmas [\"i\", \"wonder\", \"what\", \"to\", \"be\", \"a\", \"clown\", \"on\", \"the\", \"cover\", \"of\", \".\"]\n# ::alignments 0-1.1 1-1 6-1.2.2.1 9-1.2.2\n(w / wonder-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (t / thing\n            :domain ii\n            :ARG1-of (c / cover-02~e.9\n                        :ARG2 (c2 / clown~e.6\n                                  :domain ii))))", [[0, 1], [2, 8], [9, 13], [14, 16], [17, 19], [20, 21], [22, 27], [28, 30], [31, 34], [35, 40], [41, 43], [43, 44]]], ["# ::snt Bother you that Kim left!\n# ::tokens [\"Bother\", \"you\", \"that\", \"Kim\", \"left\", \"!\"]\n# ::lemmas [\"bother\", \"you\", \"that\", \"Kim\", \"leave\", \"!\"]\n# ::alignments 1-1.1 3-1.2.1.1.1 4-1.2\n(e / except-01\n   :ARG1 (y / you~e.1)\n   :ARG2 (l / leave-11~e.4\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Kim\"~e.3))))", [[0, 6], [7, 10], [11, 15], [16, 19], [20, 24], [24, 25]]], ["# ::snt A student who to talk to us just walked in.\n# ::tokens [\"A\", \"student\", \"who\", \"to\", \"talk\", \"to\", \"us\", \"just\", \"walked\", \"in\", \".\"]\n# ::lemmas [\"a\", \"student\", \"who\", \"to\", \"talk\", \"to\", \"we\", \"just\", \"walk\", \"in\", \".\"]\n# ::alignments 1-1.1.1 4-1.1.2 6-1.1.2.1 7-1.2 8-1\n(w / walk-01~e.8\n   :ARG0 (p / person\n            :ARG0-of (s / study-01~e.1)\n            :ARG0-of (t / talk-01~e.4\n                        :ARG2 (w2 / we~e.6)))\n   :time (j / just~e.7))", [[0, 1], [2, 9], [10, 13], [14, 16], [17, 21], [22, 24], [25, 27], [28, 32], [33, 39], [40, 42], [42, 43]]], ["# ::snt Whose bagels do you like?\n# ::tokens [\"Whose\", \"bagels\", \"do\", \"you\", \"like\", \"?\"]\n# ::lemmas [\"whose\", \"bagel\", \"do\", \"you\", \"like\", \"?\"]\n# ::alignments 1-1.2 3-1.1 4-1\n(l / like-01~e.4\n   :ARG0 (y / you~e.3)\n   :ARG1 (b / bagel~e.1\n            :mod (a / amr-unknown)))", [[0, 5], [6, 12], [13, 15], [16, 19], [20, 24], [24, 25]]], ["# ::snt I wonder in whom to place my trust.\n# ::tokens [\"I\", \"wonder\", \"in\", \"whom\", \"to\", \"place\", \"my\", \"trust\", \".\"]\n# ::lemmas [\"i\", \"wonder\", \"in\", \"whom\", \"to\", \"place\", \"my\", \"trust\", \".\"]\n# ::alignments 0-1.1 1-1 7-1.2.1\n(w / wonder-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person\n            :ARG2-of (t / trust-01~e.7\n                        :ARG0 ii)))", [[0, 1], [2, 8], [9, 11], [12, 16], [17, 19], [20, 25], [26, 28], [29, 34], [34, 35]]], ["# ::snt There were several old rocks songs that she and I were the only two who knew.\n# ::tokens [\"There\", \"were\", \"several\", \"old\", \"rocks\", \"songs\", \"that\", \"she\", \"and\", \"I\", \"were\", \"the\", \"only\", \"two\", \"who\", \"knew\", \".\"]\n# ::lemmas [\"there\", \"be\", \"several\", \"old\", \"rock\", \"song\", \"that\", \"she\", \"and\", \"i\", \"be\", \"the\", \"only\", \"two\", \"who\", \"know\", \".\"]\n# ::alignments 2-1.2 3-1.1.1 4-1.1 5-1 7-1.3.1.1 8-1.3.1 9-1.3.1.2 12-1.3.1.3 15-1.3\n(s / song~e.5\n   :mod (r / rock~e.4\n           :mod (o / old~e.3))\n   :quant (s2 / several~e.2)\n   :ARG1-of (k / know-01~e.15\n               :ARG0 (a / and~e.8\n                        :op1 (s3 / she~e.7)\n                        :op2 (ii / i~e.9)\n                        :mod (o2 / only~e.12))))", [[0, 5], [6, 10], [11, 18], [19, 22], [23, 28], [29, 34], [35, 39], [40, 43], [44, 47], [48, 49], [50, 54], [55, 58], [59, 63], [64, 67], [68, 71], [72, 76], [76, 77]]], ["# ::snt It was to to amuse us that Kim was singing that they wanted.\n# ::tokens [\"It\", \"was\", \"to\", \"to\", \"amuse\", \"us\", \"that\", \"Kim\", \"was\", \"singing\", \"that\", \"they\", \"wanted\", \".\"]\n# ::lemmas [\"it\", \"be\", \"to\", \"to\", \"amuse\", \"we\", \"that\", \"Kim\", \"be\", \"singe\", \"that\", \"they\", \"want\", \".\"]\n# ::alignments 4-1.1 5-1.1.2 7-1.1.1.1.1.1 9-1.1.1 11-1.1.1.2.1.1 12-1.1.1.2.1\n(h / have-purpose-91\n   :ARG2 (a / amuse-01~e.4\n            :ARG0 (s / sing-01~e.9\n                     :ARG0 (p / person\n                              :name (n / name\n                                       :op1 \"Kim\"~e.7))\n                     :ARG1 (t / thing\n                              :ARG1-of (w / want-01~e.12\n                                          :ARG0 (t2 / they~e.11))))\n            :ARG1 (w2 / we~e.5)))", [[0, 2], [3, 6], [7, 9], [10, 12], [13, 18], [19, 21], [22, 26], [27, 30], [31, 34], [35, 42], [43, 47], [48, 52], [53, 59], [59, 60]]], ["# ::snt What they feared most was to be no one available to help them.\n# ::tokens [\"What\", \"they\", \"feared\", \"most\", \"was\", \"to\", \"be\", \"no\", \"one\", \"available\", \"to\", \"help\", \"them\", \".\"]\n# ::lemmas [\"what\", \"they\", \"fear\", \"most\", \"be\", \"to\", \"be\", \"no\", \"one\", \"available\", \"to\", \"help\", \"they\", \".\"]\n# ::alignments 1-1.1 2-1 3-1.2.2.1 9-1.2.1 11-1.2.1.1\n(f / fear-01~e.2\n   :ARG0 (t / they~e.1)\n   :ARG1 (n / no-one\n            :ARG2-of (a / available-02~e.9\n                        :ARG1 (h / help-01~e.11\n                                 :ARG0 n\n                                 :ARG1 t))\n            :ARG2-of (h2 / have-degree-91\n                         :ARG3 (m / most~e.3))\n            :ARG1-of h2))", [[0, 4], [5, 9], [10, 16], [17, 21], [22, 25], [26, 28], [29, 31], [32, 34], [35, 38], [39, 48], [49, 51], [52, 56], [57, 61], [61, 62]]], ["# ::snt We tried to amuse them that Kim was singing.\n# ::tokens [\"We\", \"tried\", \"to\", \"amuse\", \"them\", \"that\", \"Kim\", \"was\", \"singing\", \".\"]\n# ::lemmas [\"we\", \"try\", \"to\", \"amuse\", \"they\", \"that\", \"Kim\", \"be\", \"singe\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 4-1.2.2 6-1.2.3.1.1.1 8-1.2.3\n(t / try-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (a / amuse-01~e.3\n            :ARG0 w\n            :ARG1 (t2 / they~e.4)\n            :ARG2 (s / sing-01~e.8\n                     :ARG0 (p / person\n                              :name (n / name\n                                       :op1 \"Kim\"~e.6)))))", [[0, 2], [3, 8], [9, 11], [12, 17], [18, 22], [23, 27], [28, 31], [32, 35], [36, 43], [43, 44]]], ["# ::snt Mary asked me if, in St. Louis, John could rent a house cheap.\n# ::tokens [\"Mary\", \"asked\", \"me\", \"if\", \",\", \"in\", \"St.\", \"Louis\", \",\", \"John\", \"could\", \"rent\", \"a\", \"house\", \"cheap\", \".\"]\n# ::lemmas [\"Mary\", \"ask\", \"i\", \"if\", \",\", \"in\", \"St.\", \"Louis\", \",\", \"John\", \"could\", \"rent\", \"a\", \"house\", \"cheap\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.3 6-1.2.1.1.3.1.1 7-1.2.1.1.3.1.2 9-1.2.1.1.1.1.1 11-1.2.1.1 13-1.2.1.1.2 14-1.2.1.1.2.1\n(a / ask-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mary\"~e.0))\n   :ARG1 (t / truth-value\n            :polarity-of (p2 / possible-01\n                             :ARG1 (r / rent-01~e.11\n                                      :ARG0 (p3 / person\n                                                :name (n2 / name\n                                                          :op1 \"John\"~e.9))\n                                      :ARG1 (h / house~e.13\n                                               :ARG1-of (c / cheap-02~e.14))\n                                      :location (c2 / city\n                                                    :name (n3 / name\n                                                              :op1 \"St.\"~e.6\n                                                              :op2 \"Louis\"~e.7)))))\n   :ARG2 (ii / i~e.2))", [[0, 4], [5, 10], [11, 13], [14, 16], [16, 17], [18, 20], [21, 24], [25, 30], [30, 31], [32, 36], [37, 42], [43, 47], [48, 49], [50, 55], [56, 61], [61, 62]]], ["# ::snt Mary arranged for, in St. Louis, John to rent a house cheap.\n# ::tokens [\"Mary\", \"arranged\", \"for\", \",\", \"in\", \"St.\", \"Louis\", \",\", \"John\", \"to\", \"rent\", \"a\", \"house\", \"cheap\", \".\"]\n# ::lemmas [\"Mary\", \"arrange\", \"for\", \",\", \"in\", \"St.\", \"Louis\", \",\", \"John\", \"to\", \"rent\", \"a\", \"house\", \"cheap\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 5-1.2.3.1.1 6-1.2.3.1.2 8-1.2.1.1.1 10-1.2 12-1.2.2 13-1.2.2.1\n(a / arrange-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Mary\"~e.0))\n   :ARG1 (r / rent-01~e.10\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"John\"~e.8))\n            :ARG1 (h / house~e.12\n                     :ARG1-of (c / cheap-02~e.13))\n            :location (c2 / city\n                          :name (n3 / name\n                                    :op1 \"St.\"~e.5\n                                    :op2 \"Louis\"~e.6))))", [[0, 4], [5, 13], [14, 17], [17, 18], [19, 21], [22, 25], [26, 31], [31, 32], [33, 37], [38, 40], [41, 45], [46, 47], [48, 53], [54, 59], [59, 60]]], ["# ::snt It would be unwise for there to be no fire exit.\n# ::tokens [\"It\", \"would\", \"be\", \"unwise\", \"for\", \"there\", \"to\", \"be\", \"no\", \"fire\", \"exit\", \".\"]\n# ::lemmas [\"it\", \"would\", \"be\", \"unwise\", \"for\", \"there\", \"to\", \"be\", \"no\", \"fire\", \"exit\", \".\"]\n# ::alignments 3-1 8-1.1 9-1.2.2 10-1.2\n(w / wise~e.3\n   :polarity -~e.8\n   :domain (e / exit-01~e.10\n              :polarity -\n              :mod (f / fire~e.9)))", [[0, 2], [3, 8], [9, 11], [12, 18], [19, 22], [23, 28], [29, 31], [32, 34], [35, 37], [38, 42], [43, 47], [47, 48]]], ["# ::snt I believe there to be no way out.\n# ::tokens [\"I\", \"believe\", \"there\", \"to\", \"be\", \"no\", \"way\", \"out\", \".\"]\n# ::lemmas [\"i\", \"believe\", \"there\", \"to\", \"be\", \"no\", \"way\", \"out\", \".\"]\n# ::alignments 0-1.1 1-1 5-1.2.1 6-1.2 7-1.2.2\n(b / believe-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (w / way~e.6\n            :polarity -~e.5\n            :direction (o / out~e.7)))", [[0, 1], [2, 9], [10, 15], [16, 18], [19, 21], [22, 24], [25, 28], [29, 32], [32, 33]]], ["# ::snt I wonder in whom them to place their trust.\n# ::tokens [\"I\", \"wonder\", \"in\", \"whom\", \"them\", \"to\", \"place\", \"their\", \"trust\", \".\"]\n# ::lemmas [\"i\", \"wonder\", \"in\", \"whom\", \"they\", \"to\", \"place\", \"their\", \"trust\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2.1.1 8-1.2.1\n(w / wonder-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person\n            :ARG2-of (t / trust-01~e.8\n                        :ARG0 (t2 / they~e.4))))", [[0, 1], [2, 8], [9, 11], [12, 16], [17, 21], [22, 24], [25, 30], [31, 36], [37, 42], [42, 43]]], ["# ::snt I wonder whom us to trust.\n# ::tokens [\"I\", \"wonder\", \"whom\", \"us\", \"to\", \"trust\", \".\"]\n# ::lemmas [\"i\", \"wonder\", \"whom\", \"we\", \"to\", \"trust\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1.1 5-1.2.1\n(w / wonder-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person\n            :ARG1-of (t / trust-02~e.5\n                        :ARG0 (w2 / we~e.3))))", [[0, 1], [2, 8], [9, 13], [14, 16], [17, 19], [20, 25], [25, 26]]], ["# ::snt I wonder who for us to trust.\n# ::tokens [\"I\", \"wonder\", \"who\", \"for\", \"us\", \"to\", \"trust\", \".\"]\n# ::lemmas [\"i\", \"wonder\", \"who\", \"for\", \"we\", \"to\", \"trust\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2.1.1 6-1.2.1\n(w / wonder-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person\n            :ARG1-of (t / trust-02~e.6\n                        :ARG0 (w2 / we~e.4))))", [[0, 1], [2, 8], [9, 12], [13, 16], [17, 19], [20, 22], [23, 28], [28, 29]]], ["# ::snt I wonder who to place my trust in.\n# ::tokens [\"I\", \"wonder\", \"who\", \"to\", \"place\", \"my\", \"trust\", \"in\", \".\"]\n# ::lemmas [\"i\", \"wonder\", \"who\", \"to\", \"place\", \"my\", \"trust\", \"in\", \".\"]\n# ::alignments 0-1.1 1-1 6-1.2.1\n(w / wonder-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person\n            :ARG2-of (t / trust-01~e.6\n                        :ARG0 ii)))", [[0, 1], [2, 8], [9, 12], [13, 15], [16, 21], [22, 24], [25, 30], [31, 33], [33, 34]]], ["# ::snt I know the people that voted in the election.\n# ::tokens [\"I\", \"know\", \"the\", \"people\", \"that\", \"voted\", \"in\", \"the\", \"election\", \".\"]\n# ::lemmas [\"i\", \"know\", \"the\", \"people\", \"that\", \"vote\", \"in\", \"the\", \"election\", \".\"]\n# ::alignments 0-1.1 1-1 5-1.2.1 8-1.2.1.1\n(k / know-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person\n            :ARG0-of (v / vote-01~e.5\n                        :ARG1 (e / elect-01~e.8))))", [[0, 1], [2, 6], [7, 10], [11, 17], [18, 22], [23, 28], [29, 31], [32, 35], [36, 44], [44, 45]]], ["# ::snt I threw away a book that Sandy thought we had read.\n# ::tokens [\"I\", \"threw\", \"away\", \"a\", \"book\", \"that\", \"Sandy\", \"thought\", \"we\", \"had\", \"read\", \".\"]\n# ::lemmas [\"i\", \"throw\", \"away\", \"a\", \"book\", \"that\", \"Sandy\", \"think\", \"we\", \"have\", \"read\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2 6-1.2.1.1.1.1 7-1.2.1.2 10-1.2.1\n(t / throw-away-07~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (b / book~e.4\n            :ARG1-of (r / read-01~e.10\n                        :ARG0 (p / person\n                                 :name (n / name\n                                          :op1 \"Sandy\"~e.6))\n                        :ARG1-of (t2 / think-01~e.7\n                                     :ARG0 p))))", [[0, 1], [2, 7], [8, 12], [13, 14], [15, 19], [20, 24], [25, 30], [31, 38], [39, 41], [42, 45], [46, 50], [50, 51]]], ["# ::snt I thought that you were sick.\n# ::tokens [\"I\", \"thought\", \"that\", \"you\", \"were\", \"sick\", \".\"]\n# ::lemmas [\"i\", \"think\", \"that\", \"you\", \"be\", \"sick\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1 5-1.2\n(t / think-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (s / sick-05~e.5\n            :ARG1 (y / you~e.3)))", [[0, 1], [2, 9], [10, 14], [15, 18], [19, 23], [24, 28], [28, 29]]], ["# ::snt I dislike the people in who we placed our trust.\n# ::tokens [\"I\", \"dislike\", \"the\", \"people\", \"in\", \"who\", \"we\", \"placed\", \"our\", \"trust\", \".\"]\n# ::lemmas [\"i\", \"dislike\", \"the\", \"people\", \"in\", \"who\", \"we\", \"place\", \"our\", \"trust\", \".\"]\n# ::alignments 0-1.1 1-1 6-1.2.1.1 9-1.2.1\n(d / dislike-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person\n            :location (t / trust-01~e.9\n                         :ARG0 (w / we~e.6)\n                         :ARG2 p)))", [[0, 1], [2, 9], [10, 13], [14, 20], [21, 23], [24, 27], [28, 30], [31, 37], [38, 41], [42, 47], [47, 48]]], ["# ::snt I dislike the company in which we placed our trust.\n# ::tokens [\"I\", \"dislike\", \"the\", \"company\", \"in\", \"which\", \"we\", \"placed\", \"our\", \"trust\", \".\"]\n# ::lemmas [\"i\", \"dislike\", \"the\", \"company\", \"in\", \"which\", \"we\", \"place\", \"our\", \"trust\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 6-1.2.1.1 9-1.2.1\n(d / dislike-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (c / company~e.3\n            :ARG2-of (t / trust-01~e.9\n                        :ARG0 (w / we~e.6))))", [[0, 1], [2, 9], [10, 13], [14, 21], [22, 24], [25, 30], [31, 33], [34, 40], [41, 44], [45, 50], [50, 51]]], ["# ::snt I dislike the people in whose house we stayed.\n# ::tokens [\"I\", \"dislike\", \"the\", \"people\", \"in\", \"whose\", \"house\", \"we\", \"stayed\", \".\"]\n# ::lemmas [\"i\", \"dislike\", \"the\", \"people\", \"in\", \"whose\", \"house\", \"we\", \"stay\", \".\"]\n# ::alignments 0-1.1 1-1 6-1.2.1 7-1.2.1.1.1 8-1.2.1.1\n(d / dislike-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person\n            :location (h / house~e.6\n                         :ARG1-of (s / stay-01~e.8\n                                     :ARG0 (w / we~e.7)))))", [[0, 1], [2, 9], [10, 13], [14, 20], [21, 23], [24, 29], [30, 35], [36, 38], [39, 45], [45, 46]]], ["# ::snt I dislike the person with whom we were talking.\n# ::tokens [\"I\", \"dislike\", \"the\", \"person\", \"with\", \"whom\", \"we\", \"were\", \"talking\", \".\"]\n# ::lemmas [\"i\", \"dislike\", \"the\", \"person\", \"with\", \"whom\", \"we\", \"be\", \"talk\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 6-1.2.1.1 8-1.2.1\n(d / dislike-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person~e.3\n            :ARG2-of (t / talk-01~e.8\n                        :ARG0 (w / we~e.6))))", [[0, 1], [2, 9], [10, 13], [14, 20], [21, 25], [26, 30], [31, 33], [34, 38], [39, 46], [46, 47]]], ["# ::snt Jones, that we were talking to last night, always watches football games alone.\n# ::tokens [\"Jones\", \",\", \"that\", \"we\", \"were\", \"talking\", \"to\", \"last\", \"night\", \",\", \"always\", \"watches\", \"football\", \"games\", \"alone\", \".\"]\n# ::lemmas [\"Jones\", \",\", \"that\", \"we\", \"be\", \"talk\", \"to\", \"last\", \"night\", \",\", \"always\", \"watch\", \"football\", \"game\", \"alone\", \".\"]\n# ::alignments 0-1.2.1.1 3-1.1 5-1 8-1.3.1 10-1.2.2.3 11-1.2.2 12-1.2.2.1.1 13-1.2.2.1 14-1.2.2.2\n(t / talk-01~e.5\n   :ARG0 (w / we~e.3)\n   :ARG2 (p / person\n            :name (n / name\n                     :op1 \"Jones\"~e.0)\n            :ARG0-of (w2 / watch-01~e.11\n                         :ARG1 (g / game~e.13\n                                  :mod (f / football~e.12))\n                         :mod (a / alone~e.14)\n                         :time (a2 / always~e.10)))\n   :time (d / date-entity\n            :dayperiod (n2 / night~e.8)\n            :mod (y / yesterday)))", [[0, 5], [5, 6], [7, 11], [12, 14], [15, 19], [20, 27], [28, 30], [31, 35], [36, 41], [41, 42], [43, 49], [50, 57], [58, 66], [67, 72], [73, 78], [78, 79]]], ["# ::snt A letter was received that Jones would be upset by.\n# ::tokens [\"A\", \"letter\", \"was\", \"received\", \"that\", \"Jones\", \"would\", \"be\", \"upset\", \"by\", \".\"]\n# ::lemmas [\"a\", \"letter\", \"be\", \"receive\", \"that\", \"Jones\", \"would\", \"be\", \"upset\", \"by\", \".\"]\n# ::alignments 1-1.1 3-1 5-1.1.1.1.1.1 8-1.1.1\n(r / receive-01~e.3\n   :ARG1 (l / letter~e.1\n            :ARG0-of (u / upset-01~e.8\n                        :ARG1 (p / person\n                                 :name (n / name\n                                          :op1 \"Jones\"~e.5)))))", [[0, 1], [2, 8], [9, 12], [13, 21], [22, 26], [27, 32], [33, 38], [39, 41], [42, 47], [48, 50], [50, 51]]], ["# ::snt A letter was received Jones would be upset by.\n# ::tokens [\"A\", \"letter\", \"was\", \"received\", \"Jones\", \"would\", \"be\", \"upset\", \"by\", \".\"]\n# ::lemmas [\"a\", \"letter\", \"be\", \"receive\", \"Jones\", \"would\", \"be\", \"upset\", \"by\", \".\"]\n# ::alignments 1-1.1.1 3-1.1 4-1.2.1.1 7-1\n(u / upset-01~e.7\n   :ARG0 (r / receive-01~e.3\n            :ARG1 (l / letter~e.1))\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Jones\"~e.4)))", [[0, 1], [2, 8], [9, 12], [13, 21], [22, 27], [28, 33], [34, 36], [37, 42], [43, 45], [45, 46]]], ["# ::snt I saw someone yesterday I hadn't seen for years.\n# ::tokens [\"I\", \"saw\", \"someone\", \"yesterday\", \"I\", \"had\", \"n't\", \"seen\", \"for\", \"years\", \".\"]\n# ::lemmas [\"i\", \"see\", \"someone\", \"yesterday\", \"i\", \"have\", \"not\", \"see\", \"for\", \"years\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2 3-1.3 7-1.2.1 9-1.2.1.3.1.2\n(s / see-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (s2 / someone~e.2\n             :ARG1-of (s3 / see-01~e.7\n                          :polarity -\n                          :ARG0 ii\n                          :duration (m / multiple\n                                       :op1 (t / temporal-quantity\n                                               :quant 1\n                                               :unit (y / year~e.9)))))\n   :time (y2 / yesterday~e.3))", [[0, 1], [2, 5], [6, 13], [14, 23], [24, 25], [26, 29], [29, 32], [33, 37], [38, 41], [42, 47], [47, 48]]], ["# ::snt Something happened I couldn't really talk about.\n# ::tokens [\"Something\", \"happened\", \"I\", \"could\", \"n't\", \"really\", \"talk\", \"about\", \".\"]\n# ::lemmas [\"something\", \"happen\", \"i\", \"could\", \"not\", \"really\", \"talk\", \"about\", \".\"]\n# ::alignments 0-1 2-1.1.1 5-1.1.2.2 6-1.1\n(s / something~e.0\n   :ARG1-of (t / talk-01~e.6\n               :ARG0 (ii / i~e.2)\n               :ARG1-of (p / possible-01\n                           :polarity -\n                           :ARG1-of (r / real-04~e.5))))", [[0, 9], [10, 18], [19, 20], [21, 26], [26, 29], [30, 36], [37, 41], [42, 47], [47, 48]]], ["# ::snt The only person that I like whose kids Dana is willing to put up with is Pat.\n# ::tokens [\"The\", \"only\", \"person\", \"that\", \"I\", \"like\", \"whose\", \"kids\", \"Dana\", \"is\", \"willing\", \"to\", \"put\", \"up\", \"with\", \"is\", \"Pat\", \".\"]\n# ::lemmas [\"the\", \"only\", \"person\", \"that\", \"i\", \"like\", \"whose\", \"kid\", \"Dana\", \"be\", \"willing\", \"to\", \"put\", \"up\", \"with\", \"be\", \"Pat\", \".\"]\n# ::alignments 1-1.2.2.1 2-1.2 4-1.1 5-1 7-1.2.2.2.2 8-1.2.2.2.1.1.1 10-1.2.2.3.2 16-1.2.1.1\n(l / like-01~e.5\n   :ARG0 (ii / i~e.4)\n   :ARG1 (p / person~e.2\n            :name (n / name\n                     :op1 \"Pat\"~e.16)\n            :domain (p2 / person\n                        :mod (o / only~e.1)\n                        :ARG0-of (h / have-rel-role-91\n                                    :ARG1 (p3 / person\n                                              :name (n2 / name\n                                                        :op1 \"Dana\"~e.8))\n                                    :ARG2 (k / kid~e.7))\n                        :ARG1-of (p4 / put-up-12\n                                     :ARG0 p3\n                                     :ARG1-of (w / will-02~e.10\n                                                 :ARG0 p3)))))", [[0, 3], [4, 8], [9, 15], [16, 20], [21, 22], [23, 27], [28, 33], [34, 38], [39, 43], [44, 46], [47, 54], [55, 57], [58, 61], [62, 64], [65, 69], [70, 72], [73, 76], [76, 77]]], ["# ::snt The book that I like which everyone else in the class hates was written by John.\n# ::tokens [\"The\", \"book\", \"that\", \"I\", \"like\", \"which\", \"everyone\", \"else\", \"in\", \"the\", \"class\", \"hates\", \"was\", \"written\", \"by\", \"John\", \".\"]\n# ::lemmas [\"the\", \"book\", \"that\", \"i\", \"like\", \"which\", \"everyone\", \"else\", \"in\", \"the\", \"class\", \"hate\", \"be\", \"write\", \"by\", \"John\", \".\"]\n# ::alignments 1-1.2 3-1.2.1.1 4-1.2.1 6-1.2.2.1 7-1.2.2.1.1 10-1.2.2.1.2 11-1.2.2 13-1 15-1.1.1.1\n(w / write-01~e.13\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.15))\n   :ARG1 (b / book~e.1\n            :ARG1-of (l / like-01~e.4\n                        :ARG0 (ii / i~e.3))\n            :ARG1-of (h / hate-01~e.11\n                        :ARG0 (e / everyone~e.6\n                                 :mod (e2 / else~e.7)\n                                 :ARG1-of (c / class-01~e.10)))))", [[0, 3], [4, 8], [9, 13], [14, 15], [16, 20], [21, 26], [27, 35], [36, 40], [41, 43], [44, 47], [48, 53], [54, 59], [60, 63], [64, 71], [72, 74], [75, 79], [79, 80]]], ["# ::snt The only person whose kids Dana is willing to put up with was written by John.\n# ::tokens [\"The\", \"only\", \"person\", \"whose\", \"kids\", \"Dana\", \"is\", \"willing\", \"to\", \"put\", \"up\", \"with\", \"was\", \"written\", \"by\", \"John\", \".\"]\n# ::lemmas [\"the\", \"only\", \"person\", \"whose\", \"kid\", \"Dana\", \"be\", \"willing\", \"to\", \"put\", \"up\", \"with\", \"be\", \"write\", \"by\", \"John\", \".\"]\n# ::alignments 1-1.2.1 2-1.1.1 4-1.2.2.2 5-1.2.2.1.1.1 7-1.2.3.2 13-1.1 15-1.1.1.1.1\n(t / thing\n   :ARG1-of (w / write-01~e.13\n               :ARG0 (p / person~e.2\n                        :name (n / name\n                                 :op1 \"John\"~e.15)))\n   :domain (p2 / person\n               :mod (o / only~e.1)\n               :ARG0-of (h / have-rel-role-91\n                           :ARG1 (p3 / person\n                                     :name (n2 / name\n                                               :op1 \"Dana\"~e.5))\n                           :ARG2 (k / kid~e.4))\n               :ARG1-of (p4 / put-up-12\n                            :ARG0 p3\n                            :ARG1-of (w2 / will-02~e.7\n                                         :ARG0 p3))))", [[0, 3], [4, 8], [9, 15], [16, 21], [22, 26], [27, 31], [32, 34], [35, 42], [43, 45], [46, 49], [50, 52], [53, 57], [58, 61], [62, 69], [70, 72], [73, 77], [77, 78]]], ["# ::snt The book that I like - everyone else in the class hates.\n# ::tokens [\"The\", \"book\", \"that\", \"I\", \"like\", \"-\", \"everyone\", \"else\", \"in\", \"the\", \"class\", \"hates\", \".\"]\n# ::lemmas [\"the\", \"book\", \"that\", \"i\", \"like\", \"-\", \"everyone\", \"else\", \"in\", \"the\", \"class\", \"hate\", \".\"]\n# ::alignments 1-1 3-1.1.1 4-1.1 6-1.2.1 7-1.2.1.1 10-1.2.1.2 11-1.2\n(b / book~e.1\n   :ARG1-of (l / like-01~e.4\n               :ARG0 (ii / i~e.3))\n   :ARG1-of (h / hate-01~e.11\n               :ARG0 (e / everyone~e.6\n                        :mod (e2 / else~e.7)\n                        :location (c / class~e.10))))", [[0, 3], [4, 8], [9, 13], [14, 15], [16, 20], [21, 22], [23, 31], [32, 36], [37, 39], [40, 43], [44, 49], [50, 55], [55, 56]]], ["# ::snt The only person whose kids Dana is willing to put up with is Pat.\n# ::tokens [\"The\", \"only\", \"person\", \"whose\", \"kids\", \"Dana\", \"is\", \"willing\", \"to\", \"put\", \"up\", \"with\", \"is\", \"Pat\", \".\"]\n# ::lemmas [\"the\", \"only\", \"person\", \"whose\", \"kid\", \"Dana\", \"be\", \"willing\", \"to\", \"put\", \"up\", \"with\", \"be\", \"Pat\", \".\"]\n# ::alignments 1-1.2.1 2-1 4-1.2.2.2 5-1.2.2.1.1.1 13-1.1.1\n(p / person~e.2\n   :name (n / name\n            :op1 \"Pat\"~e.13)\n   :domain (p2 / person\n               :mod (o / only~e.1)\n               :ARG0-of (h / have-rel-role-91\n                           :ARG1 (p3 / person\n                                     :name (n2 / name\n                                               :op1 \"Dana\"~e.5))\n                           :ARG2 (k / kid~e.4))\n               :ARG1-of (p4 / put-up-12\n                            :ARG0 p3)))", [[0, 3], [4, 8], [9, 15], [16, 21], [22, 26], [27, 31], [32, 34], [35, 42], [43, 45], [46, 49], [50, 52], [53, 57], [58, 60], [61, 64], [64, 65]]], ["# ::snt Which book's, author did you meet?\n# ::tokens [\"Which\", \"book\", \"'s\", \",\", \"author\", \"did\", \"you\", \"meet\", \"?\"]\n# ::lemmas [\"which\", \"book\", \"'s\", \",\", \"author\", \"do\", \"you\", \"meet\", \"?\"]\n# ::alignments 1-1.2.1 4-1.2 6-1.1 7-1\n(m / meet-02~e.7\n   :ARG0 (y / you~e.6)\n   :ARG1 (a / author-01~e.4\n            :ARG1 (b / book~e.1\n                     :mod (a2 / amr-unknown))))", [[0, 5], [6, 10], [10, 12], [12, 13], [14, 20], [21, 24], [25, 28], [29, 33], [33, 34]]], ["# ::snt Which boy's, mother, did you meet who you liked?\n# ::tokens [\"Which\", \"boy\", \"'s\", \",\", \"mother\", \",\", \"did\", \"you\", \"meet\", \"who\", \"you\", \"liked\", \"?\"]\n# ::lemmas [\"which\", \"boy\", \"'s\", \",\", \"mother\", \",\", \"do\", \"you\", \"meet\", \"who\", \"you\", \"like\", \"?\"]\n# ::alignments 1-1.4.2 4-1.5 7-1.2.1 8-1.2 11-1.2.2.1\n(s / say-01\n   :ARG0 (ii / i)\n   :ARG1 (m / meet-02~e.8\n            :ARG0 (y / you~e.7)\n            :ARG1 (p / person\n                     :ARG1-of (l / like-01~e.11\n                                 :ARG0 y))\n            :polarity (a / amr-unknown))\n   :ARG2 p\n   :ARG0-of (h / have-rel-role-91\n               :ARG1 a\n               :mod (b / boy~e.1))\n   :ARG2 (m2 / mother~e.4))", [[0, 5], [6, 9], [9, 11], [11, 12], [13, 19], [19, 20], [21, 24], [25, 28], [29, 33], [34, 37], [38, 41], [42, 47], [47, 48]]], ["# ::snt Which book's, author did you meet who you liked?\n# ::tokens [\"Which\", \"book\", \"'s\", \",\", \"author\", \"did\", \"you\", \"meet\", \"who\", \"you\", \"liked\", \"?\"]\n# ::lemmas [\"which\", \"book\", \"'s\", \",\", \"author\", \"do\", \"you\", \"meet\", \"who\", \"you\", \"like\", \"?\"]\n# ::alignments 1-1.4 4-1.2.2 6-1.1 7-1 10-1.2.1\n(m / meet-02~e.7\n   :ARG0 (y / you~e.6)\n   :ARG1 (p / person\n            :ARG1-of (l / like-01~e.10\n                        :ARG0 y)\n            :ARG0-of (a / author-01~e.4))\n   :polarity (a2 / amr-unknown)\n   :topic (b / book~e.1\n             :mod a2))", [[0, 5], [6, 10], [10, 12], [12, 13], [14, 20], [21, 24], [25, 28], [29, 33], [34, 37], [38, 41], [42, 47], [47, 48]]], ["# ::snt Which boy's, mother, did you meet?\n# ::tokens [\"Which\", \"boy\", \"'s\", \",\", \"mother\", \",\", \"did\", \"you\", \"meet\", \"?\"]\n# ::lemmas [\"which\", \"boy\", \"'s\", \",\", \"mother\", \",\", \"do\", \"you\", \"meet\", \"?\"]\n# ::alignments 1-1.2.1.1 4-1.2.1.2 7-1.1 8-1\n(m / meet-02~e.8\n   :ARG0 (y / you~e.7)\n   :ARG1 (a / amr-unknown\n            :ARG0-of (h / have-rel-role-91\n                        :ARG1 (b / boy~e.1)\n                        :ARG2 (m2 / mother~e.4))))", [[0, 5], [6, 9], [9, 11], [11, 12], [13, 19], [19, 20], [21, 24], [25, 28], [29, 33], [33, 34]]], ["# ::snt All who lost money in the scam are eligible for the program.\n# ::tokens [\"All\", \"who\", \"lost\", \"money\", \"in\", \"the\", \"scam\", \"are\", \"eligible\", \"for\", \"the\", \"program\", \".\"]\n# ::lemmas [\"all\", \"who\", \"lose\", \"money\", \"in\", \"the\", \"scam\", \"be\", \"eligible\", \"for\", \"the\", \"program\", \".\"]\n# ::alignments 0-1.1.1 2-1.1.2 3-1.1.2.1 6-1.1.2.2 11-1.2\n(q / qualify-02\n   :ARG1 (p / person\n            :mod (a / all~e.0)\n            :ARG0-of (l / lose-02~e.2\n                        :ARG1 (m / money~e.3)\n                        :ARG3 (s / scam-01~e.6)))\n   :ARG2 (p2 / program~e.11))", [[0, 3], [4, 7], [8, 12], [13, 18], [19, 21], [22, 25], [26, 30], [31, 34], [35, 43], [44, 47], [48, 51], [52, 59], [59, 60]]], ["# ::snt Who for Sandy to talk to is still enrolled in the class?\n# ::tokens [\"Who\", \"for\", \"Sandy\", \"to\", \"talk\", \"to\", \"is\", \"still\", \"enrolled\", \"in\", \"the\", \"class\", \"?\"]\n# ::lemmas [\"who\", \"for\", \"Sandy\", \"to\", \"talk\", \"to\", \"be\", \"still\", \"enrol\", \"in\", \"the\", \"class\", \"?\"]\n# ::alignments 2-1.1.1.1.1.1 4-1.1.1 7-1.3 8-1 11-1.2\n(e / enroll-01~e.8\n   :ARG1 (a / amr-unknown\n            :ARG2-of (t / talk-01~e.4\n                        :ARG0 (p / person\n                                 :name (n / name\n                                          :op1 \"Sandy\"~e.2))))\n   :ARG2 (c / class~e.11)\n   :mod (s / still~e.7))", [[0, 3], [4, 7], [8, 13], [14, 16], [17, 21], [22, 24], [25, 27], [28, 33], [34, 42], [43, 45], [46, 49], [50, 55], [55, 56]]], ["# ::snt Who who you like does Sandy also like?\n# ::tokens [\"Who\", \"who\", \"you\", \"like\", \"does\", \"Sandy\", \"also\", \"like\", \"?\"]\n# ::lemmas [\"who\", \"who\", \"you\", \"like\", \"do\", \"Sandy\", \"also\", \"like\", \"?\"]\n# ::alignments 2-1.1 3-1 5-1.2.1.1 6-1.3\n(l / like-01~e.3\n   :ARG0 (y / you~e.2)\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandy\"~e.5))\n   :mod (a / also~e.6)\n   :polarity (a2 / amr-unknown))", [[0, 3], [4, 7], [8, 11], [12, 16], [17, 21], [22, 27], [28, 32], [33, 37], [37, 38]]], ["# ::snt Everything you like is on the table.\n# ::tokens [\"Everything\", \"you\", \"like\", \"is\", \"on\", \"the\", \"table\", \".\"]\n# ::lemmas [\"everything\", \"you\", \"like\", \"be\", \"on\", \"the\", \"table\", \".\"]\n# ::alignments 0-1.1 1-1.1.1.1 2-1.1.1 6-1\n(t / table-01~e.6\n   :ARG1 (e / everything~e.0\n            :ARG1-of (l / like-02~e.2\n                        :ARG0 (y / you~e.1))))", [[0, 10], [11, 14], [15, 19], [20, 22], [23, 25], [26, 29], [30, 35], [35, 36]]], ["# ::snt The bills passed by the House yesterday that we objected to were vetoed.\n# ::tokens [\"The\", \"bills\", \"passed\", \"by\", \"the\", \"House\", \"yesterday\", \"that\", \"we\", \"objected\", \"to\", \"were\", \"vetoed\", \".\"]\n# ::lemmas [\"the\", \"bill\", \"pass\", \"by\", \"the\", \"House\", \"yesterday\", \"that\", \"we\", \"object\", \"to\", \"be\", \"veto\", \".\"]\n# ::alignments 1-1.1 2-1.1.1 5-1.1.1.1.1.1 6-1.1.1.2 8-1.1.2.1 9-1.1.2 12-1\n(v / veto-01~e.12\n   :ARG1 (b / bill~e.1\n            :ARG1-of (p / pass-01~e.2\n                        :ARG0 (g / government-organization\n                                 :name (n / name\n                                          :op1 \"House\"~e.5))\n                        :time (y / yesterday~e.6))\n            :ARG1-of (o / object-01~e.9\n                        :ARG0 (w / we~e.8))))", [[0, 3], [4, 9], [10, 16], [17, 19], [20, 23], [24, 29], [30, 39], [40, 44], [45, 47], [48, 56], [57, 59], [60, 64], [65, 71], [71, 72]]], ["# ::snt The only people being added to our group who were at Harvard were students.\n# ::tokens [\"The\", \"only\", \"people\", \"being\", \"added\", \"to\", \"our\", \"group\", \"who\", \"were\", \"at\", \"Harvard\", \"were\", \"students\", \".\"]\n# ::lemmas [\"the\", \"only\", \"people\", \"be\", \"add\", \"to\", \"our\", \"group\", \"who\", \"be\", \"at\", \"Harvard\", \"be\", \"student\", \".\"]\n# ::alignments 1-1.1 7-1.2.1 11-1.3.2.1.1 13-1.3.1\n(p / person\n   :mod (o / only~e.1)\n   :ARG1-of (a / add-on-05\n               :ARG2 (g / group~e.7\n                        :poss (w / we)))\n   :domain (p2 / person\n               :ARG0-of (s / study-01~e.13)\n               :location (u / university\n                            :name (n / name\n                                     :op1 \"Harvard\"~e.11))))", [[0, 3], [4, 8], [9, 15], [16, 21], [22, 27], [28, 30], [31, 34], [35, 40], [41, 44], [45, 49], [50, 52], [53, 60], [61, 65], [66, 74], [74, 75]]], ["# ::snt We like ourselves.\n# ::tokens [\"We\", \"like\", \"ourselves\", \".\"]\n# ::lemmas [\"we\", \"like\", \"ourselves\", \".\"]\n# ::alignments 0-1.1 1-1\n(l / like-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 w)", [[0, 2], [3, 7], [8, 17], [17, 18]]], ["# ::snt Nobody likes us.\n# ::tokens [\"Nobody\", \"likes\", \"us\", \".\"]\n# ::lemmas [\"nobody\", \"like\", \"we\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2\n(l / like-01~e.1\n   :ARG0 (n / nobody~e.0)\n   :ARG1 (w / we~e.2))", [[0, 6], [7, 12], [13, 15], [15, 16]]], ["# ::snt Leslie likes ourselves.\n# ::tokens [\"Leslie\", \"likes\", \"ourselves\", \".\"]\n# ::lemmas [\"Leslie\", \"like\", \"ourselves\", \".\"]\n# ::alignments 0-1.1.1.1 1-1\n(l / like-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Leslie\"~e.0))\n   :ARG1 (w / we))", [[0, 6], [7, 12], [13, 22], [22, 23]]], ["# ::snt Ourselves like ourselves.\n# ::tokens [\"Ourselves\", \"like\", \"ourselves\", \".\"]\n# ::lemmas [\"ourselves\", \"like\", \"ourselves\", \".\"]\n# ::alignments\n(r / resemble-01\n   :ARG1 (w / we)\n   :ARG2 w)", [[0, 9], [10, 14], [15, 24], [24, 25]]], ["# ::snt She voted for herself.\n# ::tokens [\"She\", \"voted\", \"for\", \"herself\", \".\"]\n# ::lemmas [\"she\", \"vote\", \"for\", \"herself\", \".\"]\n# ::alignments 0-1.1 1-1\n(v / vote-01~e.1\n   :ARG0 (s / she~e.0)\n   :ARG1 s)", [[0, 3], [4, 9], [10, 13], [14, 21], [21, 22]]], ["# ::snt We gave us presents.\n# ::tokens [\"We\", \"gave\", \"us\", \"presents\", \".\"]\n# ::lemmas [\"we\", \"give\", \"we\", \"present\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2\n(g / give-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (p / present~e.3)\n   :ARG2 w)", [[0, 2], [3, 7], [8, 10], [11, 19], [19, 20]]], ["# ::snt We gave ourselves presents.\n# ::tokens [\"We\", \"gave\", \"ourselves\", \"presents\", \".\"]\n# ::lemmas [\"we\", \"give\", \"ourselves\", \"present\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2\n(g / give-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (p / present~e.3)\n   :ARG2 w)", [[0, 2], [3, 7], [8, 17], [18, 26], [26, 27]]], ["# ::snt We gave presents to ourselves.\n# ::tokens [\"We\", \"gave\", \"presents\", \"to\", \"ourselves\", \".\"]\n# ::lemmas [\"we\", \"give\", \"present\", \"to\", \"ourselves\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2\n(g / give-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (p / present~e.2)\n   :ARG2 w)", [[0, 2], [3, 7], [8, 16], [17, 19], [20, 29], [29, 30]]], ["# ::snt We gave us to the cause.\n# ::tokens [\"We\", \"gave\", \"us\", \"to\", \"the\", \"cause\", \".\"]\n# ::lemmas [\"we\", \"give\", \"we\", \"to\", \"the\", \"cause\", \".\"]\n# ::alignments 0-1.1 1-1 5-1.2\n(g / give-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (c / cause~e.5)\n   :ARG2 w)", [[0, 2], [3, 7], [8, 10], [11, 13], [14, 17], [18, 23], [23, 24]]], ["# ::snt We gave ourselves to the cause.\n# ::tokens [\"We\", \"gave\", \"ourselves\", \"to\", \"the\", \"cause\", \".\"]\n# ::lemmas [\"we\", \"give\", \"ourselves\", \"to\", \"the\", \"cause\", \".\"]\n# ::alignments 0-1.1 1-1 5-1.3\n(g / give-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 w\n   :ARG2 (c / cause~e.5))", [[0, 2], [3, 7], [8, 17], [18, 20], [21, 24], [25, 30], [30, 31]]], ["# ::snt Leslie told us about us.\n# ::tokens [\"Leslie\", \"told\", \"us\", \"about\", \"us\", \".\"]\n# ::lemmas [\"Leslie\", \"tell\", \"we\", \"about\", \"we\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2\n(t / tell-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Leslie\"~e.0))\n   :ARG1 (w / we~e.2)\n   :ARG2 w)", [[0, 6], [7, 11], [12, 14], [15, 20], [21, 23], [23, 24]]], ["# ::snt Leslie told ourselves about us.\n# ::tokens [\"Leslie\", \"told\", \"ourselves\", \"about\", \"us\", \".\"]\n# ::lemmas [\"Leslie\", \"tell\", \"ourselves\", \"about\", \"we\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.2\n(t / tell-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Leslie\"~e.0))\n   :ARG1 (w / we~e.4)\n   :ARG2 w)", [[0, 6], [7, 11], [12, 21], [22, 27], [28, 30], [30, 31]]], ["# ::snt We think that Leslie likes us.\n# ::tokens [\"We\", \"think\", \"that\", \"Leslie\", \"likes\", \"us\", \".\"]\n# ::lemmas [\"we\", \"think\", \"that\", \"Leslie\", \"like\", \"we\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1.1.1 4-1.2\n(t / think-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (l / like-01~e.4\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Leslie\"~e.3))\n            :ARG1 w))", [[0, 2], [3, 8], [9, 13], [14, 20], [21, 26], [27, 29], [29, 30]]], ["# ::snt We think that Leslie likes ourselves.\n# ::tokens [\"We\", \"think\", \"that\", \"Leslie\", \"likes\", \"ourselves\", \".\"]\n# ::lemmas [\"we\", \"think\", \"that\", \"Leslie\", \"like\", \"ourselves\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1.1.1 4-1.2\n(t / think-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (l / like-01~e.4\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Leslie\"~e.3))\n            :ARG1 w))", [[0, 2], [3, 8], [9, 13], [14, 20], [21, 26], [27, 36], [36, 37]]], ["# ::snt Our friends like us.\n# ::tokens [\"Our\", \"friends\", \"like\", \"us\", \".\"]\n# ::lemmas [\"our\", \"friend\", \"like\", \"we\", \".\"]\n# ::alignments 1-1.1.2 3-1.1.1\n(p / person\n   :ARG0-of (h / have-rel-role-91\n               :ARG1 (w / we~e.3)\n               :ARG2 (f / friend~e.1))\n   :ARG1-of (r / resemble-01\n               :ARG2 w))", [[0, 3], [4, 11], [12, 16], [17, 19], [19, 20]]], ["# ::snt Those pictures of us offended us.\n# ::tokens [\"Those\", \"pictures\", \"of\", \"us\", \"offended\", \"us\", \".\"]\n# ::lemmas [\"those\", \"picture\", \"of\", \"we\", \"offend\", \"we\", \".\"]\n# ::alignments 1-1.1 3-1.1.1 4-1\n(o / offend-01~e.4\n   :ARG0 (p / picture~e.1\n            :topic (w / we~e.3)\n            :mod (t / that))\n   :ARG1 w)", [[0, 5], [6, 14], [15, 17], [18, 20], [21, 29], [30, 32], [32, 33]]], ["# ::snt We found your letter to ourselves in the trash.\n# ::tokens [\"We\", \"found\", \"your\", \"letter\", \"to\", \"ourselves\", \"in\", \"the\", \"trash\", \".\"]\n# ::lemmas [\"we\", \"find\", \"your\", \"letter\", \"to\", \"ourselves\", \"in\", \"the\", \"trash\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 8-1.3\n(f / find-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (l / letter~e.3\n            :poss (y / you))\n   :location (t / trash~e.8))", [[0, 2], [3, 8], [9, 13], [14, 20], [21, 23], [24, 33], [34, 36], [37, 40], [41, 46], [46, 47]]], ["# ::snt Vote for you!\n# ::tokens [\"Vote\", \"for\", \"you\", \"!\"]\n# ::lemmas [\"vote\", \"for\", \"you\", \"!\"]\n# ::alignments 0-1 2-1.2\n(v / vote-01~e.0\n   :mode imperative\n   :ARG0 (y / you~e.2))", [[0, 4], [5, 8], [9, 12], [12, 13]]], ["# ::snt Vote for yourself!\n# ::tokens [\"Vote\", \"for\", \"yourself\", \"!\"]\n# ::lemmas [\"vote\", \"for\", \"yourself\", \"!\"]\n# ::alignments 0-1\n(v / vote-01~e.0\n   :mode imperative\n   :ARG0 (y / you)\n   :ARG1 y)", [[0, 4], [5, 8], [9, 17], [17, 18]]], ["# ::snt We appeared to them to vote for themselves.\n# ::tokens [\"We\", \"appeared\", \"to\", \"them\", \"to\", \"vote\", \"for\", \"themselves\", \".\"]\n# ::lemmas [\"we\", \"appear\", \"to\", \"they\", \"to\", \"vote\", \"for\", \"themselves\", \".\"]\n# ::alignments 0-1.2 1-1 3-1.1.1 5-1.1\n(a / appear-02~e.1\n   :ARG1 (v / vote-01~e.5\n            :ARG0 (t / they~e.3)\n            :ARG1 t)\n   :ARG2 (w / we~e.0))", [[0, 2], [3, 11], [12, 14], [15, 19], [20, 22], [23, 27], [28, 31], [32, 42], [42, 43]]], ["# ::snt We admired the pictures of us in the album.\n# ::tokens [\"We\", \"admired\", \"the\", \"pictures\", \"of\", \"us\", \"in\", \"the\", \"album\", \".\"]\n# ::lemmas [\"we\", \"admire\", \"the\", \"picture\", \"of\", \"we\", \"in\", \"the\", \"album\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 8-1.2.2\n(a / admire-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (p / picture~e.3\n            :poss w\n            :location (a2 / album~e.8)))", [[0, 2], [3, 10], [11, 14], [15, 23], [24, 26], [27, 29], [30, 32], [33, 36], [37, 42], [42, 43]]], ["# ::snt We admired the pictures of ourselves in the album.\n# ::tokens [\"We\", \"admired\", \"the\", \"pictures\", \"of\", \"ourselves\", \"in\", \"the\", \"album\", \".\"]\n# ::lemmas [\"we\", \"admire\", \"the\", \"picture\", \"of\", \"ourselves\", \"in\", \"the\", \"album\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 8-1.2.2\n(a / admire-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (p / picture~e.3\n            :poss w\n            :location (a2 / album~e.8)))", [[0, 2], [3, 10], [11, 14], [15, 23], [24, 26], [27, 36], [37, 39], [40, 43], [44, 49], [49, 50]]], ["# ::snt Leslie used a pen.\n# ::tokens [\"Leslie\", \"used\", \"a\", \"pen\", \".\"]\n# ::lemmas [\"Leslie\", \"use\", \"a\", \"pen\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2\n(u / use-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Leslie\"~e.0))\n   :ARG1 (p2 / pen~e.3))", [[0, 6], [7, 11], [12, 13], [14, 17], [17, 18]]], ["# ::snt We put the pigs in a pen.\n# ::tokens [\"We\", \"put\", \"the\", \"pigs\", \"in\", \"a\", \"pen\", \".\"]\n# ::lemmas [\"we\", \"put\", \"the\", \"pig\", \"in\", \"a\", \"pen\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 6-1.3\n(p / put-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (p2 / pig~e.3)\n   :ARG2 (p3 / pen~e.6))", [[0, 2], [3, 6], [7, 10], [11, 15], [16, 18], [19, 20], [21, 24], [24, 25]]], ["# ::snt We need to pen the pigs to keep them from getting into the corn.\n# ::tokens [\"We\", \"need\", \"to\", \"pen\", \"the\", \"pigs\", \"to\", \"keep\", \"them\", \"from\", \"getting\", \"into\", \"the\", \"corn\", \".\"]\n# ::lemmas [\"we\", \"need\", \"to\", \"pen\", \"the\", \"pig\", \"to\", \"keep\", \"they\", \"from\", \"get\", \"into\", \"the\", \"corn\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 5-1.2.2 7-1.2.3 10-1.2.3.3 13-1.2.3.3.3\n(n / need-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (p / pen-02~e.3\n            :ARG0 w\n            :ARG1 (p2 / pig~e.5)\n            :purpose (k / keep-04~e.7\n                        :ARG0 w\n                        :ARG1 p2\n                        :ARG2 (g / get-05~e.10\n                                 :polarity -\n                                 :ARG1 p2\n                                 :ARG2 (c / corn~e.13)))))", [[0, 2], [3, 7], [8, 10], [11, 14], [15, 18], [19, 23], [24, 26], [27, 31], [32, 36], [37, 41], [42, 49], [50, 54], [55, 58], [59, 63], [63, 64]]], ["# ::snt They should pen the letter quickly.\n# ::tokens [\"They\", \"should\", \"pen\", \"the\", \"letter\", \"quickly\", \".\"]\n# ::lemmas [\"they\", \"should\", \"pen\", \"the\", \"letter\", \"quickly\", \".\"]\n# ::alignments 0-1.1.1 2-1.1 4-1.1.2 5-1.1.3\n(r / recommend-01\n   :ARG1 (p / pen-01~e.2\n            :ARG0 (t / they~e.0)\n            :ARG1 (l / letter~e.4)\n            :ARG1-of (q / quick-02~e.5)))", [[0, 4], [5, 11], [12, 15], [16, 19], [20, 26], [27, 34], [34, 35]]], ["# ::snt The car won't run.\n# ::tokens [\"The\", \"car\", \"wo\", \"n't\", \"run\", \".\"]\n# ::lemmas [\"the\", \"car\", \"will\", \"not\", \"run\", \".\"]\n# ::alignments 1-1.2 4-1\n(r / run-01~e.4\n   :polarity -\n   :ARG1 (c / car~e.1))", [[0, 3], [4, 7], [8, 10], [10, 13], [14, 17], [17, 18]]], ["# ::snt This dye will run.\n# ::tokens [\"This\", \"dye\", \"will\", \"run\", \".\"]\n# ::lemmas [\"this\", \"dye\", \"will\", \"run\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 3-1\n(r / run-04~e.3\n   :ARG1 (d / dye~e.1\n            :mod (t / this~e.0)))", [[0, 4], [5, 8], [9, 13], [14, 17], [17, 18]]], ["# ::snt She can run an accelerator.\n# ::tokens [\"She\", \"can\", \"run\", \"an\", \"accelerator\", \".\"]\n# ::lemmas [\"she\", \"can\", \"run\", \"an\", \"accelerator\", \".\"]\n# ::alignments 0-1.1.1 2-1.1 4-1.1.2\n(p / possible-01\n   :ARG1 (r / run-01~e.2\n            :ARG0 (s / she~e.0)\n            :ARG1 (a / accelerator~e.4)))", [[0, 3], [4, 7], [8, 11], [12, 14], [15, 26], [26, 27]]], ["# ::snt These stockings will run.\n# ::tokens [\"These\", \"stockings\", \"will\", \"run\", \".\"]\n# ::lemmas [\"these\", \"stocking\", \"will\", \"run\", \".\"]\n# ::alignments 1-1.1 3-1\n(r / run-01~e.3\n   :ARG1 (s / stocking~e.1\n            :mod (t / this)))", [[0, 5], [6, 15], [16, 20], [21, 24], [24, 25]]], ["# ::snt We need another run to win.\n# ::tokens [\"We\", \"need\", \"another\", \"run\", \"to\", \"win\", \".\"]\n# ::lemmas [\"we\", \"need\", \"another\", \"run\", \"to\", \"win\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.2 3-1.2 5-1.3\n(n / need-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (r / run-02~e.3\n            :ARG0 w\n            :mod (a / another~e.2))\n   :purpose (w2 / win-01~e.5\n                :ARG0 w))", [[0, 2], [3, 7], [8, 15], [16, 19], [20, 22], [23, 26], [26, 27]]], ["# ::snt Lee saw the student with a telescope.\n# ::tokens [\"Lee\", \"saw\", \"the\", \"student\", \"with\", \"a\", \"telescope\", \".\"]\n# ::lemmas [\"Lee\", \"see\", \"the\", \"student\", \"with\", \"a\", \"telescope\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1 6-1.3\n(s / see-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lee\"~e.0))\n   :ARG1 (p2 / person\n             :ARG0-of (s2 / study-01~e.3))\n   :instrument (t / telescope~e.6))", [[0, 3], [4, 7], [8, 11], [12, 19], [20, 24], [25, 26], [27, 36], [36, 37]]], ["# ::snt I forgot how good beer tastes.\n# ::tokens [\"I\", \"forgot\", \"how\", \"good\", \"beer\", \"tastes\", \".\"]\n# ::lemmas [\"i\", \"forget\", \"how\", \"good\", \"beer\", \"taste\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1 4-1.2.1.1\n(f / forget-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (t / thing\n            :degree-of (g / good-02~e.3\n                          :ARG1 (b / beer~e.4))))", [[0, 1], [2, 8], [9, 12], [13, 17], [18, 22], [23, 29], [29, 30]]], ["# ::snt Visiting relatives can be boring.\n# ::tokens [\"Visiting\", \"relatives\", \"can\", \"be\", \"boring\", \".\"]\n# ::lemmas [\"visit\", \"relative\", \"can\", \"be\", \"boring\", \".\"]\n# ::alignments 0-1.1.1 1-1.1.1.1\n(p / possible-01\n   :ARG1 (b / bore-02\n            :ARG0 (v / visit-01~e.0\n                     :ARG1 (r / relative~e.1))))", [[0, 8], [9, 18], [19, 22], [23, 25], [26, 32], [32, 33]]], ["# ::snt If only Superman would stop flying planes!\n# ::tokens [\"If\", \"only\", \"Superman\", \"would\", \"stop\", \"flying\", \"planes\", \"!\"]\n# ::lemmas [\"if\", \"only\", \"Superman\", \"would\", \"stop\", \"fly\", \"plane\", \"!\"]\n# ::alignments 1-1.1.4 2-1.1.2.1.1 4-1.1 5-1.1.3 6-1.1.3.2\n(h / have-condition-91\n   :ARG2 (s / stop-01~e.4\n            :mode expressive\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Superman\"~e.2))\n            :ARG1 (f / fly-01~e.5\n                     :ARG0 p\n                     :ARG2 (p2 / plane~e.6))\n            :mod (o / only~e.1)))", [[0, 2], [3, 7], [8, 16], [17, 22], [23, 27], [28, 34], [35, 41], [41, 42]]], ["# ::snt That's a new car dealership.\n# ::tokens [\"That\", \"'s\", \"a\", \"new\", \"car\", \"dealership\", \".\"]\n# ::lemmas [\"that\", \"be\", \"a\", \"new\", \"car\", \"dealership\", \".\"]\n# ::alignments 0-1.3 3-1.2 4-1.1 5-1\n(d / dealership~e.5\n   :mod (c / car~e.4)\n   :ARG1-of (n / new-01~e.3)\n   :domain (t / that~e.0))", [[0, 4], [4, 6], [7, 8], [9, 12], [13, 16], [17, 27], [27, 28]]], ["# ::snt I know you like the back of my hand.\n# ::tokens [\"I\", \"know\", \"you\", \"like\", \"the\", \"back\", \"of\", \"my\", \"hand\", \".\"]\n# ::lemmas [\"i\", \"know\", \"you\", \"like\", \"the\", \"back\", \"of\", \"my\", \"hand\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1 3-1.2 5-1.2.2 8-1.1.1\n(k / know-01~e.1\n   :ARG0 (ii / i~e.0\n             :part (h / hand~e.8))\n   :ARG1 (l / like-01~e.3\n            :ARG0 (y / you~e.2)\n            :ARG1 (b / back~e.5\n                     :part-of h)))", [[0, 1], [2, 6], [7, 10], [11, 15], [16, 19], [20, 24], [25, 27], [28, 30], [31, 35], [35, 36]]], ["# ::snt Max is on the phone now.\n# ::tokens [\"Max\", \"is\", \"on\", \"the\", \"phone\", \"now\", \".\"]\n# ::lemmas [\"Max\", \"be\", \"on\", \"the\", \"phone\", \"now\", \".\"]\n# ::alignments 0-1.1.1.1 4-1.2 5-1.3\n(b / be-located-at-91\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Max\"~e.0))\n   :ARG2 (p2 / phone~e.4)\n   :time (n2 / now~e.5))", [[0, 3], [4, 6], [7, 9], [10, 13], [14, 19], [20, 23], [23, 24]]], ["# ::snt I saw her duck.\n# ::tokens [\"I\", \"saw\", \"her\", \"duck\", \".\"]\n# ::lemmas [\"i\", \"see\", \"her\", \"duck\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2\n(s / see-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (d / duck~e.3\n            :poss (s2 / she)))", [[0, 1], [2, 5], [6, 9], [10, 14], [14, 15]]], ["# ::snt I'm creating a committee. Kim \u2013 you're in charge.\n# ::tokens [\"I\", \"'m\", \"creating\", \"a\", \"committee\", \".\", \"Kim\", \"\\u2013\", \"you\", \"'re\", \"in\", \"charge\", \".\"]\n# ::lemmas [\"i\", \"be\", \"create\", \"a\", \"committee\", \".\", \"Kim\", \"\\u2013\", \"you\", \"be\", \"in\", \"charge\", \".\"]\n# ::alignments 0-1.1.1 2-1.1 4-1.1.2 6-1.2.1.1.1 11-1.2\n(m / multi-sentence\n   :snt1 (c / create-01~e.2\n            :ARG0 (ii / i~e.0)\n            :ARG1 (c2 / committee~e.4))\n   :snt2 (c3 / charge-05~e.11\n             :ARG1 (p / person\n                      :name (n / name\n                               :op1 \"Kim\"~e.6))))", [[0, 1], [1, 3], [4, 12], [13, 14], [15, 24], [24, 25], [26, 29], [30, 31], [32, 35], [35, 38], [39, 41], [42, 48], [48, 49]]], ["# ::snt Lights go out at ten. There will be no talking afterwards.\n# ::tokens [\"Lights\", \"go\", \"out\", \"at\", \"ten\", \".\", \"There\", \"will\", \"be\", \"no\", \"talking\", \"afterwards\", \".\"]\n# ::lemmas [\"light\", \"go\", \"out\", \"at\", \"ten\", \".\", \"there\", \"will\", \"be\", \"no\", \"talk\", \"afterwards\", \".\"]\n# ::alignments 0-1.1.1 9-1.2.1 10-1.2 11-1.2.2\n(m / multi-sentence\n   :snt1 (g / go-out-17\n            :ARG1 (l / light~e.0)\n            :time (d / date-entity\n                     :time \"10:00\"))\n   :snt2 (t / talk-01~e.10\n            :polarity -~e.9\n            :time (a / afterwards~e.11)))", [[0, 6], [7, 9], [10, 13], [14, 16], [17, 20], [20, 21], [22, 27], [28, 32], [33, 35], [36, 38], [39, 46], [47, 57], [57, 58]]], ["# ::snt They found the book on the atom.\n# ::tokens [\"They\", \"found\", \"the\", \"book\", \"on\", \"the\", \"atom\", \".\"]\n# ::lemmas [\"they\", \"find\", \"the\", \"book\", \"on\", \"the\", \"atom\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 6-1.2.1\n(f / find-01~e.1\n   :ARG0 (t / they~e.0)\n   :ARG1 (b / book~e.3\n            :location (a / atom~e.6)))", [[0, 4], [5, 10], [11, 14], [15, 19], [20, 22], [23, 26], [27, 31], [31, 32]]], ["# ::snt Which experts testified against defendants who exposed them?\n# ::tokens [\"Which\", \"experts\", \"testified\", \"against\", \"defendants\", \"who\", \"exposed\", \"them\", \"?\"]\n# ::lemmas [\"which\", \"expert\", \"testify\", \"against\", \"defendant\", \"who\", \"expose\", \"they\", \"?\"]\n# ::alignments 1-1.1.1 2-1 4-1.2.1 6-1.2.2\n(t / testify-01~e.2\n   :ARG0 (p / person\n            :ARG1-of (e / expert-01~e.1)\n            :mod (a / amr-unknown))\n   :ARG3 (p2 / person\n             :ARG0-of (d / defend-01~e.4)\n             :ARG0-of (e2 / expose-01~e.6)\n             :ARG1-of e2))", [[0, 5], [6, 13], [14, 23], [24, 31], [32, 42], [43, 46], [47, 54], [55, 59], [59, 60]]], ["# ::snt List all experts for the defendant who represented himself.\n# ::tokens [\"List\", \"all\", \"experts\", \"for\", \"the\", \"defendant\", \"who\", \"represented\", \"himself\", \".\"]\n# ::lemmas [\"list\", \"all\", \"expert\", \"for\", \"the\", \"defendant\", \"who\", \"represent\", \"himself\", \".\"]\n# ::alignments 0-1 1-1.1.2 2-1.1.1 5-1.1.3.1 7-1.1.3.2\n(l / list-01~e.0\n   :ARG1 (p / person\n            :ARG1-of (e / expert-01~e.2)\n            :mod (a / all~e.1)\n            :beneficiary (p2 / person\n                             :ARG0-of (d / defend-01~e.5)\n                             :ARG0-of (r / represent-01~e.7\n                                         :ARG1 (d2 / defendant)))))", [[0, 4], [5, 8], [9, 16], [17, 20], [21, 24], [25, 34], [35, 38], [39, 50], [51, 58], [58, 59]]], ["# ::snt List associates of each defendant who speaks Spanish.\n# ::tokens [\"List\", \"associates\", \"of\", \"each\", \"defendant\", \"who\", \"speaks\", \"Spanish\", \".\"]\n# ::lemmas [\"list\", \"associate\", \"of\", \"each\", \"defendant\", \"who\", \"speak\", \"Spanish\", \".\"]\n# ::alignments 0-1 1-1.1.1 3-1.1.1.1.1 4-1.1.1.1 6-1.1.2 7-1.1.2.1.1.1\n(l / list-01~e.0\n   :ARG1 (p / person\n            :ARG1-of (a / associate-01~e.1\n                        :ARG2 (d / defendant~e.4\n                                 :mod (e / each~e.3)))\n            :ARG0-of (s / speak-01~e.6\n                        :ARG3 (l2 / language\n                                  :name (n / name\n                                           :op1 \"Spanish\"~e.7)))))", [[0, 4], [5, 15], [16, 18], [19, 23], [24, 33], [34, 37], [38, 44], [45, 52], [52, 53]]], ["# ::snt They lost themselves' books.\n# ::tokens [\"They\", \"lost\", \"themselves\", \"'\", \"books\", \".\"]\n# ::lemmas [\"they\", \"lose\", \"themselves\", \"'\", \"book\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2\n(l / lose-02~e.1\n   :ARG0 (t / they~e.0)\n   :ARG1 (b / book~e.4\n            :poss t))", [[0, 4], [5, 9], [10, 20], [20, 21], [22, 27], [27, 28]]], ["# ::snt Some sentences go on and on and on.\n# ::tokens [\"Some\", \"sentences\", \"go\", \"on\", \"and\", \"on\", \"and\", \"on\", \".\"]\n# ::lemmas [\"some\", \"sentence\", \"go\", \"on\", \"and\", \"on\", \"and\", \"on\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1\n(g / go-01~e.2\n   :ARG1 (s / sentence~e.1\n            :quant (s2 / some~e.0))\n   :mod (o / on-and-on))", [[0, 4], [5, 14], [15, 17], [18, 20], [21, 24], [25, 27], [28, 31], [32, 34], [34, 35]]], ["# ::snt Sentences some go on and on and on and on.\n# ::tokens [\"Sentences\", \"some\", \"go\", \"on\", \"and\", \"on\", \"and\", \"on\", \"and\", \"on\", \".\"]\n# ::lemmas [\"sentence\", \"some\", \"go\", \"on\", \"and\", \"on\", \"and\", \"on\", \"and\", \"on\", \".\"]\n# ::alignments 0-1 1-1.1.1 2-1.1\n(s / sentence-01~e.0\n   :ARG2 (g / go-01~e.2\n            :ARG1 (s2 / some~e.1))\n   :mod (o / on-and-on))", [[0, 9], [10, 14], [15, 17], [18, 20], [21, 24], [25, 27], [28, 31], [32, 34], [35, 38], [39, 41], [41, 42]]], ["# ::snt That surprised me.\n# ::tokens [\"That\", \"surprised\", \"me\", \".\"]\n# ::lemmas [\"that\", \"surprise\", \"i\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2\n(s / surprise-01~e.1\n   :ARG0 (t / that~e.0)\n   :ARG1 (ii / i~e.2))", [[0, 4], [5, 14], [15, 17], [17, 18]]], ["# ::snt I noticed the.\n# ::tokens [\"I\", \"noticed\", \"the\", \".\"]\n# ::lemmas [\"i\", \"notice\", \"the\", \".\"]\n# ::alignments 0-1.1 1-1\n(n / notice-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (t / thing))", [[0, 1], [2, 9], [10, 13], [13, 14]]], ["# ::snt They were interested in his.\n# ::tokens [\"They\", \"were\", \"interested\", \"in\", \"his\", \".\"]\n# ::lemmas [\"they\", \"be\", \"interested\", \"in\", \"his\", \".\"]\n# ::alignments 0-1.1 2-1\n(ii / interest-01~e.2\n    :ARG1 (t / they~e.0)\n    :ARG2 (h / he))", [[0, 4], [5, 9], [10, 20], [21, 23], [24, 27], [27, 28]]], ["# ::snt This is my favorite.\n# ::tokens [\"This\", \"is\", \"my\", \"favorite\", \".\"]\n# ::lemmas [\"this\", \"be\", \"my\", \"favorite\", \".\"]\n# ::alignments 0-1.2 3-1\n(f / favor-01~e.3\n   :ARG0 (ii / i)\n   :ARG1 (t / this~e.0))", [[0, 4], [5, 7], [8, 10], [11, 19], [19, 20]]], ["# ::snt A large dog chased a small cat.\n# ::tokens [\"A\", \"large\", \"dog\", \"chased\", \"a\", \"small\", \"cat\", \".\"]\n# ::lemmas [\"a\", \"large\", \"dog\", \"chase\", \"a\", \"small\", \"cat\", \".\"]\n# ::alignments 1-1.1.1 2-1.1 3-1 5-1.2.1 6-1.2\n(c / chase-01~e.3\n   :ARG0 (d / dog~e.2\n            :mod (l / large~e.1))\n   :ARG1 (c2 / cat~e.6\n             :mod (s / small~e.5)))", [[0, 1], [2, 7], [8, 11], [12, 18], [19, 20], [21, 26], [27, 30], [30, 31]]], ["# ::snt Some people yell at noisy dogs in my neighborhood.\n# ::tokens [\"Some\", \"people\", \"yell\", \"at\", \"noisy\", \"dogs\", \"in\", \"my\", \"neighborhood\", \".\"]\n# ::lemmas [\"some\", \"people\", \"yell\", \"at\", \"noisy\", \"dog\", \"in\", \"my\", \"neighborhood\", \".\"]\n# ::alignments 0-1.1.1 2-1 4-1.2.1 5-1.2 8-1.3\n(y / yell-01~e.2\n   :ARG0 (p / person\n            :mod (s / some~e.0))\n   :ARG2 (d / dog~e.5\n            :mod (n / noisy~e.4))\n   :location (n2 / neighborhood~e.8\n                 :poss (ii / i)))", [[0, 4], [5, 11], [12, 16], [17, 19], [20, 25], [26, 30], [31, 33], [34, 36], [37, 49], [49, 50]]], ["# ::snt Some people yell at the dogs in my neighborhood.\n# ::tokens [\"Some\", \"people\", \"yell\", \"at\", \"the\", \"dogs\", \"in\", \"my\", \"neighborhood\", \".\"]\n# ::lemmas [\"some\", \"people\", \"yell\", \"at\", \"the\", \"dog\", \"in\", \"my\", \"neighborhood\", \".\"]\n# ::alignments 0-1.1.1 2-1 5-1.2 8-1.3\n(y / yell-01~e.2\n   :ARG0 (p / person\n            :mod (s / some~e.0))\n   :ARG2 (d / dog~e.5)\n   :location (n / neighborhood~e.8\n                :poss (ii / i)))", [[0, 4], [5, 11], [12, 16], [17, 19], [20, 23], [24, 28], [29, 31], [32, 34], [35, 47], [47, 48]]], ["# ::snt Some people yell at the dogs.\n# ::tokens [\"Some\", \"people\", \"yell\", \"at\", \"the\", \"dogs\", \".\"]\n# ::lemmas [\"some\", \"people\", \"yell\", \"at\", \"the\", \"dog\", \".\"]\n# ::alignments 0-1.1.1 2-1 5-1.2\n(y / yell-01~e.2\n   :ARG0 (p / person\n            :mod (s / some~e.0))\n   :ARG2 (d / dog~e.5))", [[0, 4], [5, 11], [12, 16], [17, 19], [20, 23], [24, 28], [28, 29]]], ["# ::snt Some people yell at noisy dogs.\n# ::tokens [\"Some\", \"people\", \"yell\", \"at\", \"noisy\", \"dogs\", \".\"]\n# ::lemmas [\"some\", \"people\", \"yell\", \"at\", \"noisy\", \"dog\", \".\"]\n# ::alignments 0-1.1.1 2-1 4-1.2.1 5-1.2\n(y / yell-01~e.2\n   :ARG0 (p / person\n            :mod (s / some~e.0))\n   :ARG2 (d / dog~e.5\n            :mod (n / noisy~e.4)))", [[0, 4], [5, 11], [12, 16], [17, 19], [20, 25], [26, 30], [30, 31]]], ["# ::snt Some people yell at dogs.\n# ::tokens [\"Some\", \"people\", \"yell\", \"at\", \"dogs\", \".\"]\n# ::lemmas [\"some\", \"people\", \"yell\", \"at\", \"dog\", \".\"]\n# ::alignments 0-1.1.1 2-1 4-1.2\n(y / yell-01~e.2\n   :ARG0 (p / person\n            :mod (s / some~e.0))\n   :ARG2 (d / dog~e.4))", [[0, 4], [5, 11], [12, 16], [17, 19], [20, 24], [24, 25]]], ["# ::snt Some people consider the noisy dogs dangerous.\n# ::tokens [\"Some\", \"people\", \"consider\", \"the\", \"noisy\", \"dogs\", \"dangerous\", \".\"]\n# ::lemmas [\"some\", \"people\", \"consider\", \"the\", \"noisy\", \"dog\", \"dangerous\", \".\"]\n# ::alignments 0-1.1.1 2-1 4-1.2.1.1 5-1.2.1 6-1.2\n(c / consider-01~e.2\n   :ARG0 (p / person\n            :mod (s / some~e.0))\n   :ARG1 (d / dangerous~e.6\n            :domain (d2 / dog~e.5\n                        :mod (n / noisy~e.4))))", [[0, 4], [5, 11], [12, 20], [21, 24], [25, 30], [31, 35], [36, 45], [45, 46]]], ["# ::snt Some people consider the dogs in my neighborhood dangerous.\n# ::tokens [\"Some\", \"people\", \"consider\", \"the\", \"dogs\", \"in\", \"my\", \"neighborhood\", \"dangerous\", \".\"]\n# ::lemmas [\"some\", \"people\", \"consider\", \"the\", \"dog\", \"in\", \"my\", \"neighborhood\", \"dangerous\", \".\"]\n# ::alignments 0-1.1.1 2-1 4-1.2.1 7-1.2.1.1 8-1.2\n(c / consider-01~e.2\n   :ARG0 (p / person\n            :mod (s / some~e.0))\n   :ARG1 (d / dangerous~e.8\n            :domain (d2 / dog~e.4\n                        :location (n / neighborhood~e.7\n                                     :poss (ii / i)))))", [[0, 4], [5, 11], [12, 20], [21, 24], [25, 29], [30, 32], [33, 35], [36, 48], [49, 58], [58, 59]]], ["# ::snt Some people consider noisy dogs in my neighborhood dangerous.\n# ::tokens [\"Some\", \"people\", \"consider\", \"noisy\", \"dogs\", \"in\", \"my\", \"neighborhood\", \"dangerous\", \".\"]\n# ::lemmas [\"some\", \"people\", \"consider\", \"noisy\", \"dog\", \"in\", \"my\", \"neighborhood\", \"dangerous\", \".\"]\n# ::alignments 0-1.1.1 2-1 3-1.2.1.1 4-1.2.1 7-1.2.1.2 8-1.2\n(c / consider-01~e.2\n   :ARG0 (p / person\n            :mod (s / some~e.0))\n   :ARG1 (d / dangerous~e.8\n            :domain (d2 / dog~e.4\n                        :mod (n / noisy~e.3)\n                        :location (n2 / neighborhood~e.7\n                                      :poss (ii / i)))))", [[0, 4], [5, 11], [12, 20], [21, 26], [27, 31], [32, 34], [35, 37], [38, 50], [51, 60], [60, 61]]], ["# ::snt Some people consider the dogs dangerous.\n# ::tokens [\"Some\", \"people\", \"consider\", \"the\", \"dogs\", \"dangerous\", \".\"]\n# ::lemmas [\"some\", \"people\", \"consider\", \"the\", \"dog\", \"dangerous\", \".\"]\n# ::alignments 0-1.1.1 2-1 4-1.2.1 5-1.2\n(c / consider-01~e.2\n   :ARG0 (p / person\n            :mod (s / some~e.0))\n   :ARG1 (d / dangerous~e.5\n            :domain (d2 / dog~e.4)))", [[0, 4], [5, 11], [12, 20], [21, 24], [25, 29], [30, 39], [39, 40]]], ["# ::snt Some people consider noisy dogs dangerous.\n# ::tokens [\"Some\", \"people\", \"consider\", \"noisy\", \"dogs\", \"dangerous\", \".\"]\n# ::lemmas [\"some\", \"people\", \"consider\", \"noisy\", \"dog\", \"dangerous\", \".\"]\n# ::alignments 0-1.1.1 2-1 3-1.2.1.1 4-1.2.1 5-1.2\n(c / consider-01~e.2\n   :ARG0 (p / person\n            :mod (s / some~e.0))\n   :ARG1 (d / dangerous~e.5\n            :domain (d2 / dog~e.4\n                        :mod (n / noisy~e.3))))", [[0, 4], [5, 11], [12, 20], [21, 26], [27, 31], [32, 41], [41, 42]]], ["# ::snt Some people consider dogs in my neighborhood dangerous.\n# ::tokens [\"Some\", \"people\", \"consider\", \"dogs\", \"in\", \"my\", \"neighborhood\", \"dangerous\", \".\"]\n# ::lemmas [\"some\", \"people\", \"consider\", \"dog\", \"in\", \"my\", \"neighborhood\", \"dangerous\", \".\"]\n# ::alignments 0-1.1.1 2-1 3-1.2.1 6-1.2.1.1 7-1.2\n(c / consider-01~e.2\n   :ARG0 (p / person\n            :mod (s / some~e.0))\n   :ARG1 (d / dangerous~e.7\n            :domain (d2 / dog~e.3\n                        :location (n / neighborhood~e.6\n                                     :poss (ii / i)))))", [[0, 4], [5, 11], [12, 20], [21, 25], [26, 28], [29, 31], [32, 44], [45, 54], [54, 55]]], ["# ::snt Some people consider dogs dangerous.\n# ::tokens [\"Some\", \"people\", \"consider\", \"dogs\", \"dangerous\", \".\"]\n# ::lemmas [\"some\", \"people\", \"consider\", \"dog\", \"dangerous\", \".\"]\n# ::alignments 0-1.1.1 2-1 3-1.2.1 4-1.2\n(c / consider-01~e.2\n   :ARG0 (p / person\n            :mod (s / some~e.0))\n   :ARG1 (d / dangerous~e.4\n            :domain (d2 / dog~e.3)))", [[0, 4], [5, 11], [12, 20], [21, 25], [26, 35], [35, 36]]], ["# ::snt People with children who use drugs should be locked up.\n# ::tokens [\"People\", \"with\", \"children\", \"who\", \"use\", \"drugs\", \"should\", \"be\", \"locked\", \"up\", \".\"]\n# ::lemmas [\"people\", \"with\", \"child\", \"who\", \"use\", \"drug\", \"should\", \"be\", \"lock\", \"up\", \".\"]\n# ::alignments 2-1.1.1.1.1 4-1.1.1.1.1.1 5-1.1.1.1.1.1.1 8-1.1\n(r / recommend-01\n   :ARG1 (l / lock-up-03~e.8\n            :ARG1 (p / person\n                     :ARG0-of (h / have-05\n                                 :ARG1 (c / child~e.2\n                                          :ARG0-of (u / use-01~e.4\n                                                      :ARG1 (d / drug~e.5)))))))", [[0, 6], [7, 11], [12, 20], [21, 24], [25, 28], [29, 34], [35, 41], [42, 44], [45, 51], [52, 54], [54, 55]]], ["# ::snt This disease gave Leslie a fever in Rome.\n# ::tokens [\"This\", \"disease\", \"gave\", \"Leslie\", \"a\", \"fever\", \"in\", \"Rome\", \".\"]\n# ::lemmas [\"this\", \"disease\", \"give\", \"Leslie\", \"a\", \"fever\", \"in\", \"Rome\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1 3-1.3.1.1 5-1.2 7-1.4.1.1\n(g / give-01~e.2\n   :ARG0 (d / disease~e.1\n            :mod (t / this~e.0))\n   :ARG1 (f / fever~e.5)\n   :ARG2 (p / person\n            :name (n / name\n                     :op1 \"Leslie\"~e.3))\n   :location (c / city\n                :name (n2 / name\n                          :op1 \"Rome\"~e.7)))", [[0, 4], [5, 12], [13, 17], [18, 24], [25, 26], [27, 32], [33, 35], [36, 40], [40, 41]]], ["# ::snt The love of my life and mother of my children would never do such a thing.\n# ::tokens [\"The\", \"love\", \"of\", \"my\", \"life\", \"and\", \"mother\", \"of\", \"my\", \"children\", \"would\", \"never\", \"do\", \"such\", \"a\", \"thing\", \".\"]\n# ::lemmas [\"the\", \"love\", \"of\", \"my\", \"life\", \"and\", \"mother\", \"of\", \"my\", \"child\", \"would\", \"never\", \"do\", \"such\", \"a\", \"thing\", \".\"]\n# ::alignments 1-1.2.1 4-1.2.1.1 5-1.2 6-1.2.2.1.2 9-1.2.2.1.1.1.2 12-1 13-1.3.1 15-1.3\n(d / do-02~e.12\n   :polarity -\n   :ARG0 (a / and~e.5\n            :op1 (l / love-01~e.1\n                    :ARG1 (l2 / life~e.4\n                              :poss (ii / i)))\n            :op2 (p / person\n                    :ARG0-of (h / have-rel-role-91\n                                :ARG1 (p2 / person\n                                          :ARG0-of (h2 / have-rel-role-91\n                                                       :ARG1 ii\n                                                       :ARG2 (c / child~e.9)))\n                                :ARG2 (m / mother~e.6))))\n   :ARG1 (t / thing~e.15\n            :mod (s / such~e.13))\n   :time (e / ever))", [[0, 3], [4, 8], [9, 11], [12, 14], [15, 19], [20, 23], [24, 30], [31, 33], [34, 36], [37, 45], [46, 51], [52, 57], [58, 60], [61, 65], [66, 67], [68, 73], [73, 74]]], ["# ::snt Most elections are quickly forgotten, but the election of 2000, everyone will remember for a long time.\n# ::tokens [\"Most\", \"elections\", \"are\", \"quickly\", \"forgotten\", \",\", \"but\", \"the\", \"election\", \"of\", \"2000\", \",\", \"everyone\", \"will\", \"remember\", \"for\", \"a\", \"long\", \"time\", \".\"]\n# ::lemmas [\"most\", \"election\", \"be\", \"quickly\", \"forget\", \",\", \"but\", \"the\", \"election\", \"of\", \"2000\", \",\", \"everyone\", \"will\", \"remember\", \"for\", \"a\", \"long\", \"time\", \".\"]\n# ::alignments 0-1.1.1.1 1-1.1.1 3-1.1.2 4-1.1 6-1 8-1.2.2 10-1.2.2.1.1 12-1.2.1 14-1.2 17-1.2.3 18-1.2.2.1.r\n(c / contrast-01~e.6\n   :ARG1 (f / forget-01~e.4\n            :ARG1 (e / elect-01~e.1\n                     :mod (m / most~e.0))\n            :ARG1-of (q / quick-02~e.3))\n   :ARG2 (r / remember-01~e.14\n            :ARG0 (e2 / everyone~e.12)\n            :ARG1 (e3 / elect-01~e.8\n                      :time~e.18 (d / date-entity\n                                    :year 2000~e.10))\n            :ARG1-of (l / long-03~e.17)))", [[0, 4], [5, 14], [15, 18], [19, 26], [27, 36], [36, 37], [38, 41], [42, 45], [46, 54], [55, 57], [58, 62], [62, 63], [64, 72], [73, 77], [78, 86], [87, 90], [91, 92], [93, 97], [98, 102], [102, 103]]], ["# ::snt It is painting by Klee or drawing by Miro that the museum displays no.\n# ::tokens [\"It\", \"is\", \"painting\", \"by\", \"Klee\", \"or\", \"drawing\", \"by\", \"Miro\", \"that\", \"the\", \"museum\", \"displays\", \"no\", \".\"]\n# ::lemmas [\"it\", \"be\", \"paint\", \"by\", \"Klee\", \"or\", \"draw\", \"by\", \"Miro\", \"that\", \"the\", \"museum\", \"display\", \"no\", \".\"]\n# ::alignments 2-1.3.1 4-1.3.1.1.1.1 5-1.3 6-1.3.2 8-1.3.2.1.1.1 11-1.2 12-1 13-1.1\n(d / display-01~e.12\n   :polarity -~e.13\n   :ARG0 (m / museum~e.11)\n   :ARG1 (o / or~e.5\n            :op1 (p / paint-02~e.2\n                    :ARG0 (p2 / person\n                              :name (n / name\n                                       :op1 \"Klee\"~e.4)))\n            :op2 (d2 / draw-01~e.6\n                     :ARG0 (p3 / person\n                               :name (n2 / name\n                                         :op1 \"Miro\"~e.8)))))", [[0, 2], [3, 5], [6, 14], [15, 17], [18, 22], [23, 25], [26, 33], [34, 36], [37, 41], [42, 46], [47, 50], [51, 57], [58, 66], [67, 69], [69, 70]]], ["# ::snt The defendant denied the accusation.\n# ::tokens [\"The\", \"defendant\", \"denied\", \"the\", \"accusation\", \".\"]\n# ::lemmas [\"the\", \"defendant\", \"deny\", \"the\", \"accusation\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2\n(d / deny-01~e.2\n   :ARG0 (d2 / defendant~e.1)\n   :ARG1 (a / accuse-01~e.4\n            :ARG1 d2))", [[0, 3], [4, 13], [14, 20], [21, 24], [25, 35], [35, 36]]], ["# ::snt The teacher disappeared the problem.\n# ::tokens [\"The\", \"teacher\", \"disappeared\", \"the\", \"problem\", \".\"]\n# ::lemmas [\"the\", \"teacher\", \"disappear\", \"the\", \"problem\", \".\"]\n# ::alignments 1-1.1.1 2-1 4-1.2\n(d / disappear-01~e.2\n   :ARG1 (p / person\n            :ARG0-of (t / teach-01~e.1))\n   :topic (p2 / problem~e.4))", [[0, 3], [4, 11], [12, 23], [24, 27], [28, 35], [35, 36]]], ["# ::snt The teacher handed the student.\n# ::tokens [\"The\", \"teacher\", \"handed\", \"the\", \"student\", \".\"]\n# ::lemmas [\"the\", \"teacher\", \"hand\", \"the\", \"student\", \".\"]\n# ::alignments 1-1.1.1 2-1 4-1.2.1\n(h / hand-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (t / teach-01~e.1))\n   :ARG2 (p2 / person\n             :ARG0-of (s / study-01~e.4)))", [[0, 3], [4, 11], [12, 18], [19, 22], [23, 30], [30, 31]]], ["# ::snt The bird sings.\n# ::tokens [\"The\", \"bird\", \"sings\", \".\"]\n# ::lemmas [\"the\", \"bird\", \"sing\", \".\"]\n# ::alignments 1-1.1 2-1\n(s / sing-01~e.2\n   :ARG0 (b / bird~e.1))", [[0, 3], [4, 8], [9, 14], [14, 15]]], ["# ::snt The bird sing.\n# ::tokens [\"The\", \"bird\", \"sing\", \".\"]\n# ::lemmas [\"the\", \"bird\", \"sing\", \".\"]\n# ::alignments 1-1.1 2-1\n(s / sing-01~e.2\n   :ARG0 (b / bird~e.1))", [[0, 3], [4, 8], [9, 13], [13, 14]]], ["# ::snt Birds sings.\n# ::tokens [\"Birds\", \"sings\", \".\"]\n# ::lemmas [\"bird\", \"sing\", \".\"]\n# ::alignments 0-1.1 1-1\n(s / sing-01~e.1\n   :ARG0 (b / bird~e.0))", [[0, 5], [6, 11], [11, 12]]], ["# ::snt The birds give the worm a tug.\n# ::tokens [\"The\", \"birds\", \"give\", \"the\", \"worm\", \"a\", \"tug\", \".\"]\n# ::lemmas [\"the\", \"bird\", \"give\", \"the\", \"worm\", \"a\", \"tug\", \".\"]\n# ::alignments 1-1.1 4-1.2 6-1\n(t / tug-01~e.6\n   :ARG0 (b / bird~e.1)\n   :ARG1 (w / worm~e.4))", [[0, 3], [4, 9], [10, 14], [15, 18], [19, 23], [24, 25], [26, 29], [29, 30]]], ["# ::snt The bird give the worm a tug.\n# ::tokens [\"The\", \"bird\", \"give\", \"the\", \"worm\", \"a\", \"tug\", \".\"]\n# ::lemmas [\"the\", \"bird\", \"give\", \"the\", \"worm\", \"a\", \"tug\", \".\"]\n# ::alignments 1-1.1 4-1.2 6-1\n(t / tug-01~e.6\n   :ARG0 (b / bird~e.1)\n   :ARG1 (w / worm~e.4))", [[0, 3], [4, 8], [9, 13], [14, 17], [18, 22], [23, 24], [25, 28], [28, 29]]], ["# ::snt The birds gives the worm a tug.\n# ::tokens [\"The\", \"birds\", \"gives\", \"the\", \"worm\", \"a\", \"tug\", \".\"]\n# ::lemmas [\"the\", \"bird\", \"give\", \"the\", \"worm\", \"a\", \"tug\", \".\"]\n# ::alignments 1-1.1 4-1.2 6-1\n(t / tug-01~e.6\n   :ARG0 (b / bird~e.1)\n   :ARG1 (w / worm~e.4))", [[0, 3], [4, 9], [10, 15], [16, 19], [20, 24], [25, 26], [27, 30], [30, 31]]], ["# ::snt Terry delighted in my pain.\n# ::tokens [\"Terry\", \"delighted\", \"in\", \"my\", \"pain\", \".\"]\n# ::lemmas [\"Terry\", \"delight\", \"in\", \"my\", \"pain\", \".\"]\n# ::alignments 0-1.2.1.1 1-1 4-1.1\n(d / delight-01~e.1\n   :ARG0 (p / pain-01~e.4\n            :ARG1 (ii / i))\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Terry\"~e.0)))", [[0, 5], [6, 15], [16, 18], [19, 21], [22, 26], [26, 27]]], ["# ::snt Terry delighted.\n# ::tokens [\"Terry\", \"delighted\", \".\"]\n# ::lemmas [\"Terry\", \"delight\", \".\"]\n# ::alignments 0-1.1.1.1 1-1\n(d / delight-01~e.1\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Terry\"~e.0)))", [[0, 5], [6, 15], [15, 16]]], ["# ::snt Terry delighted my pain.\n# ::tokens [\"Terry\", \"delighted\", \"my\", \"pain\", \".\"]\n# ::lemmas [\"Terry\", \"delight\", \"my\", \"pain\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2\n(d / delight-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Terry\"~e.0))\n   :ARG1 (p2 / pain-01~e.3\n             :ARG1 (ii / i)))", [[0, 5], [6, 15], [16, 18], [19, 23], [23, 24]]], ["# ::snt Kerry remarked it was late.\n# ::tokens [\"Kerry\", \"remarked\", \"it\", \"was\", \"late\", \".\"]\n# ::lemmas [\"Kerry\", \"remark\", \"it\", \"be\", \"late\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1 4-1.2\n(r / remark-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kerry\"~e.0))\n   :ARG1 (l / late~e.4\n            :domain (ii / it~e.2)))", [[0, 5], [6, 14], [15, 17], [18, 21], [22, 26], [26, 27]]], ["# ::snt What additional categories and rules would be required to handle these verbs?\n# ::tokens [\"What\", \"additional\", \"categories\", \"and\", \"rules\", \"would\", \"be\", \"required\", \"to\", \"handle\", \"these\", \"verbs\", \"?\"]\n# ::lemmas [\"what\", \"additional\", \"category\", \"and\", \"rule\", \"would\", \"be\", \"require\", \"to\", \"handle\", \"these\", \"verb\", \"?\"]\n# ::alignments 2-1.1.1 3-1.1 4-1.1.2 7-1 9-1.1.5 11-1.1.5.1\n(r / require-01~e.7\n   :ARG1 (a / and~e.3\n            :op1 (c / category~e.2)\n            :op2 (r2 / rule~e.4)\n            :ARG1-of (a2 / add-02)\n            :mod (a3 / amr-unknown)\n            :ARG0-of (h / handle-01~e.9\n                        :ARG1 (v / verb~e.11\n                                 :mod (t / this)))))", [[0, 4], [5, 15], [16, 26], [27, 30], [31, 36], [37, 42], [43, 45], [46, 54], [55, 57], [58, 64], [65, 70], [71, 76], [76, 77]]], ["# ::snt We created a monster.\n# ::tokens [\"We\", \"created\", \"a\", \"monster\", \".\"]\n# ::lemmas [\"we\", \"create\", \"a\", \"monster\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2\n(c / create-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (m / monster~e.3))", [[0, 2], [3, 10], [11, 12], [13, 20], [20, 21]]], ["# ::snt I was already aware of fact.\n# ::tokens [\"I\", \"was\", \"already\", \"aware\", \"of\", \"fact\", \".\"]\n# ::lemmas [\"i\", \"be\", \"already\", \"aware\", \"of\", \"fact\", \".\"]\n# ::alignments 0-1.1 2-1.3 5-1.2\n(r / realize-01\n   :ARG0 (ii / i~e.0)\n   :ARG1 (f / fact~e.5)\n   :time (a / already~e.2))", [[0, 1], [2, 5], [6, 13], [14, 19], [20, 22], [23, 27], [27, 28]]], ["# ::snt The defendant deny the allegation.\n# ::tokens [\"The\", \"defendant\", \"deny\", \"the\", \"allegation\", \".\"]\n# ::lemmas [\"the\", \"defendant\", \"deny\", \"the\", \"allegation\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2.1\n(d / deny-01~e.2\n   :ARG0 (d2 / defendant~e.1)\n   :ARG1 (t / thing\n            :ARG1-of (a / allege-01~e.4)))", [[0, 3], [4, 13], [14, 18], [19, 22], [23, 33], [33, 34]]], ["# ::snt The defendants denies the allegation.\n# ::tokens [\"The\", \"defendants\", \"denies\", \"the\", \"allegation\", \".\"]\n# ::lemmas [\"the\", \"defendant\", \"deny\", \"the\", \"allegation\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2\n(d / deny-01~e.2\n   :ARG0 (d2 / defendant~e.1)\n   :ARG1 (a / allege-01~e.4))", [[0, 3], [4, 14], [15, 21], [22, 25], [26, 36], [36, 37]]], ["# ::snt The defendant walks.\n# ::tokens [\"The\", \"defendant\", \"walks\", \".\"]\n# ::lemmas [\"the\", \"defendant\", \"walk\", \".\"]\n# ::alignments 1-1.1 2-1\n(w / walk-01~e.2\n   :ARG0 (d / defendant~e.1))", [[0, 3], [4, 13], [14, 19], [19, 20]]], ["# ::snt The defendant walk.\n# ::tokens [\"The\", \"defendant\", \"walk\", \".\"]\n# ::lemmas [\"the\", \"defendant\", \"walk\", \".\"]\n# ::alignments 1-1.1 2-1\n(w / walk-01~e.2\n   :ARG0 (d / defendant~e.1))", [[0, 3], [4, 13], [14, 18], [18, 19]]], ["# ::snt The defendants walks.\n# ::tokens [\"The\", \"defendants\", \"walks\", \".\"]\n# ::lemmas [\"the\", \"defendant\", \"walk\", \".\"]\n# ::alignments 1-1.1 2-1\n(w / walk-01~e.2\n   :ARG0 (d / defendant~e.1))", [[0, 3], [4, 14], [15, 20], [20, 21]]], ["# ::snt How many feature structures categories can label the first daughter?\n# ::tokens [\"How\", \"many\", \"feature\", \"structures\", \"categories\", \"can\", \"label\", \"the\", \"first\", \"daughter\", \"?\"]\n# ::lemmas [\"how\", \"many\", \"feature\", \"structure\", \"category\", \"can\", \"label\", \"the\", \"first\", \"daughter\", \"?\"]\n# ::alignments 2-1.1.1.1.1 3-1.1.1.1 4-1.1.1 6-1.1 9-1.1.2.1.1\n(p / possible-01\n   :ARG1 (l / label-01~e.6\n            :ARG0 (c / category~e.4\n                     :mod (s / structure~e.3\n                             :ARG1-of (f / feature-01~e.2))\n                     :quant (a / amr-unknown))\n            :ARG1 (p2 / person\n                      :ARG0-of (h / have-rel-role-91\n                                  :ARG2 (d / daughter~e.9\n                                           :ord (o / ordinal-entity\n                                                   :value 1))))))", [[0, 3], [4, 8], [9, 16], [17, 27], [28, 38], [39, 42], [43, 48], [49, 52], [53, 58], [59, 67], [67, 68]]], ["# ::snt The child put the toy on the table.\n# ::tokens [\"The\", \"child\", \"put\", \"the\", \"toy\", \"on\", \"the\", \"table\", \".\"]\n# ::lemmas [\"the\", \"child\", \"put\", \"the\", \"toy\", \"on\", \"the\", \"table\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2 7-1.3\n(p / put-01~e.2\n   :ARG0 (c / child~e.1)\n   :ARG1 (t / toy~e.4)\n   :ARG2 (t2 / table~e.7))", [[0, 3], [4, 9], [10, 13], [14, 17], [18, 21], [22, 24], [25, 28], [29, 34], [34, 35]]], ["# ::snt The teacher became angry with the students.\n# ::tokens [\"The\", \"teacher\", \"became\", \"angry\", \"with\", \"the\", \"students\", \".\"]\n# ::lemmas [\"the\", \"teacher\", \"become\", \"angry\", \"with\", \"the\", \"student\", \".\"]\n# ::alignments 1-1.1.1 2-1 6-1.2.1.1\n(b / become-01~e.2\n   :ARG1 (p / person\n            :ARG0-of (t / teach-01~e.1))\n   :ARG2 (a / anger-01\n            :ARG0 (p2 / person\n                      :ARG0-of (s / study-01~e.6))\n            :ARG1 p))", [[0, 3], [4, 11], [12, 18], [19, 24], [25, 29], [30, 33], [34, 42], [42, 43]]], ["# ::snt The teacher became.\n# ::tokens [\"The\", \"teacher\", \"became\", \".\"]\n# ::lemmas [\"the\", \"teacher\", \"become\", \".\"]\n# ::alignments 1-1.1.1 2-1\n(b / become-01~e.2\n   :ARG1 (p / person\n            :ARG0-of (t / teach-01~e.1)))", [[0, 3], [4, 11], [12, 18], [18, 19]]], ["# ::snt The jury believed the defendant lied.\n# ::tokens [\"The\", \"jury\", \"believed\", \"the\", \"defendant\", \"lied\", \".\"]\n# ::lemmas [\"the\", \"jury\", \"believe\", \"the\", \"defendant\", \"lie\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2.1 5-1.2\n(b / believe-01~e.2\n   :ARG0 (j / jury~e.1)\n   :ARG1 (l / lie-08~e.5\n            :ARG0 (d / defendant~e.4)))", [[0, 3], [4, 8], [9, 17], [18, 21], [22, 31], [32, 36], [36, 37]]], ["# ::snt The guests dined.\n# ::tokens [\"The\", \"guests\", \"dined\", \".\"]\n# ::lemmas [\"the\", \"guest\", \"dine\", \".\"]\n# ::alignments 1-1.1 2-1\n(d / dine-01~e.2\n   :ARG0 (g / guest~e.1))", [[0, 3], [4, 10], [11, 16], [16, 17]]], ["# ::snt We relied on Leslie.\n# ::tokens [\"We\", \"relied\", \"on\", \"Leslie\", \".\"]\n# ::lemmas [\"we\", \"rely\", \"on\", \"Leslie\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1.1\n(r / rely-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Leslie\"~e.3)))", [[0, 2], [3, 9], [10, 12], [13, 19], [19, 20]]], ["# ::snt We relied above Leslie.\n# ::tokens [\"We\", \"relied\", \"above\", \"Leslie\", \".\"]\n# ::lemmas [\"we\", \"rely\", \"above\", \"Leslie\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2 3-1.2.1.1.1\n(r / rely-01~e.1\n   :ARG0 (w / we~e.0)\n   :location (a / above~e.2\n                :op1 (p / person\n                        :name (n / name\n                                 :op1 \"Leslie\"~e.3))))", [[0, 2], [3, 9], [10, 15], [16, 22], [22, 23]]], ["# ::snt We celebrated in the streets.\n# ::tokens [\"We\", \"celebrated\", \"in\", \"the\", \"streets\", \".\"]\n# ::lemmas [\"we\", \"celebrate\", \"in\", \"the\", \"street\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2\n(c / celebrate-02~e.1\n   :ARG0 (w / we~e.0)\n   :location (s / street~e.4))", [[0, 2], [3, 13], [14, 16], [17, 20], [21, 28], [28, 29]]], ["# ::snt We celebrated in the streets in the rain on Tuesday in the morning.\n# ::tokens [\"We\", \"celebrated\", \"in\", \"the\", \"streets\", \"in\", \"the\", \"rain\", \"on\", \"Tuesday\", \"in\", \"the\", \"morning\", \".\"]\n# ::lemmas [\"we\", \"celebrate\", \"in\", \"the\", \"street\", \"in\", \"the\", \"rain\", \"on\", \"Tuesday\", \"in\", \"the\", \"morning\", \".\"]\n# ::alignments 0-1.1 1-1 4-1.2 7-1.3 9-1.3.1.1 12-1.3.1.2\n(c / celebrate-02~e.1\n   :ARG0 (w / we~e.0)\n   :location (s / street~e.4)\n   :time (r / rain-01~e.7\n            :time (d / date-entity\n                     :weekday (t / tuesday~e.9)\n                     :dayperiod (m / morning~e.12))))", [[0, 2], [3, 13], [14, 16], [17, 20], [21, 28], [29, 31], [32, 35], [36, 40], [41, 43], [44, 51], [52, 54], [55, 58], [59, 66], [66, 67]]], ["# ::snt The children are happy of ice cream.\n# ::tokens [\"The\", \"children\", \"are\", \"happy\", \"of\", \"ice\", \"cream\", \".\"]\n# ::lemmas [\"the\", \"child\", \"be\", \"happy\", \"of\", \"ice\", \"cream\", \".\"]\n# ::alignments 1-1.2 3-1\n(h / happy-01~e.3\n   :ARG0 (ii / ice-cream)\n   :ARG1 (c / child~e.1))", [[0, 3], [4, 12], [13, 16], [17, 22], [23, 25], [26, 29], [30, 35], [35, 36]]], ["# ::snt The children are fond with the ice cream.\n# ::tokens [\"The\", \"children\", \"are\", \"fond\", \"with\", \"the\", \"ice\", \"cream\", \".\"]\n# ::lemmas [\"the\", \"child\", \"be\", \"fond\", \"with\", \"the\", \"ice\", \"cream\", \".\"]\n# ::alignments 1-1.1 3-1\n(f / fond-01~e.3\n   :ARG0 (c / child~e.1)\n   :ARG1 (ii / ice-cream))", [[0, 3], [4, 12], [13, 16], [17, 21], [22, 26], [27, 30], [31, 34], [35, 40], [40, 41]]], ["# ::snt The children are fond that they have ice cream.\n# ::tokens [\"The\", \"children\", \"are\", \"fond\", \"that\", \"they\", \"have\", \"ice\", \"cream\", \".\"]\n# ::lemmas [\"the\", \"child\", \"be\", \"fond\", \"that\", \"they\", \"have\", \"ice\", \"cream\", \".\"]\n# ::alignments 1-1.1 3-1 6-1.2\n(f / fond-01~e.3\n   :ARG0 (c / child~e.1)\n   :ARG1 (h / have-03~e.6\n            :ARG0 c\n            :ARG1 (ii / ice-cream)))", [[0, 3], [4, 12], [13, 16], [17, 21], [22, 26], [27, 31], [32, 36], [37, 40], [41, 46], [46, 47]]], ["# ::snt A magazine appeared on the newsstands.\n# ::tokens [\"A\", \"magazine\", \"appeared\", \"on\", \"the\", \"newsstands\", \".\"]\n# ::lemmas [\"a\", \"magazine\", \"appear\", \"on\", \"the\", \"newsstand\", \".\"]\n# ::alignments 1-1.1 2-1 5-1.2\n(a / appear-01~e.2\n   :ARG1 (m / magazine~e.1)\n   :location (n / newsstand~e.5))", [[0, 1], [2, 10], [11, 19], [20, 22], [23, 26], [27, 37], [37, 38]]], ["# ::snt A magazine about crime appeared on the newsstands.\n# ::tokens [\"A\", \"magazine\", \"about\", \"crime\", \"appeared\", \"on\", \"the\", \"newsstands\", \".\"]\n# ::lemmas [\"a\", \"magazine\", \"about\", \"crime\", \"appear\", \"on\", \"the\", \"newsstand\", \".\"]\n# ::alignments 1-1.1 3-1.1.1 4-1 7-1.2\n(a / appear-01~e.4\n   :ARG1 (m / magazine~e.1\n            :topic (c / crime-02~e.3))\n   :location (n / newsstand~e.7))", [[0, 1], [2, 10], [11, 16], [17, 22], [23, 31], [32, 34], [35, 38], [39, 49], [49, 50]]], ["# ::snt Newsweek appeared on the newsstands.\n# ::tokens [\"Newsweek\", \"appeared\", \"on\", \"the\", \"newsstands\", \".\"]\n# ::lemmas [\"Newsweek\", \"appear\", \"on\", \"the\", \"newsstand\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.2\n(a / appear-01~e.1\n   :ARG1 (m / magazine\n            :name (n / name\n                     :op1 \"Newsweek\"~e.0))\n   :location (n2 / newsstand~e.4))", [[0, 8], [9, 17], [18, 20], [21, 24], [25, 35], [35, 36]]], ["# ::snt Newsweek about crime appeared on the newsstands.\n# ::tokens [\"Newsweek\", \"about\", \"crime\", \"appeared\", \"on\", \"the\", \"newsstands\", \".\"]\n# ::lemmas [\"Newsweek\", \"about\", \"crime\", \"appear\", \"on\", \"the\", \"newsstand\", \".\"]\n# ::alignments 0-1.1.1.1 2-1.1.2 3-1 6-1.2\n(a / appear-01~e.3\n   :ARG1 (m / magazine\n            :name (n / name\n                     :op1 \"Newsweek\"~e.0)\n            :topic (c / crime-02~e.2))\n   :location (n2 / newsstand~e.6))", [[0, 8], [9, 14], [15, 20], [21, 29], [30, 32], [33, 36], [37, 47], [47, 48]]], ["# ::snt The report that crime was declining surprised many people.\n# ::tokens [\"The\", \"report\", \"that\", \"crime\", \"was\", \"declining\", \"surprised\", \"many\", \"people\", \".\"]\n# ::lemmas [\"the\", \"report\", \"that\", \"crime\", \"be\", \"decline\", \"surprised\", \"many\", \"people\", \".\"]\n# ::alignments 1-1.1 3-1.1.1.1 5-1.1.1 6-1 7-1.2.1\n(s / surprise-01~e.6\n   :ARG0 (r / report-01~e.1\n            :ARG1 (d / decline-01~e.5\n                     :ARG1 (c / crime-02~e.3)))\n   :ARG1 (p / person\n            :quant (m / many~e.7)))", [[0, 3], [4, 10], [11, 15], [16, 21], [22, 25], [26, 35], [36, 45], [46, 50], [51, 57], [57, 58]]], ["# ::snt The book surprised many people.\n# ::tokens [\"The\", \"book\", \"surprised\", \"many\", \"people\", \".\"]\n# ::lemmas [\"the\", \"book\", \"surprise\", \"many\", \"people\", \".\"]\n# ::alignments 1-1.1 2-1 3-1.2.1\n(s / surprise-01~e.2\n   :ARG0 (b / book~e.1)\n   :ARG1 (p / person\n            :quant (m / many~e.3)))", [[0, 3], [4, 8], [9, 18], [19, 23], [24, 30], [30, 31]]], ["# ::snt The book that crime was declining surprised many people.\n# ::tokens [\"The\", \"book\", \"that\", \"crime\", \"was\", \"declining\", \"surprised\", \"many\", \"people\", \".\"]\n# ::lemmas [\"the\", \"book\", \"that\", \"crime\", \"be\", \"decline\", \"surprised\", \"many\", \"people\", \".\"]\n# ::alignments 1-1.1 3-1.1.1.1 5-1.1.1 6-1 7-1.2.1\n(s / surprise-01~e.6\n   :ARG0 (b / book~e.1\n            :topic (d / decline-01~e.5\n                      :ARG1 (c / crime-02~e.3)))\n   :ARG1 (p / person\n            :quant (m / many~e.7)))", [[0, 3], [4, 8], [9, 13], [14, 19], [20, 23], [24, 33], [34, 43], [44, 48], [49, 55], [55, 56]]], ["# ::snt The storm arrived after the picnic.\n# ::tokens [\"The\", \"storm\", \"arrived\", \"after\", \"the\", \"picnic\", \".\"]\n# ::lemmas [\"the\", \"storm\", \"arrive\", \"after\", \"the\", \"picnic\", \".\"]\n# ::alignments 1-1.1 2-1 3-1.2 5-1.2.1\n(a / arrive-01~e.2\n   :ARG1 (s / storm~e.1)\n   :time (a2 / after~e.3\n             :op1 (p / picnic-01~e.5)))", [[0, 3], [4, 9], [10, 17], [18, 23], [24, 27], [28, 34], [34, 35]]], ["# ::snt The storm arrived while the picnic.\n# ::tokens [\"The\", \"storm\", \"arrived\", \"while\", \"the\", \"picnic\", \".\"]\n# ::lemmas [\"the\", \"storm\", \"arrive\", \"while\", \"the\", \"picnic\", \".\"]\n# ::alignments 1-1.1 2-1 5-1.2\n(a / arrive-01~e.2\n   :ARG1 (s / storm~e.1)\n   :time (p / picnic-01~e.5))", [[0, 3], [4, 9], [10, 17], [18, 23], [24, 27], [28, 34], [34, 35]]], ["# ::snt The storm arrived while we ate lunch.\n# ::tokens [\"The\", \"storm\", \"arrived\", \"while\", \"we\", \"ate\", \"lunch\", \".\"]\n# ::lemmas [\"the\", \"storm\", \"arrive\", \"while\", \"we\", \"eat\", \"lunch\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2.1 6-1.2\n(a / arrive-01~e.2\n   :ARG1 (s / storm~e.1)\n   :time (l / lunch-01~e.6\n            :ARG0 (w / we~e.4)))", [[0, 3], [4, 9], [10, 17], [18, 23], [24, 26], [27, 30], [31, 36], [36, 37]]], ["# ::snt This dogs barked.\n# ::tokens [\"This\", \"dogs\", \"barked\", \".\"]\n# ::lemmas [\"this\", \"dog\", \"bark\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1\n(b / bark-01~e.2\n   :ARG0 (d / dog~e.1\n            :mod (t / this~e.0)))", [[0, 4], [5, 9], [10, 16], [16, 17]]], ["# ::snt These dogs barked.\n# ::tokens [\"These\", \"dogs\", \"barked\", \".\"]\n# ::lemmas [\"these\", \"dog\", \"bark\", \".\"]\n# ::alignments 1-1.1 2-1\n(b / bark-01~e.2\n   :ARG0 (d / dog~e.1\n            :mod (t / this)))", [[0, 5], [6, 10], [11, 17], [17, 18]]], ["# ::snt A chair was broken.\n# ::tokens [\"A\", \"chair\", \"was\", \"broken\", \".\"]\n# ::lemmas [\"a\", \"chair\", \"be\", \"break\", \".\"]\n# ::alignments 1-1.1 3-1\n(b / break-01~e.3\n   :ARG1 (c / chair~e.1))", [[0, 1], [2, 7], [8, 11], [12, 18], [18, 19]]], ["# ::snt They want them arrested.\n# ::tokens [\"They\", \"want\", \"them\", \"arrested\", \".\"]\n# ::lemmas [\"they\", \"want\", \"they\", \"arrest\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1 3-1.2\n(w / want-01~e.1\n   :ARG0 (t / they~e.0)\n   :ARG1 (a / arrest-01~e.3\n            :ARG1 (t2 / they~e.2)))", [[0, 4], [5, 9], [10, 14], [15, 23], [23, 24]]], ["# ::snt They preferred them arrested.\n# ::tokens [\"They\", \"preferred\", \"them\", \"arrested\", \".\"]\n# ::lemmas [\"they\", \"prefer\", \"they\", \"arrest\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1 3-1.2\n(p / prefer-01~e.1\n   :ARG0 (t / they~e.0)\n   :ARG1 (a / arrest-01~e.3\n            :ARG1 (t2 / they~e.2)))", [[0, 4], [5, 14], [15, 19], [20, 28], [28, 29]]], ["# ::snt We preferred them on our team.\n# ::tokens [\"We\", \"preferred\", \"them\", \"on\", \"our\", \"team\", \".\"]\n# ::lemmas [\"we\", \"prefer\", \"they\", \"on\", \"our\", \"team\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2 5-1.2.1\n(p / prefer-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (t / they~e.2\n            :location (t2 / team~e.5\n                          :poss w)))", [[0, 2], [3, 12], [13, 17], [18, 20], [21, 24], [25, 29], [29, 30]]], ["# ::snt With my parents as supportive as they are, I'll be in fine shape.\n# ::tokens [\"With\", \"my\", \"parents\", \"as\", \"supportive\", \"as\", \"they\", \"are\", \",\", \"I\", \"'ll\", \"be\", \"in\", \"fine\", \"shape\", \".\"]\n# ::lemmas [\"with\", \"my\", \"parent\", \"as\", \"supportive\", \"as\", \"they\", \"be\", \",\", \"i\", \"will\", \"be\", \"in\", \"fine\", \"shape\", \".\"]\n# ::alignments 2-1.3.1.1.2 4-1.3 9-1.2 13-1.1 14-1\n(s / shape~e.14\n   :ARG1-of (f / fine-04~e.13)\n   :domain (ii / i~e.9)\n   :condition (s2 / support-01~e.4\n                  :ARG0 (p / person\n                           :ARG0-of (h / have-rel-role-91\n                                       :ARG1 ii\n                                       :ARG2 (p2 / parent~e.2)))\n                  :ARG1 ii\n                  :concession (a / as-much-as)\n                  :op1-of a))", [[0, 4], [5, 7], [8, 15], [16, 18], [19, 29], [30, 32], [33, 37], [38, 41], [41, 42], [43, 44], [44, 47], [48, 50], [51, 53], [54, 58], [59, 64], [64, 65]]], ["# ::snt We walks.\n# ::tokens [\"We\", \"walks\", \".\"]\n# ::lemmas [\"we\", \"walk\", \".\"]\n# ::alignments 0-1.1 1-1\n(w / walk-01~e.1\n   :ARG0 (w2 / we~e.0))", [[0, 2], [3, 8], [8, 9]]], ["# ::snt Few dog barked.\n# ::tokens [\"Few\", \"dog\", \"barked\", \".\"]\n# ::lemmas [\"few\", \"dog\", \"bark\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1\n(b / bark-01~e.2\n   :ARG0 (d / dog~e.1\n            :quant (f / few~e.0)))", [[0, 3], [4, 7], [8, 14], [14, 15]]], ["# ::snt The dogs barked.\n# ::tokens [\"The\", \"dogs\", \"barked\", \".\"]\n# ::lemmas [\"the\", \"dog\", \"bark\", \".\"]\n# ::alignments 1-1.1 2-1\n(b / bark-01~e.2\n   :ARG0 (d / dog~e.1))", [[0, 3], [4, 8], [9, 15], [15, 16]]], ["# ::snt I walk and Dana runs.\n# ::tokens [\"I\", \"walk\", \"and\", \"Dana\", \"runs\", \".\"]\n# ::lemmas [\"i\", \"walk\", \"and\", \"Dana\", \"run\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 2-1 3-1.2.1.1.1 4-1.2\n(a / and~e.2\n   :op1 (w / walk-01~e.1\n           :ARG0 (ii / i~e.0))\n   :op2 (r / run-02~e.4\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Dana\"~e.3))))", [[0, 1], [2, 6], [7, 10], [11, 15], [16, 20], [20, 21]]], ["# ::snt They like us.\n# ::tokens [\"They\", \"like\", \"us\", \".\"]\n# ::lemmas [\"they\", \"like\", \"we\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2\n(l / like-01~e.1\n   :ARG0 (t / they~e.0)\n   :ARG1 (w / we~e.2))", [[0, 4], [5, 9], [10, 12], [12, 13]]], ["# ::snt Us like them.\n# ::tokens [\"Us\", \"like\", \"them\", \".\"]\n# ::lemmas [\"Us\", \"like\", \"they\", \".\"]\n# ::alignments 1-1 2-1.2\n(l / like-01~e.1\n   :ARG0 (w / we)\n   :ARG1 (t / they~e.2))", [[0, 2], [3, 7], [8, 12], [12, 13]]], ["# ::snt Kim likes dogs.\n# ::tokens [\"Kim\", \"likes\", \"dogs\", \".\"]\n# ::lemmas [\"Kim\", \"like\", \"dog\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2\n(l / like-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kim\"~e.0))\n   :ARG1 (d / dog~e.2))", [[0, 3], [4, 9], [10, 14], [14, 15]]], ["# ::snt Dogs like Kim.\n# ::tokens [\"Dogs\", \"like\", \"Kim\", \".\"]\n# ::lemmas [\"dog\", \"like\", \"Kim\", \".\"]\n# ::alignments 2-1.2.1.1\n(r / resemble-01\n   :ARG1 (d / dummy)\n   :ARG2 (p / person\n            :name (n / name\n                     :op1 \"Kim\"~e.2)))", [[0, 4], [5, 9], [10, 13], [13, 14]]], ["# ::snt The person responsible confessed.\n# ::tokens [\"The\", \"person\", \"responsible\", \"confessed\", \".\"]\n# ::lemmas [\"the\", \"person\", \"responsible\", \"confess\", \".\"]\n# ::alignments 1-1.1 2-1.1.1 3-1\n(c / confess-01~e.3\n   :ARG0 (p / person~e.1\n            :ARG0-of (r / responsible-01~e.2)))", [[0, 3], [4, 10], [11, 22], [23, 32], [32, 33]]], ["# ::snt The person confessed responsible.\n# ::tokens [\"The\", \"person\", \"confessed\", \"responsible\", \".\"]\n# ::lemmas [\"the\", \"person\", \"confess\", \"responsible\", \".\"]\n# ::alignments 1-1.1 2-1 3-1.2\n(c / confess-01~e.2\n   :ARG0 (p / person~e.1)\n   :ARG1 (r / responsible-01~e.3\n            :ARG0 p))", [[0, 3], [4, 10], [11, 20], [21, 32], [32, 33]]], ["# ::snt The cat slept soundly and furry.\n# ::tokens [\"The\", \"cat\", \"slept\", \"soundly\", \"and\", \"furry\", \".\"]\n# ::lemmas [\"the\", \"cat\", \"sleep\", \"soundly\", \"and\", \"furry\", \".\"]\n# ::alignments 1-1.1 2-1 3-1.2.1 4-1.2 5-1.2.2\n(s / sleep-01~e.2\n   :ARG0 (c / cat~e.1)\n   :manner (a / and~e.4\n              :op1 (s2 / sound~e.3)\n              :op2 (f / furry~e.5)))", [[0, 3], [4, 7], [8, 13], [14, 21], [22, 25], [26, 31], [31, 32]]], ["# ::snt The soundly and furry cat slept.\n# ::tokens [\"The\", \"soundly\", \"and\", \"furry\", \"cat\", \"slept\", \".\"]\n# ::lemmas [\"the\", \"soundly\", \"and\", \"furry\", \"cat\", \"sleep\", \".\"]\n# ::alignments 1-1.1.1 3-1.1.2 4-1.1 5-1\n(s / sleep-01~e.5\n   :ARG0 (c / cat~e.4\n            :mod (s2 / soundly~e.1)\n            :mod (f / furry~e.3)))", [[0, 3], [4, 11], [12, 15], [16, 21], [22, 25], [26, 31], [31, 32]]], ["# ::snt Chris walks, Pat eats broccoli, and Sandy plays squash.\n# ::tokens [\"Chris\", \"walks\", \",\", \"Pat\", \"eats\", \"broccoli\", \",\", \"and\", \"Sandy\", \"plays\", \"squash\", \".\"]\n# ::lemmas [\"Chris\", \"walk\", \",\", \"Pat\", \"eats\", \"broccoli\", \",\", \"and\", \"Sandy\", \"play\", \"squash\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 3-1.2.1.1.1 5-1.2.2 7-1 8-1.3.1.1.1 9-1.3 10-1.3.2\n(a / and~e.7\n   :op1 (w / walk-01~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Chris\"~e.0)))\n   :op2 (e / eat-01\n           :ARG0 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Pat\"~e.3))\n           :ARG1 (b / broccoli~e.5))\n   :op3 (p3 / play-01~e.9\n            :ARG0 (p4 / person\n                      :name (n3 / name\n                                :op1 \"Sandy\"~e.8))\n            :ARG1 (s / squash~e.10)))", [[0, 5], [6, 11], [11, 12], [13, 16], [17, 21], [22, 30], [30, 31], [32, 35], [36, 41], [42, 47], [48, 54], [54, 55]]], ["# ::snt There was some particular dog who saved every family.\n# ::tokens [\"There\", \"was\", \"some\", \"particular\", \"dog\", \"who\", \"saved\", \"every\", \"family\", \".\"]\n# ::lemmas [\"there\", \"be\", \"some\", \"particular\", \"dog\", \"who\", \"save\", \"every\", \"family\", \".\"]\n# ::alignments 2-1.1.2 3-1.1.1 4-1.1 6-1 7-1.2.1 8-1.2\n(s / save-02~e.6\n   :ARG0 (d / dog~e.4\n            :mod (p / particular~e.3)\n            :mod (s2 / some~e.2))\n   :ARG1 (f / family~e.8\n            :mod (e / every~e.7)))", [[0, 5], [6, 9], [10, 14], [15, 25], [26, 29], [30, 33], [34, 39], [40, 45], [46, 52], [52, 53]]], ["# ::snt Susan frightens her.\n# ::tokens [\"Susan\", \"frightens\", \"her\", \".\"]\n# ::lemmas [\"Susan\", \"frighten\", \"she\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2\n(f / frighten-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Susan\"~e.0))\n   :ARG1 (s / she~e.2))", [[0, 5], [6, 15], [16, 19], [19, 20]]], ["# ::snt Susan told her a story.\n# ::tokens [\"Susan\", \"told\", \"her\", \"a\", \"story\", \".\"]\n# ::lemmas [\"Susan\", \"tell\", \"she\", \"a\", \"story\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.3 4-1.2\n(t / tell-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Susan\"~e.0))\n   :ARG1 (s / story~e.4)\n   :ARG2 (s2 / she~e.2))", [[0, 5], [6, 10], [11, 14], [15, 16], [17, 22], [22, 23]]], ["# ::snt Susan told a story to her.\n# ::tokens [\"Susan\", \"told\", \"a\", \"story\", \"to\", \"her\", \".\"]\n# ::lemmas [\"Susan\", \"tell\", \"a\", \"story\", \"to\", \"she\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 5-1.3\n(t / tell-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Susan\"~e.0))\n   :ARG1 (s / story~e.3)\n   :ARG2 (s2 / she~e.5))", [[0, 5], [6, 10], [11, 12], [13, 18], [19, 21], [22, 25], [25, 26]]], ["# ::snt Susan devoted herself to linguistics.\n# ::tokens [\"Susan\", \"devoted\", \"herself\", \"to\", \"linguistics\", \".\"]\n# ::lemmas [\"Susan\", \"devote\", \"herself\", \"to\", \"linguistic\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.3\n(d / devote-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Susan\"~e.0))\n   :ARG1 p\n   :ARG2 (l / linguistics~e.4))", [[0, 5], [6, 13], [14, 21], [22, 24], [25, 36], [36, 37]]], ["# ::snt Nobody told Susan about herself.\n# ::tokens [\"Nobody\", \"told\", \"Susan\", \"about\", \"herself\", \".\"]\n# ::lemmas [\"nobody\", \"tell\", \"Susan\", \"about\", \"herself\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1.1.1 3-1.2\n(t / tell-01~e.1\n   :ARG0 (n / nobody~e.0)\n   :ARG1 (a / about~e.3\n            :op1 (p / person\n                    :name (n2 / name\n                              :op1 \"Susan\"~e.2)))\n   :ARG2 p)", [[0, 6], [7, 11], [12, 17], [18, 23], [24, 31], [31, 32]]], ["# ::snt That picture of Susan offended her.\n# ::tokens [\"That\", \"picture\", \"of\", \"Susan\", \"offended\", \"her\", \".\"]\n# ::lemmas [\"that\", \"picture\", \"of\", \"Susan\", \"offend\", \"she\", \".\"]\n# ::alignments 0-1.1.2 1-1.1 3-1.1.1.1.1 4-1 5-1.2\n(o / offend-01~e.4\n   :ARG0 (p / picture~e.1\n            :topic (p2 / person\n                       :name (n / name\n                                :op1 \"Susan\"~e.3))\n            :mod (t / that~e.0))\n   :ARG1 (s / she~e.5))", [[0, 4], [5, 12], [13, 15], [16, 21], [22, 30], [31, 34], [34, 35]]], ["# ::snt He offended Sandy.\n# ::tokens [\"He\", \"offended\", \"Sandy\", \".\"]\n# ::lemmas [\"he\", \"offend\", \"Sandy\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1.1\n(o / offend-01~e.1\n   :ARG0 (h / he~e.0)\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandy\"~e.2)))", [[0, 2], [3, 11], [12, 17], [17, 18]]], ["# ::snt I enjoy yourself.\n# ::tokens [\"I\", \"enjoy\", \"yourself\", \".\"]\n# ::lemmas [\"i\", \"enjoy\", \"yourself\", \".\"]\n# ::alignments 0-1.1 1-1\n(e / enjoy-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (y / you))", [[0, 1], [2, 7], [8, 16], [16, 17]]], ["# ::snt They talk to themselves.\n# ::tokens [\"They\", \"talk\", \"to\", \"themselves\", \".\"]\n# ::lemmas [\"they\", \"talk\", \"to\", \"themselves\", \".\"]\n# ::alignments 0-1.1 1-1\n(t / talk-01~e.1\n   :ARG0 (t2 / they~e.0)\n   :ARG2 t2)", [[0, 4], [5, 9], [10, 12], [13, 23], [23, 24]]], ["# ::snt Nobody told Susan.\n# ::tokens [\"Nobody\", \"told\", \"Susan\", \".\"]\n# ::lemmas [\"nobody\", \"tell\", \"Susan\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1.1\n(t / tell-01~e.1\n   :ARG0 (n / nobody~e.0)\n   :ARG2 (p / person\n            :name (n2 / name\n                      :op1 \"Susan\"~e.2)))", [[0, 6], [7, 11], [12, 17], [17, 18]]], ["# ::snt Protect yourself!\n# ::tokens [\"Protect\", \"yourself\", \"!\"]\n# ::lemmas [\"protect\", \"yourself\", \"!\"]\n# ::alignments 0-1\n(p / protect-01~e.0\n   :mode imperative\n   :ARG0 (y / you)\n   :ARG1 y)", [[0, 7], [8, 16], [16, 17]]], ["# ::snt Protect you!\n# ::tokens [\"Protect\", \"you\", \"!\"]\n# ::lemmas [\"protect\", \"you\", \"!\"]\n# ::alignments 0-1 1-1.1\n(p / protect-01~e.0\n   :ARG1 (y / you~e.1))", [[0, 7], [8, 11], [11, 12]]], ["# ::snt I met the person who left.\n# ::tokens [\"I\", \"met\", \"the\", \"person\", \"who\", \"left\", \".\"]\n# ::lemmas [\"i\", \"meet\", \"the\", \"person\", \"who\", \"leave\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 5-1.2.1\n(m / meet-02~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (p / person~e.3\n            :ARG0-of (l / leave-11~e.5)))", [[0, 1], [2, 5], [6, 9], [10, 16], [17, 20], [21, 25], [25, 26]]], ["# ::snt Leslie slept.\n# ::tokens [\"Leslie\", \"slept\", \".\"]\n# ::lemmas [\"Leslie\", \"slept\", \".\"]\n# ::alignments 0-1.1.1.1\n(s / sleep-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Leslie\"~e.0)))", [[0, 6], [7, 12], [12, 13]]], ["# ::snt Chris handed Bo.\n# ::tokens [\"Chris\", \"handed\", \"Bo\", \".\"]\n# ::lemmas [\"Chris\", \"hand\", \"Bo\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1\n(h / hand-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chris\"~e.0))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Bo\"~e.2)))", [[0, 5], [6, 12], [13, 15], [15, 16]]], ["# ::snt Dana walked and Leslie ran.\n# ::tokens [\"Dana\", \"walked\", \"and\", \"Leslie\", \"ran\", \".\"]\n# ::lemmas [\"Dana\", \"walk\", \"and\", \"Leslie\", \"ran\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 2-1 3-1.2.1.1.1\n(a / and~e.2\n   :op1 (w / walk-01~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Dana\"~e.0)))\n   :op2 (r / run-02\n           :ARG0 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Leslie\"~e.3))))", [[0, 4], [5, 11], [12, 15], [16, 22], [23, 26], [26, 27]]], ["# ::snt Dana walking and Leslie ran.\n# ::tokens [\"Dana\", \"walking\", \"and\", \"Leslie\", \"ran\", \".\"]\n# ::lemmas [\"Dana\", \"walk\", \"and\", \"Leslie\", \"ran\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 2-1 3-1.2.1.1.1\n(a / and~e.2\n   :op1 (w / walk-01~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Dana\"~e.0)))\n   :op2 (r / run-02\n           :ARG0 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Leslie\"~e.3))))", [[0, 4], [5, 12], [13, 16], [17, 23], [24, 27], [27, 28]]], ["# ::snt Dana walking and Leslie running.\n# ::tokens [\"Dana\", \"walking\", \"and\", \"Leslie\", \"running\", \".\"]\n# ::lemmas [\"Dana\", \"walk\", \"and\", \"Leslie\", \"running\", \".\"]\n# ::alignments 0-1.1.1.1.1 1-1.1 2-1 3-1.2.1.1.1\n(a / and~e.2\n   :op1 (w / walk-01~e.1\n           :ARG0 (p / person\n                    :name (n / name\n                             :op1 \"Dana\"~e.0)))\n   :op2 (r / run-02\n           :ARG0 (p2 / person\n                     :name (n2 / name\n                               :op1 \"Leslie\"~e.3))))", [[0, 4], [5, 12], [13, 16], [17, 23], [24, 31], [31, 32]]], ["# ::snt the putter of books left.\n# ::tokens [\"the\", \"putter\", \"of\", \"books\", \"left\", \".\"]\n# ::lemmas [\"the\", \"putter\", \"of\", \"book\", \"leave\", \".\"]\n# ::alignments 1-1 3-1.1 4-1.2\n(p / putter~e.1\n   :mod (b / book~e.3)\n   :ARG1-of (l / leave-17~e.4))", [[0, 3], [4, 10], [11, 13], [14, 19], [20, 24], [24, 25]]], ["# ::snt Kris donated a book to the library.\n# ::tokens [\"Kris\", \"donated\", \"a\", \"book\", \"to\", \"the\", \"library\", \".\"]\n# ::lemmas [\"Kris\", \"donate\", \"a\", \"book\", \"to\", \"the\", \"library\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 6-1.3\n(d / donate-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Kris\"~e.0))\n   :ARG1 (b / book~e.3)\n   :ARG2 (l / library~e.6))", [[0, 4], [5, 12], [13, 14], [15, 19], [20, 22], [23, 26], [27, 34], [34, 35]]], ["# ::snt The police sprayed the protesters with water.\n# ::tokens [\"The\", \"police\", \"sprayed\", \"the\", \"protesters\", \"with\", \"water\", \".\"]\n# ::lemmas [\"the\", \"police\", \"spray\", \"the\", \"protester\", \"with\", \"water\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.3.1 6-1.2\n(s / spray-01~e.2\n   :ARG0 (p / police~e.1)\n   :ARG1 (w / water~e.6)\n   :ARG2 (p2 / person\n             :ARG0-of (p3 / protest-01~e.4)))", [[0, 3], [4, 10], [11, 18], [19, 22], [23, 33], [34, 38], [39, 44], [44, 45]]], ["# ::snt The police sprayed water on the protesters.\n# ::tokens [\"The\", \"police\", \"sprayed\", \"water\", \"on\", \"the\", \"protesters\", \".\"]\n# ::lemmas [\"the\", \"police\", \"spray\", \"water\", \"on\", \"the\", \"protester\", \".\"]\n# ::alignments 1-1.1 2-1 3-1.2 6-1.3.1\n(s / spray-01~e.2\n   :ARG0 (p / police~e.1)\n   :ARG1 (w / water~e.3)\n   :ARG2 (p2 / person\n             :ARG0-of (p3 / protest-01~e.6)))", [[0, 3], [4, 10], [11, 18], [19, 24], [25, 27], [28, 31], [32, 42], [42, 43]]], ["# ::snt The students drove cars.\n# ::tokens [\"The\", \"students\", \"drove\", \"cars\", \".\"]\n# ::lemmas [\"the\", \"student\", \"drive\", \"car\", \".\"]\n# ::alignments 1-1.1.1 2-1 3-1.2\n(d / drive-01~e.2\n   :ARG0 (p / person\n            :ARG0-of (s / study-01~e.1))\n   :ARG1 (c / car~e.3))", [[0, 3], [4, 12], [13, 18], [19, 23], [23, 24]]], ["# ::snt These cars drive easily.\n# ::tokens [\"These\", \"cars\", \"drive\", \"easily\", \".\"]\n# ::lemmas [\"these\", \"car\", \"drive\", \"easily\", \".\"]\n# ::alignments 1-1.1 2-1\n(d / drive-01~e.2\n   :ARG0 (c / car~e.1\n            :mod (t / this))\n   :ARG1-of (e / easy-05))", [[0, 5], [6, 10], [11, 16], [17, 23], [23, 24]]], ["# ::snt The horse kicked me black and blue.\n# ::tokens [\"The\", \"horse\", \"kicked\", \"me\", \"black\", \"and\", \"blue\", \".\"]\n# ::lemmas [\"the\", \"horse\", \"kick\", \"i\", \"black\", \"and\", \"blue\", \".\"]\n# ::alignments 1-1.1 2-1 3-1.2 4-1.3\n(k / kick-01~e.2\n   :ARG0 (h / horse~e.1)\n   :ARG1 (ii / i~e.3)\n   :ARG1-of (b / black-and-blue~e.4))", [[0, 3], [4, 9], [10, 16], [17, 19], [20, 25], [26, 29], [30, 34], [34, 35]]], ["# ::snt They yelled.\n# ::tokens [\"They\", \"yelled\", \".\"]\n# ::lemmas [\"they\", \"yell\", \".\"]\n# ::alignments 0-1.1 1-1\n(y / yell-01~e.1\n   :ARG0 (t / they~e.0))", [[0, 4], [5, 11], [11, 12]]], ["# ::snt The horse raced past the barn fell.\n# ::tokens [\"The\", \"horse\", \"raced\", \"past\", \"the\", \"barn\", \"fell\", \".\"]\n# ::lemmas [\"the\", \"horse\", \"race\", \"past\", \"the\", \"barn\", \"fall\", \".\"]\n# ::alignments 1-1.1 2-1 3-1.2 5-1.2.1.1 6-1.2.1\n(r / race-02~e.2\n   :ARG0 (h / horse~e.1)\n   :path (p / past~e.3\n            :op1 (f / fall-01~e.6\n                    :ARG1 (b / barn~e.5))))", [[0, 3], [4, 9], [10, 15], [16, 20], [21, 24], [25, 29], [30, 34], [34, 35]]], ["# ::snt The horse that was raced past the barn fell.\n# ::tokens [\"The\", \"horse\", \"that\", \"was\", \"raced\", \"past\", \"the\", \"barn\", \"fell\", \".\"]\n# ::lemmas [\"the\", \"horse\", \"that\", \"be\", \"race\", \"past\", \"the\", \"barn\", \"fall\", \".\"]\n# ::alignments 1-1.1 4-1.1.1 5-1.1.1.1 7-1.1.1.1.1 8-1\n(f / fall-01~e.8\n   :ARG1 (h / horse~e.1\n            :ARG1-of (r / race-02~e.4\n                        :path (p / past~e.5\n                                 :op1 (b / barn~e.7)))))", [[0, 3], [4, 9], [10, 14], [15, 18], [19, 24], [25, 29], [30, 33], [34, 38], [39, 43], [43, 44]]], ["# ::snt The boat seen down the river sank.\n# ::tokens [\"The\", \"boat\", \"seen\", \"down\", \"the\", \"river\", \"sank\", \".\"]\n# ::lemmas [\"the\", \"boat\", \"see\", \"down\", \"the\", \"river\", \"sank\", \".\"]\n# ::alignments 1-1.1 2-1.1.1 3-1.1.1.1 5-1.1.1.1.1\n(s / sink-01\n   :ARG1 (b / boat~e.1\n            :ARG1-of (s2 / see-01~e.2\n                         :location (d / down~e.3\n                                      :op1 (r / river~e.5)))))", [[0, 3], [4, 8], [9, 13], [14, 18], [19, 22], [23, 28], [29, 33], [33, 34]]], ["# ::snt The evidence assembled by the prosecution convinced the jury.\n# ::tokens [\"The\", \"evidence\", \"assembled\", \"by\", \"the\", \"prosecution\", \"convinced\", \"the\", \"jury\", \".\"]\n# ::lemmas [\"the\", \"evidence\", \"assemble\", \"by\", \"the\", \"prosecution\", \"convince\", \"the\", \"jury\", \".\"]\n# ::alignments 1-1.1 2-1.1.1 5-1.1.1.1 6-1 8-1.2\n(c / convince-01~e.6\n   :ARG0 (e / evidence-01~e.1\n            :ARG1-of (a / assemble-01~e.2\n                        :ARG0 (p / prosecute-01~e.5)))\n   :ARG1 (j / jury~e.8))", [[0, 3], [4, 12], [13, 22], [23, 25], [26, 29], [30, 41], [42, 51], [52, 55], [56, 60], [60, 61]]], ["# ::snt Lou forgot the umbrella.\n# ::tokens [\"Lou\", \"forgot\", \"the\", \"umbrella\", \".\"]\n# ::lemmas [\"Lou\", \"forget\", \"the\", \"umbrella\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2\n(f / forget-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lou\"~e.0))\n   :ARG1 (u / umbrella~e.3))", [[0, 3], [4, 10], [11, 14], [15, 23], [23, 24]]], ["# ::snt Lou forgot the umbrella in the closet.\n# ::tokens [\"Lou\", \"forgot\", \"the\", \"umbrella\", \"in\", \"the\", \"closet\", \".\"]\n# ::lemmas [\"Lou\", \"forget\", \"the\", \"umbrella\", \"in\", \"the\", \"closet\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 6-1.3\n(f / forget-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lou\"~e.0))\n   :ARG1 (u / umbrella~e.3)\n   :location (c / closet~e.6))", [[0, 3], [4, 10], [11, 14], [15, 23], [24, 26], [27, 30], [31, 37], [37, 38]]], ["# ::snt Lou hoped the umbrella was broken.\n# ::tokens [\"Lou\", \"hoped\", \"the\", \"umbrella\", \"was\", \"broken\", \".\"]\n# ::lemmas [\"Lou\", \"hope\", \"the\", \"umbrella\", \"be\", \"break\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1 5-1.2\n(h / hope-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lou\"~e.0))\n   :ARG1 (b / break-01~e.5\n            :ARG1 (u / umbrella~e.3)))", [[0, 3], [4, 9], [10, 13], [14, 22], [23, 26], [27, 33], [33, 34]]], ["# ::snt Lou hoped the umbrella in the closet.\n# ::tokens [\"Lou\", \"hoped\", \"the\", \"umbrella\", \"in\", \"the\", \"closet\", \".\"]\n# ::lemmas [\"Lou\", \"hope\", \"the\", \"umbrella\", \"in\", \"the\", \"closet\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 6-1.2.1\n(h / hope-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Lou\"~e.0))\n   :ARG1 (u / umbrella~e.3\n            :location (c / closet~e.6)))", [[0, 3], [4, 9], [10, 13], [14, 22], [23, 25], [26, 29], [30, 36], [36, 37]]], ["# ::snt Lou put the umbrella was broken.\n# ::tokens [\"Lou\", \"put\", \"the\", \"umbrella\", \"was\", \"broken\", \".\"]\n# ::lemmas [\"Lou\", \"put\", \"the\", \"umbrella\", \"be\", \"break\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 5-1.3\n(p / put-01~e.1\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Lou\"~e.0))\n   :ARG1 (u / umbrella~e.3)\n   :ARG2 (b / break-01~e.5))", [[0, 3], [4, 7], [8, 11], [12, 20], [21, 24], [25, 31], [31, 32]]], ["# ::snt Lou put the umbrella in the closet.\n# ::tokens [\"Lou\", \"put\", \"the\", \"umbrella\", \"in\", \"the\", \"closet\", \".\"]\n# ::lemmas [\"Lou\", \"put\", \"the\", \"umbrella\", \"in\", \"the\", \"closet\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 6-1.3\n(p / put-01~e.1\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Lou\"~e.0))\n   :ARG1 (u / umbrella~e.3)\n   :ARG2 (c / closet~e.6))", [[0, 3], [4, 7], [8, 11], [12, 20], [21, 23], [24, 27], [28, 34], [34, 35]]], ["# ::snt The artist drew the child with a pencil.\n# ::tokens [\"The\", \"artist\", \"drew\", \"the\", \"child\", \"with\", \"a\", \"pencil\", \".\"]\n# ::lemmas [\"the\", \"artist\", \"draw\", \"the\", \"child\", \"with\", \"a\", \"pencil\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2 7-1.3\n(d / draw-01~e.2\n   :ARG0 (a / artist~e.1)\n   :ARG1 (c / child~e.4)\n   :instrument (p / pencil~e.7))", [[0, 3], [4, 10], [11, 15], [16, 19], [20, 25], [26, 30], [31, 32], [33, 39], [39, 40]]], ["# ::snt The dog bit the cat.\n# ::tokens [\"The\", \"dog\", \"bit\", \"the\", \"cat\", \".\"]\n# ::lemmas [\"the\", \"dog\", \"bite\", \"the\", \"cat\", \".\"]\n# ::alignments 1-1.1 2-1 4-1.2\n(b / bite-01~e.2\n   :ARG0 (d / dog~e.1)\n   :ARG1 (c / cat~e.4))", [[0, 3], [4, 7], [8, 11], [12, 15], [16, 19], [19, 20]]], ["# ::snt The cat was bitten the mouse.\n# ::tokens [\"The\", \"cat\", \"was\", \"bitten\", \"the\", \"mouse\", \".\"]\n# ::lemmas [\"the\", \"cat\", \"be\", \"bite\", \"the\", \"mouse\", \".\"]\n# ::alignments 1-1.1 3-1 5-1.2\n(b / bite-01~e.3\n   :ARG1 (c / cat~e.1)\n   :ARG2 (m / mouse~e.5))", [[0, 3], [4, 7], [8, 11], [12, 18], [19, 22], [23, 28], [28, 29]]], ["# ::snt The cat was bitten the mouse by the dog.\n# ::tokens [\"The\", \"cat\", \"was\", \"bitten\", \"the\", \"mouse\", \"by\", \"the\", \"dog\", \".\"]\n# ::lemmas [\"the\", \"cat\", \"be\", \"bite\", \"the\", \"mouse\", \"by\", \"the\", \"dog\", \".\"]\n# ::alignments 1-1.2 3-1 5-1.3 8-1.1\n(b / bite-01~e.3\n   :ARG0 (d / dog~e.8)\n   :ARG1 (c / cat~e.1)\n   :ARG2 (m / mouse~e.5))", [[0, 3], [4, 7], [8, 11], [12, 18], [19, 22], [23, 28], [29, 31], [32, 35], [36, 39], [39, 40]]], ["# ::snt Chris was handed Sandy a note by Pat.\n# ::tokens [\"Chris\", \"was\", \"handed\", \"Sandy\", \"a\", \"note\", \"by\", \"Pat\", \".\"]\n# ::lemmas [\"Chris\", \"be\", \"hand\", \"Sandy\", \"a\", \"note\", \"by\", \"Pat\", \".\"]\n# ::alignments 0-1.3.1.1 2-1 3-1.4.1.1 5-1.2 7-1.1.1.1\n(h / hand-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Pat\"~e.7))\n   :ARG1 (n2 / note~e.5)\n   :ARG2 (p2 / person\n             :name (n3 / name\n                       :op1 \"Chris\"~e.0))\n   :ARG2 (p3 / person\n             :name (n4 / name\n                       :op1 \"Sandy\"~e.3)))", [[0, 5], [6, 9], [10, 16], [17, 22], [23, 24], [25, 29], [30, 32], [33, 36], [36, 37]]], ["# ::snt Chris was handed a note.\n# ::tokens [\"Chris\", \"was\", \"handed\", \"a\", \"note\", \".\"]\n# ::lemmas [\"Chris\", \"be\", \"hand\", \"a\", \"note\", \".\"]\n# ::alignments 0-1.2.1.1 2-1 4-1.1\n(h / hand-01~e.2\n   :ARG1 (n / note~e.4)\n   :ARG2 (p / person\n            :name (n2 / name\n                      :op1 \"Chris\"~e.0)))", [[0, 5], [6, 9], [10, 16], [17, 18], [19, 23], [23, 24]]], ["# ::snt Chris was handed Sandy a note.\n# ::tokens [\"Chris\", \"was\", \"handed\", \"Sandy\", \"a\", \"note\", \".\"]\n# ::lemmas [\"Chris\", \"be\", \"hand\", \"Sandy\", \"a\", \"note\", \".\"]\n# ::alignments 0-1.2.1.1 2-1 3-1.3.1.1 5-1.1\n(h / hand-01~e.2\n   :ARG1 (n / note~e.5)\n   :ARG2 (p / person\n            :name (n2 / name\n                      :op1 \"Chris\"~e.0))\n   :ARG4 (p2 / person\n             :name (n3 / name\n                       :op1 \"Sandy\"~e.3)))", [[0, 5], [6, 9], [10, 16], [17, 22], [23, 24], [25, 29], [29, 30]]], ["# ::snt TV puts dumb ideas in children's heads.\n# ::tokens [\"TV\", \"puts\", \"dumb\", \"ideas\", \"in\", \"children\", \"'s\", \"heads\", \".\"]\n# ::lemmas [\"tv\", \"put\", \"dumb\", \"idea\", \"in\", \"child\", \"'s\", \"head\", \".\"]\n# ::alignments 1-1 2-1.2.1 3-1.2 5-1.3.1 7-1.3\n(p / put-01~e.1\n   :ARG0 (t / television)\n   :ARG1 (ii / idea~e.3\n             :mod (d / dumb~e.2))\n   :ARG2 (h / head~e.7\n            :part-of (c / child~e.5)))", [[0, 2], [3, 7], [8, 12], [13, 18], [19, 21], [22, 30], [30, 32], [33, 38], [38, 39]]], ["# ::snt Dumb ideas are put in children's heads by TV.\n# ::tokens [\"Dumb\", \"ideas\", \"are\", \"put\", \"in\", \"children\", \"'s\", \"heads\", \"by\", \"TV\", \".\"]\n# ::lemmas [\"dumb\", \"idea\", \"be\", \"put\", \"in\", \"child\", \"'s\", \"head\", \"by\", \"tv\", \".\"]\n# ::alignments 0-1.2.1 1-1.2 3-1 5-1.3.1 7-1.3\n(p / put-01~e.3\n   :ARG0 (t / television)\n   :ARG1 (ii / idea~e.1\n             :mod (d / dumb~e.0))\n   :ARG2 (h / head~e.7\n            :part-of (c / child~e.5)))", [[0, 4], [5, 10], [11, 14], [15, 18], [19, 21], [22, 30], [30, 32], [33, 38], [39, 41], [42, 44], [44, 45]]], ["# ::snt Dumb ideas are put in children's heads.\n# ::tokens [\"Dumb\", \"ideas\", \"are\", \"put\", \"in\", \"children\", \"'s\", \"heads\", \".\"]\n# ::lemmas [\"dumb\", \"idea\", \"be\", \"put\", \"in\", \"child\", \"'s\", \"head\", \".\"]\n# ::alignments 0-1.1.1 1-1.1 3-1 5-1.2.1 7-1.2\n(p / put-01~e.3\n   :ARG1 (ii / idea~e.1\n             :mod (d / dumb~e.0))\n   :ARG2 (h / head~e.7\n            :part-of (c / child~e.5)))", [[0, 4], [5, 10], [11, 14], [15, 18], [19, 21], [22, 30], [30, 32], [33, 38], [38, 39]]], ["# ::snt Dumb ideas are put notions in children's heads by TV.\n# ::tokens [\"Dumb\", \"ideas\", \"are\", \"put\", \"notions\", \"in\", \"children\", \"'s\", \"heads\", \"by\", \"TV\", \".\"]\n# ::lemmas [\"dumb\", \"idea\", \"be\", \"put\", \"notion\", \"in\", \"child\", \"'s\", \"head\", \"by\", \"tv\", \".\"]\n# ::alignments 0-1.2.1 1-1.2 3-1 6-1.3.1 8-1.3\n(p / put-01~e.3\n   :ARG0 (t / television)\n   :ARG1 (ii / idea~e.1\n             :mod (d / dumb~e.0))\n   :ARG2 (h / head~e.8\n            :part-of (c / child~e.6))\n   :ARG1 p\n   :ARG0 ii\n   :ARG2 h)", [[0, 4], [5, 10], [11, 14], [15, 18], [19, 26], [27, 29], [30, 38], [38, 40], [41, 46], [47, 49], [50, 52], [52, 53]]], ["# ::snt The patient died.\n# ::tokens [\"The\", \"patient\", \"died\", \".\"]\n# ::lemmas [\"the\", \"patient\", \"die\", \".\"]\n# ::alignments 1-1.1 2-1\n(d / die-01~e.2\n   :ARG1 (p / patient~e.1))", [[0, 3], [4, 11], [12, 16], [16, 17]]], ["# ::snt The patient was died.\n# ::tokens [\"The\", \"patient\", \"was\", \"died\", \".\"]\n# ::lemmas [\"the\", \"patient\", \"be\", \"die\", \".\"]\n# ::alignments 1-1.1 3-1\n(d / die-01~e.3\n   :ARG1 (p / patient~e.1))", [[0, 3], [4, 11], [12, 15], [16, 20], [20, 21]]], ["# ::snt Chris was handed.\n# ::tokens [\"Chris\", \"was\", \"handed\", \".\"]\n# ::lemmas [\"Chris\", \"be\", \"hand\", \".\"]\n# ::alignments 0-1.1.1.1 2-1\n(h / hand-01~e.2\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Chris\"~e.0)))", [[0, 5], [6, 9], [10, 16], [16, 17]]], ["# ::snt TV puts dumb ideas.\n# ::tokens [\"TV\", \"puts\", \"dumb\", \"ideas\", \".\"]\n# ::lemmas [\"tv\", \"put\", \"dumb\", \"idea\", \".\"]\n# ::alignments 1-1 2-1.2.1 3-1.2\n(p / put-01~e.1\n   :ARG0 (t / television)\n   :ARG1 (ii / idea~e.3\n             :mod (d / dumb~e.2)))", [[0, 2], [3, 7], [8, 12], [13, 18], [18, 19]]], ["# ::snt He was arrested by the police.\n# ::tokens [\"He\", \"was\", \"arrested\", \"by\", \"the\", \"police\", \".\"]\n# ::lemmas [\"he\", \"be\", \"arrest\", \"by\", \"the\", \"police\", \".\"]\n# ::alignments 0-1.2 2-1 5-1.1\n(a / arrest-01~e.2\n   :ARG0 (p / police~e.5)\n   :ARG1 (h / he~e.0))", [[0, 2], [3, 6], [7, 15], [16, 18], [19, 22], [23, 29], [29, 30]]], ["# ::snt The cat got bitten.\n# ::tokens [\"The\", \"cat\", \"got\", \"bitten\", \".\"]\n# ::lemmas [\"the\", \"cat\", \"got\", \"bite\", \".\"]\n# ::alignments 1-1.1 3-1\n(b / bite-01~e.3\n   :ARG1 (c / cat~e.1))", [[0, 3], [4, 7], [8, 11], [12, 18], [18, 19]]], ["# ::snt The cat were bitten by the dog.\n# ::tokens [\"The\", \"cat\", \"were\", \"bitten\", \"by\", \"the\", \"dog\", \".\"]\n# ::lemmas [\"the\", \"cat\", \"be\", \"bite\", \"by\", \"the\", \"dog\", \".\"]\n# ::alignments 1-1.2 3-1 6-1.1\n(b / bite-01~e.3\n   :ARG0 (d / dog~e.6)\n   :ARG1 (c / cat~e.1))", [[0, 3], [4, 7], [8, 12], [13, 19], [20, 22], [23, 26], [27, 30], [30, 31]]], ["# ::snt There is a monster in Loch Ness.\n# ::tokens [\"There\", \"is\", \"a\", \"monster\", \"in\", \"Loch\", \"Ness\", \".\"]\n# ::lemmas [\"there\", \"be\", \"a\", \"monster\", \"in\", \"Loch\", \"Ness\", \".\"]\n# ::alignments 3-1 5-1.1.1.1 6-1.1.1.2\n(m / monster~e.3\n   :location (l / lake\n                :name (n / name\n                         :op1 \"Loch\"~e.5\n                         :op2 \"Ness\"~e.6)))", [[0, 5], [6, 8], [9, 10], [11, 18], [19, 21], [22, 26], [27, 31], [31, 32]]], ["# ::snt It is obvious that Pat is lying.\n# ::tokens [\"It\", \"is\", \"obvious\", \"that\", \"Pat\", \"is\", \"lying\", \".\"]\n# ::lemmas [\"it\", \"be\", \"obvious\", \"that\", \"Pat\", \"be\", \"lie\", \".\"]\n# ::alignments 2-1 4-1.1.1.1.1 6-1.1\n(o / obvious-01~e.2\n   :ARG1 (l / lie-08~e.6\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Pat\"~e.4))))", [[0, 2], [3, 5], [6, 13], [14, 18], [19, 22], [23, 25], [26, 31], [31, 32]]], ["# ::snt Pat is the captain of the team.\n# ::tokens [\"Pat\", \"is\", \"the\", \"captain\", \"of\", \"the\", \"team\", \".\"]\n# ::lemmas [\"Pat\", \"be\", \"the\", \"captain\", \"of\", \"the\", \"team\", \".\"]\n# ::alignments 0-1.1.1.1 3-1 6-1.2\n(c / captain-01~e.3\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Pat\"~e.0))\n   :ARG1 (t / team~e.6))", [[0, 3], [4, 6], [7, 10], [11, 18], [19, 21], [22, 25], [26, 30], [30, 31]]], ["# ::snt Pat is hate Chris.\n# ::tokens [\"Pat\", \"is\", \"hate\", \"Chris\", \".\"]\n# ::lemmas [\"Pat\", \"be\", \"hate\", \"Chris\", \".\"]\n# ::alignments 0-1.1.1.1 2-1 3-1.2.1.1\n(h / hate-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Pat\"~e.0))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Chris\"~e.3)))", [[0, 3], [4, 6], [7, 11], [12, 17], [17, 18]]], ["# ::snt There is a unicorn in the garden.\n# ::tokens [\"There\", \"is\", \"a\", \"unicorn\", \"in\", \"the\", \"garden\", \".\"]\n# ::lemmas [\"there\", \"be\", \"a\", \"unicorn\", \"in\", \"the\", \"garden\", \".\"]\n# ::alignments 3-1 6-1.1\n(u / unicorn~e.3\n   :location (g / garden~e.6))", [[0, 5], [6, 8], [9, 10], [11, 18], [19, 21], [22, 25], [26, 32], [32, 33]]], ["# ::snt There was a felon elected to the city council.\n# ::tokens [\"There\", \"was\", \"a\", \"felon\", \"elected\", \"to\", \"the\", \"city\", \"council\", \".\"]\n# ::lemmas [\"there\", \"be\", \"a\", \"felon\", \"elect\", \"to\", \"the\", \"city\", \"council\", \".\"]\n# ::alignments 3-1.1 4-1 7-1.2.1 8-1.2\n(e / elect-01~e.4\n   :ARG1 (f / felon~e.3)\n   :ARG2 (c / council~e.8\n            :mod (c2 / city~e.7)))", [[0, 5], [6, 9], [10, 11], [12, 17], [18, 25], [26, 28], [29, 32], [33, 37], [38, 45], [45, 46]]], ["# ::snt There is a seat available.\n# ::tokens [\"There\", \"is\", \"a\", \"seat\", \"available\", \".\"]\n# ::lemmas [\"there\", \"be\", \"a\", \"seat\", \"available\", \".\"]\n# ::alignments 3-1.1 4-1\n(a / available-02~e.4\n   :ARG2 (s / seat~e.3))", [[0, 5], [6, 8], [9, 10], [11, 15], [16, 25], [25, 26]]], ["# ::snt A seat available was in the last row.\n# ::tokens [\"A\", \"seat\", \"available\", \"was\", \"in\", \"the\", \"last\", \"row\", \".\"]\n# ::lemmas [\"a\", \"seat\", \"available\", \"be\", \"in\", \"the\", \"last\", \"row\", \".\"]\n# ::alignments 1-1 2-1.1 7-1.2\n(s / seat~e.1\n   :ARG2-of (a / available-02~e.2)\n   :location (r / row~e.7\n                :ord (o / ordinal-entity\n                        :value \"-1\")))", [[0, 1], [2, 6], [7, 16], [17, 20], [21, 23], [24, 27], [28, 32], [33, 36], [36, 37]]], ["# ::snt Many people were fond of Pat.\n# ::tokens [\"Many\", \"people\", \"were\", \"fond\", \"of\", \"Pat\", \".\"]\n# ::lemmas [\"many\", \"people\", \"be\", \"fond\", \"of\", \"Pat\", \".\"]\n# ::alignments 0-1.1.1 5-1.2.1.1\n(l / like-01\n   :ARG0 (p / person\n            :quant (m / many~e.0))\n   :ARG1 (p2 / person\n             :name (n / name\n                      :op1 \"Pat\"~e.5)))", [[0, 4], [5, 11], [12, 16], [17, 21], [22, 24], [25, 28], [28, 29]]], ["# ::snt People are looking through the window.\n# ::tokens [\"People\", \"are\", \"looking\", \"through\", \"the\", \"window\", \".\"]\n# ::lemmas [\"people\", \"be\", \"look\", \"through\", \"the\", \"window\", \".\"]\n# ::alignments 2-1 5-1.2\n(l / look-01~e.2\n   :ARG0 (p / person)\n   :ARG1 (w / window~e.5))", [[0, 6], [7, 10], [11, 18], [19, 26], [27, 30], [31, 37], [37, 38]]], ["# ::snt A felon was elected to the city council.\n# ::tokens [\"A\", \"felon\", \"was\", \"elected\", \"to\", \"the\", \"city\", \"council\", \".\"]\n# ::lemmas [\"a\", \"felon\", \"be\", \"elect\", \"to\", \"the\", \"city\", \"council\", \".\"]\n# ::alignments 1-1.1 3-1 6-1.2.1 7-1.2\n(e / elect-01~e.3\n   :ARG1 (f / felon~e.1)\n   :ARG2 (c / council~e.7\n            :mod (c2 / city~e.6)))", [[0, 1], [2, 7], [8, 11], [12, 19], [20, 22], [23, 26], [27, 31], [32, 39], [39, 40]]], ["# ::snt There loved Sandy.\n# ::tokens [\"There\", \"loved\", \"Sandy\", \".\"]\n# ::lemmas [\"there\", \"love\", \"Sandy\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1.1\n(l / love-01~e.1\n   :ARG0 (t / there~e.0)\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandy\"~e.2)))", [[0, 5], [6, 11], [12, 17], [17, 18]]], ["# ::snt We talked to them about there.\n# ::tokens [\"We\", \"talked\", \"to\", \"them\", \"about\", \"there\", \".\"]\n# ::lemmas [\"we\", \"talk\", \"to\", \"they\", \"about\", \"there\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.3 5-1.2\n(t / talk-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (t2 / there~e.5)\n   :ARG2 (t3 / they~e.3))", [[0, 2], [3, 9], [10, 12], [13, 17], [18, 23], [24, 29], [29, 30]]], ["# ::snt It mattered that the Giants had lost.\n# ::tokens [\"It\", \"mattered\", \"that\", \"the\", \"Giants\", \"had\", \"lost\", \".\"]\n# ::lemmas [\"it\", \"matter\", \"that\", \"the\", \"Giants\", \"have\", \"lose\", \".\"]\n# ::alignments 1-1 4-1.1.1.1.1 6-1.1\n(m / matter-01~e.1\n   :ARG1 (l / lose-03~e.6\n            :ARG0 (t / team\n                     :name (n / name\n                              :op1 \"Giants\"~e.4))))", [[0, 2], [3, 11], [12, 16], [17, 20], [21, 27], [28, 31], [32, 36], [36, 37]]], ["# ::snt That dogs bark annoys people.\n# ::tokens [\"That\", \"dogs\", \"bark\", \"annoys\", \"people\", \".\"]\n# ::lemmas [\"that\", \"dog\", \"bark\", \"annoy\", \"people\", \".\"]\n# ::alignments 1-1.1.1 2-1.1 3-1\n(a / annoy-01~e.3\n   :ARG0 (b / bark-01~e.2\n            :ARG0 (d / dog~e.1))\n   :ARG1 (p / person))", [[0, 4], [5, 9], [10, 14], [15, 21], [22, 28], [28, 29]]], ["# ::snt It annoys people that dogs bark.\n# ::tokens [\"It\", \"annoys\", \"people\", \"that\", \"dogs\", \"bark\", \".\"]\n# ::lemmas [\"it\", \"annoy\", \"people\", \"that\", \"dog\", \"bark\", \".\"]\n# ::alignments 1-1 4-1.1.1 5-1.1\n(a / annoy-01~e.1\n   :ARG0 (b / bark-01~e.5\n            :ARG0 (d / dog~e.4))\n   :ARG1 (p / person))", [[0, 2], [3, 9], [10, 16], [17, 21], [22, 26], [27, 31], [31, 32]]], ["# ::snt That Chris knew the answer occurred to Pat.\n# ::tokens [\"That\", \"Chris\", \"knew\", \"the\", \"answer\", \"occurred\", \"to\", \"Pat\", \".\"]\n# ::lemmas [\"that\", \"Chris\", \"know\", \"the\", \"answer\", \"occur\", \"to\", \"Pat\", \".\"]\n# ::alignments 1-1.1.1.1 2-1 4-1.2.1 7-1.2.2.1.1\n(k / know-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chris\"~e.1))\n   :ARG1 (b / be-from-91\n            :ARG1 (a / answer~e.4)\n            :ARG2 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Pat\"~e.7))))", [[0, 4], [5, 10], [11, 15], [16, 19], [20, 26], [27, 35], [36, 38], [39, 42], [42, 43]]], ["# ::snt It never occurred to Pat that Chris knew the answer.\n# ::tokens [\"It\", \"never\", \"occurred\", \"to\", \"Pat\", \"that\", \"Chris\", \"knew\", \"the\", \"answer\", \".\"]\n# ::lemmas [\"it\", \"never\", \"occur\", \"to\", \"Pat\", \"that\", \"Chris\", \"know\", \"the\", \"answer\", \".\"]\n# ::alignments 4-1.2.1.1 6-1.3.1.1.1 7-1.3 9-1.3.2.1\n(t / think-01\n   :polarity -\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Pat\"~e.4))\n   :ARG1 (k / know-01~e.7\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Chris\"~e.6))\n            :ARG1 (t2 / thing\n                      :ARG2-of (a / answer-01~e.9)))\n   :time (e / ever))", [[0, 2], [3, 8], [9, 17], [18, 20], [21, 24], [25, 29], [30, 35], [36, 40], [41, 44], [45, 51], [51, 52]]], ["# ::snt That the Cardinal won the game gave Sandy a thrill.\n# ::tokens [\"That\", \"the\", \"Cardinal\", \"won\", \"the\", \"game\", \"gave\", \"Sandy\", \"a\", \"thrill\", \".\"]\n# ::lemmas [\"that\", \"the\", \"Cardinal\", \"win\", \"the\", \"game\", \"give\", \"Sandy\", \"a\", \"thrill\", \".\"]\n# ::alignments 2-1.1.1.1.1 3-1.1 5-1.1.2 6-1 7-1.2.2.1.1 9-1.2\n(g / give-01~e.6\n   :ARG0 (w / win-01~e.3\n            :ARG0 (t / team\n                     :name (n / name\n                              :op1 \"Cardinal\"~e.2))\n            :ARG1 (g2 / game~e.5))\n   :ARG1 (t2 / thrill-01~e.9\n             :ARG0 w\n             :ARG1 (p / person\n                      :name (n2 / name\n                                :op1 \"Sandy\"~e.7)))\n   :ARG2 p)", [[0, 4], [5, 8], [9, 17], [18, 21], [22, 25], [26, 30], [31, 35], [36, 41], [42, 43], [44, 50], [50, 51]]], ["# ::snt It gave Sandy a thrill that the Cardinal won the game.\n# ::tokens [\"It\", \"gave\", \"Sandy\", \"a\", \"thrill\", \"that\", \"the\", \"Cardinal\", \"won\", \"the\", \"game\", \".\"]\n# ::lemmas [\"it\", \"give\", \"Sandy\", \"a\", \"thrill\", \"that\", \"the\", \"Cardinal\", \"win\", \"the\", \"game\", \".\"]\n# ::alignments 1-1 2-1.2.2.1.1 4-1.2 7-1.1.1.1.1 8-1.1 10-1.1.2\n(g / give-01~e.1\n   :ARG0 (w / win-01~e.8\n            :ARG0 (t / team\n                     :name (n / name\n                              :op1 \"Cardinals\"~e.7))\n            :ARG1 (g2 / game~e.10))\n   :ARG1 (t2 / thrill-01~e.4\n             :ARG0 w\n             :ARG1 (p / person\n                      :name (n2 / name\n                                :op1 \"Sandy\"~e.2)))\n   :ARG2 p)", [[0, 2], [3, 7], [8, 13], [14, 15], [16, 22], [23, 27], [28, 31], [32, 40], [41, 44], [45, 48], [49, 53], [53, 54]]], ["# ::snt That Sandy had lied suggested.\n# ::tokens [\"That\", \"Sandy\", \"had\", \"lied\", \"suggested\", \".\"]\n# ::lemmas [\"that\", \"Sandy\", \"have\", \"lie\", \"suggest\", \".\"]\n# ::alignments 1-1.1.1.1.1 3-1.1 4-1\n(s / suggest-01~e.4\n   :ARG1 (l / lie-08~e.3\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"Sandy\"~e.1))))", [[0, 4], [5, 10], [11, 14], [15, 19], [20, 29], [29, 30]]], ["# ::snt It loved Sandy.\n# ::tokens [\"It\", \"loved\", \"Sandy\", \".\"]\n# ::lemmas [\"it\", \"love\", \"Sandy\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1.1\n(l / love-01~e.1\n   :ARG0 (ii / it~e.0)\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Sandy\"~e.2)))", [[0, 2], [3, 8], [9, 14], [14, 15]]], ["# ::snt Cohen proved the independence of the continuum hypothesis.\n# ::tokens [\"Cohen\", \"proved\", \"the\", \"independence\", \"of\", \"the\", \"continuum\", \"hypothesis\", \".\"]\n# ::lemmas [\"Cohen\", \"prove\", \"the\", \"independence\", \"of\", \"the\", \"continuum\", \"hypothesis\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 6-1.2.2.2 7-1.2.2.1\n(p / prove-01~e.1\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Cohen\"~e.0))\n   :ARG1 (d / depend-01~e.3\n            :polarity -\n            :ARG0 (t / thing\n                     :ARG1-of (h / hypothesize-01~e.7)\n                     :mod (c / continuum~e.6))))", [[0, 5], [6, 12], [13, 16], [17, 29], [30, 32], [33, 36], [37, 46], [47, 57], [57, 58]]], ["# ::snt Cohen proved that the continuum hypothesis was independent.\n# ::tokens [\"Cohen\", \"proved\", \"that\", \"the\", \"continuum\", \"hypothesis\", \"was\", \"independent\", \".\"]\n# ::lemmas [\"Cohen\", \"prove\", \"that\", \"the\", \"continuum\", \"hypothesis\", \"be\", \"independent\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.2.2.1 5-1.2.2 7-1.2\n(p / prove-01~e.1\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Cohen\"~e.0))\n   :ARG1 (d / depend-01~e.7\n            :polarity -\n            :ARG0 (h / hypothesis~e.5\n                     :mod (c / continuum~e.4))))", [[0, 5], [6, 12], [13, 17], [18, 21], [22, 31], [32, 42], [43, 46], [47, 58], [58, 59]]], ["# ::snt We forgot our invitations.\n# ::tokens [\"We\", \"forgot\", \"our\", \"invitations\", \".\"]\n# ::lemmas [\"we\", \"forget\", \"our\", \"invitation\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2\n(f / forget-01~e.1\n   :ARG0 (w / we~e.0)\n   :ARG1 (ii / invite-01~e.3\n             :ARG1 w))", [[0, 2], [3, 9], [10, 13], [14, 25], [25, 26]]], ["# ::snt Nobody saw Pat.\n# ::tokens [\"Nobody\", \"saw\", \"Pat\", \".\"]\n# ::lemmas [\"nobody\", \"see\", \"Pat\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1.1\n(s / see-01~e.1\n   :ARG0 (n / nobody~e.0)\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"Pat\"~e.2)))", [[0, 6], [7, 10], [11, 14], [14, 15]]], ["# ::snt That Fido barks annoys me.\n# ::tokens [\"That\", \"Fido\", \"barks\", \"annoys\", \"me\", \".\"]\n# ::lemmas [\"that\", \"Fido\", \"bark\", \"annoy\", \"i\", \".\"]\n# ::alignments 0-1.1.2 1-1.1.1.1.1 2-1.1 3-1 4-1.2\n(a / annoy-01~e.3\n   :ARG0 (b / bark-01~e.2\n            :ARG0 (a2 / animal\n                      :name (n / name\n                               :op1 \"Fido\"~e.1))\n            :mod (t / that~e.0))\n   :ARG1 (ii / i~e.4))", [[0, 4], [5, 9], [10, 15], [16, 22], [23, 25], [25, 26]]], ["# ::snt Fido barks.\n# ::tokens [\"Fido\", \"barks\", \".\"]\n# ::lemmas [\"fido\", \"bark\", \".\"]\n# ::alignments 0-1.1.1.1 1-1\n(b / barks-01~e.1\n   :ARG0 (a / animal\n            :name (n / name\n                     :op1 \"Fido\"~e.0)))", [[0, 4], [5, 10], [10, 11]]], ["# ::snt Chris dreads the bucket.\n# ::tokens [\"Chris\", \"dreads\", \"the\", \"bucket\", \".\"]\n# ::lemmas [\"Chris\", \"dread\", \"the\", \"bucket\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2\n(d / dread-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Chris\"~e.0))\n   :ARG1 (b / bucket~e.3))", [[0, 5], [6, 12], [13, 16], [17, 23], [23, 24]]], ["# ::snt The candidates bring advantage to the voters.\n# ::tokens [\"The\", \"candidates\", \"bring\", \"advantage\", \"to\", \"the\", \"voters\", \".\"]\n# ::lemmas [\"the\", \"candidate\", \"bring\", \"advantage\", \"to\", \"the\", \"voter\", \".\"]\n# ::alignments 1-1.1 3-1 6-1.2.1\n(a / advantage-01~e.3\n   :ARG1 (c / candidate~e.1)\n   :ARG2 (p / person\n            :ARG0-of (v / vote-01~e.6)))", [[0, 3], [4, 14], [15, 20], [21, 30], [31, 33], [34, 37], [38, 44], [44, 45]]], ["# ::snt Tabs are kept on suspected drug dealers by the FBI.\n# ::tokens [\"Tabs\", \"are\", \"kept\", \"on\", \"suspected\", \"drug\", \"dealers\", \"by\", \"the\", \"FBI\", \".\"]\n# ::lemmas [\"tab\", \"be\", \"keep\", \"on\", \"suspect\", \"drug\", \"dealer\", \"by\", \"the\", \"FBI\", \".\"]\n# ::alignments 2-1 4-1.3.1 5-1.3.1.1.2 6-1.3.1.1 9-1.1.1.1\n(k / keep-01~e.2\n   :ARG0 (g / government-organization\n            :name (n / name\n                     :op1 \"FBI\"~e.9))\n   :ARG1 (t / tit)\n   :prep-on (p / person\n               :ARG2-of (s / suspect-01~e.4\n                           :ARG1 (d / deal-02~e.6\n                                    :ARG0 p\n                                    :ARG1 (d2 / drug~e.5)))))", [[0, 4], [5, 8], [9, 13], [14, 16], [17, 26], [27, 31], [32, 39], [40, 42], [43, 46], [47, 50], [50, 51]]], ["# ::snt Advantage is taken of every opportunity for improvement.\n# ::tokens [\"Advantage\", \"is\", \"taken\", \"of\", \"every\", \"opportunity\", \"for\", \"improvement\", \".\"]\n# ::lemmas [\"advantage\", \"be\", \"take\", \"of\", \"every\", \"opportunity\", \"for\", \"improvement\", \".\"]\n# ::alignments 0-1.1 2-1 4-1.2.1 5-1.2 7-1.2.2\n(t / take-01~e.2\n   :ARG1 (a / advantage-01~e.0)\n   :ARG2 (o / opportunity~e.5\n            :mod (e / every~e.4)\n            :purpose (ii / improve-01~e.7)))", [[0, 9], [10, 12], [13, 18], [19, 21], [22, 27], [28, 39], [40, 43], [44, 55], [55, 56]]], ["# ::snt The bucket was kicked by Pat.\n# ::tokens [\"The\", \"bucket\", \"was\", \"kicked\", \"by\", \"Pat\", \".\"]\n# ::lemmas [\"the\", \"bucket\", \"be\", \"kick\", \"by\", \"Pat\", \".\"]\n# ::alignments 1-1.2 3-1 5-1.1.1.1\n(k / kick-01~e.3\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Pat\"~e.5))\n   :ARG1 (b / bucket~e.1))", [[0, 3], [4, 10], [11, 14], [15, 21], [22, 24], [25, 28], [28, 29]]], ["# ::snt John is sad.\n# ::tokens [\"John\", \"is\", \"sad\", \".\"]\n# ::lemmas [\"John\", \"be\", \"sad\", \".\"]\n# ::alignments 0-1.1.1.1 2-1\n(s / sad-02~e.2\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0)))", [[0, 4], [5, 7], [8, 11], [11, 12]]], ["# ::snt John loaded the wagon full with hay.\n# ::tokens [\"John\", \"loaded\", \"the\", \"wagon\", \"full\", \"with\", \"hay\", \".\"]\n# ::lemmas [\"John\", \"load\", \"the\", \"wagon\", \"full\", \"with\", \"hay\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 4-1.2.1 6-1.2.1.1\n(l / load-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (w / wagon~e.3\n            :ARG1-of (f / full-09~e.4\n                        :ARG2 (h / hay~e.6)))\n   :ARG2 (f2 / full))", [[0, 4], [5, 11], [12, 15], [16, 21], [22, 26], [27, 31], [32, 35], [35, 36]]], ["# ::snt John loaded the wagon with hay green.\n# ::tokens [\"John\", \"loaded\", \"the\", \"wagon\", \"with\", \"hay\", \"green\", \".\"]\n# ::lemmas [\"John\", \"load\", \"the\", \"wagon\", \"with\", \"hay\", \"green\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 5-1.3 6-1.3.1\n(l / load-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (w / wagon~e.3)\n   :ARG2 (h / hay~e.5\n            :ARG1-of (g / green-02~e.6)))", [[0, 4], [5, 11], [12, 15], [16, 21], [22, 26], [27, 30], [31, 36], [36, 37]]], ["# ::snt I presented John with it dead.\n# ::tokens [\"I\", \"presented\", \"John\", \"with\", \"it\", \"dead\", \".\"]\n# ::lemmas [\"i\", \"present\", \"John\", \"with\", \"it\", \"dead\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.3.1.1 4-1.2\n(p / present-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (ii2 / it~e.4)\n   :ARG2 (p2 / person\n             :name (n / name\n                      :op1 \"John\"~e.2)\n             :ARG1-of (d / die-01)))", [[0, 1], [2, 11], [12, 16], [17, 21], [22, 24], [25, 29], [29, 30]]], ["# ::snt Of whom are you thinking?\n# ::tokens [\"Of\", \"whom\", \"are\", \"you\", \"thinking\", \"?\"]\n# ::lemmas [\"of\", \"whom\", \"be\", \"you\", \"think\", \"?\"]\n# ::alignments 3-1.1 4-1\n(t / think-01~e.4\n   :ARG0 (y / you~e.3)\n   :ARG1 (a / amr-unknown))", [[0, 2], [3, 7], [8, 11], [12, 15], [16, 24], [24, 25]]], ["# ::snt John became rich.\n# ::tokens [\"John\", \"became\", \"rich\", \".\"]\n# ::lemmas [\"John\", \"become\", \"rich\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2\n(b / become-01~e.1\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG2 (r / rich~e.2))", [[0, 4], [5, 11], [12, 16], [16, 17]]], ["# ::snt I gave John gold apples.\n# ::tokens [\"I\", \"gave\", \"John\", \"gold\", \"apples\", \".\"]\n# ::lemmas [\"i\", \"give\", \"John\", \"gold\", \"apple\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.3.1.1 3-1.2.1 4-1.2\n(g / give-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (a / apple~e.4\n            :mod (g2 / gold~e.3))\n   :ARG2 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.2)))", [[0, 1], [2, 6], [7, 11], [12, 16], [17, 23], [23, 24]]], ["# ::snt how silly is Bill considered?\n# ::tokens [\"how\", \"silly\", \"is\", \"Bill\", \"considered\", \"?\"]\n# ::lemmas [\"how\", \"silly\", \"be\", \"Bill\", \"consider\", \"?\"]\n# ::alignments 1-1.1 3-1.1.1.1.1 4-1\n(c / consider-02~e.4\n   :ARG1 (s / silly~e.1\n            :domain (p / person\n                       :name (n / name\n                                :op1 \"Bill\"~e.3))\n            :degree (a / amr-unknown)))", [[0, 3], [4, 9], [10, 12], [13, 17], [18, 28], [28, 29]]], ["# ::snt how mad was Bill made?\n# ::tokens [\"how\", \"mad\", \"was\", \"Bill\", \"made\", \"?\"]\n# ::lemmas [\"how\", \"mad\", \"be\", \"Bill\", \"make\", \"?\"]\n# ::alignments 1-1 3-1.1.1.1\n(m / mad-04~e.1\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"Bill\"~e.3))\n   :degree (a / amr-unknown))", [[0, 3], [4, 7], [8, 11], [12, 16], [17, 21], [21, 22]]], ["# ::snt John is sick.\n# ::tokens [\"John\", \"is\", \"sick\", \".\"]\n# ::lemmas [\"John\", \"be\", \"sick\", \".\"]\n# ::alignments 0-1.1.1.1 2-1\n(s / sick-05~e.2\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0)))", [[0, 4], [5, 7], [8, 12], [12, 13]]], ["# ::snt John left singing.\n# ::tokens [\"John\", \"left\", \"singing\", \".\"]\n# ::lemmas [\"John\", \"leave\", \"singe\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2\n(l / leave-11~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (s / sing-01~e.2\n            :ARG0 p))", [[0, 4], [5, 9], [10, 17], [17, 18]]], ["# ::snt John is near Larry.\n# ::tokens [\"John\", \"is\", \"near\", \"Larry\", \".\"]\n# ::lemmas [\"John\", \"be\", \"near\", \"Larry\", \".\"]\n# ::alignments 0-1.1.1.1 2-1 3-1.2.1.1\n(n / near-02~e.2\n   :ARG1 (p / person\n            :name (n2 / name\n                      :op1 \"John\"~e.0))\n   :ARG2 (p2 / person\n             :name (n3 / name\n                       :op1 \"Larry\"~e.3)))", [[0, 4], [5, 7], [8, 12], [13, 18], [18, 19]]], ["# ::snt John gave Bill the dog dead.\n# ::tokens [\"John\", \"gave\", \"Bill\", \"the\", \"dog\", \"dead\", \".\"]\n# ::lemmas [\"John\", \"give\", \"Bill\", \"the\", \"dog\", \"dead\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.3.1.1 4-1.2.1\n(g / give-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (d / die-01\n            :ARG1 (d2 / dog~e.4))\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Bill\"~e.2)))", [[0, 4], [5, 9], [10, 14], [15, 18], [19, 22], [23, 27], [27, 28]]], ["# ::snt Bill was struck by John as stupid.\n# ::tokens [\"Bill\", \"was\", \"struck\", \"by\", \"John\", \"as\", \"stupid\", \".\"]\n# ::lemmas [\"Bill\", \"be\", \"strike\", \"by\", \"John\", \"as\", \"stupid\", \".\"]\n# ::alignments 0-1.2.1.1 2-1 4-1.1.1.1 6-1.3\n(s / strike-04~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.4))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Bill\"~e.0))\n   :ARG2 (s2 / stupid~e.6))", [[0, 4], [5, 8], [9, 15], [16, 18], [19, 23], [24, 26], [27, 33], [33, 34]]], ["# ::snt John was struck as sick.\n# ::tokens [\"John\", \"was\", \"struck\", \"as\", \"sick\", \".\"]\n# ::lemmas [\"John\", \"be\", \"strike\", \"as\", \"sick\", \".\"]\n# ::alignments 0-1.1.1.1 2-1 4-1.2\n(s / strike-01~e.2\n   :ARG1 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG2 (s2 / sick-05~e.4\n             :ARG1 p))", [[0, 4], [5, 8], [9, 15], [16, 18], [19, 23], [23, 24]]], ["# ::snt John was struck by Bill's idiocy.\n# ::tokens [\"John\", \"was\", \"struck\", \"by\", \"Bill\", \"'s\", \"idiocy\", \".\"]\n# ::lemmas [\"John\", \"be\", \"strike\", \"by\", \"Bill\", \"'s\", \"idiocy\", \".\"]\n# ::alignments 0-1.2.1.1 2-1 4-1.1.1.1.1 6-1.1\n(s / strike-01~e.2\n   :ARG0 (ii / idiocy~e.6\n             :poss (p / person\n                      :name (n / name\n                               :op1 \"Bill\"~e.4)))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"John\"~e.0)))", [[0, 4], [5, 8], [9, 15], [16, 18], [19, 23], [23, 25], [26, 32], [32, 33]]], ["# ::snt John promised Bill to leave.\n# ::tokens [\"John\", \"promised\", \"Bill\", \"to\", \"leave\", \".\"]\n# ::lemmas [\"John\", \"promise\", \"Bill\", \"to\", \"leave\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1 4-1.3\n(p / promise-01~e.1\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"John\"~e.0))\n   :ARG1 (p3 / person\n             :name (n2 / name\n                       :op1 \"Bill\"~e.2))\n   :ARG2 (l / leave-11~e.4\n            :ARG0 p3))", [[0, 4], [5, 13], [14, 18], [19, 21], [22, 27], [27, 28]]], ["# ::snt John tried to leave.\n# ::tokens [\"John\", \"tried\", \"to\", \"leave\", \".\"]\n# ::lemmas [\"John\", \"try\", \"to\", \"leave\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2\n(t / try-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (l / leave-11~e.3\n            :ARG0 p))", [[0, 4], [5, 10], [11, 13], [14, 19], [19, 20]]], ["# ::snt To leave would be a pleasure.\n# ::tokens [\"To\", \"leave\", \"would\", \"be\", \"a\", \"pleasure\", \".\"]\n# ::lemmas [\"to\", \"leave\", \"would\", \"be\", \"a\", \"pleasure\", \".\"]\n# ::alignments 1-1.1 5-1\n(p / pleasure~e.5\n   :domain (l / leave-11~e.1))", [[0, 2], [3, 8], [9, 14], [15, 17], [18, 19], [20, 28], [28, 29]]], ["# ::snt John was struck by Bill as pompous.\n# ::tokens [\"John\", \"was\", \"struck\", \"by\", \"Bill\", \"as\", \"pompous\", \".\"]\n# ::lemmas [\"John\", \"be\", \"strike\", \"by\", \"Bill\", \"as\", \"pompous\", \".\"]\n# ::alignments 0-1.2.1.1 2-1 4-1.1.1.1 6-1.3\n(s / strike-04~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"Bill\"~e.4))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"John\"~e.0))\n   :ARG2 (p3 / pompous~e.6))", [[0, 4], [5, 8], [9, 15], [16, 18], [19, 23], [24, 26], [27, 34], [34, 35]]], ["# ::snt John was promised by Bill to leave.\n# ::tokens [\"John\", \"was\", \"promised\", \"by\", \"Bill\", \"to\", \"leave\", \".\"]\n# ::lemmas [\"John\", \"be\", \"promise\", \"by\", \"Bill\", \"to\", \"leave\", \".\"]\n# ::alignments 0-1.2.1.1 2-1 4-1.1.1.1 6-1.3\n(p / promise-01~e.2\n   :ARG0 (p2 / person\n             :name (n / name\n                      :op1 \"Bill\"~e.4))\n   :ARG1 (p3 / person\n             :name (n2 / name\n                       :op1 \"John\"~e.0))\n   :ARG2 (l / leave-11~e.6\n            :ARG0 p3))", [[0, 4], [5, 8], [9, 17], [18, 20], [21, 25], [26, 28], [29, 34], [34, 35]]], ["# ::snt They make good cooks.\n# ::tokens [\"They\", \"make\", \"good\", \"cooks\", \".\"]\n# ::lemmas [\"they\", \"make\", \"good\", \"cook\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.2 3-1.2.1\n(m / make-01~e.1\n   :ARG0 (t / they~e.0)\n   :ARG1 (p / person\n            :ARG0-of (c / cook-01~e.3)\n            :ARG1-of (g / good-03~e.2)))", [[0, 4], [5, 9], [10, 14], [15, 20], [20, 21]]], ["# ::snt there is nothing to do.\n# ::tokens [\"there\", \"is\", \"nothing\", \"to\", \"do\", \".\"]\n# ::lemmas [\"there\", \"be\", \"nothing\", \"to\", \"do\", \".\"]\n# ::alignments 2-1.1 4-1\n(d / do-02~e.4\n   :ARG1 (n / nothing~e.2))", [[0, 5], [6, 8], [9, 16], [17, 19], [20, 22], [22, 23]]], ["# ::snt John has something for Bill to do.\n# ::tokens [\"John\", \"has\", \"something\", \"for\", \"Bill\", \"to\", \"do\", \".\"]\n# ::lemmas [\"John\", \"have\", \"something\", \"for\", \"Bill\", \"to\", \"do\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2 4-1.2.1.1.1.1 6-1.2.1\n(h / have-03~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (s / something~e.2\n            :ARG1-of (d / do-02~e.6\n                        :ARG0 (p2 / person\n                                  :name (n2 / name\n                                            :op1 \"Bill\"~e.4)))))", [[0, 4], [5, 8], [9, 18], [19, 22], [23, 27], [28, 30], [31, 33], [33, 34]]], ["# ::snt I am counting on Bill to incriminate himself.\n# ::tokens [\"I\", \"am\", \"counting\", \"on\", \"Bill\", \"to\", \"incriminate\", \"himself\", \".\"]\n# ::lemmas [\"i\", \"be\", \"count\", \"on\", \"Bill\", \"to\", \"incriminate\", \"himself\", \".\"]\n# ::alignments 0-1.1 2-1 4-1.2.1.1.1 6-1.2\n(c / count-03~e.2\n   :ARG0 (ii / i~e.0)\n   :ARG1 (ii2 / incriminate-01~e.6\n              :ARG0 (p / person\n                       :name (n / name\n                                :op1 \"Bill\"~e.4))\n              :ARG1 p))", [[0, 1], [2, 4], [5, 13], [14, 16], [17, 21], [22, 24], [25, 36], [37, 44], [44, 45]]], ["# ::snt On whom are you counting to incriminate himself?\n# ::tokens [\"On\", \"whom\", \"are\", \"you\", \"counting\", \"to\", \"incriminate\", \"himself\", \"?\"]\n# ::lemmas [\"on\", \"whom\", \"be\", \"you\", \"count\", \"to\", \"incriminate\", \"himself\", \"?\"]\n# ::alignments 3-1.1 4-1 6-1.3\n(c / count-03~e.4\n   :ARG0 (y / you~e.3)\n   :ARG1 (a / amr-unknown)\n   :purpose (ii / incriminate-01~e.6\n                :ARG0 a\n                :ARG1 (h / he)))", [[0, 2], [3, 7], [8, 11], [12, 15], [16, 24], [25, 27], [28, 39], [40, 47], [47, 48]]], ["# ::snt I am counting on Bill to get there on time.\n# ::tokens [\"I\", \"am\", \"counting\", \"on\", \"Bill\", \"to\", \"get\", \"there\", \"on\", \"time\", \".\"]\n# ::lemmas [\"i\", \"be\", \"count\", \"on\", \"Bill\", \"to\", \"get\", \"there\", \"on\", \"time\", \".\"]\n# ::alignments 0-1.1 2-1 4-1.2.1.1.1 6-1.2 7-1.2.2\n(c / count-03~e.2\n   :ARG0 (ii / i~e.0)\n   :ARG1 (g / get-05~e.6\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"Bill\"~e.4))\n            :ARG2 (t / there~e.7)\n            :mod (o / on-time)))", [[0, 1], [2, 4], [5, 13], [14, 16], [17, 21], [22, 24], [25, 28], [29, 34], [35, 37], [38, 42], [42, 43]]], ["# ::snt I would prefer to leave.\n# ::tokens [\"I\", \"would\", \"prefer\", \"to\", \"leave\", \".\"]\n# ::lemmas [\"i\", \"would\", \"prefer\", \"to\", \"leave\", \".\"]\n# ::alignments 0-1.1 2-1 4-1.2\n(p / prefer-01~e.2\n   :ARG0 (ii / i~e.0)\n   :ARG1 (l / leave-11~e.4\n            :ARG0 ii))", [[0, 1], [2, 7], [8, 14], [15, 17], [18, 23], [23, 24]]], ["# ::snt I would hate for John to leave.\n# ::tokens [\"I\", \"would\", \"hate\", \"for\", \"John\", \"to\", \"leave\", \".\"]\n# ::lemmas [\"i\", \"would\", \"hate\", \"for\", \"John\", \"to\", \"leave\", \".\"]\n# ::alignments 0-1.1 2-1 4-1.2.1.1.1 6-1.2\n(h / hate-01~e.2\n   :ARG0 (ii / i~e.0)\n   :ARG1 (l / leave-11~e.6\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"John\"~e.4))))", [[0, 1], [2, 7], [8, 12], [13, 16], [17, 21], [22, 24], [25, 30], [30, 31]]], ["# ::snt I would prefer for John to leave.\n# ::tokens [\"I\", \"would\", \"prefer\", \"for\", \"John\", \"to\", \"leave\", \".\"]\n# ::lemmas [\"i\", \"would\", \"prefer\", \"for\", \"John\", \"to\", \"leave\", \".\"]\n# ::alignments 0-1.1 2-1 4-1.2.1.1.1 6-1.2\n(p / prefer-01~e.2\n   :ARG0 (ii / i~e.0)\n   :ARG1 (l / leave-11~e.6\n            :ARG0 (p2 / person\n                      :name (n / name\n                               :op1 \"John\"~e.4))))", [[0, 1], [2, 7], [8, 14], [15, 18], [19, 23], [24, 26], [27, 32], [32, 33]]], ["# ::snt It was hated for John to leave.\n# ::tokens [\"It\", \"was\", \"hated\", \"for\", \"John\", \"to\", \"leave\", \".\"]\n# ::lemmas [\"it\", \"be\", \"hate\", \"for\", \"John\", \"to\", \"leave\", \".\"]\n# ::alignments 2-1 4-1.1.1.1.1 6-1.1\n(h / hate-01~e.2\n   :ARG1 (l / leave-11~e.6\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"John\"~e.4))))", [[0, 2], [3, 6], [7, 12], [13, 16], [17, 21], [22, 24], [25, 30], [30, 31]]], ["# ::snt John decided for Bill to get the prize.\n# ::tokens [\"John\", \"decided\", \"for\", \"Bill\", \"to\", \"get\", \"the\", \"prize\", \".\"]\n# ::lemmas [\"John\", \"decide\", \"for\", \"Bill\", \"to\", \"get\", \"the\", \"prize\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1.1.1 5-1.2 7-1.2.2\n(d / decide-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (g / get-01~e.5\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Bill\"~e.3))\n            :ARG1 (p3 / prize~e.7)))", [[0, 4], [5, 12], [13, 16], [17, 21], [22, 24], [25, 28], [29, 32], [33, 38], [38, 39]]], ["# ::snt John decided Bill to get the prize.\n# ::tokens [\"John\", \"decided\", \"Bill\", \"to\", \"get\", \"the\", \"prize\", \".\"]\n# ::lemmas [\"John\", \"decide\", \"Bill\", \"to\", \"get\", \"the\", \"prize\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1.1 4-1.2 6-1.2.2\n(d / decide-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (g / get-01~e.4\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Bill\"~e.2))\n            :ARG1 (p3 / prize~e.6)))", [[0, 4], [5, 12], [13, 17], [18, 20], [21, 24], [25, 28], [29, 34], [34, 35]]], ["# ::snt to die is no fun.\n# ::tokens [\"to\", \"die\", \"is\", \"no\", \"fun\", \".\"]\n# ::lemmas [\"to\", \"die\", \"be\", \"no\", \"fun\", \".\"]\n# ::alignments 1-1.2 3-1.1 4-1\n(f / fun-01~e.4\n   :polarity -~e.3\n   :ARG1 (d / die-01~e.1))", [[0, 2], [3, 6], [7, 9], [10, 12], [13, 16], [16, 17]]], ["# ::snt John wants to leave.\n# ::tokens [\"John\", \"wants\", \"to\", \"leave\", \".\"]\n# ::lemmas [\"John\", \"want\", \"to\", \"leave\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2\n(w / want-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (l / leave-11~e.3\n            :ARG0 p))", [[0, 4], [5, 10], [11, 13], [14, 19], [19, 20]]], ["# ::snt John counted on Bill to get there on time.\n# ::tokens [\"John\", \"counted\", \"on\", \"Bill\", \"to\", \"get\", \"there\", \"on\", \"time\", \".\"]\n# ::lemmas [\"John\", \"count\", \"on\", \"Bill\", \"to\", \"get\", \"there\", \"on\", \"time\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1.1.1 5-1.2 6-1.2.2\n(c / count-03~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (g / get-05~e.5\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Bill\"~e.3))\n            :ARG2 (t / there~e.6)\n            :manner (o / on-time)))", [[0, 4], [5, 12], [13, 15], [16, 20], [21, 23], [24, 27], [28, 33], [34, 36], [37, 41], [41, 42]]], ["# ::snt I bought Bill a book to read.\n# ::tokens [\"I\", \"bought\", \"Bill\", \"a\", \"book\", \"to\", \"read\", \".\"]\n# ::lemmas [\"i\", \"buy\", \"Bill\", \"a\", \"book\", \"to\", \"read\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2.1.1.1.1 4-1.2 6-1.2.1\n(b / buy-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (b2 / book~e.4\n             :ARG1-of (r / read-01~e.6\n                         :ARG0 (p / person\n                                  :name (n / name\n                                           :op1 \"Bill\"~e.2))))\n   :ARG2 p)", [[0, 1], [2, 8], [9, 13], [14, 15], [16, 20], [21, 23], [24, 28], [28, 29]]], ["# ::snt John told Mary that it would be important to leave early.\n# ::tokens [\"John\", \"told\", \"Mary\", \"that\", \"it\", \"would\", \"be\", \"important\", \"to\", \"leave\", \"early\", \".\"]\n# ::lemmas [\"John\", \"tell\", \"Mary\", \"that\", \"it\", \"would\", \"be\", \"important\", \"to\", \"leave\", \"early\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1.1.1 7-1.2 9-1.2.1 10-1.2.1.2\n(t / tell-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (ii / important-01~e.7\n             :ARG1 (l / leave-11~e.9\n                      :ARG0 (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Mary\"~e.2))\n                      :time (e / early~e.10)))\n   :ARG2 p2)", [[0, 4], [5, 9], [10, 14], [15, 19], [20, 22], [23, 28], [29, 31], [32, 41], [42, 44], [45, 50], [51, 56], [56, 57]]], ["# ::snt John told Mary that it was important to Fred to leave early.\n# ::tokens [\"John\", \"told\", \"Mary\", \"that\", \"it\", \"was\", \"important\", \"to\", \"Fred\", \"to\", \"leave\", \"early\", \".\"]\n# ::lemmas [\"John\", \"tell\", \"Mary\", \"that\", \"it\", \"be\", \"important\", \"to\", \"Fred\", \"to\", \"leave\", \"early\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.3.1.1 6-1.2 8-1.2.1.1.1.1 10-1.2.1 11-1.2.1.2\n(t / tell-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (ii / important-01~e.6\n             :ARG1 (l / leave-11~e.10\n                      :ARG0 (p2 / person\n                                :name (n2 / name\n                                          :op1 \"Fred\"~e.8))\n                      :time (e / early~e.11)))\n   :ARG2 (p3 / person\n             :name (n3 / name\n                       :op1 \"Mary\"~e.2)))", [[0, 4], [5, 9], [10, 14], [15, 19], [20, 22], [23, 26], [27, 36], [37, 39], [40, 44], [45, 47], [48, 53], [54, 59], [59, 60]]], ["# ::snt John, told Mary that it would be appropriate to leave together.\n# ::tokens [\"John\", \",\", \"told\", \"Mary\", \"that\", \"it\", \"would\", \"be\", \"appropriate\", \"to\", \"leave\", \"together\", \".\"]\n# ::lemmas [\"John\", \",\", \"tell\", \"Mary\", \"that\", \"it\", \"would\", \"be\", \"appropriate\", \"to\", \"leave\", \"together\", \".\"]\n# ::alignments 0-1.1.1.1 2-1 3-1.3.1.1 8-1.2 10-1.2.1 11-1.2.1.1\n(t / tell-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (a / appropriate-02~e.8\n            :ARG1 (l / leave-11~e.10\n                     :manner (t2 / together~e.11)))\n   :ARG2 (p2 / person\n             :name (n2 / name\n                       :op1 \"Mary\"~e.3)))", [[0, 4], [4, 5], [6, 10], [11, 15], [16, 20], [21, 23], [24, 29], [30, 32], [33, 44], [45, 47], [48, 53], [54, 62], [62, 63]]], ["# ::snt the election of John president surprised me.\n# ::tokens [\"the\", \"election\", \"of\", \"John\", \"president\", \"surprised\", \"me\", \".\"]\n# ::lemmas [\"the\", \"election\", \"of\", \"John\", \"president\", \"surprise\", \"i\", \".\"]\n# ::alignments 1-1.1 3-1.1.1.1.1 4-1.1.2 5-1 6-1.2\n(s / surprise-01~e.5\n   :ARG0 (e / elect-01~e.1\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"John\"~e.3))\n            :ARG2 (p2 / president~e.4))\n   :ARG1 (ii / i~e.6))", [[0, 3], [4, 12], [13, 15], [16, 20], [21, 30], [31, 40], [41, 43], [43, 44]]], ["# ::snt John's arriving dead surprised me.\n# ::tokens [\"John\", \"'s\", \"arriving\", \"dead\", \"surprised\", \"me\", \".\"]\n# ::lemmas [\"John\", \"'s\", \"arrive\", \"dead\", \"surprise\", \"i\", \".\"]\n# ::alignments 0-1.1.1.1.1 2-1.1 4-1 5-1.2\n(s / surprise-01~e.4\n   :ARG0 (a / arrive-01~e.2\n            :ARG1 (p / person\n                     :name (n / name\n                              :op1 \"John\"~e.0))\n            :manner (d / die-01\n                       :ARG1 p))\n   :ARG1 (ii / i~e.5))", [[0, 4], [4, 6], [7, 15], [16, 20], [21, 30], [31, 33], [33, 34]]], ["# ::snt the attempt by John to leave surprised me.\n# ::tokens [\"the\", \"attempt\", \"by\", \"John\", \"to\", \"leave\", \"surprised\", \"me\", \".\"]\n# ::lemmas [\"the\", \"attempt\", \"by\", \"John\", \"to\", \"leave\", \"surprise\", \"i\", \".\"]\n# ::alignments 1-1.1 3-1.1.1.1.1 5-1.1.2 6-1 7-1.2\n(s / surprise-01~e.6\n   :ARG0 (a / attempt-01~e.1\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"John\"~e.3))\n            :ARG1 (l / leave-11~e.5\n                     :ARG0 p))\n   :ARG1 (ii / i~e.7))", [[0, 3], [4, 11], [12, 14], [15, 19], [20, 22], [23, 28], [29, 38], [39, 41], [41, 42]]], ["# ::snt John left orders to follow Pete.\n# ::tokens [\"John\", \"left\", \"orders\", \"to\", \"follow\", \"Pete\", \".\"]\n# ::lemmas [\"John\", \"leave\", \"order\", \"to\", \"follow\", \"Pete\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2 4-1.2.2 5-1.2.2.2.1.1\n(l / leave-15~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (o / order-01~e.2\n            :ARG1 p\n            :ARG2 (f / follow-02~e.4\n                     :ARG0 p\n                     :ARG1 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Petersburg\"~e.5)))))", [[0, 4], [5, 9], [10, 16], [17, 19], [20, 26], [27, 31], [31, 32]]], ["# ::snt John left us orders to follow Pete.\n# ::tokens [\"John\", \"left\", \"us\", \"orders\", \"to\", \"follow\", \"Pete\", \".\"]\n# ::lemmas [\"John\", \"leave\", \"we\", \"order\", \"to\", \"follow\", \"Pete\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1 3-1.2 5-1.2.2 6-1.2.2.2.1.1\n(l / leave-15~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (o / order-01~e.3\n            :ARG1 (w / we~e.2)\n            :ARG2 (f / follow-02~e.5\n                     :ARG0 w\n                     :ARG1 (p2 / person\n                               :name (n2 / name\n                                         :op1 \"Pete\"~e.6))))\n   :ARG2 w)", [[0, 4], [5, 9], [10, 12], [13, 19], [20, 22], [23, 29], [30, 34], [34, 35]]], ["# ::snt John left orders not to be disturbed.\n# ::tokens [\"John\", \"left\", \"orders\", \"not\", \"to\", \"be\", \"disturbed\", \".\"]\n# ::lemmas [\"John\", \"leave\", \"order\", \"not\", \"to\", \"be\", \"disturb\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2 3-1.2.2.1 6-1.2.2\n(l / leave-14~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (o / order-01~e.2\n            :ARG1 p\n            :ARG2 (d / disturb-01~e.6\n                     :polarity -~e.3)))", [[0, 4], [5, 9], [10, 16], [17, 20], [21, 23], [24, 26], [27, 36], [36, 37]]], ["# ::snt That he is here is clear.\n# ::tokens [\"That\", \"he\", \"is\", \"here\", \"is\", \"clear\", \".\"]\n# ::lemmas [\"that\", \"he\", \"be\", \"here\", \"be\", \"clear\", \".\"]\n# ::alignments 1-1.1.1 3-1.1.2 5-1\n(c / clear-06~e.5\n   :ARG1 (b / be-located-at-91\n            :ARG1 (h / he~e.1)\n            :ARG2 (h2 / here~e.3)))", [[0, 4], [5, 7], [8, 10], [11, 15], [16, 18], [19, 24], [24, 25]]], ["# ::snt It is a problem that he is here.\n# ::tokens [\"It\", \"is\", \"a\", \"problem\", \"that\", \"he\", \"is\", \"here\", \".\"]\n# ::lemmas [\"it\", \"be\", \"a\", \"problem\", \"that\", \"he\", \"be\", \"here\", \".\"]\n# ::alignments 3-1 5-1.1.1 7-1.1.2\n(p / problem~e.3\n   :domain (b / be-located-at-91\n              :ARG1 (h / he~e.5)\n              :ARG2 (h2 / here~e.7)))", [[0, 2], [3, 5], [6, 7], [8, 15], [16, 20], [21, 23], [24, 26], [27, 31], [31, 32]]], ["# ::snt It bothers me that he is here.\n# ::tokens [\"It\", \"bothers\", \"me\", \"that\", \"he\", \"is\", \"here\", \".\"]\n# ::lemmas [\"it\", \"bother\", \"i\", \"that\", \"he\", \"be\", \"here\", \".\"]\n# ::alignments 1-1 2-1.2 4-1.1.1 6-1.1.2\n(b / bother-01~e.1\n   :ARG0 (b2 / be-located-at-91\n             :ARG1 (h / he~e.4)\n             :ARG2 (h2 / here~e.6))\n   :ARG1 (ii / i~e.2))", [[0, 2], [3, 10], [11, 13], [14, 18], [19, 21], [22, 24], [25, 29], [29, 30]]], ["# ::snt John regretted it that Bill had a good time.\n# ::tokens [\"John\", \"regretted\", \"it\", \"that\", \"Bill\", \"had\", \"a\", \"good\", \"time\", \".\"]\n# ::lemmas [\"John\", \"regret\", \"it\", \"that\", \"Bill\", \"have\", \"a\", \"good\", \"time\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.2.1.1.1 5-1.2 7-1.2.2.1 8-1.2.2\n(r / regret-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (h / have-03~e.5\n            :ARG0 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Bill\"~e.4))\n            :ARG1 (t / time~e.8\n                     :ARG1-of (g / good-02~e.7))))", [[0, 4], [5, 14], [15, 17], [18, 22], [23, 27], [28, 31], [32, 33], [34, 38], [39, 43], [43, 44]]], ["# ::snt John believes it that Bill is here.\n# ::tokens [\"John\", \"believes\", \"it\", \"that\", \"Bill\", \"is\", \"here\", \".\"]\n# ::lemmas [\"John\", \"believe\", \"it\", \"that\", \"Bill\", \"be\", \"here\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.2.1.1.1 6-1.2.2\n(b / believe-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (b2 / be-located-at-91\n             :ARG1 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Bill\"~e.4))\n             :ARG2 (h / here~e.6)))", [[0, 4], [5, 13], [14, 16], [17, 21], [22, 26], [27, 29], [30, 34], [34, 35]]], ["# ::snt John believes it sincerely that Bill is here.\n# ::tokens [\"John\", \"believes\", \"it\", \"sincerely\", \"that\", \"Bill\", \"is\", \"here\", \".\"]\n# ::lemmas [\"John\", \"believe\", \"it\", \"sincerely\", \"that\", \"Bill\", \"be\", \"here\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.3 5-1.2.1.1.1 7-1.2.2\n(b / believe-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (b2 / be-located-at-91\n             :ARG1 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Bill\"~e.5))\n             :ARG2 (h / here~e.7))\n   :manner (s / sincere~e.3))", [[0, 4], [5, 13], [14, 16], [17, 26], [27, 31], [32, 36], [37, 39], [40, 44], [44, 45]]], ["# ::snt John is aware of it that Bill is here.\n# ::tokens [\"John\", \"is\", \"aware\", \"of\", \"it\", \"that\", \"Bill\", \"is\", \"here\", \".\"]\n# ::lemmas [\"John\", \"be\", \"aware\", \"of\", \"it\", \"that\", \"Bill\", \"be\", \"here\", \".\"]\n# ::alignments 0-1.1.1.1 6-1.2.1.1.1 8-1.2.2\n(r / realize-01\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (b / be-located-at-91\n            :ARG1 (p2 / person\n                      :name (n2 / name\n                                :op1 \"Bill\"~e.6))\n            :ARG2 (h / here~e.8)))", [[0, 4], [5, 7], [8, 13], [14, 16], [17, 19], [20, 24], [25, 29], [30, 32], [33, 37], [37, 38]]], ["# ::snt John felt it that Bill was tardy.\n# ::tokens [\"John\", \"felt\", \"it\", \"that\", \"Bill\", \"was\", \"tardy\", \".\"]\n# ::lemmas [\"John\", \"feel\", \"it\", \"that\", \"Bill\", \"be\", \"tardy\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.2.1.1.1 6-1.2\n(f / feel-02~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (t / tardy~e.6\n            :domain (p2 / person\n                        :name (n2 / name\n                                  :op1 \"Bill\"~e.4))))", [[0, 4], [5, 9], [10, 12], [13, 17], [18, 22], [23, 26], [27, 32], [32, 33]]], ["# ::snt John believed it that Bill was tardy.\n# ::tokens [\"John\", \"believed\", \"it\", \"that\", \"Bill\", \"was\", \"tardy\", \".\"]\n# ::lemmas [\"John\", \"believe\", \"it\", \"that\", \"Bill\", \"be\", \"tardy\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.2.1.1.1 6-1.2\n(b / believe-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (t / tardy~e.6\n            :domain (p2 / person\n                        :name (n2 / name\n                                  :op1 \"Bill\"~e.4))))", [[0, 4], [5, 13], [14, 16], [17, 21], [22, 26], [27, 30], [31, 36], [36, 37]]], ["# ::snt It was believed that Bill was tardy.\n# ::tokens [\"It\", \"was\", \"believed\", \"that\", \"Bill\", \"was\", \"tardy\", \".\"]\n# ::lemmas [\"it\", \"be\", \"believe\", \"that\", \"Bill\", \"be\", \"tardy\", \".\"]\n# ::alignments 2-1 4-1.1.1.1.1 6-1.1\n(b / believe-01~e.2\n   :ARG1 (t / tardy~e.6\n            :domain (p / person\n                       :name (n / name\n                                :op1 \"Bill\"~e.4))))", [[0, 2], [3, 6], [7, 15], [16, 20], [21, 25], [26, 29], [30, 35], [35, 36]]], ["# ::snt That John is reluctant seems.\n# ::tokens [\"That\", \"John\", \"is\", \"reluctant\", \"seems\", \".\"]\n# ::lemmas [\"that\", \"John\", \"be\", \"reluctant\", \"seem\", \".\"]\n# ::alignments 1-1.1.1.1.1 3-1.1 4-1\n(s / seem-01~e.4\n   :ARG1 (r / reluctant-01~e.3\n            :ARG0 (p / person\n                     :name (n / name\n                              :op1 \"John\"~e.1))))", [[0, 4], [5, 9], [10, 12], [13, 22], [23, 28], [28, 29]]], ["# ::snt It is the problem that he is here.\n# ::tokens [\"It\", \"is\", \"the\", \"problem\", \"that\", \"he\", \"is\", \"here\", \".\"]\n# ::lemmas [\"it\", \"be\", \"the\", \"problem\", \"that\", \"he\", \"be\", \"here\", \".\"]\n# ::alignments 3-1 5-1.1.1 7-1.1.2\n(p / problem~e.3\n   :domain (b / be-located-at-91\n              :ARG1 (h / he~e.5)\n              :ARG2 (h2 / here~e.7)))", [[0, 2], [3, 5], [6, 9], [10, 17], [18, 22], [23, 25], [26, 28], [29, 33], [33, 34]]], ["# ::snt That he is here is the problem.\n# ::tokens [\"That\", \"he\", \"is\", \"here\", \"is\", \"the\", \"problem\", \".\"]\n# ::lemmas [\"that\", \"he\", \"be\", \"here\", \"be\", \"the\", \"problem\", \".\"]\n# ::alignments 1-1.1 3-1.1.1 6-1\n(p / problem~e.6\n   :domain (h / he~e.1\n              :location (h2 / here~e.3)))", [[0, 4], [5, 7], [8, 10], [11, 15], [16, 18], [19, 22], [23, 30], [30, 31]]], ["# ::snt The problem we are discussing is George.\n# ::tokens [\"The\", \"problem\", \"we\", \"are\", \"discussing\", \"is\", \"George\", \".\"]\n# ::lemmas [\"the\", \"problem\", \"we\", \"be\", \"discuss\", \"be\", \"George\", \".\"]\n# ::alignments 1-1.2 2-1.2.1.1 4-1.2.1 6-1.1.1\n(p / person\n   :name (n / name\n            :op1 \"George\"~e.6)\n   :domain (p2 / problem~e.1\n               :ARG1-of (d / discuss-01~e.4\n                           :ARG0 (w / we~e.2))))", [[0, 3], [4, 11], [12, 14], [15, 18], [19, 29], [30, 32], [33, 39], [39, 40]]], ["# ::snt It is to give up to leave.\n# ::tokens [\"It\", \"is\", \"to\", \"give\", \"up\", \"to\", \"leave\", \".\"]\n# ::lemmas [\"it\", \"be\", \"to\", \"give\", \"up\", \"to\", \"leave\", \".\"]\n# ::alignments 3-1 6-1.1\n(g / give-up-07~e.3\n   :ARG1 (l / leave-11~e.6))", [[0, 2], [3, 5], [6, 8], [9, 13], [14, 16], [17, 19], [20, 25], [25, 26]]], ["# ::snt It would prove our theory to be untenable for carrots to be vegetables.\n# ::tokens [\"It\", \"would\", \"prove\", \"our\", \"theory\", \"to\", \"be\", \"untenable\", \"for\", \"carrots\", \"to\", \"be\", \"vegetables\", \".\"]\n# ::lemmas [\"it\", \"would\", \"prove\", \"our\", \"theory\", \"to\", \"be\", \"untenable\", \"for\", \"carrot\", \"to\", \"be\", \"vegetable\", \".\"]\n# ::alignments 0-1.1 2-1 4-1.2.2.1 9-1.2.3.1 12-1.2.3\n(p / prove-01~e.2\n   :ARG0 (ii / it~e.0)\n   :ARG1 (p2 / possible-01\n             :polarity -\n             :ARG1 (e / enable-01\n                      :ARG1 (t / theory~e.4\n                               :poss (w / we)))\n             :beneficiary (v / vegetable~e.12\n                             :domain (c / carrot~e.9))))", [[0, 2], [3, 8], [9, 14], [15, 18], [19, 25], [26, 28], [29, 31], [32, 41], [42, 45], [46, 53], [54, 56], [57, 59], [60, 70], [70, 71]]], ["# ::snt It was believed to be illegal by them to do that.\n# ::tokens [\"It\", \"was\", \"believed\", \"to\", \"be\", \"illegal\", \"by\", \"them\", \"to\", \"do\", \"that\", \".\"]\n# ::lemmas [\"it\", \"be\", \"believe\", \"to\", \"be\", \"illegal\", \"by\", \"they\", \"to\", \"do\", \"that\", \".\"]\n# ::alignments 2-1 7-1.1 9-1.2.2 10-1.2.2.2\n(b / believe-01~e.2\n   :ARG0 (t / they~e.7)\n   :ARG1 (l / legal-02\n            :polarity -\n            :ARG1 (d / do-02~e.9\n                     :ARG0 t\n                     :ARG1 (t2 / that~e.10))))", [[0, 2], [3, 6], [7, 15], [16, 18], [19, 21], [22, 29], [30, 32], [33, 37], [38, 40], [41, 43], [44, 48], [48, 49]]], ["# ::snt John grudgingly accepted judgments of his incompetence as an auto mechanic.\n# ::tokens [\"John\", \"grudgingly\", \"accepted\", \"judgments\", \"of\", \"his\", \"incompetence\", \"as\", \"an\", \"auto\", \"mechanic\", \".\"]\n# ::lemmas [\"John\", \"grudgingly\", \"accept\", \"judgment\", \"of\", \"his\", \"incompetence\", \"as\", \"an\", \"auto\", \"mechanic\", \".\"]\n# ::alignments 0-1.1.1.1 1-1.3 2-1 3-1.2 6-1.2.1 9-1.2.1.3.1 10-1.2.1.3\n(a / accept-01~e.2\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (j / judge-01~e.3\n            :ARG1 (c / competent-01~e.6\n                     :polarity -\n                     :ARG1 p\n                     :prep-as (m / mechanic~e.10\n                                 :mod (a2 / auto~e.9))))\n   :manner (g / grudge-01~e.1\n              :ARG0 p))", [[0, 4], [5, 15], [16, 24], [25, 34], [35, 37], [38, 41], [42, 54], [55, 57], [58, 60], [61, 65], [66, 74], [74, 75]]], ["# ::snt It was to John that I gave the book.\n# ::tokens [\"It\", \"was\", \"to\", \"John\", \"that\", \"I\", \"gave\", \"the\", \"book\", \".\"]\n# ::lemmas [\"it\", \"be\", \"to\", \"John\", \"that\", \"i\", \"give\", \"the\", \"book\", \".\"]\n# ::alignments 3-1.3.1.1 5-1.1 6-1 8-1.2\n(g / give-01~e.6\n   :ARG0 (ii / i~e.5)\n   :ARG1 (b / book~e.8)\n   :ARG2 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.3)))", [[0, 2], [3, 6], [7, 9], [10, 14], [15, 19], [20, 21], [22, 26], [27, 30], [31, 35], [35, 36]]], ["# ::snt I bought it to read.\n# ::tokens [\"I\", \"bought\", \"it\", \"to\", \"read\", \".\"]\n# ::lemmas [\"i\", \"buy\", \"it\", \"to\", \"read\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2 4-1.3\n(b / buy-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (ii2 / it~e.2)\n   :purpose (r / read-01~e.4\n               :ARG0 ii\n               :ARG1 ii2))", [[0, 1], [2, 8], [9, 11], [12, 14], [15, 19], [19, 20]]], ["# ::snt I bought it to give to Pete.\n# ::tokens [\"I\", \"bought\", \"it\", \"to\", \"give\", \"to\", \"Pete\", \".\"]\n# ::lemmas [\"i\", \"buy\", \"it\", \"to\", \"give\", \"to\", \"Pete\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2 4-1.3 6-1.3.2.1.1\n(b / buy-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (ii2 / it~e.2)\n   :purpose (g / give-01~e.4\n               :ARG0 ii\n               :ARG2 (p / person\n                        :name (n / name\n                                 :op1 \"Pete\"~e.6))))", [[0, 1], [2, 8], [9, 11], [12, 14], [15, 19], [20, 22], [23, 27], [27, 28]]], ["# ::snt I gave it to Pete to take to the fair.\n# ::tokens [\"I\", \"gave\", \"it\", \"to\", \"Pete\", \"to\", \"take\", \"to\", \"the\", \"fair\", \".\"]\n# ::lemmas [\"i\", \"give\", \"it\", \"to\", \"Pete\", \"to\", \"take\", \"to\", \"the\", \"fair\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2 4-1.3.1.1 6-1.4 9-1.4.3\n(g / give-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (ii2 / it~e.2)\n   :ARG2 (p / person\n            :name (n / name\n                     :op1 \"Petersburg\"~e.4))\n   :purpose (t / take-01~e.6\n               :ARG0 ii\n               :ARG1 ii2\n               :ARG3 (f / fair~e.9)))", [[0, 1], [2, 6], [7, 9], [10, 12], [13, 17], [18, 20], [21, 25], [26, 28], [29, 32], [33, 37], [37, 38]]], ["# ::snt I gave Pete the book to impress.\n# ::tokens [\"I\", \"gave\", \"Pete\", \"the\", \"book\", \"to\", \"impress\", \".\"]\n# ::lemmas [\"i\", \"give\", \"Pete\", \"the\", \"book\", \"to\", \"impress\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.3.1.1 4-1.2 6-1.4\n(g / give-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (b / book~e.4)\n   :ARG2 (p / person\n            :name (n / name\n                     :op1 \"Pete\"~e.2))\n   :purpose (ii2 / impress-01~e.6\n                 :ARG0 p))", [[0, 1], [2, 6], [7, 11], [12, 15], [16, 20], [21, 23], [24, 31], [31, 32]]], ["# ::snt I wrote to Bill.\n# ::tokens [\"I\", \"wrote\", \"to\", \"Bill\", \".\"]\n# ::lemmas [\"i\", \"write\", \"to\", \"Bill\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2.1.1\n(w / write-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG2 (p / person\n            :name (n / name\n                     :op1 \"Bill\"~e.3)))", [[0, 1], [2, 7], [8, 10], [11, 15], [15, 16]]], ["# ::snt I presented it to Bill to read.\n# ::tokens [\"I\", \"presented\", \"it\", \"to\", \"Bill\", \"to\", \"read\", \".\"]\n# ::lemmas [\"i\", \"present\", \"it\", \"to\", \"Bill\", \"to\", \"read\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.2 4-1.3.1.1 6-1.4\n(p / present-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (ii2 / it~e.2)\n   :ARG2 (p2 / person\n             :name (n / name\n                      :op1 \"Bill\"~e.4))\n   :purpose (r / read-01~e.6\n               :ARG0 p2\n               :ARG1 ii2))", [[0, 1], [2, 11], [12, 14], [15, 17], [18, 22], [23, 25], [26, 30], [30, 31]]], ["# ::snt I presented Bill with it to read.\n# ::tokens [\"I\", \"presented\", \"Bill\", \"with\", \"it\", \"to\", \"read\", \".\"]\n# ::lemmas [\"i\", \"present\", \"Bill\", \"with\", \"it\", \"to\", \"read\", \".\"]\n# ::alignments 0-1.1 1-1 2-1.3.1.1 4-1.2 6-1.4\n(p / present-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (ii2 / it~e.4)\n   :ARG2 (p2 / person\n             :name (n / name\n                      :op1 \"Bill\"~e.2))\n   :purpose (r / read-01~e.6\n               :ARG0 ii\n               :ARG1 ii2))", [[0, 1], [2, 11], [12, 16], [17, 21], [22, 24], [25, 27], [28, 32], [32, 33]]], ["# ::snt I gave a book to Bill to read.\n# ::tokens [\"I\", \"gave\", \"a\", \"book\", \"to\", \"Bill\", \"to\", \"read\", \".\"]\n# ::lemmas [\"i\", \"give\", \"a\", \"book\", \"to\", \"Bill\", \"to\", \"read\", \".\"]\n# ::alignments 0-1.1 1-1 3-1.2 5-1.3.1.1 7-1.4\n(g / give-01~e.1\n   :ARG0 (ii / i~e.0)\n   :ARG1 (b / book~e.3)\n   :ARG2 (p / person\n            :name (n / name\n                     :op1 \"Bill\"~e.5))\n   :purpose (r / read-01~e.7\n               :ARG0 ii\n               :ARG1 b))", [[0, 1], [2, 6], [7, 8], [9, 13], [14, 16], [17, 21], [22, 24], [25, 29], [29, 30]]], ["# ::snt John thinks it would upset himself to die.\n# ::tokens [\"John\", \"thinks\", \"it\", \"would\", \"upset\", \"himself\", \"to\", \"die\", \".\"]\n# ::lemmas [\"John\", \"think\", \"it\", \"would\", \"upset\", \"himself\", \"to\", \"die\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 4-1.2 7-1.2.1\n(t / think-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (u / upset-01~e.4\n            :ARG0 (d / die-01~e.7\n                     :ARG1 p)\n            :ARG1 p))", [[0, 4], [5, 11], [12, 14], [15, 20], [21, 26], [27, 34], [35, 37], [38, 41], [41, 42]]], ["# ::snt John made Bill mad at himself.\n# ::tokens [\"John\", \"made\", \"Bill\", \"mad\", \"at\", \"himself\", \".\"]\n# ::lemmas [\"John\", \"make\", \"Bill\", \"mad\", \"at\", \"himself\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.2.1.1 3-1.2\n(m / make-02~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (m2 / mad-04~e.3\n             :ARG0 p\n             :ARG1 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Bill\"~e.2))))", [[0, 4], [5, 9], [10, 14], [15, 18], [19, 21], [22, 29], [29, 30]]], ["# ::snt John made Bill master of himself.\n# ::tokens [\"John\", \"made\", \"Bill\", \"master\", \"of\", \"himself\", \".\"]\n# ::lemmas [\"John\", \"make\", \"Bill\", \"master\", \"of\", \"himself\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1.1 3-1.2\n(m / make-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (m2 / master-01~e.3\n             :ARG0 (p2 / person\n                       :name (n2 / name\n                                 :op1 \"Bill\"~e.2))\n             :ARG1 p2))", [[0, 4], [5, 9], [10, 14], [15, 21], [22, 24], [25, 32], [32, 33]]], ["# ::snt The correspondence school made Bill a good typist.\n# ::tokens [\"The\", \"correspondence\", \"school\", \"made\", \"Bill\", \"a\", \"good\", \"typist\", \".\"]\n# ::lemmas [\"the\", \"correspondence\", \"school\", \"make\", \"Bill\", \"a\", \"good\", \"typist\", \".\"]\n# ::alignments 1-1.1.1 2-1.1 3-1 4-1.2.2.1.1 6-1.2.1 7-1.2\n(m / make-02~e.3\n   :ARG0 (s / school~e.2\n            :mod (c / correspondence~e.1))\n   :ARG1 (t / typist~e.7\n            :ARG1-of (g / good-03~e.6)\n            :domain (p / person\n                       :name (n / name\n                                :op1 \"Bill\"~e.4))))", [[0, 3], [4, 18], [19, 25], [26, 30], [31, 35], [36, 37], [38, 42], [43, 49], [49, 50]]], ["# ::snt The correspondence school sent Bill a good typist.\n# ::tokens [\"The\", \"correspondence\", \"school\", \"sent\", \"Bill\", \"a\", \"good\", \"typist\", \".\"]\n# ::lemmas [\"the\", \"correspondence\", \"school\", \"send\", \"Bill\", \"a\", \"good\", \"typist\", \".\"]\n# ::alignments 1-1.1.1 2-1.1 3-1 4-1.2.2.1.1 6-1.2.1 7-1.2\n(s / send-01~e.3\n   :ARG0 (s2 / school~e.2\n             :mod (c / correspondence~e.1))\n   :ARG1 (t / typist~e.7\n            :ARG1-of (g / good-03~e.6)\n            :domain (p / person\n                       :name (n / name\n                                :op1 \"Bill\"~e.4)))\n   :ARG2 p)", [[0, 3], [4, 18], [19, 25], [26, 30], [31, 35], [36, 37], [38, 42], [43, 49], [49, 50]]], ["# ::snt John considers Bill silly.\n# ::tokens [\"John\", \"considers\", \"Bill\", \"silly\", \".\"]\n# ::lemmas [\"John\", \"consider\", \"Bill\", \"silly\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1.1 3-1.2\n(c / consider-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (s / silly~e.3\n            :domain (p2 / person\n                        :name (n2 / name\n                                  :op1 \"Bill\"~e.2))))", [[0, 4], [5, 14], [15, 19], [20, 25], [25, 26]]], ["# ::snt John considers Bill to be silly.\n# ::tokens [\"John\", \"considers\", \"Bill\", \"to\", \"be\", \"silly\", \".\"]\n# ::lemmas [\"John\", \"consider\", \"Bill\", \"to\", \"be\", \"silly\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 2-1.2.1.1.1 5-1.2\n(c / consider-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (s / silly~e.5\n            :domain (p2 / person\n                        :name (n2 / name\n                                  :op1 \"Bill\"~e.2))))", [[0, 4], [5, 14], [15, 19], [20, 22], [23, 25], [26, 31], [31, 32]]], ["# ::snt John bought a dog for himself to play with.\n# ::tokens [\"John\", \"bought\", \"a\", \"dog\", \"for\", \"himself\", \"to\", \"play\", \"with\", \".\"]\n# ::lemmas [\"John\", \"buy\", \"a\", \"dog\", \"for\", \"himself\", \"to\", \"play\", \"with\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2 7-1.2.1\n(b / buy-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (d / dog~e.3\n            :ARG3-of (p2 / play-01~e.7\n                         :ARG0 p))\n   :ARG4 p)", [[0, 4], [5, 11], [12, 13], [14, 17], [18, 21], [22, 29], [30, 32], [33, 37], [38, 42], [42, 43]]], ["# ::snt John arranged for himself to get the prize.\n# ::tokens [\"John\", \"arranged\", \"for\", \"himself\", \"to\", \"get\", \"the\", \"prize\", \".\"]\n# ::lemmas [\"John\", \"arrange\", \"for\", \"himself\", \"to\", \"get\", \"the\", \"prize\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 5-1.2 7-1.2.2\n(a / arrange-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (g / get-01~e.5\n            :ARG0 p\n            :ARG1 (p2 / prize~e.7)))", [[0, 4], [5, 13], [14, 17], [18, 25], [26, 28], [29, 32], [33, 36], [37, 42], [42, 43]]], ["# ::snt John talked to Bill about himself.\n# ::tokens [\"John\", \"talked\", \"to\", \"Bill\", \"about\", \"himself\", \".\"]\n# ::lemmas [\"John\", \"talk\", \"to\", \"Bill\", \"about\", \"himself\", \".\"]\n# ::alignments 0-1.1.1.1 1-1 3-1.2.1.1\n(t / talk-01~e.1\n   :ARG0 (p / person\n            :name (n / name\n                     :op1 \"John\"~e.0))\n   :ARG1 (p2 / person\n             :name (n2 / name\n                       :op1 \"Bill\"~e.3))\n   :ARG2 p2)", [[0, 4], [5, 11], [12, 14], [15, 19], [20, 25], [26, 33], [33, 34]]]]